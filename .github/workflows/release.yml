name: Publish in GitHub Package Registry

# on:
#   workflow_dispatch:

#   push :
#     tags:
#       - '*'

on:
  release:
      types: [published]

jobs:
  container:
    runs-on: ubuntu-latest

    steps:
      - name: Check actor permission
        uses: skjnldsv/check-actor-permission@69e92a3c4711150929bca9fcf34448c5bf5526e7 # v3.0
        with:
          require: write

      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
          echo "APP_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          path: ${{ env.APP_NAME }}

      - name: Get app version number
        id: app-version
        uses: skjnldsv/xpath-action@f5b036e9d973f42c86324833fd00be90665fbf77 # master
        with:
          filename: ${{ env.APP_NAME }}/appinfo/info.xml
          expression: "//info//version/text()"

      - name: Validate app version against tag
        run: |
          [ "${{ env.APP_VERSION }}" = "${{ fromJSON(steps.app-version.outputs.result).version }}" ]

      - name: Get appinfo data
        id: appinfo
        uses: skjnldsv/xpath-action@f5b036e9d973f42c86324833fd00be90665fbf77 # master
        with:
          filename: ${{ env.APP_NAME }}/appinfo/info.xml
          expression: "//info//dependencies//nextcloud/@min-version"

      - name: Get php version
        id: php-versions
        uses: icewind1991/nextcloud-version-matrix@58becf3b4bb6dc6cef677b15e2fd8e7d48c0908f # v1.3.1
        with:
          filename: ${{ env.APP_NAME }}/appinfo/info.xml

      - name: Set up php ${{ steps.php-versions.outputs.php-min }}
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2.33.0
        with:
          php-version: ${{ steps.php-versions.outputs.php-min }}
          coverage: none
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Composer dependencies (no-dev)
        run: |
          cd ${{ env.APP_NAME }}
          composer install --no-dev --prefer-dist --no-progress --no-suggest

      - name: Package ${{ env.APP_NAME }} ${{ env.APP_VERSION }} with makefile
        run: |
          cd ${{ env.APP_NAME }}
          make appstore

      - name: Checkout server ${{ fromJSON(steps.appinfo.outputs.result).nextcloud.min-version }}
        continue-on-error: true
        id: server-checkout
        run: |
          NCVERSION='${{ fromJSON(steps.appinfo.outputs.result).nextcloud.min-version }}'
          wget --quiet https://download.nextcloud.com/server/releases/latest-$NCVERSION.zip
          unzip latest-$NCVERSION.zip

      - name: Checkout server master fallback
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        if: ${{ steps.server-checkout.outcome != 'success' }}
        with:
          persist-credentials: false
          submodules: true
          repository: nextcloud/server
          path: nextcloud

      - name: Sign app
        run: |
          # Extracting release
          cd ${{ env.APP_NAME }}/build/artifacts/appstore
          tar -xvf ${{ env.APP_NAME }}.tar.gz
          cd ../../../../
          # Setting up keys
          echo '${{ secrets.APP_PRIVATE_KEY }}' > ${{ env.APP_NAME }}.key
          wget --quiet "https://github.com/nextcloud/app-certificate-requests/raw/master/${{ env.APP_NAME }}/${{ env.APP_NAME }}.crt"
          # Signing
          php nextcloud/occ integrity:sign-app --privateKey=../${{ env.APP_NAME }}.key --certificate=../${{ env.APP_NAME }}.crt --path=../${{ env.APP_NAME }}/build/artifacts/appstore/${{ env.APP_NAME }}
          # Rebuilding archive
          cd ${{ env.APP_NAME }}/build/artifacts/appstore
          tar -zcvf ${{ env.APP_NAME }}.tar.gz ${{ env.APP_NAME }}
          openssl dgst -sha512 -sign ../../../../${{ env.APP_NAME }}.key ./${{ env.APP_NAME }}.tar.gz | openssl base64 > ./shasum.txt
          cat ./shasum.txt

      - name: Attach tarball to github release
        uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd # v2
        id: attach_to_release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}/build/artifacts/appstore/${{ env.APP_NAME }}.tar.gz
          asset_name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}.tar.gz
          tag: ${{ env.APP_VERSION }}
          overwrite: true

      - name: Upload shasum to release
        uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd # v2
        id: attach_to_release_shasum
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}/build/artifacts/appstore/shasum.txt
          asset_name: shasum.${{ env.APP_VERSION }}.txt
          tag: ${{ env.APP_VERSION }}
          overwrite: true

      - name: Upload app to Nextcloud appstore
        uses: nextcloud-releases/nextcloud-appstore-push-action@a011fe619bcf6e77ddebc96f9908e1af4071b9c1 # v1
        with:
          app_name: ${{ env.APP_NAME }}
          appstore_token: ${{ secrets.APPSTORE_TOKEN }}
          download_url: ${{ steps.attach_to_release.outputs.browser_download_url }}
          app_private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Twitter
        uses: Eomm/why-don-t-you-tweet@v1
        with:
          tweet-message: "Nextcloud Gestion is here! Check the new release ${{ github.event.release.tag_name }}. Don't forget to clear your cache ;) #Nextcloud #release #opensource"
        env:
          TWITTER_CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          TWITTER_CONSUMER_API_SECRET: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
