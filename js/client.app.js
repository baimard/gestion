/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 2778:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
__webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = void 0;
__webpack_unused_export__ = getAppRootUrl;
__webpack_unused_export__ = getRootUrl;
__webpack_unused_export__ = __webpack_unused_export__ = void 0;
__webpack_require__(5440);
/**
 * Get an url with webroot to a file in an app
 *
 * @param {string} app the id of the app the file belongs to
 * @param {string} file the file path relative to the app folder
 * @return {string} URL with webroot to a file
 */
const linkTo = (app, file) => generateFilePath(app, '', file);

/**
 * Creates a relative url for remote use
 *
 * @param {string} service id
 * @return {string} the url
 */
__webpack_unused_export__ = linkTo;
const linkToRemoteBase = service => getRootUrl() + '/remote.php/' + service;

/**
 * @brief Creates an absolute url for remote use
 * @param {string} service id
 * @return {string} the url
 */
const generateRemoteUrl = service => window.location.protocol + '//' + window.location.host + linkToRemoteBase(service);

/**
 * Get the base path for the given OCS API service
 *
 * @param {string} url OCS API service url
 * @param {object} params parameters to be replaced into the service url
 * @param {UrlOptions} options options for the parameter replacement
 * @param {boolean} options.escape Set to false if parameters should not be URL encoded (default true)
 * @param {Number} options.ocsVersion OCS version to use (defaults to 2)
 * @return {string} Absolute path for the OCS URL
 */
__webpack_unused_export__ = generateRemoteUrl;
const generateOcsUrl = (url, params, options) => {
  const allOptions = Object.assign({
    ocsVersion: 2
  }, options || {});
  const version = allOptions.ocsVersion === 1 ? 1 : 2;
  return window.location.protocol + '//' + window.location.host + getRootUrl() + '/ocs/v' + version + '.php' + _generateUrlPath(url, params, options);
};
__webpack_unused_export__ = generateOcsUrl;
/**
 * Generate a url path, which can contain parameters
 *
 * Parameters will be URL encoded automatically
 *
 * @param {string} url address (can contain placeholders e.g. /call/{token} would replace {token} with the value of params.token
 * @param {object} params parameters to be replaced into the address
 * @param {UrlOptions} options options for the parameter replacement
 * @return {string} Path part for the given URL
 */
const _generateUrlPath = (url, params, options) => {
  const allOptions = Object.assign({
    escape: true
  }, options || {});
  const _build = function (text, vars) {
    vars = vars || {};
    return text.replace(/{([^{}]*)}/g, function (a, b) {
      var r = vars[b];
      if (allOptions.escape) {
        return typeof r === 'string' || typeof r === 'number' ? encodeURIComponent(r.toString()) : encodeURIComponent(a);
      } else {
        return typeof r === 'string' || typeof r === 'number' ? r.toString() : a;
      }
    });
  };
  if (url.charAt(0) !== '/') {
    url = '/' + url;
  }
  return _build(url, params || {});
};

/**
 * Generate the url with webroot for the given relative url, which can contain parameters
 *
 * Parameters will be URL encoded automatically
 *
 * @param {string} url address (can contain placeholders e.g. /call/{token} would replace {token} with the value of params.token
 * @param {object} params parameters to be replaced into the url
 * @param {UrlOptions} options options for the parameter replacement
 * @param {boolean} options.noRewrite True if you want to force index.php being added
 * @param {boolean} options.escape Set to false if parameters should not be URL encoded (default true)
 * @return {string} URL with webroot for the given relative URL
 */
const generateUrl = (url, params, options) => {
  var _window;
  const allOptions = Object.assign({
    noRewrite: false
  }, options || {});
  if (((_window = window) === null || _window === void 0 || (_window = _window.OC) === null || _window === void 0 || (_window = _window.config) === null || _window === void 0 ? void 0 : _window.modRewriteWorking) === true && !allOptions.noRewrite) {
    return getRootUrl() + _generateUrlPath(url, params, options);
  }
  return getRootUrl() + '/index.php' + _generateUrlPath(url, params, options);
};

/**
 * Get the path with webroot to an image file
 * if no extension is given for the image, it will automatically decide
 * between .png and .svg based on what the browser supports
 *
 * @param {string} app the app id to which the image belongs
 * @param {string} file the name of the image file
 * @return {string}
 */
__webpack_unused_export__ = generateUrl;
const imagePath = (app, file) => {
  if (file.indexOf('.') === -1) {
    //if no extension is given, use svg
    return generateFilePath(app, 'img', file + '.svg');
  }
  return generateFilePath(app, 'img', file);
};

/**
 * Get the url with webroot for a file in an app
 *
 * @param {string} app the id of the app
 * @param {string} type the type of the file to link to (e.g. css,img,ajax.template)
 * @param {string} file the filename
 * @return {string} URL with webroot for a file in an app
 */
__webpack_unused_export__ = imagePath;
const generateFilePath = (app, type, file) => {
  var _window2;
  const isCore = ((_window2 = window) === null || _window2 === void 0 || (_window2 = _window2.OC) === null || _window2 === void 0 || (_window2 = _window2.coreApps) === null || _window2 === void 0 ? void 0 : _window2.indexOf(app)) !== -1;
  let link = getRootUrl();
  if (file.substring(file.length - 3) === 'php' && !isCore) {
    link += '/index.php/apps/' + app;
    if (file !== 'index.php') {
      link += '/';
      if (type) {
        link += encodeURI(type + '/');
      }
      link += file;
    }
  } else if (file.substring(file.length - 3) !== 'php' && !isCore) {
    link = getAppRootUrl(app);
    if (type) {
      link += '/' + type + '/';
    }
    if (link.substring(link.length - 1) !== '/') {
      link += '/';
    }
    link += file;
  } else {
    if ((app === 'settings' || app === 'core' || app === 'search') && type === 'ajax') {
      link += '/index.php/';
    } else {
      link += '/';
    }
    if (!isCore) {
      link += 'apps/';
    }
    if (app !== '') {
      app += '/';
      link += app;
    }
    if (type) {
      link += type + '/';
    }
    link += file;
  }
  return link;
};

/**
 * Return the web root path where this Nextcloud instance
 * is accessible, with a leading slash.
 * For example "/nextcloud".
 *
 * @return {string} web root path
 */
__webpack_unused_export__ = generateFilePath;
function getRootUrl() {
  let webroot = window._oc_webroot;
  if (typeof webroot === 'undefined') {
    webroot = location.pathname;
    const pos = webroot.indexOf('/index.php/');
    if (pos !== -1) {
      webroot = webroot.substr(0, pos);
    } else {
      webroot = webroot.substr(0, webroot.lastIndexOf('/'));
    }
  }
  return webroot;
}

/**
 * Return the web root path for a given app
 * @param {string} app The ID of the app
 */
function getAppRootUrl(app) {
  var _window$_oc_appswebro, _webroots$app;
  const webroots = (_window$_oc_appswebro = window._oc_appswebroots) !== null && _window$_oc_appswebro !== void 0 ? _window$_oc_appswebro : {};
  return (_webroots$app = webroots[app]) !== null && _webroots$app !== void 0 ? _webroots$app : '';
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 1217:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4417);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(5531), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(7115), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(5419), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(3385), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(4274), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(7154), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(5782), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(4718), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_8___ = new URL(/* asset import */ __webpack_require__(8734), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_9___ = new URL(/* asset import */ __webpack_require__(8487), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_10___ = new URL(/* asset import */ __webpack_require__(5372), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_11___ = new URL(/* asset import */ __webpack_require__(2247), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_12___ = new URL(/* asset import */ __webpack_require__(6366), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_13___ = new URL(/* asset import */ __webpack_require__(7326), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_14___ = new URL(/* asset import */ __webpack_require__(7210), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_15___ = new URL(/* asset import */ __webpack_require__(6690), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_16___ = new URL(/* asset import */ __webpack_require__(7249), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_17___ = new URL(/* asset import */ __webpack_require__(5932), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_18___ = new URL(/* asset import */ __webpack_require__(1144), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_7___);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_8___);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_9___);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_10___);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_11___);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_12___);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_13___);
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_14___);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_15___);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_16___);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_17___);
var ___CSS_LOADER_URL_REPLACEMENT_18___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_18___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.bootstrap-iso {
  @charset "UTF-8";
  /*!
 * Bootstrap  v5.3.3 (https://getbootstrap.com/)
 * Copyright 2011-2024 The Bootstrap Authors
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */
  /* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/
  /* rtl:begin:ignore */
  /* rtl:end:ignore */
  /* rtl:begin:ignore */
  /* rtl:end:ignore */
  /* rtl:begin:ignore */
  /* rtl:end:ignore */
  /* rtl:begin:ignore */
  /* rtl:end:ignore */
  /* rtl:begin:remove */
  /* rtl:end:remove */
  /*# sourceMappingURL=bootstrap.css.map */
  background-color: white;
  width: 100%;
  color: #000000;
  /* override bootstrap 5.0*/
}
.bootstrap-iso :root,
.bootstrap-iso [data-bs-theme=light] {
  --bs-blue: #0d6efd;
  --bs-indigo: #6610f2;
  --bs-purple: #6f42c1;
  --bs-pink: #d63384;
  --bs-red: #dc3545;
  --bs-orange: #fd7e14;
  --bs-yellow: #ffc107;
  --bs-green: #198754;
  --bs-teal: #20c997;
  --bs-cyan: #0dcaf0;
  --bs-black: #000;
  --bs-white: #fff;
  --bs-gray: #6c757d;
  --bs-gray-dark: #343a40;
  --bs-gray-100: #f8f9fa;
  --bs-gray-200: #e9ecef;
  --bs-gray-300: #dee2e6;
  --bs-gray-400: #ced4da;
  --bs-gray-500: #adb5bd;
  --bs-gray-600: #6c757d;
  --bs-gray-700: #495057;
  --bs-gray-800: #343a40;
  --bs-gray-900: #212529;
  --bs-primary: #0d6efd;
  --bs-secondary: #6c757d;
  --bs-success: #198754;
  --bs-info: #0dcaf0;
  --bs-warning: #ffc107;
  --bs-danger: #dc3545;
  --bs-light: #f8f9fa;
  --bs-dark: #212529;
  --bs-primary-rgb: 13, 110, 253;
  --bs-secondary-rgb: 108, 117, 125;
  --bs-success-rgb: 25, 135, 84;
  --bs-info-rgb: 13, 202, 240;
  --bs-warning-rgb: 255, 193, 7;
  --bs-danger-rgb: 220, 53, 69;
  --bs-light-rgb: 248, 249, 250;
  --bs-dark-rgb: 33, 37, 41;
  --bs-primary-text-emphasis: #052c65;
  --bs-secondary-text-emphasis: #2b2f32;
  --bs-success-text-emphasis: #0a3622;
  --bs-info-text-emphasis: #055160;
  --bs-warning-text-emphasis: #664d03;
  --bs-danger-text-emphasis: #58151c;
  --bs-light-text-emphasis: #495057;
  --bs-dark-text-emphasis: #495057;
  --bs-primary-bg-subtle: #cfe2ff;
  --bs-secondary-bg-subtle: #e2e3e5;
  --bs-success-bg-subtle: #d1e7dd;
  --bs-info-bg-subtle: #cff4fc;
  --bs-warning-bg-subtle: #fff3cd;
  --bs-danger-bg-subtle: #f8d7da;
  --bs-light-bg-subtle: #fcfcfd;
  --bs-dark-bg-subtle: #ced4da;
  --bs-primary-border-subtle: #9ec5fe;
  --bs-secondary-border-subtle: #c4c8cb;
  --bs-success-border-subtle: #a3cfbb;
  --bs-info-border-subtle: #9eeaf9;
  --bs-warning-border-subtle: #ffe69c;
  --bs-danger-border-subtle: #f1aeb5;
  --bs-light-border-subtle: #e9ecef;
  --bs-dark-border-subtle: #adb5bd;
  --bs-white-rgb: 255, 255, 255;
  --bs-black-rgb: 0, 0, 0;
  --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
  --bs-body-font-family: var(--bs-font-sans-serif);
  --bs-body-font-size: 1rem;
  --bs-body-font-weight: 400;
  --bs-body-line-height: 1.5;
  --bs-body-color: #212529;
  --bs-body-color-rgb: 33, 37, 41;
  --bs-body-bg: #fff;
  --bs-body-bg-rgb: 255, 255, 255;
  --bs-emphasis-color: #000;
  --bs-emphasis-color-rgb: 0, 0, 0;
  --bs-secondary-color: rgba(33, 37, 41, 0.75);
  --bs-secondary-color-rgb: 33, 37, 41;
  --bs-secondary-bg: #e9ecef;
  --bs-secondary-bg-rgb: 233, 236, 239;
  --bs-tertiary-color: rgba(33, 37, 41, 0.5);
  --bs-tertiary-color-rgb: 33, 37, 41;
  --bs-tertiary-bg: #f8f9fa;
  --bs-tertiary-bg-rgb: 248, 249, 250;
  --bs-heading-color: inherit;
  --bs-link-color: #0d6efd;
  --bs-link-color-rgb: 13, 110, 253;
  --bs-link-decoration: underline;
  --bs-link-hover-color: #0a58ca;
  --bs-link-hover-color-rgb: 10, 88, 202;
  --bs-code-color: #d63384;
  --bs-highlight-color: #212529;
  --bs-highlight-bg: #fff3cd;
  --bs-border-width: 1px;
  --bs-border-style: solid;
  --bs-border-color: #dee2e6;
  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);
  --bs-border-radius: 0.375rem;
  --bs-border-radius-sm: 0.25rem;
  --bs-border-radius-lg: 0.5rem;
  --bs-border-radius-xl: 1rem;
  --bs-border-radius-xxl: 2rem;
  --bs-border-radius-2xl: var(--bs-border-radius-xxl);
  --bs-border-radius-pill: 50rem;
  --bs-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  --bs-box-shadow-sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  --bs-box-shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
  --bs-box-shadow-inset: inset 0 1px 2px rgba(0, 0, 0, 0.075);
  --bs-focus-ring-width: 0.25rem;
  --bs-focus-ring-opacity: 0.25;
  --bs-focus-ring-color: rgba(13, 110, 253, 0.25);
  --bs-form-valid-color: #198754;
  --bs-form-valid-border-color: #198754;
  --bs-form-invalid-color: #dc3545;
  --bs-form-invalid-border-color: #dc3545;
}
.bootstrap-iso [data-bs-theme=dark] {
  color-scheme: dark;
  --bs-body-color: #dee2e6;
  --bs-body-color-rgb: 222, 226, 230;
  --bs-body-bg: #212529;
  --bs-body-bg-rgb: 33, 37, 41;
  --bs-emphasis-color: #fff;
  --bs-emphasis-color-rgb: 255, 255, 255;
  --bs-secondary-color: rgba(222, 226, 230, 0.75);
  --bs-secondary-color-rgb: 222, 226, 230;
  --bs-secondary-bg: #343a40;
  --bs-secondary-bg-rgb: 52, 58, 64;
  --bs-tertiary-color: rgba(222, 226, 230, 0.5);
  --bs-tertiary-color-rgb: 222, 226, 230;
  --bs-tertiary-bg: #2b3035;
  --bs-tertiary-bg-rgb: 43, 48, 53;
  --bs-primary-text-emphasis: #6ea8fe;
  --bs-secondary-text-emphasis: #a7acb1;
  --bs-success-text-emphasis: #75b798;
  --bs-info-text-emphasis: #6edff6;
  --bs-warning-text-emphasis: #ffda6a;
  --bs-danger-text-emphasis: #ea868f;
  --bs-light-text-emphasis: #f8f9fa;
  --bs-dark-text-emphasis: #dee2e6;
  --bs-primary-bg-subtle: #031633;
  --bs-secondary-bg-subtle: #161719;
  --bs-success-bg-subtle: #051b11;
  --bs-info-bg-subtle: #032830;
  --bs-warning-bg-subtle: #332701;
  --bs-danger-bg-subtle: #2c0b0e;
  --bs-light-bg-subtle: #343a40;
  --bs-dark-bg-subtle: #1a1d20;
  --bs-primary-border-subtle: #084298;
  --bs-secondary-border-subtle: #41464b;
  --bs-success-border-subtle: #0f5132;
  --bs-info-border-subtle: #087990;
  --bs-warning-border-subtle: #997404;
  --bs-danger-border-subtle: #842029;
  --bs-light-border-subtle: #495057;
  --bs-dark-border-subtle: #343a40;
  --bs-heading-color: inherit;
  --bs-link-color: #6ea8fe;
  --bs-link-hover-color: #8bb9fe;
  --bs-link-color-rgb: 110, 168, 254;
  --bs-link-hover-color-rgb: 139, 185, 254;
  --bs-code-color: #e685b5;
  --bs-highlight-color: #dee2e6;
  --bs-highlight-bg: #664d03;
  --bs-border-color: #495057;
  --bs-border-color-translucent: rgba(255, 255, 255, 0.15);
  --bs-form-valid-color: #75b798;
  --bs-form-valid-border-color: #75b798;
  --bs-form-invalid-color: #ea868f;
  --bs-form-invalid-border-color: #ea868f;
}
.bootstrap-iso *,
.bootstrap-iso *::before,
.bootstrap-iso *::after {
  box-sizing: border-box;
}
@media (prefers-reduced-motion: no-preference) {
  .bootstrap-iso :root {
    scroll-behavior: smooth;
  }
}
.bootstrap-iso body {
  margin: 0;
  font-family: var(--bs-body-font-family);
  font-size: var(--bs-body-font-size);
  font-weight: var(--bs-body-font-weight);
  line-height: var(--bs-body-line-height);
  color: var(--bs-body-color);
  text-align: var(--bs-body-text-align);
  background-color: var(--bs-body-bg);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.bootstrap-iso hr {
  margin: 1rem 0;
  color: inherit;
  border: 0;
  border-top: var(--bs-border-width) solid;
  opacity: 0.25;
}
.bootstrap-iso h6,
.bootstrap-iso .h6,
.bootstrap-iso h5,
.bootstrap-iso .h5,
.bootstrap-iso h4,
.bootstrap-iso .h4,
.bootstrap-iso h3,
.bootstrap-iso .h3,
.bootstrap-iso h2,
.bootstrap-iso .h2,
.bootstrap-iso h1,
.bootstrap-iso .h1 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2;
  color: var(--bs-heading-color);
}
.bootstrap-iso h1,
.bootstrap-iso .h1 {
  font-size: calc(1.375rem + 1.5vw);
}
@media (min-width: 1200px) {
  .bootstrap-iso h1,
  .bootstrap-iso .h1 {
    font-size: 2.5rem;
  }
}
.bootstrap-iso h2,
.bootstrap-iso .h2 {
  font-size: calc(1.325rem + 0.9vw);
}
@media (min-width: 1200px) {
  .bootstrap-iso h2,
  .bootstrap-iso .h2 {
    font-size: 2rem;
  }
}
.bootstrap-iso h3,
.bootstrap-iso .h3 {
  font-size: calc(1.3rem + 0.6vw);
}
@media (min-width: 1200px) {
  .bootstrap-iso h3,
  .bootstrap-iso .h3 {
    font-size: 1.75rem;
  }
}
.bootstrap-iso h4,
.bootstrap-iso .h4 {
  font-size: calc(1.275rem + 0.3vw);
}
@media (min-width: 1200px) {
  .bootstrap-iso h4,
  .bootstrap-iso .h4 {
    font-size: 1.5rem;
  }
}
.bootstrap-iso h5,
.bootstrap-iso .h5 {
  font-size: 1.25rem;
}
.bootstrap-iso h6,
.bootstrap-iso .h6 {
  font-size: 1rem;
}
.bootstrap-iso p {
  margin-top: 0;
  margin-bottom: 1rem;
}
.bootstrap-iso abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}
.bootstrap-iso address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}
.bootstrap-iso ol,
.bootstrap-iso ul {
  padding-left: 2rem;
}
.bootstrap-iso ol,
.bootstrap-iso ul,
.bootstrap-iso dl {
  margin-top: 0;
  margin-bottom: 1rem;
}
.bootstrap-iso ol ol,
.bootstrap-iso ul ul,
.bootstrap-iso ol ul,
.bootstrap-iso ul ol {
  margin-bottom: 0;
}
.bootstrap-iso dt {
  font-weight: 700;
}
.bootstrap-iso dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}
.bootstrap-iso blockquote {
  margin: 0 0 1rem;
}
.bootstrap-iso b,
.bootstrap-iso strong {
  font-weight: bolder;
}
.bootstrap-iso small,
.bootstrap-iso .small {
  font-size: 0.875em;
}
.bootstrap-iso mark,
.bootstrap-iso .mark {
  padding: 0.1875em;
  color: var(--bs-highlight-color);
  background-color: var(--bs-highlight-bg);
}
.bootstrap-iso sub,
.bootstrap-iso sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}
.bootstrap-iso sub {
  bottom: -0.25em;
}
.bootstrap-iso sup {
  top: -0.5em;
}
.bootstrap-iso a {
  color: rgba(var(--bs-link-color-rgb), var(--bs-link-opacity, 1));
  text-decoration: underline;
}
.bootstrap-iso a:hover {
  --bs-link-color-rgb: var(--bs-link-hover-color-rgb);
}
.bootstrap-iso a:not([href]):not([class]),
.bootstrap-iso a:not([href]):not([class]):hover {
  color: inherit;
  text-decoration: none;
}
.bootstrap-iso pre,
.bootstrap-iso code,
.bootstrap-iso kbd,
.bootstrap-iso samp {
  font-family: var(--bs-font-monospace);
  font-size: 1em;
}
.bootstrap-iso pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em;
}
.bootstrap-iso pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}
.bootstrap-iso code {
  font-size: 0.875em;
  color: var(--bs-code-color);
  word-wrap: break-word;
}
.bootstrap-iso a > code {
  color: inherit;
}
.bootstrap-iso kbd {
  padding: 0.1875rem 0.375rem;
  font-size: 0.875em;
  color: var(--bs-body-bg);
  background-color: var(--bs-body-color);
  border-radius: 0.25rem;
}
.bootstrap-iso kbd kbd {
  padding: 0;
  font-size: 1em;
}
.bootstrap-iso figure {
  margin: 0 0 1rem;
}
.bootstrap-iso img,
.bootstrap-iso svg {
  vertical-align: middle;
}
.bootstrap-iso table {
  caption-side: bottom;
  border-collapse: collapse;
}
.bootstrap-iso caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--bs-secondary-color);
  text-align: left;
}
.bootstrap-iso th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}
.bootstrap-iso thead,
.bootstrap-iso tbody,
.bootstrap-iso tfoot,
.bootstrap-iso tr,
.bootstrap-iso td,
.bootstrap-iso th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}
.bootstrap-iso label {
  display: inline-block;
}
.bootstrap-iso button {
  border-radius: 0;
}
.bootstrap-iso button:focus:not(:focus-visible) {
  outline: 0;
}
.bootstrap-iso input,
.bootstrap-iso button,
.bootstrap-iso select,
.bootstrap-iso optgroup,
.bootstrap-iso textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
.bootstrap-iso button,
.bootstrap-iso select {
  text-transform: none;
}
.bootstrap-iso [role=button] {
  cursor: pointer;
}
.bootstrap-iso select {
  word-wrap: normal;
}
.bootstrap-iso select:disabled {
  opacity: 1;
}
.bootstrap-iso [list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {
  display: none !important;
}
.bootstrap-iso button,
.bootstrap-iso [type=button],
.bootstrap-iso [type=reset],
.bootstrap-iso [type=submit] {
  -webkit-appearance: button;
}
.bootstrap-iso button:not(:disabled),
.bootstrap-iso [type=button]:not(:disabled),
.bootstrap-iso [type=reset]:not(:disabled),
.bootstrap-iso [type=submit]:not(:disabled) {
  cursor: pointer;
}
.bootstrap-iso ::-moz-focus-inner {
  padding: 0;
  border-style: none;
}
.bootstrap-iso textarea {
  resize: vertical;
}
.bootstrap-iso fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}
.bootstrap-iso legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: calc(1.275rem + 0.3vw);
  line-height: inherit;
}
@media (min-width: 1200px) {
  .bootstrap-iso legend {
    font-size: 1.5rem;
  }
}
.bootstrap-iso legend + * {
  clear: left;
}
.bootstrap-iso ::-webkit-datetime-edit-fields-wrapper,
.bootstrap-iso ::-webkit-datetime-edit-text,
.bootstrap-iso ::-webkit-datetime-edit-minute,
.bootstrap-iso ::-webkit-datetime-edit-hour-field,
.bootstrap-iso ::-webkit-datetime-edit-day-field,
.bootstrap-iso ::-webkit-datetime-edit-month-field,
.bootstrap-iso ::-webkit-datetime-edit-year-field {
  padding: 0;
}
.bootstrap-iso ::-webkit-inner-spin-button {
  height: auto;
}
.bootstrap-iso [type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
.bootstrap-iso ::-webkit-search-decoration {
  -webkit-appearance: none;
}
.bootstrap-iso ::-webkit-color-swatch-wrapper {
  padding: 0;
}
.bootstrap-iso ::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}
.bootstrap-iso ::file-selector-button {
  font: inherit;
  -webkit-appearance: button;
}
.bootstrap-iso output {
  display: inline-block;
}
.bootstrap-iso iframe {
  border: 0;
}
.bootstrap-iso summary {
  display: list-item;
  cursor: pointer;
}
.bootstrap-iso progress {
  vertical-align: baseline;
}
.bootstrap-iso [hidden] {
  display: none !important;
}
.bootstrap-iso .lead {
  font-size: 1.25rem;
  font-weight: 300;
}
.bootstrap-iso .display-1 {
  font-size: calc(1.625rem + 4.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .bootstrap-iso .display-1 {
    font-size: 5rem;
  }
}
.bootstrap-iso .display-2 {
  font-size: calc(1.575rem + 3.9vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .bootstrap-iso .display-2 {
    font-size: 4.5rem;
  }
}
.bootstrap-iso .display-3 {
  font-size: calc(1.525rem + 3.3vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .bootstrap-iso .display-3 {
    font-size: 4rem;
  }
}
.bootstrap-iso .display-4 {
  font-size: calc(1.475rem + 2.7vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .bootstrap-iso .display-4 {
    font-size: 3.5rem;
  }
}
.bootstrap-iso .display-5 {
  font-size: calc(1.425rem + 2.1vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .bootstrap-iso .display-5 {
    font-size: 3rem;
  }
}
.bootstrap-iso .display-6 {
  font-size: calc(1.375rem + 1.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .bootstrap-iso .display-6 {
    font-size: 2.5rem;
  }
}
.bootstrap-iso .list-unstyled {
  padding-left: 0;
  list-style: none;
}
.bootstrap-iso .list-inline {
  padding-left: 0;
  list-style: none;
}
.bootstrap-iso .list-inline-item {
  display: inline-block;
}
.bootstrap-iso .list-inline-item:not(:last-child) {
  margin-right: 0.5rem;
}
.bootstrap-iso .initialism {
  font-size: 0.875em;
  text-transform: uppercase;
}
.bootstrap-iso .blockquote {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
.bootstrap-iso .blockquote > :last-child {
  margin-bottom: 0;
}
.bootstrap-iso .blockquote-footer {
  margin-top: -1rem;
  margin-bottom: 1rem;
  font-size: 0.875em;
  color: #6c757d;
}
.bootstrap-iso .blockquote-footer::before {
  content: "— ";
}
.bootstrap-iso .img-fluid {
  max-width: 100%;
  height: auto;
}
.bootstrap-iso .img-thumbnail {
  padding: 0.25rem;
  background-color: var(--bs-body-bg);
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  max-width: 100%;
  height: auto;
}
.bootstrap-iso .figure {
  display: inline-block;
}
.bootstrap-iso .figure-img {
  margin-bottom: 0.5rem;
  line-height: 1;
}
.bootstrap-iso .figure-caption {
  font-size: 0.875em;
  color: var(--bs-secondary-color);
}
.bootstrap-iso .container,
.bootstrap-iso .container-fluid,
.bootstrap-iso .container-xxl,
.bootstrap-iso .container-xl,
.bootstrap-iso .container-lg,
.bootstrap-iso .container-md,
.bootstrap-iso .container-sm {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  width: 100%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-right: auto;
  margin-left: auto;
}
@media (min-width: 576px) {
  .bootstrap-iso .container-sm,
  .bootstrap-iso .container {
    max-width: 540px;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .container-md,
  .bootstrap-iso .container-sm,
  .bootstrap-iso .container {
    max-width: 720px;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .container-lg,
  .bootstrap-iso .container-md,
  .bootstrap-iso .container-sm,
  .bootstrap-iso .container {
    max-width: 960px;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .container-xl,
  .bootstrap-iso .container-lg,
  .bootstrap-iso .container-md,
  .bootstrap-iso .container-sm,
  .bootstrap-iso .container {
    max-width: 1140px;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .container-xxl,
  .bootstrap-iso .container-xl,
  .bootstrap-iso .container-lg,
  .bootstrap-iso .container-md,
  .bootstrap-iso .container-sm,
  .bootstrap-iso .container {
    max-width: 1320px;
  }
}
.bootstrap-iso :root {
  --bs-breakpoint-xs: 0;
  --bs-breakpoint-sm: 576px;
  --bs-breakpoint-md: 768px;
  --bs-breakpoint-lg: 992px;
  --bs-breakpoint-xl: 1200px;
  --bs-breakpoint-xxl: 1400px;
}
.bootstrap-iso .row {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(-1 * var(--bs-gutter-y));
  margin-right: calc(-0.5 * var(--bs-gutter-x));
  margin-left: calc(-0.5 * var(--bs-gutter-x));
}
.bootstrap-iso .row > * {
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-top: var(--bs-gutter-y);
}
.bootstrap-iso .col {
  flex: 1 0 0%;
}
.bootstrap-iso .row-cols-auto > * {
  flex: 0 0 auto;
  width: auto;
}
.bootstrap-iso .row-cols-1 > * {
  flex: 0 0 auto;
  width: 100%;
}
.bootstrap-iso .row-cols-2 > * {
  flex: 0 0 auto;
  width: 50%;
}
.bootstrap-iso .row-cols-3 > * {
  flex: 0 0 auto;
  width: 33.33333333%;
}
.bootstrap-iso .row-cols-4 > * {
  flex: 0 0 auto;
  width: 25%;
}
.bootstrap-iso .row-cols-5 > * {
  flex: 0 0 auto;
  width: 20%;
}
.bootstrap-iso .row-cols-6 > * {
  flex: 0 0 auto;
  width: 16.66666667%;
}
.bootstrap-iso .col-auto {
  flex: 0 0 auto;
  width: auto;
}
.bootstrap-iso .col-1 {
  flex: 0 0 auto;
  width: 8.33333333%;
}
.bootstrap-iso .col-2 {
  flex: 0 0 auto;
  width: 16.66666667%;
}
.bootstrap-iso .col-3 {
  flex: 0 0 auto;
  width: 25%;
}
.bootstrap-iso .col-4 {
  flex: 0 0 auto;
  width: 33.33333333%;
}
.bootstrap-iso .col-5 {
  flex: 0 0 auto;
  width: 41.66666667%;
}
.bootstrap-iso .col-6 {
  flex: 0 0 auto;
  width: 50%;
}
.bootstrap-iso .col-7 {
  flex: 0 0 auto;
  width: 58.33333333%;
}
.bootstrap-iso .col-8 {
  flex: 0 0 auto;
  width: 66.66666667%;
}
.bootstrap-iso .col-9 {
  flex: 0 0 auto;
  width: 75%;
}
.bootstrap-iso .col-10 {
  flex: 0 0 auto;
  width: 83.33333333%;
}
.bootstrap-iso .col-11 {
  flex: 0 0 auto;
  width: 91.66666667%;
}
.bootstrap-iso .col-12 {
  flex: 0 0 auto;
  width: 100%;
}
.bootstrap-iso .offset-1 {
  margin-left: 8.33333333%;
}
.bootstrap-iso .offset-2 {
  margin-left: 16.66666667%;
}
.bootstrap-iso .offset-3 {
  margin-left: 25%;
}
.bootstrap-iso .offset-4 {
  margin-left: 33.33333333%;
}
.bootstrap-iso .offset-5 {
  margin-left: 41.66666667%;
}
.bootstrap-iso .offset-6 {
  margin-left: 50%;
}
.bootstrap-iso .offset-7 {
  margin-left: 58.33333333%;
}
.bootstrap-iso .offset-8 {
  margin-left: 66.66666667%;
}
.bootstrap-iso .offset-9 {
  margin-left: 75%;
}
.bootstrap-iso .offset-10 {
  margin-left: 83.33333333%;
}
.bootstrap-iso .offset-11 {
  margin-left: 91.66666667%;
}
.bootstrap-iso .g-0,
.bootstrap-iso .gx-0 {
  --bs-gutter-x: 0;
}
.bootstrap-iso .g-0,
.bootstrap-iso .gy-0 {
  --bs-gutter-y: 0;
}
.bootstrap-iso .g-1,
.bootstrap-iso .gx-1 {
  --bs-gutter-x: 0.25rem;
}
.bootstrap-iso .g-1,
.bootstrap-iso .gy-1 {
  --bs-gutter-y: 0.25rem;
}
.bootstrap-iso .g-2,
.bootstrap-iso .gx-2 {
  --bs-gutter-x: 0.5rem;
}
.bootstrap-iso .g-2,
.bootstrap-iso .gy-2 {
  --bs-gutter-y: 0.5rem;
}
.bootstrap-iso .g-3,
.bootstrap-iso .gx-3 {
  --bs-gutter-x: 1rem;
}
.bootstrap-iso .g-3,
.bootstrap-iso .gy-3 {
  --bs-gutter-y: 1rem;
}
.bootstrap-iso .g-4,
.bootstrap-iso .gx-4 {
  --bs-gutter-x: 1.5rem;
}
.bootstrap-iso .g-4,
.bootstrap-iso .gy-4 {
  --bs-gutter-y: 1.5rem;
}
.bootstrap-iso .g-5,
.bootstrap-iso .gx-5 {
  --bs-gutter-x: 3rem;
}
.bootstrap-iso .g-5,
.bootstrap-iso .gy-5 {
  --bs-gutter-y: 3rem;
}
@media (min-width: 576px) {
  .bootstrap-iso .col-sm {
    flex: 1 0 0%;
  }
  .bootstrap-iso .row-cols-sm-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .row-cols-sm-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .row-cols-sm-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .row-cols-sm-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .row-cols-sm-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .row-cols-sm-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .bootstrap-iso .row-cols-sm-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-sm-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .col-sm-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .bootstrap-iso .col-sm-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-sm-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .col-sm-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .col-sm-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .bootstrap-iso .col-sm-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .col-sm-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .bootstrap-iso .col-sm-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .bootstrap-iso .col-sm-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .bootstrap-iso .col-sm-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .bootstrap-iso .col-sm-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .bootstrap-iso .col-sm-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .offset-sm-0 {
    margin-left: 0;
  }
  .bootstrap-iso .offset-sm-1 {
    margin-left: 8.33333333%;
  }
  .bootstrap-iso .offset-sm-2 {
    margin-left: 16.66666667%;
  }
  .bootstrap-iso .offset-sm-3 {
    margin-left: 25%;
  }
  .bootstrap-iso .offset-sm-4 {
    margin-left: 33.33333333%;
  }
  .bootstrap-iso .offset-sm-5 {
    margin-left: 41.66666667%;
  }
  .bootstrap-iso .offset-sm-6 {
    margin-left: 50%;
  }
  .bootstrap-iso .offset-sm-7 {
    margin-left: 58.33333333%;
  }
  .bootstrap-iso .offset-sm-8 {
    margin-left: 66.66666667%;
  }
  .bootstrap-iso .offset-sm-9 {
    margin-left: 75%;
  }
  .bootstrap-iso .offset-sm-10 {
    margin-left: 83.33333333%;
  }
  .bootstrap-iso .offset-sm-11 {
    margin-left: 91.66666667%;
  }
  .bootstrap-iso .g-sm-0,
  .bootstrap-iso .gx-sm-0 {
    --bs-gutter-x: 0;
  }
  .bootstrap-iso .g-sm-0,
  .bootstrap-iso .gy-sm-0 {
    --bs-gutter-y: 0;
  }
  .bootstrap-iso .g-sm-1,
  .bootstrap-iso .gx-sm-1 {
    --bs-gutter-x: 0.25rem;
  }
  .bootstrap-iso .g-sm-1,
  .bootstrap-iso .gy-sm-1 {
    --bs-gutter-y: 0.25rem;
  }
  .bootstrap-iso .g-sm-2,
  .bootstrap-iso .gx-sm-2 {
    --bs-gutter-x: 0.5rem;
  }
  .bootstrap-iso .g-sm-2,
  .bootstrap-iso .gy-sm-2 {
    --bs-gutter-y: 0.5rem;
  }
  .bootstrap-iso .g-sm-3,
  .bootstrap-iso .gx-sm-3 {
    --bs-gutter-x: 1rem;
  }
  .bootstrap-iso .g-sm-3,
  .bootstrap-iso .gy-sm-3 {
    --bs-gutter-y: 1rem;
  }
  .bootstrap-iso .g-sm-4,
  .bootstrap-iso .gx-sm-4 {
    --bs-gutter-x: 1.5rem;
  }
  .bootstrap-iso .g-sm-4,
  .bootstrap-iso .gy-sm-4 {
    --bs-gutter-y: 1.5rem;
  }
  .bootstrap-iso .g-sm-5,
  .bootstrap-iso .gx-sm-5 {
    --bs-gutter-x: 3rem;
  }
  .bootstrap-iso .g-sm-5,
  .bootstrap-iso .gy-sm-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .col-md {
    flex: 1 0 0%;
  }
  .bootstrap-iso .row-cols-md-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .row-cols-md-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .row-cols-md-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .row-cols-md-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .row-cols-md-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .row-cols-md-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .bootstrap-iso .row-cols-md-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-md-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .col-md-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .bootstrap-iso .col-md-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-md-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .col-md-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .col-md-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .bootstrap-iso .col-md-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .col-md-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .bootstrap-iso .col-md-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .bootstrap-iso .col-md-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .bootstrap-iso .col-md-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .bootstrap-iso .col-md-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .bootstrap-iso .col-md-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .offset-md-0 {
    margin-left: 0;
  }
  .bootstrap-iso .offset-md-1 {
    margin-left: 8.33333333%;
  }
  .bootstrap-iso .offset-md-2 {
    margin-left: 16.66666667%;
  }
  .bootstrap-iso .offset-md-3 {
    margin-left: 25%;
  }
  .bootstrap-iso .offset-md-4 {
    margin-left: 33.33333333%;
  }
  .bootstrap-iso .offset-md-5 {
    margin-left: 41.66666667%;
  }
  .bootstrap-iso .offset-md-6 {
    margin-left: 50%;
  }
  .bootstrap-iso .offset-md-7 {
    margin-left: 58.33333333%;
  }
  .bootstrap-iso .offset-md-8 {
    margin-left: 66.66666667%;
  }
  .bootstrap-iso .offset-md-9 {
    margin-left: 75%;
  }
  .bootstrap-iso .offset-md-10 {
    margin-left: 83.33333333%;
  }
  .bootstrap-iso .offset-md-11 {
    margin-left: 91.66666667%;
  }
  .bootstrap-iso .g-md-0,
  .bootstrap-iso .gx-md-0 {
    --bs-gutter-x: 0;
  }
  .bootstrap-iso .g-md-0,
  .bootstrap-iso .gy-md-0 {
    --bs-gutter-y: 0;
  }
  .bootstrap-iso .g-md-1,
  .bootstrap-iso .gx-md-1 {
    --bs-gutter-x: 0.25rem;
  }
  .bootstrap-iso .g-md-1,
  .bootstrap-iso .gy-md-1 {
    --bs-gutter-y: 0.25rem;
  }
  .bootstrap-iso .g-md-2,
  .bootstrap-iso .gx-md-2 {
    --bs-gutter-x: 0.5rem;
  }
  .bootstrap-iso .g-md-2,
  .bootstrap-iso .gy-md-2 {
    --bs-gutter-y: 0.5rem;
  }
  .bootstrap-iso .g-md-3,
  .bootstrap-iso .gx-md-3 {
    --bs-gutter-x: 1rem;
  }
  .bootstrap-iso .g-md-3,
  .bootstrap-iso .gy-md-3 {
    --bs-gutter-y: 1rem;
  }
  .bootstrap-iso .g-md-4,
  .bootstrap-iso .gx-md-4 {
    --bs-gutter-x: 1.5rem;
  }
  .bootstrap-iso .g-md-4,
  .bootstrap-iso .gy-md-4 {
    --bs-gutter-y: 1.5rem;
  }
  .bootstrap-iso .g-md-5,
  .bootstrap-iso .gx-md-5 {
    --bs-gutter-x: 3rem;
  }
  .bootstrap-iso .g-md-5,
  .bootstrap-iso .gy-md-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .col-lg {
    flex: 1 0 0%;
  }
  .bootstrap-iso .row-cols-lg-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .row-cols-lg-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .row-cols-lg-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .row-cols-lg-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .row-cols-lg-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .row-cols-lg-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .bootstrap-iso .row-cols-lg-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-lg-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .col-lg-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .bootstrap-iso .col-lg-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-lg-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .col-lg-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .col-lg-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .bootstrap-iso .col-lg-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .col-lg-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .bootstrap-iso .col-lg-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .bootstrap-iso .col-lg-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .bootstrap-iso .col-lg-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .bootstrap-iso .col-lg-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .bootstrap-iso .col-lg-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .offset-lg-0 {
    margin-left: 0;
  }
  .bootstrap-iso .offset-lg-1 {
    margin-left: 8.33333333%;
  }
  .bootstrap-iso .offset-lg-2 {
    margin-left: 16.66666667%;
  }
  .bootstrap-iso .offset-lg-3 {
    margin-left: 25%;
  }
  .bootstrap-iso .offset-lg-4 {
    margin-left: 33.33333333%;
  }
  .bootstrap-iso .offset-lg-5 {
    margin-left: 41.66666667%;
  }
  .bootstrap-iso .offset-lg-6 {
    margin-left: 50%;
  }
  .bootstrap-iso .offset-lg-7 {
    margin-left: 58.33333333%;
  }
  .bootstrap-iso .offset-lg-8 {
    margin-left: 66.66666667%;
  }
  .bootstrap-iso .offset-lg-9 {
    margin-left: 75%;
  }
  .bootstrap-iso .offset-lg-10 {
    margin-left: 83.33333333%;
  }
  .bootstrap-iso .offset-lg-11 {
    margin-left: 91.66666667%;
  }
  .bootstrap-iso .g-lg-0,
  .bootstrap-iso .gx-lg-0 {
    --bs-gutter-x: 0;
  }
  .bootstrap-iso .g-lg-0,
  .bootstrap-iso .gy-lg-0 {
    --bs-gutter-y: 0;
  }
  .bootstrap-iso .g-lg-1,
  .bootstrap-iso .gx-lg-1 {
    --bs-gutter-x: 0.25rem;
  }
  .bootstrap-iso .g-lg-1,
  .bootstrap-iso .gy-lg-1 {
    --bs-gutter-y: 0.25rem;
  }
  .bootstrap-iso .g-lg-2,
  .bootstrap-iso .gx-lg-2 {
    --bs-gutter-x: 0.5rem;
  }
  .bootstrap-iso .g-lg-2,
  .bootstrap-iso .gy-lg-2 {
    --bs-gutter-y: 0.5rem;
  }
  .bootstrap-iso .g-lg-3,
  .bootstrap-iso .gx-lg-3 {
    --bs-gutter-x: 1rem;
  }
  .bootstrap-iso .g-lg-3,
  .bootstrap-iso .gy-lg-3 {
    --bs-gutter-y: 1rem;
  }
  .bootstrap-iso .g-lg-4,
  .bootstrap-iso .gx-lg-4 {
    --bs-gutter-x: 1.5rem;
  }
  .bootstrap-iso .g-lg-4,
  .bootstrap-iso .gy-lg-4 {
    --bs-gutter-y: 1.5rem;
  }
  .bootstrap-iso .g-lg-5,
  .bootstrap-iso .gx-lg-5 {
    --bs-gutter-x: 3rem;
  }
  .bootstrap-iso .g-lg-5,
  .bootstrap-iso .gy-lg-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .col-xl {
    flex: 1 0 0%;
  }
  .bootstrap-iso .row-cols-xl-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .row-cols-xl-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .row-cols-xl-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .row-cols-xl-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .row-cols-xl-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .row-cols-xl-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .bootstrap-iso .row-cols-xl-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-xl-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .col-xl-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .bootstrap-iso .col-xl-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-xl-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .col-xl-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .col-xl-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .bootstrap-iso .col-xl-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .col-xl-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .bootstrap-iso .col-xl-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .bootstrap-iso .col-xl-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .bootstrap-iso .col-xl-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .bootstrap-iso .col-xl-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .bootstrap-iso .col-xl-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .offset-xl-0 {
    margin-left: 0;
  }
  .bootstrap-iso .offset-xl-1 {
    margin-left: 8.33333333%;
  }
  .bootstrap-iso .offset-xl-2 {
    margin-left: 16.66666667%;
  }
  .bootstrap-iso .offset-xl-3 {
    margin-left: 25%;
  }
  .bootstrap-iso .offset-xl-4 {
    margin-left: 33.33333333%;
  }
  .bootstrap-iso .offset-xl-5 {
    margin-left: 41.66666667%;
  }
  .bootstrap-iso .offset-xl-6 {
    margin-left: 50%;
  }
  .bootstrap-iso .offset-xl-7 {
    margin-left: 58.33333333%;
  }
  .bootstrap-iso .offset-xl-8 {
    margin-left: 66.66666667%;
  }
  .bootstrap-iso .offset-xl-9 {
    margin-left: 75%;
  }
  .bootstrap-iso .offset-xl-10 {
    margin-left: 83.33333333%;
  }
  .bootstrap-iso .offset-xl-11 {
    margin-left: 91.66666667%;
  }
  .bootstrap-iso .g-xl-0,
  .bootstrap-iso .gx-xl-0 {
    --bs-gutter-x: 0;
  }
  .bootstrap-iso .g-xl-0,
  .bootstrap-iso .gy-xl-0 {
    --bs-gutter-y: 0;
  }
  .bootstrap-iso .g-xl-1,
  .bootstrap-iso .gx-xl-1 {
    --bs-gutter-x: 0.25rem;
  }
  .bootstrap-iso .g-xl-1,
  .bootstrap-iso .gy-xl-1 {
    --bs-gutter-y: 0.25rem;
  }
  .bootstrap-iso .g-xl-2,
  .bootstrap-iso .gx-xl-2 {
    --bs-gutter-x: 0.5rem;
  }
  .bootstrap-iso .g-xl-2,
  .bootstrap-iso .gy-xl-2 {
    --bs-gutter-y: 0.5rem;
  }
  .bootstrap-iso .g-xl-3,
  .bootstrap-iso .gx-xl-3 {
    --bs-gutter-x: 1rem;
  }
  .bootstrap-iso .g-xl-3,
  .bootstrap-iso .gy-xl-3 {
    --bs-gutter-y: 1rem;
  }
  .bootstrap-iso .g-xl-4,
  .bootstrap-iso .gx-xl-4 {
    --bs-gutter-x: 1.5rem;
  }
  .bootstrap-iso .g-xl-4,
  .bootstrap-iso .gy-xl-4 {
    --bs-gutter-y: 1.5rem;
  }
  .bootstrap-iso .g-xl-5,
  .bootstrap-iso .gx-xl-5 {
    --bs-gutter-x: 3rem;
  }
  .bootstrap-iso .g-xl-5,
  .bootstrap-iso .gy-xl-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .col-xxl {
    flex: 1 0 0%;
  }
  .bootstrap-iso .row-cols-xxl-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .row-cols-xxl-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .row-cols-xxl-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .row-cols-xxl-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .row-cols-xxl-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .row-cols-xxl-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .bootstrap-iso .row-cols-xxl-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-xxl-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .bootstrap-iso .col-xxl-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .bootstrap-iso .col-xxl-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .bootstrap-iso .col-xxl-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .bootstrap-iso .col-xxl-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .bootstrap-iso .col-xxl-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .bootstrap-iso .col-xxl-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .bootstrap-iso .col-xxl-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .bootstrap-iso .col-xxl-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .bootstrap-iso .col-xxl-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .bootstrap-iso .col-xxl-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .bootstrap-iso .col-xxl-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .bootstrap-iso .col-xxl-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .bootstrap-iso .offset-xxl-0 {
    margin-left: 0;
  }
  .bootstrap-iso .offset-xxl-1 {
    margin-left: 8.33333333%;
  }
  .bootstrap-iso .offset-xxl-2 {
    margin-left: 16.66666667%;
  }
  .bootstrap-iso .offset-xxl-3 {
    margin-left: 25%;
  }
  .bootstrap-iso .offset-xxl-4 {
    margin-left: 33.33333333%;
  }
  .bootstrap-iso .offset-xxl-5 {
    margin-left: 41.66666667%;
  }
  .bootstrap-iso .offset-xxl-6 {
    margin-left: 50%;
  }
  .bootstrap-iso .offset-xxl-7 {
    margin-left: 58.33333333%;
  }
  .bootstrap-iso .offset-xxl-8 {
    margin-left: 66.66666667%;
  }
  .bootstrap-iso .offset-xxl-9 {
    margin-left: 75%;
  }
  .bootstrap-iso .offset-xxl-10 {
    margin-left: 83.33333333%;
  }
  .bootstrap-iso .offset-xxl-11 {
    margin-left: 91.66666667%;
  }
  .bootstrap-iso .g-xxl-0,
  .bootstrap-iso .gx-xxl-0 {
    --bs-gutter-x: 0;
  }
  .bootstrap-iso .g-xxl-0,
  .bootstrap-iso .gy-xxl-0 {
    --bs-gutter-y: 0;
  }
  .bootstrap-iso .g-xxl-1,
  .bootstrap-iso .gx-xxl-1 {
    --bs-gutter-x: 0.25rem;
  }
  .bootstrap-iso .g-xxl-1,
  .bootstrap-iso .gy-xxl-1 {
    --bs-gutter-y: 0.25rem;
  }
  .bootstrap-iso .g-xxl-2,
  .bootstrap-iso .gx-xxl-2 {
    --bs-gutter-x: 0.5rem;
  }
  .bootstrap-iso .g-xxl-2,
  .bootstrap-iso .gy-xxl-2 {
    --bs-gutter-y: 0.5rem;
  }
  .bootstrap-iso .g-xxl-3,
  .bootstrap-iso .gx-xxl-3 {
    --bs-gutter-x: 1rem;
  }
  .bootstrap-iso .g-xxl-3,
  .bootstrap-iso .gy-xxl-3 {
    --bs-gutter-y: 1rem;
  }
  .bootstrap-iso .g-xxl-4,
  .bootstrap-iso .gx-xxl-4 {
    --bs-gutter-x: 1.5rem;
  }
  .bootstrap-iso .g-xxl-4,
  .bootstrap-iso .gy-xxl-4 {
    --bs-gutter-y: 1.5rem;
  }
  .bootstrap-iso .g-xxl-5,
  .bootstrap-iso .gx-xxl-5 {
    --bs-gutter-x: 3rem;
  }
  .bootstrap-iso .g-xxl-5,
  .bootstrap-iso .gy-xxl-5 {
    --bs-gutter-y: 3rem;
  }
}
.bootstrap-iso .table {
  --bs-table-color-type: initial;
  --bs-table-bg-type: initial;
  --bs-table-color-state: initial;
  --bs-table-bg-state: initial;
  --bs-table-color: var(--bs-emphasis-color);
  --bs-table-bg: var(--bs-body-bg);
  --bs-table-border-color: var(--bs-border-color);
  --bs-table-accent-bg: transparent;
  --bs-table-striped-color: var(--bs-emphasis-color);
  --bs-table-striped-bg: rgba(var(--bs-emphasis-color-rgb), 0.05);
  --bs-table-active-color: var(--bs-emphasis-color);
  --bs-table-active-bg: rgba(var(--bs-emphasis-color-rgb), 0.1);
  --bs-table-hover-color: var(--bs-emphasis-color);
  --bs-table-hover-bg: rgba(var(--bs-emphasis-color-rgb), 0.075);
  width: 100%;
  margin-bottom: 1rem;
  vertical-align: top;
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table > :not(caption) > * > * {
  padding: 0.5rem 0.5rem;
  color: var(--bs-table-color-state, var(--bs-table-color-type, var(--bs-table-color)));
  background-color: var(--bs-table-bg);
  border-bottom-width: var(--bs-border-width);
  box-shadow: inset 0 0 0 9999px var(--bs-table-bg-state, var(--bs-table-bg-type, var(--bs-table-accent-bg)));
}
.bootstrap-iso .table > tbody {
  vertical-align: inherit;
}
.bootstrap-iso .table > thead {
  vertical-align: bottom;
}
.bootstrap-iso .table-group-divider {
  border-top: calc(var(--bs-border-width) * 2) solid currentcolor;
}
.bootstrap-iso .caption-top {
  caption-side: top;
}
.bootstrap-iso .table-sm > :not(caption) > * > * {
  padding: 0.25rem 0.25rem;
}
.bootstrap-iso .table-bordered > :not(caption) > * {
  border-width: var(--bs-border-width) 0;
}
.bootstrap-iso .table-bordered > :not(caption) > * > * {
  border-width: 0 var(--bs-border-width);
}
.bootstrap-iso .table-borderless > :not(caption) > * > * {
  border-bottom-width: 0;
}
.bootstrap-iso .table-borderless > :not(:first-child) {
  border-top-width: 0;
}
.bootstrap-iso .table-striped > tbody > tr:nth-of-type(odd) > * {
  --bs-table-color-type: var(--bs-table-striped-color);
  --bs-table-bg-type: var(--bs-table-striped-bg);
}
.bootstrap-iso .table-striped-columns > :not(caption) > tr > :nth-child(even) {
  --bs-table-color-type: var(--bs-table-striped-color);
  --bs-table-bg-type: var(--bs-table-striped-bg);
}
.bootstrap-iso .table-active {
  --bs-table-color-state: var(--bs-table-active-color);
  --bs-table-bg-state: var(--bs-table-active-bg);
}
.bootstrap-iso .table-hover > tbody > tr:hover > * {
  --bs-table-color-state: var(--bs-table-hover-color);
  --bs-table-bg-state: var(--bs-table-hover-bg);
}
.bootstrap-iso .table-primary {
  --bs-table-color: #000;
  --bs-table-bg: #cfe2ff;
  --bs-table-border-color: #a6b5cc;
  --bs-table-striped-bg: #c5d7f2;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #bacbe6;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #bfd1ec;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-secondary {
  --bs-table-color: #000;
  --bs-table-bg: #e2e3e5;
  --bs-table-border-color: #b5b6b7;
  --bs-table-striped-bg: #d7d8da;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #cbccce;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #d1d2d4;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-success {
  --bs-table-color: #000;
  --bs-table-bg: #d1e7dd;
  --bs-table-border-color: #a7b9b1;
  --bs-table-striped-bg: #c7dbd2;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #bcd0c7;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #c1d6cc;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-info {
  --bs-table-color: #000;
  --bs-table-bg: #cff4fc;
  --bs-table-border-color: #a6c3ca;
  --bs-table-striped-bg: #c5e8ef;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #badce3;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #bfe2e9;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-warning {
  --bs-table-color: #000;
  --bs-table-bg: #fff3cd;
  --bs-table-border-color: #ccc2a4;
  --bs-table-striped-bg: #f2e7c3;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #e6dbb9;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #ece1be;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-danger {
  --bs-table-color: #000;
  --bs-table-bg: #f8d7da;
  --bs-table-border-color: #c6acae;
  --bs-table-striped-bg: #eccccf;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #dfc2c4;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #e5c7ca;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-light {
  --bs-table-color: #000;
  --bs-table-bg: #f8f9fa;
  --bs-table-border-color: #c6c7c8;
  --bs-table-striped-bg: #ecedee;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #dfe0e1;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #e5e6e7;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-dark {
  --bs-table-color: #fff;
  --bs-table-bg: #212529;
  --bs-table-border-color: #4d5154;
  --bs-table-striped-bg: #2c3034;
  --bs-table-striped-color: #fff;
  --bs-table-active-bg: #373b3e;
  --bs-table-active-color: #fff;
  --bs-table-hover-bg: #323539;
  --bs-table-hover-color: #fff;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}
.bootstrap-iso .table-responsive {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 575.98px) {
  .bootstrap-iso .table-responsive-sm {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 767.98px) {
  .bootstrap-iso .table-responsive-md {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 991.98px) {
  .bootstrap-iso .table-responsive-lg {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 1199.98px) {
  .bootstrap-iso .table-responsive-xl {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 1399.98px) {
  .bootstrap-iso .table-responsive-xxl {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
.bootstrap-iso .form-label {
  margin-bottom: 0.5rem;
}
.bootstrap-iso .col-form-label {
  padding-top: calc(0.375rem + var(--bs-border-width));
  padding-bottom: calc(0.375rem + var(--bs-border-width));
  margin-bottom: 0;
  font-size: inherit;
  line-height: 1.5;
}
.bootstrap-iso .col-form-label-lg {
  padding-top: calc(0.5rem + var(--bs-border-width));
  padding-bottom: calc(0.5rem + var(--bs-border-width));
  font-size: 1.25rem;
}
.bootstrap-iso .col-form-label-sm {
  padding-top: calc(0.25rem + var(--bs-border-width));
  padding-bottom: calc(0.25rem + var(--bs-border-width));
  font-size: 0.875rem;
}
.bootstrap-iso .form-text {
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--bs-secondary-color);
}
.bootstrap-iso .form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--bs-body-bg);
  background-clip: padding-box;
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-control {
    transition: none;
  }
}
.bootstrap-iso .form-control[type=file] {
  overflow: hidden;
}
.bootstrap-iso .form-control[type=file]:not(:disabled):not([readonly]) {
  cursor: pointer;
}
.bootstrap-iso .form-control:focus {
  color: var(--bs-body-color);
  background-color: var(--bs-body-bg);
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.bootstrap-iso .form-control::-webkit-date-and-time-value {
  min-width: 85px;
  height: 1.5em;
  margin: 0;
}
.bootstrap-iso .form-control::-webkit-datetime-edit {
  display: block;
  padding: 0;
}
.bootstrap-iso .form-control::-moz-placeholder {
  color: var(--bs-secondary-color);
  opacity: 1;
}
.bootstrap-iso .form-control::placeholder {
  color: var(--bs-secondary-color);
  opacity: 1;
}
.bootstrap-iso .form-control:disabled {
  background-color: var(--bs-secondary-bg);
  opacity: 1;
}
.bootstrap-iso .form-control::-webkit-file-upload-button {
  padding: 0.375rem 0.75rem;
  margin: -0.375rem -0.75rem;
  -webkit-margin-end: 0.75rem;
  margin-inline-end: 0.75rem;
  color: var(--bs-body-color);
  background-color: var(--bs-tertiary-bg);
  pointer-events: none;
  border-color: inherit;
  border-style: solid;
  border-width: 0;
  border-inline-end-width: var(--bs-border-width);
  border-radius: 0;
  -webkit-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
.bootstrap-iso .form-control::file-selector-button {
  padding: 0.375rem 0.75rem;
  margin: -0.375rem -0.75rem;
  -webkit-margin-end: 0.75rem;
  margin-inline-end: 0.75rem;
  color: var(--bs-body-color);
  background-color: var(--bs-tertiary-bg);
  pointer-events: none;
  border-color: inherit;
  border-style: solid;
  border-width: 0;
  border-inline-end-width: var(--bs-border-width);
  border-radius: 0;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-control::-webkit-file-upload-button {
    -webkit-transition: none;
    transition: none;
  }
  .bootstrap-iso .form-control::file-selector-button {
    transition: none;
  }
}
.bootstrap-iso .form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
  background-color: var(--bs-secondary-bg);
}
.bootstrap-iso .form-control:hover:not(:disabled):not([readonly])::file-selector-button {
  background-color: var(--bs-secondary-bg);
}
.bootstrap-iso .form-control-plaintext {
  display: block;
  width: 100%;
  padding: 0.375rem 0;
  margin-bottom: 0;
  line-height: 1.5;
  color: var(--bs-body-color);
  background-color: transparent;
  border: solid transparent;
  border-width: var(--bs-border-width) 0;
}
.bootstrap-iso .form-control-plaintext:focus {
  outline: 0;
}
.bootstrap-iso .form-control-plaintext.form-control-sm,
.bootstrap-iso .form-control-plaintext.form-control-lg {
  padding-right: 0;
  padding-left: 0;
}
.bootstrap-iso .form-control-sm {
  min-height: calc(1.5em + 0.5rem + calc(var(--bs-border-width) * 2));
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: var(--bs-border-radius-sm);
}
.bootstrap-iso .form-control-sm::-webkit-file-upload-button {
  padding: 0.25rem 0.5rem;
  margin: -0.25rem -0.5rem;
  -webkit-margin-end: 0.5rem;
  margin-inline-end: 0.5rem;
}
.bootstrap-iso .form-control-sm::file-selector-button {
  padding: 0.25rem 0.5rem;
  margin: -0.25rem -0.5rem;
  -webkit-margin-end: 0.5rem;
  margin-inline-end: 0.5rem;
}
.bootstrap-iso .form-control-lg {
  min-height: calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  border-radius: var(--bs-border-radius-lg);
}
.bootstrap-iso .form-control-lg::-webkit-file-upload-button {
  padding: 0.5rem 1rem;
  margin: -0.5rem -1rem;
  -webkit-margin-end: 1rem;
  margin-inline-end: 1rem;
}
.bootstrap-iso .form-control-lg::file-selector-button {
  padding: 0.5rem 1rem;
  margin: -0.5rem -1rem;
  -webkit-margin-end: 1rem;
  margin-inline-end: 1rem;
}
.bootstrap-iso textarea.form-control {
  min-height: calc(1.5em + 0.75rem + calc(var(--bs-border-width) * 2));
}
.bootstrap-iso textarea.form-control-sm {
  min-height: calc(1.5em + 0.5rem + calc(var(--bs-border-width) * 2));
}
.bootstrap-iso textarea.form-control-lg {
  min-height: calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));
}
.bootstrap-iso .form-control-color {
  width: 3rem;
  height: calc(1.5em + 0.75rem + calc(var(--bs-border-width) * 2));
  padding: 0.375rem;
}
.bootstrap-iso .form-control-color:not(:disabled):not([readonly]) {
  cursor: pointer;
}
.bootstrap-iso .form-control-color::-moz-color-swatch {
  border: 0 !important;
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .form-control-color::-webkit-color-swatch {
  border: 0 !important;
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .form-control-color.form-control-sm {
  height: calc(1.5em + 0.5rem + calc(var(--bs-border-width) * 2));
}
.bootstrap-iso .form-control-color.form-control-lg {
  height: calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));
}
.bootstrap-iso .form-select {
  --bs-form-select-bg-img: url(${___CSS_LOADER_URL_REPLACEMENT_0___});
  display: block;
  width: 100%;
  padding: 0.375rem 2.25rem 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--bs-body-bg);
  background-image: var(--bs-form-select-bg-img), var(--bs-form-select-bg-icon, none);
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 16px 12px;
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-select {
    transition: none;
  }
}
.bootstrap-iso .form-select:focus {
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.bootstrap-iso .form-select[multiple],
.bootstrap-iso .form-select[size]:not([size="1"]) {
  padding-right: 0.75rem;
  background-image: none;
}
.bootstrap-iso .form-select:disabled {
  background-color: var(--bs-secondary-bg);
}
.bootstrap-iso .form-select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--bs-body-color);
}
.bootstrap-iso .form-select-sm {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  padding-left: 0.5rem;
  font-size: 0.875rem;
  border-radius: var(--bs-border-radius-sm);
}
.bootstrap-iso .form-select-lg {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  font-size: 1.25rem;
  border-radius: var(--bs-border-radius-lg);
}
.bootstrap-iso [data-bs-theme=dark] .form-select {
  --bs-form-select-bg-img: url(${___CSS_LOADER_URL_REPLACEMENT_1___});
}
.bootstrap-iso .form-check {
  display: block;
  min-height: 1.5rem;
  padding-left: 1.5em;
  margin-bottom: 0.125rem;
}
.bootstrap-iso .form-check .form-check-input {
  float: left;
  margin-left: -1.5em;
}
.bootstrap-iso .form-check-reverse {
  padding-right: 1.5em;
  padding-left: 0;
  text-align: right;
}
.bootstrap-iso .form-check-reverse .form-check-input {
  float: right;
  margin-right: -1.5em;
  margin-left: 0;
}
.bootstrap-iso .form-check-input {
  --bs-form-check-bg: var(--bs-body-bg);
  flex-shrink: 0;
  width: 1em;
  height: 1em;
  margin-top: 0.25em;
  vertical-align: top;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--bs-form-check-bg);
  background-image: var(--bs-form-check-bg-image);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: var(--bs-border-width) solid var(--bs-border-color);
  -webkit-print-color-adjust: exact;
  color-adjust: exact;
  print-color-adjust: exact;
}
.bootstrap-iso .form-check-input[type=checkbox] {
  border-radius: 0.25em;
}
.bootstrap-iso .form-check-input[type=radio] {
  border-radius: 50%;
}
.bootstrap-iso .form-check-input:active {
  filter: brightness(90%);
}
.bootstrap-iso .form-check-input:focus {
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.bootstrap-iso .form-check-input:checked {
  background-color: #0d6efd;
  border-color: #0d6efd;
}
.bootstrap-iso .form-check-input:checked[type=checkbox] {
  --bs-form-check-bg-image: url(${___CSS_LOADER_URL_REPLACEMENT_2___});
}
.bootstrap-iso .form-check-input:checked[type=radio] {
  --bs-form-check-bg-image: url(${___CSS_LOADER_URL_REPLACEMENT_3___});
}
.bootstrap-iso .form-check-input[type=checkbox]:indeterminate {
  background-color: #0d6efd;
  border-color: #0d6efd;
  --bs-form-check-bg-image: url(${___CSS_LOADER_URL_REPLACEMENT_4___});
}
.bootstrap-iso .form-check-input:disabled {
  pointer-events: none;
  filter: none;
  opacity: 0.5;
}
.bootstrap-iso .form-check-input[disabled] ~ .form-check-label,
.bootstrap-iso .form-check-input:disabled ~ .form-check-label {
  cursor: default;
  opacity: 0.5;
}
.bootstrap-iso .form-switch {
  padding-left: 2.5em;
}
.bootstrap-iso .form-switch .form-check-input {
  --bs-form-switch-bg: url(${___CSS_LOADER_URL_REPLACEMENT_5___});
  width: 2em;
  margin-left: -2.5em;
  background-image: var(--bs-form-switch-bg);
  background-position: left center;
  border-radius: 2em;
  transition: background-position 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-switch .form-check-input {
    transition: none;
  }
}
.bootstrap-iso .form-switch .form-check-input:focus {
  --bs-form-switch-bg: url(${___CSS_LOADER_URL_REPLACEMENT_6___});
}
.bootstrap-iso .form-switch .form-check-input:checked {
  background-position: right center;
  --bs-form-switch-bg: url(${___CSS_LOADER_URL_REPLACEMENT_7___});
}
.bootstrap-iso .form-switch.form-check-reverse {
  padding-right: 2.5em;
  padding-left: 0;
}
.bootstrap-iso .form-switch.form-check-reverse .form-check-input {
  margin-right: -2.5em;
  margin-left: 0;
}
.bootstrap-iso .form-check-inline {
  display: inline-block;
  margin-right: 1rem;
}
.bootstrap-iso .btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
}
.bootstrap-iso .btn-check[disabled] + .btn,
.bootstrap-iso .btn-check:disabled + .btn {
  pointer-events: none;
  filter: none;
  opacity: 0.65;
}
.bootstrap-iso [data-bs-theme=dark] .form-switch .form-check-input:not(:checked):not(:focus) {
  --bs-form-switch-bg: url(${___CSS_LOADER_URL_REPLACEMENT_8___});
}
.bootstrap-iso .form-range {
  width: 100%;
  height: 1.5rem;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: transparent;
}
.bootstrap-iso .form-range:focus {
  outline: 0;
}
.bootstrap-iso .form-range:focus::-webkit-slider-thumb {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.bootstrap-iso .form-range:focus::-moz-range-thumb {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.bootstrap-iso .form-range::-moz-focus-outer {
  border: 0;
}
.bootstrap-iso .form-range::-webkit-slider-thumb {
  width: 1rem;
  height: 1rem;
  margin-top: -0.25rem;
  -webkit-appearance: none;
  appearance: none;
  background-color: #0d6efd;
  border: 0;
  border-radius: 1rem;
  -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-range::-webkit-slider-thumb {
    -webkit-transition: none;
    transition: none;
  }
}
.bootstrap-iso .form-range::-webkit-slider-thumb:active {
  background-color: #b6d4fe;
}
.bootstrap-iso .form-range::-webkit-slider-runnable-track {
  width: 100%;
  height: 0.5rem;
  color: transparent;
  cursor: pointer;
  background-color: var(--bs-secondary-bg);
  border-color: transparent;
  border-radius: 1rem;
}
.bootstrap-iso .form-range::-moz-range-thumb {
  width: 1rem;
  height: 1rem;
  -moz-appearance: none;
  appearance: none;
  background-color: #0d6efd;
  border: 0;
  border-radius: 1rem;
  -moz-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-range::-moz-range-thumb {
    -moz-transition: none;
    transition: none;
  }
}
.bootstrap-iso .form-range::-moz-range-thumb:active {
  background-color: #b6d4fe;
}
.bootstrap-iso .form-range::-moz-range-track {
  width: 100%;
  height: 0.5rem;
  color: transparent;
  cursor: pointer;
  background-color: var(--bs-secondary-bg);
  border-color: transparent;
  border-radius: 1rem;
}
.bootstrap-iso .form-range:disabled {
  pointer-events: none;
}
.bootstrap-iso .form-range:disabled::-webkit-slider-thumb {
  background-color: var(--bs-secondary-color);
}
.bootstrap-iso .form-range:disabled::-moz-range-thumb {
  background-color: var(--bs-secondary-color);
}
.bootstrap-iso .form-floating {
  position: relative;
}
.bootstrap-iso .form-floating > .form-control,
.bootstrap-iso .form-floating > .form-control-plaintext,
.bootstrap-iso .form-floating > .form-select {
  height: calc(3.5rem + calc(var(--bs-border-width) * 2));
  min-height: calc(3.5rem + calc(var(--bs-border-width) * 2));
  line-height: 1.25;
}
.bootstrap-iso .form-floating > label {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  height: 100%;
  padding: 1rem 0.75rem;
  overflow: hidden;
  text-align: start;
  text-overflow: ellipsis;
  white-space: nowrap;
  pointer-events: none;
  border: var(--bs-border-width) solid transparent;
  transform-origin: 0 0;
  transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .form-floating > label {
    transition: none;
  }
}
.bootstrap-iso .form-floating > .form-control,
.bootstrap-iso .form-floating > .form-control-plaintext {
  padding: 1rem 0.75rem;
}
.bootstrap-iso .form-floating > .form-control::-moz-placeholder,
.bootstrap-iso .form-floating > .form-control-plaintext::-moz-placeholder {
  color: transparent;
}
.bootstrap-iso .form-floating > .form-control::placeholder,
.bootstrap-iso .form-floating > .form-control-plaintext::placeholder {
  color: transparent;
}
.bootstrap-iso .form-floating > .form-control:not(:-moz-placeholder-shown),
.bootstrap-iso .form-floating > .form-control-plaintext:not(:-moz-placeholder-shown) {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.bootstrap-iso .form-floating > .form-control:focus,
.bootstrap-iso .form-floating > .form-control:not(:placeholder-shown),
.bootstrap-iso .form-floating > .form-control-plaintext:focus,
.bootstrap-iso .form-floating > .form-control-plaintext:not(:placeholder-shown) {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.bootstrap-iso .form-floating > .form-control:-webkit-autofill,
.bootstrap-iso .form-floating > .form-control-plaintext:-webkit-autofill {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.bootstrap-iso .form-floating > .form-select {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.bootstrap-iso .form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {
  color: rgba(var(--bs-body-color-rgb), 0.65);
  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
}
.bootstrap-iso .form-floating > .form-control:focus ~ label,
.bootstrap-iso .form-floating > .form-control:not(:placeholder-shown) ~ label,
.bootstrap-iso .form-floating > .form-control-plaintext ~ label,
.bootstrap-iso .form-floating > .form-select ~ label {
  color: rgba(var(--bs-body-color-rgb), 0.65);
  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
}
.bootstrap-iso .form-floating > .form-control:not(:-moz-placeholder-shown) ~ label::after {
  position: absolute;
  inset: 1rem 0.375rem;
  z-index: -1;
  height: 1.5em;
  content: "";
  background-color: var(--bs-body-bg);
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .form-floating > .form-control:focus ~ label::after,
.bootstrap-iso .form-floating > .form-control:not(:placeholder-shown) ~ label::after,
.bootstrap-iso .form-floating > .form-control-plaintext ~ label::after,
.bootstrap-iso .form-floating > .form-select ~ label::after {
  position: absolute;
  inset: 1rem 0.375rem;
  z-index: -1;
  height: 1.5em;
  content: "";
  background-color: var(--bs-body-bg);
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .form-floating > .form-control:-webkit-autofill ~ label {
  color: rgba(var(--bs-body-color-rgb), 0.65);
  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
}
.bootstrap-iso .form-floating > .form-control-plaintext ~ label {
  border-width: var(--bs-border-width) 0;
}
.bootstrap-iso .form-floating > :disabled ~ label,
.bootstrap-iso .form-floating > .form-control:disabled ~ label {
  color: #6c757d;
}
.bootstrap-iso .form-floating > :disabled ~ label::after,
.bootstrap-iso .form-floating > .form-control:disabled ~ label::after {
  background-color: var(--bs-secondary-bg);
}
.bootstrap-iso .input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  width: 100%;
}
.bootstrap-iso .input-group > .form-control,
.bootstrap-iso .input-group > .form-select,
.bootstrap-iso .input-group > .form-floating {
  position: relative;
  flex: 1 1 auto;
  width: 1%;
  min-width: 0;
}
.bootstrap-iso .input-group > .form-control:focus,
.bootstrap-iso .input-group > .form-select:focus,
.bootstrap-iso .input-group > .form-floating:focus-within {
  z-index: 5;
}
.bootstrap-iso .input-group .btn {
  position: relative;
  z-index: 2;
}
.bootstrap-iso .input-group .btn:focus {
  z-index: 5;
}
.bootstrap-iso .input-group-text {
  display: flex;
  align-items: center;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
  text-align: center;
  white-space: nowrap;
  background-color: var(--bs-tertiary-bg);
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .input-group-lg > .form-control,
.bootstrap-iso .input-group-lg > .form-select,
.bootstrap-iso .input-group-lg > .input-group-text,
.bootstrap-iso .input-group-lg > .btn {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  border-radius: var(--bs-border-radius-lg);
}
.bootstrap-iso .input-group-sm > .form-control,
.bootstrap-iso .input-group-sm > .form-select,
.bootstrap-iso .input-group-sm > .input-group-text,
.bootstrap-iso .input-group-sm > .btn {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: var(--bs-border-radius-sm);
}
.bootstrap-iso .input-group-lg > .form-select,
.bootstrap-iso .input-group-sm > .form-select {
  padding-right: 3rem;
}
.bootstrap-iso .input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
.bootstrap-iso .input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n+3),
.bootstrap-iso .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-control,
.bootstrap-iso .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-select {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.bootstrap-iso .input-group.has-validation > :nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
.bootstrap-iso .input-group.has-validation > .dropdown-toggle:nth-last-child(n+4),
.bootstrap-iso .input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-control,
.bootstrap-iso .input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-select {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.bootstrap-iso .input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
  margin-left: calc(var(--bs-border-width) * -1);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.bootstrap-iso .input-group > .form-floating:not(:first-child) > .form-control,
.bootstrap-iso .input-group > .form-floating:not(:first-child) > .form-select {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.bootstrap-iso .valid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--bs-form-valid-color);
}
.bootstrap-iso .valid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: 0.25rem 0.5rem;
  margin-top: 0.1rem;
  font-size: 0.875rem;
  color: #fff;
  background-color: var(--bs-success);
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .was-validated :valid ~ .valid-feedback,
.bootstrap-iso .was-validated :valid ~ .valid-tooltip,
.bootstrap-iso .is-valid ~ .valid-feedback,
.bootstrap-iso .is-valid ~ .valid-tooltip {
  display: block;
}
.bootstrap-iso .was-validated .form-control:valid,
.bootstrap-iso .form-control.is-valid {
  border-color: var(--bs-form-valid-border-color);
  padding-right: calc(1.5em + 0.75rem);
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_9___});
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.bootstrap-iso .was-validated .form-control:valid:focus,
.bootstrap-iso .form-control.is-valid:focus {
  border-color: var(--bs-form-valid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
}
.bootstrap-iso .was-validated textarea.form-control:valid,
.bootstrap-iso textarea.form-control.is-valid {
  padding-right: calc(1.5em + 0.75rem);
  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
}
.bootstrap-iso .was-validated .form-select:valid,
.bootstrap-iso .form-select.is-valid {
  border-color: var(--bs-form-valid-border-color);
}
.bootstrap-iso .was-validated .form-select:valid:not([multiple]):not([size]),
.bootstrap-iso .was-validated .form-select:valid:not([multiple])[size="1"],
.bootstrap-iso .form-select.is-valid:not([multiple]):not([size]),
.bootstrap-iso .form-select.is-valid:not([multiple])[size="1"] {
  --bs-form-select-bg-icon: url(${___CSS_LOADER_URL_REPLACEMENT_9___});
  padding-right: 4.125rem;
  background-position: right 0.75rem center, center right 2.25rem;
  background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.bootstrap-iso .was-validated .form-select:valid:focus,
.bootstrap-iso .form-select.is-valid:focus {
  border-color: var(--bs-form-valid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
}
.bootstrap-iso .was-validated .form-control-color:valid,
.bootstrap-iso .form-control-color.is-valid {
  width: calc(3rem + calc(1.5em + 0.75rem));
}
.bootstrap-iso .was-validated .form-check-input:valid,
.bootstrap-iso .form-check-input.is-valid {
  border-color: var(--bs-form-valid-border-color);
}
.bootstrap-iso .was-validated .form-check-input:valid:checked,
.bootstrap-iso .form-check-input.is-valid:checked {
  background-color: var(--bs-form-valid-color);
}
.bootstrap-iso .was-validated .form-check-input:valid:focus,
.bootstrap-iso .form-check-input.is-valid:focus {
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
}
.bootstrap-iso .was-validated .form-check-input:valid ~ .form-check-label,
.bootstrap-iso .form-check-input.is-valid ~ .form-check-label {
  color: var(--bs-form-valid-color);
}
.bootstrap-iso .form-check-inline .form-check-input ~ .valid-feedback {
  margin-left: 0.5em;
}
.bootstrap-iso .was-validated .input-group > .form-control:not(:focus):valid,
.bootstrap-iso .input-group > .form-control:not(:focus).is-valid,
.bootstrap-iso .was-validated .input-group > .form-select:not(:focus):valid,
.bootstrap-iso .input-group > .form-select:not(:focus).is-valid,
.bootstrap-iso .was-validated .input-group > .form-floating:not(:focus-within):valid,
.bootstrap-iso .input-group > .form-floating:not(:focus-within).is-valid {
  z-index: 3;
}
.bootstrap-iso .invalid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--bs-form-invalid-color);
}
.bootstrap-iso .invalid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: 0.25rem 0.5rem;
  margin-top: 0.1rem;
  font-size: 0.875rem;
  color: #fff;
  background-color: var(--bs-danger);
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .was-validated :invalid ~ .invalid-feedback,
.bootstrap-iso .was-validated :invalid ~ .invalid-tooltip,
.bootstrap-iso .is-invalid ~ .invalid-feedback,
.bootstrap-iso .is-invalid ~ .invalid-tooltip {
  display: block;
}
.bootstrap-iso .was-validated .form-control:invalid,
.bootstrap-iso .form-control.is-invalid {
  border-color: var(--bs-form-invalid-border-color);
  padding-right: calc(1.5em + 0.75rem);
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_10___});
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.bootstrap-iso .was-validated .form-control:invalid:focus,
.bootstrap-iso .form-control.is-invalid:focus {
  border-color: var(--bs-form-invalid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}
.bootstrap-iso .was-validated textarea.form-control:invalid,
.bootstrap-iso textarea.form-control.is-invalid {
  padding-right: calc(1.5em + 0.75rem);
  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
}
.bootstrap-iso .was-validated .form-select:invalid,
.bootstrap-iso .form-select.is-invalid {
  border-color: var(--bs-form-invalid-border-color);
}
.bootstrap-iso .was-validated .form-select:invalid:not([multiple]):not([size]),
.bootstrap-iso .was-validated .form-select:invalid:not([multiple])[size="1"],
.bootstrap-iso .form-select.is-invalid:not([multiple]):not([size]),
.bootstrap-iso .form-select.is-invalid:not([multiple])[size="1"] {
  --bs-form-select-bg-icon: url(${___CSS_LOADER_URL_REPLACEMENT_10___});
  padding-right: 4.125rem;
  background-position: right 0.75rem center, center right 2.25rem;
  background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.bootstrap-iso .was-validated .form-select:invalid:focus,
.bootstrap-iso .form-select.is-invalid:focus {
  border-color: var(--bs-form-invalid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}
.bootstrap-iso .was-validated .form-control-color:invalid,
.bootstrap-iso .form-control-color.is-invalid {
  width: calc(3rem + calc(1.5em + 0.75rem));
}
.bootstrap-iso .was-validated .form-check-input:invalid,
.bootstrap-iso .form-check-input.is-invalid {
  border-color: var(--bs-form-invalid-border-color);
}
.bootstrap-iso .was-validated .form-check-input:invalid:checked,
.bootstrap-iso .form-check-input.is-invalid:checked {
  background-color: var(--bs-form-invalid-color);
}
.bootstrap-iso .was-validated .form-check-input:invalid:focus,
.bootstrap-iso .form-check-input.is-invalid:focus {
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}
.bootstrap-iso .was-validated .form-check-input:invalid ~ .form-check-label,
.bootstrap-iso .form-check-input.is-invalid ~ .form-check-label {
  color: var(--bs-form-invalid-color);
}
.bootstrap-iso .form-check-inline .form-check-input ~ .invalid-feedback {
  margin-left: 0.5em;
}
.bootstrap-iso .was-validated .input-group > .form-control:not(:focus):invalid,
.bootstrap-iso .input-group > .form-control:not(:focus).is-invalid,
.bootstrap-iso .was-validated .input-group > .form-select:not(:focus):invalid,
.bootstrap-iso .input-group > .form-select:not(:focus).is-invalid,
.bootstrap-iso .was-validated .input-group > .form-floating:not(:focus-within):invalid,
.bootstrap-iso .input-group > .form-floating:not(:focus-within).is-invalid {
  z-index: 4;
}
.bootstrap-iso .btn {
  --bs-btn-padding-x: 0.75rem;
  --bs-btn-padding-y: 0.375rem;
  --bs-btn-font-size: 1rem;
  --bs-btn-font-weight: 400;
  --bs-btn-line-height: 1.5;
  --bs-btn-color: var(--bs-body-color);
  --bs-btn-bg: transparent;
  --bs-btn-border-width: var(--bs-border-width);
  --bs-btn-border-color: transparent;
  --bs-btn-border-radius: var(--bs-border-radius);
  --bs-btn-hover-border-color: transparent;
  --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
  --bs-btn-disabled-opacity: 0.65;
  --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), 0.5);
  display: inline-block;
  padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);
  font-family: var(--bs-btn-font-family);
  font-size: var(--bs-btn-font-size);
  font-weight: var(--bs-btn-font-weight);
  line-height: var(--bs-btn-line-height);
  color: var(--bs-btn-color);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);
  border-radius: var(--bs-btn-border-radius);
  background-color: var(--bs-btn-bg);
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .btn {
    transition: none;
  }
}
.bootstrap-iso .btn:hover {
  color: var(--bs-btn-hover-color);
  background-color: var(--bs-btn-hover-bg);
  border-color: var(--bs-btn-hover-border-color);
}
.bootstrap-iso .btn-check + .btn:hover {
  color: var(--bs-btn-color);
  background-color: var(--bs-btn-bg);
  border-color: var(--bs-btn-border-color);
}
.bootstrap-iso .btn:focus-visible {
  color: var(--bs-btn-hover-color);
  background-color: var(--bs-btn-hover-bg);
  border-color: var(--bs-btn-hover-border-color);
  outline: 0;
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.bootstrap-iso .btn-check:focus-visible + .btn {
  border-color: var(--bs-btn-hover-border-color);
  outline: 0;
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.bootstrap-iso .btn-check:checked + .btn,
.bootstrap-iso :not(.btn-check) + .btn:active,
.bootstrap-iso .btn:first-child:active,
.bootstrap-iso .btn.active,
.bootstrap-iso .btn.show {
  color: var(--bs-btn-active-color);
  background-color: var(--bs-btn-active-bg);
  border-color: var(--bs-btn-active-border-color);
}
.bootstrap-iso .btn-check:checked + .btn:focus-visible,
.bootstrap-iso :not(.btn-check) + .btn:active:focus-visible,
.bootstrap-iso .btn:first-child:active:focus-visible,
.bootstrap-iso .btn.active:focus-visible,
.bootstrap-iso .btn.show:focus-visible {
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.bootstrap-iso .btn-check:checked:focus-visible + .btn {
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.bootstrap-iso .btn:disabled,
.bootstrap-iso .btn.disabled,
.bootstrap-iso fieldset:disabled .btn {
  color: var(--bs-btn-disabled-color);
  pointer-events: none;
  background-color: var(--bs-btn-disabled-bg);
  border-color: var(--bs-btn-disabled-border-color);
  opacity: var(--bs-btn-disabled-opacity);
}
.bootstrap-iso .btn-primary {
  --bs-btn-color: #fff;
  --bs-btn-bg: #0d6efd;
  --bs-btn-border-color: #0d6efd;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #0b5ed7;
  --bs-btn-hover-border-color: #0a58ca;
  --bs-btn-focus-shadow-rgb: 49, 132, 253;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #0a58ca;
  --bs-btn-active-border-color: #0a53be;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #0d6efd;
  --bs-btn-disabled-border-color: #0d6efd;
}
.bootstrap-iso .btn-secondary {
  --bs-btn-color: #fff;
  --bs-btn-bg: #6c757d;
  --bs-btn-border-color: #6c757d;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #5c636a;
  --bs-btn-hover-border-color: #565e64;
  --bs-btn-focus-shadow-rgb: 130, 138, 145;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #565e64;
  --bs-btn-active-border-color: #51585e;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #6c757d;
  --bs-btn-disabled-border-color: #6c757d;
}
.bootstrap-iso .btn-success {
  --bs-btn-color: #fff;
  --bs-btn-bg: #198754;
  --bs-btn-border-color: #198754;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #157347;
  --bs-btn-hover-border-color: #146c43;
  --bs-btn-focus-shadow-rgb: 60, 153, 110;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #146c43;
  --bs-btn-active-border-color: #13653f;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #198754;
  --bs-btn-disabled-border-color: #198754;
}
.bootstrap-iso .btn-info {
  --bs-btn-color: #000;
  --bs-btn-bg: #0dcaf0;
  --bs-btn-border-color: #0dcaf0;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #31d2f2;
  --bs-btn-hover-border-color: #25cff2;
  --bs-btn-focus-shadow-rgb: 11, 172, 204;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #3dd5f3;
  --bs-btn-active-border-color: #25cff2;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #000;
  --bs-btn-disabled-bg: #0dcaf0;
  --bs-btn-disabled-border-color: #0dcaf0;
}
.bootstrap-iso .btn-warning {
  --bs-btn-color: #000;
  --bs-btn-bg: #ffc107;
  --bs-btn-border-color: #ffc107;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #ffca2c;
  --bs-btn-hover-border-color: #ffc720;
  --bs-btn-focus-shadow-rgb: 217, 164, 6;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #ffcd39;
  --bs-btn-active-border-color: #ffc720;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #000;
  --bs-btn-disabled-bg: #ffc107;
  --bs-btn-disabled-border-color: #ffc107;
}
.bootstrap-iso .btn-danger {
  --bs-btn-color: #fff;
  --bs-btn-bg: #dc3545;
  --bs-btn-border-color: #dc3545;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #bb2d3b;
  --bs-btn-hover-border-color: #b02a37;
  --bs-btn-focus-shadow-rgb: 225, 83, 97;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #b02a37;
  --bs-btn-active-border-color: #a52834;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #dc3545;
  --bs-btn-disabled-border-color: #dc3545;
}
.bootstrap-iso .btn-light {
  --bs-btn-color: #000;
  --bs-btn-bg: #f8f9fa;
  --bs-btn-border-color: #f8f9fa;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #d3d4d5;
  --bs-btn-hover-border-color: #c6c7c8;
  --bs-btn-focus-shadow-rgb: 211, 212, 213;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #c6c7c8;
  --bs-btn-active-border-color: #babbbc;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #000;
  --bs-btn-disabled-bg: #f8f9fa;
  --bs-btn-disabled-border-color: #f8f9fa;
}
.bootstrap-iso .btn-dark {
  --bs-btn-color: #fff;
  --bs-btn-bg: #212529;
  --bs-btn-border-color: #212529;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #424649;
  --bs-btn-hover-border-color: #373b3e;
  --bs-btn-focus-shadow-rgb: 66, 70, 73;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #4d5154;
  --bs-btn-active-border-color: #373b3e;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #212529;
  --bs-btn-disabled-border-color: #212529;
}
.bootstrap-iso .btn-outline-primary {
  --bs-btn-color: #0d6efd;
  --bs-btn-border-color: #0d6efd;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #0d6efd;
  --bs-btn-hover-border-color: #0d6efd;
  --bs-btn-focus-shadow-rgb: 13, 110, 253;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #0d6efd;
  --bs-btn-active-border-color: #0d6efd;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #0d6efd;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #0d6efd;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-secondary {
  --bs-btn-color: #6c757d;
  --bs-btn-border-color: #6c757d;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #6c757d;
  --bs-btn-hover-border-color: #6c757d;
  --bs-btn-focus-shadow-rgb: 108, 117, 125;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #6c757d;
  --bs-btn-active-border-color: #6c757d;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #6c757d;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #6c757d;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-success {
  --bs-btn-color: #198754;
  --bs-btn-border-color: #198754;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #198754;
  --bs-btn-hover-border-color: #198754;
  --bs-btn-focus-shadow-rgb: 25, 135, 84;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #198754;
  --bs-btn-active-border-color: #198754;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #198754;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #198754;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-info {
  --bs-btn-color: #0dcaf0;
  --bs-btn-border-color: #0dcaf0;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #0dcaf0;
  --bs-btn-hover-border-color: #0dcaf0;
  --bs-btn-focus-shadow-rgb: 13, 202, 240;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #0dcaf0;
  --bs-btn-active-border-color: #0dcaf0;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #0dcaf0;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #0dcaf0;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-warning {
  --bs-btn-color: #ffc107;
  --bs-btn-border-color: #ffc107;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #ffc107;
  --bs-btn-hover-border-color: #ffc107;
  --bs-btn-focus-shadow-rgb: 255, 193, 7;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #ffc107;
  --bs-btn-active-border-color: #ffc107;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #ffc107;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #ffc107;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-danger {
  --bs-btn-color: #dc3545;
  --bs-btn-border-color: #dc3545;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #dc3545;
  --bs-btn-hover-border-color: #dc3545;
  --bs-btn-focus-shadow-rgb: 220, 53, 69;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #dc3545;
  --bs-btn-active-border-color: #dc3545;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #dc3545;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #dc3545;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-light {
  --bs-btn-color: #f8f9fa;
  --bs-btn-border-color: #f8f9fa;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #f8f9fa;
  --bs-btn-hover-border-color: #f8f9fa;
  --bs-btn-focus-shadow-rgb: 248, 249, 250;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #f8f9fa;
  --bs-btn-active-border-color: #f8f9fa;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #f8f9fa;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #f8f9fa;
  --bs-gradient: none;
}
.bootstrap-iso .btn-outline-dark {
  --bs-btn-color: #212529;
  --bs-btn-border-color: #212529;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #212529;
  --bs-btn-hover-border-color: #212529;
  --bs-btn-focus-shadow-rgb: 33, 37, 41;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #212529;
  --bs-btn-active-border-color: #212529;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #212529;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #212529;
  --bs-gradient: none;
}
.bootstrap-iso .btn-link {
  --bs-btn-font-weight: 400;
  --bs-btn-color: var(--bs-link-color);
  --bs-btn-bg: transparent;
  --bs-btn-border-color: transparent;
  --bs-btn-hover-color: var(--bs-link-hover-color);
  --bs-btn-hover-border-color: transparent;
  --bs-btn-active-color: var(--bs-link-hover-color);
  --bs-btn-active-border-color: transparent;
  --bs-btn-disabled-color: #6c757d;
  --bs-btn-disabled-border-color: transparent;
  --bs-btn-box-shadow: 0 0 0 #000;
  --bs-btn-focus-shadow-rgb: 49, 132, 253;
  text-decoration: underline;
}
.bootstrap-iso .btn-link:focus-visible {
  color: var(--bs-btn-color);
}
.bootstrap-iso .btn-link:hover {
  color: var(--bs-btn-hover-color);
}
.bootstrap-iso .btn-lg,
.bootstrap-iso .btn-group-lg > .btn {
  --bs-btn-padding-y: 0.5rem;
  --bs-btn-padding-x: 1rem;
  --bs-btn-font-size: 1.25rem;
  --bs-btn-border-radius: var(--bs-border-radius-lg);
}
.bootstrap-iso .btn-sm,
.bootstrap-iso .btn-group-sm > .btn {
  --bs-btn-padding-y: 0.25rem;
  --bs-btn-padding-x: 0.5rem;
  --bs-btn-font-size: 0.875rem;
  --bs-btn-border-radius: var(--bs-border-radius-sm);
}
.bootstrap-iso .fade {
  transition: opacity 0.15s linear;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .fade {
    transition: none;
  }
}
.bootstrap-iso .fade:not(.show) {
  opacity: 0;
}
.bootstrap-iso .collapse:not(.show) {
  display: none;
}
.bootstrap-iso .collapsing {
  height: 0;
  overflow: hidden;
  transition: height 0.35s ease;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .collapsing {
    transition: none;
  }
}
.bootstrap-iso .collapsing.collapse-horizontal {
  width: 0;
  height: auto;
  transition: width 0.35s ease;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .collapsing.collapse-horizontal {
    transition: none;
  }
}
.bootstrap-iso .dropup,
.bootstrap-iso .dropend,
.bootstrap-iso .dropdown,
.bootstrap-iso .dropstart,
.bootstrap-iso .dropup-center,
.bootstrap-iso .dropdown-center {
  position: relative;
}
.bootstrap-iso .dropdown-toggle {
  white-space: nowrap;
}
.bootstrap-iso .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid;
  border-right: 0.3em solid transparent;
  border-bottom: 0;
  border-left: 0.3em solid transparent;
}
.bootstrap-iso .dropdown-toggle:empty::after {
  margin-left: 0;
}
.bootstrap-iso .dropdown-menu {
  --bs-dropdown-zindex: 1000;
  --bs-dropdown-min-width: 10rem;
  --bs-dropdown-padding-x: 0;
  --bs-dropdown-padding-y: 0.5rem;
  --bs-dropdown-spacer: 0.125rem;
  --bs-dropdown-font-size: 1rem;
  --bs-dropdown-color: var(--bs-body-color);
  --bs-dropdown-bg: var(--bs-body-bg);
  --bs-dropdown-border-color: var(--bs-border-color-translucent);
  --bs-dropdown-border-radius: var(--bs-border-radius);
  --bs-dropdown-border-width: var(--bs-border-width);
  --bs-dropdown-inner-border-radius: calc(var(--bs-border-radius) - var(--bs-border-width));
  --bs-dropdown-divider-bg: var(--bs-border-color-translucent);
  --bs-dropdown-divider-margin-y: 0.5rem;
  --bs-dropdown-box-shadow: var(--bs-box-shadow);
  --bs-dropdown-link-color: var(--bs-body-color);
  --bs-dropdown-link-hover-color: var(--bs-body-color);
  --bs-dropdown-link-hover-bg: var(--bs-tertiary-bg);
  --bs-dropdown-link-active-color: #fff;
  --bs-dropdown-link-active-bg: #0d6efd;
  --bs-dropdown-link-disabled-color: var(--bs-tertiary-color);
  --bs-dropdown-item-padding-x: 1rem;
  --bs-dropdown-item-padding-y: 0.25rem;
  --bs-dropdown-header-color: #6c757d;
  --bs-dropdown-header-padding-x: 1rem;
  --bs-dropdown-header-padding-y: 0.5rem;
  position: absolute;
  z-index: var(--bs-dropdown-zindex);
  display: none;
  min-width: var(--bs-dropdown-min-width);
  padding: var(--bs-dropdown-padding-y) var(--bs-dropdown-padding-x);
  margin: 0;
  font-size: var(--bs-dropdown-font-size);
  color: var(--bs-dropdown-color);
  text-align: left;
  list-style: none;
  background-color: var(--bs-dropdown-bg);
  background-clip: padding-box;
  border: var(--bs-dropdown-border-width) solid var(--bs-dropdown-border-color);
  border-radius: var(--bs-dropdown-border-radius);
}
.bootstrap-iso .dropdown-menu[data-bs-popper] {
  top: 100%;
  left: 0;
  margin-top: var(--bs-dropdown-spacer);
}
.bootstrap-iso .dropdown-menu-start {
  --bs-position: start;
}
.bootstrap-iso .dropdown-menu-start[data-bs-popper] {
  right: auto;
  left: 0;
}
.bootstrap-iso .dropdown-menu-end {
  --bs-position: end;
}
.bootstrap-iso .dropdown-menu-end[data-bs-popper] {
  right: 0;
  left: auto;
}
@media (min-width: 576px) {
  .bootstrap-iso .dropdown-menu-sm-start {
    --bs-position: start;
  }
  .bootstrap-iso .dropdown-menu-sm-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .bootstrap-iso .dropdown-menu-sm-end {
    --bs-position: end;
  }
  .bootstrap-iso .dropdown-menu-sm-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .dropdown-menu-md-start {
    --bs-position: start;
  }
  .bootstrap-iso .dropdown-menu-md-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .bootstrap-iso .dropdown-menu-md-end {
    --bs-position: end;
  }
  .bootstrap-iso .dropdown-menu-md-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .dropdown-menu-lg-start {
    --bs-position: start;
  }
  .bootstrap-iso .dropdown-menu-lg-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .bootstrap-iso .dropdown-menu-lg-end {
    --bs-position: end;
  }
  .bootstrap-iso .dropdown-menu-lg-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .dropdown-menu-xl-start {
    --bs-position: start;
  }
  .bootstrap-iso .dropdown-menu-xl-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .bootstrap-iso .dropdown-menu-xl-end {
    --bs-position: end;
  }
  .bootstrap-iso .dropdown-menu-xl-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .dropdown-menu-xxl-start {
    --bs-position: start;
  }
  .bootstrap-iso .dropdown-menu-xxl-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .bootstrap-iso .dropdown-menu-xxl-end {
    --bs-position: end;
  }
  .bootstrap-iso .dropdown-menu-xxl-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
.bootstrap-iso .dropup .dropdown-menu[data-bs-popper] {
  top: auto;
  bottom: 100%;
  margin-top: 0;
  margin-bottom: var(--bs-dropdown-spacer);
}
.bootstrap-iso .dropup .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0;
  border-right: 0.3em solid transparent;
  border-bottom: 0.3em solid;
  border-left: 0.3em solid transparent;
}
.bootstrap-iso .dropup .dropdown-toggle:empty::after {
  margin-left: 0;
}
.bootstrap-iso .dropend .dropdown-menu[data-bs-popper] {
  top: 0;
  right: auto;
  left: 100%;
  margin-top: 0;
  margin-left: var(--bs-dropdown-spacer);
}
.bootstrap-iso .dropend .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid transparent;
  border-right: 0;
  border-bottom: 0.3em solid transparent;
  border-left: 0.3em solid;
}
.bootstrap-iso .dropend .dropdown-toggle:empty::after {
  margin-left: 0;
}
.bootstrap-iso .dropend .dropdown-toggle::after {
  vertical-align: 0;
}
.bootstrap-iso .dropstart .dropdown-menu[data-bs-popper] {
  top: 0;
  right: 100%;
  left: auto;
  margin-top: 0;
  margin-right: var(--bs-dropdown-spacer);
}
.bootstrap-iso .dropstart .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
}
.bootstrap-iso .dropstart .dropdown-toggle::after {
  display: none;
}
.bootstrap-iso .dropstart .dropdown-toggle::before {
  display: inline-block;
  margin-right: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid transparent;
  border-right: 0.3em solid;
  border-bottom: 0.3em solid transparent;
}
.bootstrap-iso .dropstart .dropdown-toggle:empty::after {
  margin-left: 0;
}
.bootstrap-iso .dropstart .dropdown-toggle::before {
  vertical-align: 0;
}
.bootstrap-iso .dropdown-divider {
  height: 0;
  margin: var(--bs-dropdown-divider-margin-y) 0;
  overflow: hidden;
  border-top: 1px solid var(--bs-dropdown-divider-bg);
  opacity: 1;
}
.bootstrap-iso .dropdown-item {
  display: block;
  width: 100%;
  padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
  clear: both;
  font-weight: 400;
  color: var(--bs-dropdown-link-color);
  text-align: inherit;
  text-decoration: none;
  white-space: nowrap;
  background-color: transparent;
  border: 0;
  border-radius: var(--bs-dropdown-item-border-radius, 0);
}
.bootstrap-iso .dropdown-item:hover,
.bootstrap-iso .dropdown-item:focus {
  color: var(--bs-dropdown-link-hover-color);
  background-color: var(--bs-dropdown-link-hover-bg);
}
.bootstrap-iso .dropdown-item.active,
.bootstrap-iso .dropdown-item:active {
  color: var(--bs-dropdown-link-active-color);
  text-decoration: none;
  background-color: var(--bs-dropdown-link-active-bg);
}
.bootstrap-iso .dropdown-item.disabled,
.bootstrap-iso .dropdown-item:disabled {
  color: var(--bs-dropdown-link-disabled-color);
  pointer-events: none;
  background-color: transparent;
}
.bootstrap-iso .dropdown-menu.show {
  display: block;
}
.bootstrap-iso .dropdown-header {
  display: block;
  padding: var(--bs-dropdown-header-padding-y) var(--bs-dropdown-header-padding-x);
  margin-bottom: 0;
  font-size: 0.875rem;
  color: var(--bs-dropdown-header-color);
  white-space: nowrap;
}
.bootstrap-iso .dropdown-item-text {
  display: block;
  padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
  color: var(--bs-dropdown-link-color);
}
.bootstrap-iso .dropdown-menu-dark {
  --bs-dropdown-color: #dee2e6;
  --bs-dropdown-bg: #343a40;
  --bs-dropdown-border-color: var(--bs-border-color-translucent);
  --bs-dropdown-link-color: #dee2e6;
  --bs-dropdown-link-hover-color: #fff;
  --bs-dropdown-divider-bg: var(--bs-border-color-translucent);
  --bs-dropdown-link-hover-bg: rgba(255, 255, 255, 0.15);
  --bs-dropdown-link-active-color: #fff;
  --bs-dropdown-link-active-bg: #0d6efd;
  --bs-dropdown-link-disabled-color: #adb5bd;
  --bs-dropdown-header-color: #adb5bd;
}
.bootstrap-iso .btn-group,
.bootstrap-iso .btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}
.bootstrap-iso .btn-group > .btn,
.bootstrap-iso .btn-group-vertical > .btn {
  position: relative;
  flex: 1 1 auto;
}
.bootstrap-iso .btn-group > .btn-check:checked + .btn,
.bootstrap-iso .btn-group > .btn-check:focus + .btn,
.bootstrap-iso .btn-group > .btn:hover,
.bootstrap-iso .btn-group > .btn:focus,
.bootstrap-iso .btn-group > .btn:active,
.bootstrap-iso .btn-group > .btn.active,
.bootstrap-iso .btn-group-vertical > .btn-check:checked + .btn,
.bootstrap-iso .btn-group-vertical > .btn-check:focus + .btn,
.bootstrap-iso .btn-group-vertical > .btn:hover,
.bootstrap-iso .btn-group-vertical > .btn:focus,
.bootstrap-iso .btn-group-vertical > .btn:active,
.bootstrap-iso .btn-group-vertical > .btn.active {
  z-index: 1;
}
.bootstrap-iso .btn-toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
}
.bootstrap-iso .btn-toolbar .input-group {
  width: auto;
}
.bootstrap-iso .btn-group {
  border-radius: var(--bs-border-radius);
}
.bootstrap-iso .btn-group > :not(.btn-check:first-child) + .btn,
.bootstrap-iso .btn-group > .btn-group:not(:first-child) {
  margin-left: calc(var(--bs-border-width) * -1);
}
.bootstrap-iso .btn-group > .btn:not(:last-child):not(.dropdown-toggle),
.bootstrap-iso .btn-group > .btn.dropdown-toggle-split:first-child,
.bootstrap-iso .btn-group > .btn-group:not(:last-child) > .btn {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.bootstrap-iso .btn-group > .btn:nth-child(n+3),
.bootstrap-iso .btn-group > :not(.btn-check) + .btn,
.bootstrap-iso .btn-group > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.bootstrap-iso .dropdown-toggle-split {
  padding-right: 0.5625rem;
  padding-left: 0.5625rem;
}
.bootstrap-iso .dropdown-toggle-split::after,
.bootstrap-iso .dropup .dropdown-toggle-split::after,
.bootstrap-iso .dropend .dropdown-toggle-split::after {
  margin-left: 0;
}
.bootstrap-iso .dropstart .dropdown-toggle-split::before {
  margin-right: 0;
}
.bootstrap-iso .btn-sm + .dropdown-toggle-split,
.bootstrap-iso .btn-group-sm > .btn + .dropdown-toggle-split {
  padding-right: 0.375rem;
  padding-left: 0.375rem;
}
.bootstrap-iso .btn-lg + .dropdown-toggle-split,
.bootstrap-iso .btn-group-lg > .btn + .dropdown-toggle-split {
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}
.bootstrap-iso .btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}
.bootstrap-iso .btn-group-vertical > .btn,
.bootstrap-iso .btn-group-vertical > .btn-group {
  width: 100%;
}
.bootstrap-iso .btn-group-vertical > .btn:not(:first-child),
.bootstrap-iso .btn-group-vertical > .btn-group:not(:first-child) {
  margin-top: calc(var(--bs-border-width) * -1);
}
.bootstrap-iso .btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),
.bootstrap-iso .btn-group-vertical > .btn-group:not(:last-child) > .btn {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.bootstrap-iso .btn-group-vertical > .btn ~ .btn,
.bootstrap-iso .btn-group-vertical > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.bootstrap-iso .nav {
  --bs-nav-link-padding-x: 1rem;
  --bs-nav-link-padding-y: 0.5rem;
  --bs-nav-link-color: var(--bs-link-color);
  --bs-nav-link-hover-color: var(--bs-link-hover-color);
  --bs-nav-link-disabled-color: var(--bs-secondary-color);
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}
.bootstrap-iso .nav-link {
  display: block;
  padding: var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x);
  font-size: var(--bs-nav-link-font-size);
  font-weight: var(--bs-nav-link-font-weight);
  color: var(--bs-nav-link-color);
  text-decoration: none;
  background: none;
  border: 0;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .nav-link {
    transition: none;
  }
}
.bootstrap-iso .nav-link:hover,
.bootstrap-iso .nav-link:focus {
  color: var(--bs-nav-link-hover-color);
}
.bootstrap-iso .nav-link:focus-visible {
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.bootstrap-iso .nav-link.disabled,
.bootstrap-iso .nav-link:disabled {
  color: var(--bs-nav-link-disabled-color);
  pointer-events: none;
  cursor: default;
}
.bootstrap-iso .nav-tabs {
  --bs-nav-tabs-border-width: var(--bs-border-width);
  --bs-nav-tabs-border-color: var(--bs-border-color);
  --bs-nav-tabs-border-radius: var(--bs-border-radius);
  --bs-nav-tabs-link-hover-border-color: var(--bs-secondary-bg) var(--bs-secondary-bg) var(--bs-border-color);
  --bs-nav-tabs-link-active-color: var(--bs-emphasis-color);
  --bs-nav-tabs-link-active-bg: var(--bs-body-bg);
  --bs-nav-tabs-link-active-border-color: var(--bs-border-color) var(--bs-border-color) var(--bs-body-bg);
  border-bottom: var(--bs-nav-tabs-border-width) solid var(--bs-nav-tabs-border-color);
}
.bootstrap-iso .nav-tabs .nav-link {
  margin-bottom: calc(-1 * var(--bs-nav-tabs-border-width));
  border: var(--bs-nav-tabs-border-width) solid transparent;
  border-top-left-radius: var(--bs-nav-tabs-border-radius);
  border-top-right-radius: var(--bs-nav-tabs-border-radius);
}
.bootstrap-iso .nav-tabs .nav-link:hover,
.bootstrap-iso .nav-tabs .nav-link:focus {
  isolation: isolate;
  border-color: var(--bs-nav-tabs-link-hover-border-color);
}
.bootstrap-iso .nav-tabs .nav-link.active,
.bootstrap-iso .nav-tabs .nav-item.show .nav-link {
  color: var(--bs-nav-tabs-link-active-color);
  background-color: var(--bs-nav-tabs-link-active-bg);
  border-color: var(--bs-nav-tabs-link-active-border-color);
}
.bootstrap-iso .nav-tabs .dropdown-menu {
  margin-top: calc(-1 * var(--bs-nav-tabs-border-width));
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.bootstrap-iso .nav-pills {
  --bs-nav-pills-border-radius: var(--bs-border-radius);
  --bs-nav-pills-link-active-color: #fff;
  --bs-nav-pills-link-active-bg: #0d6efd;
}
.bootstrap-iso .nav-pills .nav-link {
  border-radius: var(--bs-nav-pills-border-radius);
}
.bootstrap-iso .nav-pills .nav-link.active,
.bootstrap-iso .nav-pills .show > .nav-link {
  color: var(--bs-nav-pills-link-active-color);
  background-color: var(--bs-nav-pills-link-active-bg);
}
.bootstrap-iso .nav-underline {
  --bs-nav-underline-gap: 1rem;
  --bs-nav-underline-border-width: 0.125rem;
  --bs-nav-underline-link-active-color: var(--bs-emphasis-color);
  gap: var(--bs-nav-underline-gap);
}
.bootstrap-iso .nav-underline .nav-link {
  padding-right: 0;
  padding-left: 0;
  border-bottom: var(--bs-nav-underline-border-width) solid transparent;
}
.bootstrap-iso .nav-underline .nav-link:hover,
.bootstrap-iso .nav-underline .nav-link:focus {
  border-bottom-color: currentcolor;
}
.bootstrap-iso .nav-underline .nav-link.active,
.bootstrap-iso .nav-underline .show > .nav-link {
  font-weight: 700;
  color: var(--bs-nav-underline-link-active-color);
  border-bottom-color: currentcolor;
}
.bootstrap-iso .nav-fill > .nav-link,
.bootstrap-iso .nav-fill .nav-item {
  flex: 1 1 auto;
  text-align: center;
}
.bootstrap-iso .nav-justified > .nav-link,
.bootstrap-iso .nav-justified .nav-item {
  flex-basis: 0;
  flex-grow: 1;
  text-align: center;
}
.bootstrap-iso .nav-fill .nav-item .nav-link,
.bootstrap-iso .nav-justified .nav-item .nav-link {
  width: 100%;
}
.bootstrap-iso .tab-content > .tab-pane {
  display: none;
}
.bootstrap-iso .tab-content > .active {
  display: block;
}
.bootstrap-iso .navbar {
  --bs-navbar-padding-x: 0;
  --bs-navbar-padding-y: 0.5rem;
  --bs-navbar-color: rgba(var(--bs-emphasis-color-rgb), 0.65);
  --bs-navbar-hover-color: rgba(var(--bs-emphasis-color-rgb), 0.8);
  --bs-navbar-disabled-color: rgba(var(--bs-emphasis-color-rgb), 0.3);
  --bs-navbar-active-color: rgba(var(--bs-emphasis-color-rgb), 1);
  --bs-navbar-brand-padding-y: 0.3125rem;
  --bs-navbar-brand-margin-end: 1rem;
  --bs-navbar-brand-font-size: 1.25rem;
  --bs-navbar-brand-color: rgba(var(--bs-emphasis-color-rgb), 1);
  --bs-navbar-brand-hover-color: rgba(var(--bs-emphasis-color-rgb), 1);
  --bs-navbar-nav-link-padding-x: 0.5rem;
  --bs-navbar-toggler-padding-y: 0.25rem;
  --bs-navbar-toggler-padding-x: 0.75rem;
  --bs-navbar-toggler-font-size: 1.25rem;
  --bs-navbar-toggler-icon-bg: url(${___CSS_LOADER_URL_REPLACEMENT_11___});
  --bs-navbar-toggler-border-color: rgba(var(--bs-emphasis-color-rgb), 0.15);
  --bs-navbar-toggler-border-radius: var(--bs-border-radius);
  --bs-navbar-toggler-focus-width: 0.25rem;
  --bs-navbar-toggler-transition: box-shadow 0.15s ease-in-out;
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  padding: var(--bs-navbar-padding-y) var(--bs-navbar-padding-x);
}
.bootstrap-iso .navbar > .container,
.bootstrap-iso .navbar > .container-fluid,
.bootstrap-iso .navbar > .container-sm,
.bootstrap-iso .navbar > .container-md,
.bootstrap-iso .navbar > .container-lg,
.bootstrap-iso .navbar > .container-xl,
.bootstrap-iso .navbar > .container-xxl {
  display: flex;
  flex-wrap: inherit;
  align-items: center;
  justify-content: space-between;
}
.bootstrap-iso .navbar-brand {
  padding-top: var(--bs-navbar-brand-padding-y);
  padding-bottom: var(--bs-navbar-brand-padding-y);
  margin-right: var(--bs-navbar-brand-margin-end);
  font-size: var(--bs-navbar-brand-font-size);
  color: var(--bs-navbar-brand-color);
  text-decoration: none;
  white-space: nowrap;
}
.bootstrap-iso .navbar-brand:hover,
.bootstrap-iso .navbar-brand:focus {
  color: var(--bs-navbar-brand-hover-color);
}
.bootstrap-iso .navbar-nav {
  --bs-nav-link-padding-x: 0;
  --bs-nav-link-padding-y: 0.5rem;
  --bs-nav-link-color: var(--bs-navbar-color);
  --bs-nav-link-hover-color: var(--bs-navbar-hover-color);
  --bs-nav-link-disabled-color: var(--bs-navbar-disabled-color);
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}
.bootstrap-iso .navbar-nav .nav-link.active,
.bootstrap-iso .navbar-nav .nav-link.show {
  color: var(--bs-navbar-active-color);
}
.bootstrap-iso .navbar-nav .dropdown-menu {
  position: static;
}
.bootstrap-iso .navbar-text {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--bs-navbar-color);
}
.bootstrap-iso .navbar-text a,
.bootstrap-iso .navbar-text a:hover,
.bootstrap-iso .navbar-text a:focus {
  color: var(--bs-navbar-active-color);
}
.bootstrap-iso .navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  align-items: center;
}
.bootstrap-iso .navbar-toggler {
  padding: var(--bs-navbar-toggler-padding-y) var(--bs-navbar-toggler-padding-x);
  font-size: var(--bs-navbar-toggler-font-size);
  line-height: 1;
  color: var(--bs-navbar-color);
  background-color: transparent;
  border: var(--bs-border-width) solid var(--bs-navbar-toggler-border-color);
  border-radius: var(--bs-navbar-toggler-border-radius);
  transition: var(--bs-navbar-toggler-transition);
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .navbar-toggler {
    transition: none;
  }
}
.bootstrap-iso .navbar-toggler:hover {
  text-decoration: none;
}
.bootstrap-iso .navbar-toggler:focus {
  text-decoration: none;
  outline: 0;
  box-shadow: 0 0 0 var(--bs-navbar-toggler-focus-width);
}
.bootstrap-iso .navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  background-image: var(--bs-navbar-toggler-icon-bg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100%;
}
.bootstrap-iso .navbar-nav-scroll {
  max-height: var(--bs-scroll-height, 75vh);
  overflow-y: auto;
}
@media (min-width: 576px) {
  .bootstrap-iso .navbar-expand-sm {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .bootstrap-iso .navbar-expand-sm .navbar-nav {
    flex-direction: row;
  }
  .bootstrap-iso .navbar-expand-sm .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .bootstrap-iso .navbar-expand-sm .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .bootstrap-iso .navbar-expand-sm .navbar-nav-scroll {
    overflow: visible;
  }
  .bootstrap-iso .navbar-expand-sm .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .bootstrap-iso .navbar-expand-sm .navbar-toggler {
    display: none;
  }
  .bootstrap-iso .navbar-expand-sm .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .bootstrap-iso .navbar-expand-sm .offcanvas .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .navbar-expand-sm .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .navbar-expand-md {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .bootstrap-iso .navbar-expand-md .navbar-nav {
    flex-direction: row;
  }
  .bootstrap-iso .navbar-expand-md .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .bootstrap-iso .navbar-expand-md .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .bootstrap-iso .navbar-expand-md .navbar-nav-scroll {
    overflow: visible;
  }
  .bootstrap-iso .navbar-expand-md .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .bootstrap-iso .navbar-expand-md .navbar-toggler {
    display: none;
  }
  .bootstrap-iso .navbar-expand-md .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .bootstrap-iso .navbar-expand-md .offcanvas .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .navbar-expand-md .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .navbar-expand-lg {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .bootstrap-iso .navbar-expand-lg .navbar-nav {
    flex-direction: row;
  }
  .bootstrap-iso .navbar-expand-lg .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .bootstrap-iso .navbar-expand-lg .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .bootstrap-iso .navbar-expand-lg .navbar-nav-scroll {
    overflow: visible;
  }
  .bootstrap-iso .navbar-expand-lg .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .bootstrap-iso .navbar-expand-lg .navbar-toggler {
    display: none;
  }
  .bootstrap-iso .navbar-expand-lg .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .bootstrap-iso .navbar-expand-lg .offcanvas .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .navbar-expand-lg .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .navbar-expand-xl {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .bootstrap-iso .navbar-expand-xl .navbar-nav {
    flex-direction: row;
  }
  .bootstrap-iso .navbar-expand-xl .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .bootstrap-iso .navbar-expand-xl .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .bootstrap-iso .navbar-expand-xl .navbar-nav-scroll {
    overflow: visible;
  }
  .bootstrap-iso .navbar-expand-xl .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .bootstrap-iso .navbar-expand-xl .navbar-toggler {
    display: none;
  }
  .bootstrap-iso .navbar-expand-xl .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .bootstrap-iso .navbar-expand-xl .offcanvas .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .navbar-expand-xl .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .navbar-expand-xxl {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .bootstrap-iso .navbar-expand-xxl .navbar-nav {
    flex-direction: row;
  }
  .bootstrap-iso .navbar-expand-xxl .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .bootstrap-iso .navbar-expand-xxl .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .bootstrap-iso .navbar-expand-xxl .navbar-nav-scroll {
    overflow: visible;
  }
  .bootstrap-iso .navbar-expand-xxl .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .bootstrap-iso .navbar-expand-xxl .navbar-toggler {
    display: none;
  }
  .bootstrap-iso .navbar-expand-xxl .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .bootstrap-iso .navbar-expand-xxl .offcanvas .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .navbar-expand-xxl .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
.bootstrap-iso .navbar-expand {
  flex-wrap: nowrap;
  justify-content: flex-start;
}
.bootstrap-iso .navbar-expand .navbar-nav {
  flex-direction: row;
}
.bootstrap-iso .navbar-expand .navbar-nav .dropdown-menu {
  position: absolute;
}
.bootstrap-iso .navbar-expand .navbar-nav .nav-link {
  padding-right: var(--bs-navbar-nav-link-padding-x);
  padding-left: var(--bs-navbar-nav-link-padding-x);
}
.bootstrap-iso .navbar-expand .navbar-nav-scroll {
  overflow: visible;
}
.bootstrap-iso .navbar-expand .navbar-collapse {
  display: flex !important;
  flex-basis: auto;
}
.bootstrap-iso .navbar-expand .navbar-toggler {
  display: none;
}
.bootstrap-iso .navbar-expand .offcanvas {
  position: static;
  z-index: auto;
  flex-grow: 1;
  width: auto !important;
  height: auto !important;
  visibility: visible !important;
  background-color: transparent !important;
  border: 0 !important;
  transform: none !important;
  transition: none;
}
.bootstrap-iso .navbar-expand .offcanvas .offcanvas-header {
  display: none;
}
.bootstrap-iso .navbar-expand .offcanvas .offcanvas-body {
  display: flex;
  flex-grow: 0;
  padding: 0;
  overflow-y: visible;
}
.bootstrap-iso .navbar-dark,
.bootstrap-iso .navbar[data-bs-theme=dark] {
  --bs-navbar-color: rgba(255, 255, 255, 0.55);
  --bs-navbar-hover-color: rgba(255, 255, 255, 0.75);
  --bs-navbar-disabled-color: rgba(255, 255, 255, 0.25);
  --bs-navbar-active-color: #fff;
  --bs-navbar-brand-color: #fff;
  --bs-navbar-brand-hover-color: #fff;
  --bs-navbar-toggler-border-color: rgba(255, 255, 255, 0.1);
  --bs-navbar-toggler-icon-bg: url(${___CSS_LOADER_URL_REPLACEMENT_12___});
}
.bootstrap-iso [data-bs-theme=dark] .navbar-toggler-icon {
  --bs-navbar-toggler-icon-bg: url(${___CSS_LOADER_URL_REPLACEMENT_12___});
}
.bootstrap-iso .card {
  --bs-card-spacer-y: 1rem;
  --bs-card-spacer-x: 1rem;
  --bs-card-title-spacer-y: 0.5rem;
  --bs-card-border-width: var(--bs-border-width);
  --bs-card-border-color: var(--bs-border-color-translucent);
  --bs-card-border-radius: var(--bs-border-radius);
  --bs-card-inner-border-radius: calc(var(--bs-border-radius) - (var(--bs-border-width)));
  --bs-card-cap-padding-y: 0.5rem;
  --bs-card-cap-padding-x: 1rem;
  --bs-card-cap-bg: rgba(var(--bs-body-color-rgb), 0.03);
  --bs-card-bg: var(--bs-body-bg);
  --bs-card-img-overlay-padding: 1rem;
  --bs-card-group-margin: 0.75rem;
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  height: var(--bs-card-height);
  color: var(--bs-body-color);
  word-wrap: break-word;
  background-color: var(--bs-card-bg);
  background-clip: border-box;
  border: var(--bs-card-border-width) solid var(--bs-card-border-color);
  border-radius: var(--bs-card-border-radius);
}
.bootstrap-iso .card > hr {
  margin-right: 0;
  margin-left: 0;
}
.bootstrap-iso .card > .list-group {
  border-top: inherit;
  border-bottom: inherit;
}
.bootstrap-iso .card > .list-group:first-child {
  border-top-width: 0;
  border-top-left-radius: var(--bs-card-inner-border-radius);
  border-top-right-radius: var(--bs-card-inner-border-radius);
}
.bootstrap-iso .card > .list-group:last-child {
  border-bottom-width: 0;
  border-bottom-right-radius: var(--bs-card-inner-border-radius);
  border-bottom-left-radius: var(--bs-card-inner-border-radius);
}
.bootstrap-iso .card > .card-header + .list-group,
.bootstrap-iso .card > .list-group + .card-footer {
  border-top: 0;
}
.bootstrap-iso .card-body {
  flex: 1 1 auto;
  padding: var(--bs-card-spacer-y) var(--bs-card-spacer-x);
  color: var(--bs-card-color);
}
.bootstrap-iso .card-title {
  margin-bottom: var(--bs-card-title-spacer-y);
  color: var(--bs-card-title-color);
}
.bootstrap-iso .card-subtitle {
  margin-top: calc(-0.5 * var(--bs-card-title-spacer-y));
  margin-bottom: 0;
  color: var(--bs-card-subtitle-color);
}
.bootstrap-iso .card-text:last-child {
  margin-bottom: 0;
}
.bootstrap-iso .card-link + .card-link {
  margin-left: var(--bs-card-spacer-x);
}
.bootstrap-iso .card-header {
  padding: var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);
  margin-bottom: 0;
  color: var(--bs-card-cap-color);
  background-color: var(--bs-card-cap-bg);
  border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);
}
.bootstrap-iso .card-header:first-child {
  border-radius: var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius) 0 0;
}
.bootstrap-iso .card-footer {
  padding: var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);
  color: var(--bs-card-cap-color);
  background-color: var(--bs-card-cap-bg);
  border-top: var(--bs-card-border-width) solid var(--bs-card-border-color);
}
.bootstrap-iso .card-footer:last-child {
  border-radius: 0 0 var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius);
}
.bootstrap-iso .card-header-tabs {
  margin-right: calc(-0.5 * var(--bs-card-cap-padding-x));
  margin-bottom: calc(-1 * var(--bs-card-cap-padding-y));
  margin-left: calc(-0.5 * var(--bs-card-cap-padding-x));
  border-bottom: 0;
}
.bootstrap-iso .card-header-tabs .nav-link.active {
  background-color: var(--bs-card-bg);
  border-bottom-color: var(--bs-card-bg);
}
.bootstrap-iso .card-header-pills {
  margin-right: calc(-0.5 * var(--bs-card-cap-padding-x));
  margin-left: calc(-0.5 * var(--bs-card-cap-padding-x));
}
.bootstrap-iso .card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: var(--bs-card-img-overlay-padding);
  border-radius: var(--bs-card-inner-border-radius);
}
.bootstrap-iso .card-img,
.bootstrap-iso .card-img-top,
.bootstrap-iso .card-img-bottom {
  width: 100%;
}
.bootstrap-iso .card-img,
.bootstrap-iso .card-img-top {
  border-top-left-radius: var(--bs-card-inner-border-radius);
  border-top-right-radius: var(--bs-card-inner-border-radius);
}
.bootstrap-iso .card-img,
.bootstrap-iso .card-img-bottom {
  border-bottom-right-radius: var(--bs-card-inner-border-radius);
  border-bottom-left-radius: var(--bs-card-inner-border-radius);
}
.bootstrap-iso .card-group > .card {
  margin-bottom: var(--bs-card-group-margin);
}
@media (min-width: 576px) {
  .bootstrap-iso .card-group {
    display: flex;
    flex-flow: row wrap;
  }
  .bootstrap-iso .card-group > .card {
    flex: 1 0 0%;
    margin-bottom: 0;
  }
  .bootstrap-iso .card-group > .card + .card {
    margin-left: 0;
    border-left: 0;
  }
  .bootstrap-iso .card-group > .card:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .bootstrap-iso .card-group > .card:not(:last-child) .card-img-top,
  .bootstrap-iso .card-group > .card:not(:last-child) .card-header {
    border-top-right-radius: 0;
  }
  .bootstrap-iso .card-group > .card:not(:last-child) .card-img-bottom,
  .bootstrap-iso .card-group > .card:not(:last-child) .card-footer {
    border-bottom-right-radius: 0;
  }
  .bootstrap-iso .card-group > .card:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  .bootstrap-iso .card-group > .card:not(:first-child) .card-img-top,
  .bootstrap-iso .card-group > .card:not(:first-child) .card-header {
    border-top-left-radius: 0;
  }
  .bootstrap-iso .card-group > .card:not(:first-child) .card-img-bottom,
  .bootstrap-iso .card-group > .card:not(:first-child) .card-footer {
    border-bottom-left-radius: 0;
  }
}
.bootstrap-iso .accordion {
  --bs-accordion-color: var(--bs-body-color);
  --bs-accordion-bg: var(--bs-body-bg);
  --bs-accordion-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-radius 0.15s ease;
  --bs-accordion-border-color: var(--bs-border-color);
  --bs-accordion-border-width: var(--bs-border-width);
  --bs-accordion-border-radius: var(--bs-border-radius);
  --bs-accordion-inner-border-radius: calc(var(--bs-border-radius) - (var(--bs-border-width)));
  --bs-accordion-btn-padding-x: 1.25rem;
  --bs-accordion-btn-padding-y: 1rem;
  --bs-accordion-btn-color: var(--bs-body-color);
  --bs-accordion-btn-bg: var(--bs-accordion-bg);
  --bs-accordion-btn-icon: url(${___CSS_LOADER_URL_REPLACEMENT_13___});
  --bs-accordion-btn-icon-width: 1.25rem;
  --bs-accordion-btn-icon-transform: rotate(-180deg);
  --bs-accordion-btn-icon-transition: transform 0.2s ease-in-out;
  --bs-accordion-btn-active-icon: url(${___CSS_LOADER_URL_REPLACEMENT_14___});
  --bs-accordion-btn-focus-box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --bs-accordion-body-padding-x: 1.25rem;
  --bs-accordion-body-padding-y: 1rem;
  --bs-accordion-active-color: var(--bs-primary-text-emphasis);
  --bs-accordion-active-bg: var(--bs-primary-bg-subtle);
}
.bootstrap-iso .accordion-button {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  padding: var(--bs-accordion-btn-padding-y) var(--bs-accordion-btn-padding-x);
  font-size: 1rem;
  color: var(--bs-accordion-btn-color);
  text-align: left;
  background-color: var(--bs-accordion-btn-bg);
  border: 0;
  border-radius: 0;
  overflow-anchor: none;
  transition: var(--bs-accordion-transition);
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .accordion-button {
    transition: none;
  }
}
.bootstrap-iso .accordion-button:not(.collapsed) {
  color: var(--bs-accordion-active-color);
  background-color: var(--bs-accordion-active-bg);
  box-shadow: inset 0 calc(-1 * var(--bs-accordion-border-width)) 0 var(--bs-accordion-border-color);
}
.bootstrap-iso .accordion-button:not(.collapsed)::after {
  background-image: var(--bs-accordion-btn-active-icon);
  transform: var(--bs-accordion-btn-icon-transform);
}
.bootstrap-iso .accordion-button::after {
  flex-shrink: 0;
  width: var(--bs-accordion-btn-icon-width);
  height: var(--bs-accordion-btn-icon-width);
  margin-left: auto;
  content: "";
  background-image: var(--bs-accordion-btn-icon);
  background-repeat: no-repeat;
  background-size: var(--bs-accordion-btn-icon-width);
  transition: var(--bs-accordion-btn-icon-transition);
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .accordion-button::after {
    transition: none;
  }
}
.bootstrap-iso .accordion-button:hover {
  z-index: 2;
}
.bootstrap-iso .accordion-button:focus {
  z-index: 3;
  outline: 0;
  box-shadow: var(--bs-accordion-btn-focus-box-shadow);
}
.bootstrap-iso .accordion-header {
  margin-bottom: 0;
}
.bootstrap-iso .accordion-item {
  color: var(--bs-accordion-color);
  background-color: var(--bs-accordion-bg);
  border: var(--bs-accordion-border-width) solid var(--bs-accordion-border-color);
}
.bootstrap-iso .accordion-item:first-of-type {
  border-top-left-radius: var(--bs-accordion-border-radius);
  border-top-right-radius: var(--bs-accordion-border-radius);
}
.bootstrap-iso .accordion-item:first-of-type > .accordion-header .accordion-button {
  border-top-left-radius: var(--bs-accordion-inner-border-radius);
  border-top-right-radius: var(--bs-accordion-inner-border-radius);
}
.bootstrap-iso .accordion-item:not(:first-of-type) {
  border-top: 0;
}
.bootstrap-iso .accordion-item:last-of-type {
  border-bottom-right-radius: var(--bs-accordion-border-radius);
  border-bottom-left-radius: var(--bs-accordion-border-radius);
}
.bootstrap-iso .accordion-item:last-of-type > .accordion-header .accordion-button.collapsed {
  border-bottom-right-radius: var(--bs-accordion-inner-border-radius);
  border-bottom-left-radius: var(--bs-accordion-inner-border-radius);
}
.bootstrap-iso .accordion-item:last-of-type > .accordion-collapse {
  border-bottom-right-radius: var(--bs-accordion-border-radius);
  border-bottom-left-radius: var(--bs-accordion-border-radius);
}
.bootstrap-iso .accordion-body {
  padding: var(--bs-accordion-body-padding-y) var(--bs-accordion-body-padding-x);
}
.bootstrap-iso .accordion-flush > .accordion-item {
  border-right: 0;
  border-left: 0;
  border-radius: 0;
}
.bootstrap-iso .accordion-flush > .accordion-item:first-child {
  border-top: 0;
}
.bootstrap-iso .accordion-flush > .accordion-item:last-child {
  border-bottom: 0;
}
.bootstrap-iso .accordion-flush > .accordion-item > .accordion-header .accordion-button,
.bootstrap-iso .accordion-flush > .accordion-item > .accordion-header .accordion-button.collapsed {
  border-radius: 0;
}
.bootstrap-iso .accordion-flush > .accordion-item > .accordion-collapse {
  border-radius: 0;
}
.bootstrap-iso [data-bs-theme=dark] .accordion-button::after {
  --bs-accordion-btn-icon: url(${___CSS_LOADER_URL_REPLACEMENT_15___});
  --bs-accordion-btn-active-icon: url(${___CSS_LOADER_URL_REPLACEMENT_15___});
}
.bootstrap-iso .breadcrumb {
  --bs-breadcrumb-padding-x: 0;
  --bs-breadcrumb-padding-y: 0;
  --bs-breadcrumb-margin-bottom: 1rem;
  --bs-breadcrumb-divider-color: var(--bs-secondary-color);
  --bs-breadcrumb-item-padding-x: 0.5rem;
  --bs-breadcrumb-item-active-color: var(--bs-secondary-color);
  display: flex;
  flex-wrap: wrap;
  padding: var(--bs-breadcrumb-padding-y) var(--bs-breadcrumb-padding-x);
  margin-bottom: var(--bs-breadcrumb-margin-bottom);
  font-size: var(--bs-breadcrumb-font-size);
  list-style: none;
  background-color: var(--bs-breadcrumb-bg);
  border-radius: var(--bs-breadcrumb-border-radius);
}
.bootstrap-iso .breadcrumb-item + .breadcrumb-item {
  padding-left: var(--bs-breadcrumb-item-padding-x);
}
.bootstrap-iso .breadcrumb-item + .breadcrumb-item::before {
  float: left;
  padding-right: var(--bs-breadcrumb-item-padding-x);
  color: var(--bs-breadcrumb-divider-color);
  content: var(--bs-breadcrumb-divider, "/") /* rtl: var(--bs-breadcrumb-divider, "/") */;
}
.bootstrap-iso .breadcrumb-item.active {
  color: var(--bs-breadcrumb-item-active-color);
}
.bootstrap-iso .pagination {
  --bs-pagination-padding-x: 0.75rem;
  --bs-pagination-padding-y: 0.375rem;
  --bs-pagination-font-size: 1rem;
  --bs-pagination-color: var(--bs-link-color);
  --bs-pagination-bg: var(--bs-body-bg);
  --bs-pagination-border-width: var(--bs-border-width);
  --bs-pagination-border-color: var(--bs-border-color);
  --bs-pagination-border-radius: var(--bs-border-radius);
  --bs-pagination-hover-color: var(--bs-link-hover-color);
  --bs-pagination-hover-bg: var(--bs-tertiary-bg);
  --bs-pagination-hover-border-color: var(--bs-border-color);
  --bs-pagination-focus-color: var(--bs-link-hover-color);
  --bs-pagination-focus-bg: var(--bs-secondary-bg);
  --bs-pagination-focus-box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --bs-pagination-active-color: #fff;
  --bs-pagination-active-bg: #0d6efd;
  --bs-pagination-active-border-color: #0d6efd;
  --bs-pagination-disabled-color: var(--bs-secondary-color);
  --bs-pagination-disabled-bg: var(--bs-secondary-bg);
  --bs-pagination-disabled-border-color: var(--bs-border-color);
  display: flex;
  padding-left: 0;
  list-style: none;
}
.bootstrap-iso .page-link {
  position: relative;
  display: block;
  padding: var(--bs-pagination-padding-y) var(--bs-pagination-padding-x);
  font-size: var(--bs-pagination-font-size);
  color: var(--bs-pagination-color);
  text-decoration: none;
  background-color: var(--bs-pagination-bg);
  border: var(--bs-pagination-border-width) solid var(--bs-pagination-border-color);
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .page-link {
    transition: none;
  }
}
.bootstrap-iso .page-link:hover {
  z-index: 2;
  color: var(--bs-pagination-hover-color);
  background-color: var(--bs-pagination-hover-bg);
  border-color: var(--bs-pagination-hover-border-color);
}
.bootstrap-iso .page-link:focus {
  z-index: 3;
  color: var(--bs-pagination-focus-color);
  background-color: var(--bs-pagination-focus-bg);
  outline: 0;
  box-shadow: var(--bs-pagination-focus-box-shadow);
}
.bootstrap-iso .page-link.active,
.bootstrap-iso .active > .page-link {
  z-index: 3;
  color: var(--bs-pagination-active-color);
  background-color: var(--bs-pagination-active-bg);
  border-color: var(--bs-pagination-active-border-color);
}
.bootstrap-iso .page-link.disabled,
.bootstrap-iso .disabled > .page-link {
  color: var(--bs-pagination-disabled-color);
  pointer-events: none;
  background-color: var(--bs-pagination-disabled-bg);
  border-color: var(--bs-pagination-disabled-border-color);
}
.bootstrap-iso .page-item:not(:first-child) .page-link {
  margin-left: calc(var(--bs-border-width) * -1);
}
.bootstrap-iso .page-item:first-child .page-link {
  border-top-left-radius: var(--bs-pagination-border-radius);
  border-bottom-left-radius: var(--bs-pagination-border-radius);
}
.bootstrap-iso .page-item:last-child .page-link {
  border-top-right-radius: var(--bs-pagination-border-radius);
  border-bottom-right-radius: var(--bs-pagination-border-radius);
}
.bootstrap-iso .pagination-lg {
  --bs-pagination-padding-x: 1.5rem;
  --bs-pagination-padding-y: 0.75rem;
  --bs-pagination-font-size: 1.25rem;
  --bs-pagination-border-radius: var(--bs-border-radius-lg);
}
.bootstrap-iso .pagination-sm {
  --bs-pagination-padding-x: 0.5rem;
  --bs-pagination-padding-y: 0.25rem;
  --bs-pagination-font-size: 0.875rem;
  --bs-pagination-border-radius: var(--bs-border-radius-sm);
}
.bootstrap-iso .badge {
  --bs-badge-padding-x: 0.65em;
  --bs-badge-padding-y: 0.35em;
  --bs-badge-font-size: 0.75em;
  --bs-badge-font-weight: 700;
  --bs-badge-color: #fff;
  --bs-badge-border-radius: var(--bs-border-radius);
  display: inline-block;
  padding: var(--bs-badge-padding-y) var(--bs-badge-padding-x);
  font-size: var(--bs-badge-font-size);
  font-weight: var(--bs-badge-font-weight);
  line-height: 1;
  color: var(--bs-badge-color);
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: var(--bs-badge-border-radius);
}
.bootstrap-iso .badge:empty {
  display: none;
}
.bootstrap-iso .btn .badge {
  position: relative;
  top: -1px;
}
.bootstrap-iso .alert {
  --bs-alert-bg: transparent;
  --bs-alert-padding-x: 1rem;
  --bs-alert-padding-y: 1rem;
  --bs-alert-margin-bottom: 1rem;
  --bs-alert-color: inherit;
  --bs-alert-border-color: transparent;
  --bs-alert-border: var(--bs-border-width) solid var(--bs-alert-border-color);
  --bs-alert-border-radius: var(--bs-border-radius);
  --bs-alert-link-color: inherit;
  position: relative;
  padding: var(--bs-alert-padding-y) var(--bs-alert-padding-x);
  margin-bottom: var(--bs-alert-margin-bottom);
  color: var(--bs-alert-color);
  background-color: var(--bs-alert-bg);
  border: var(--bs-alert-border);
  border-radius: var(--bs-alert-border-radius);
}
.bootstrap-iso .alert-heading {
  color: inherit;
}
.bootstrap-iso .alert-link {
  font-weight: 700;
  color: var(--bs-alert-link-color);
}
.bootstrap-iso .alert-dismissible {
  padding-right: 3rem;
}
.bootstrap-iso .alert-dismissible .btn-close {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  padding: 1.25rem 1rem;
}
.bootstrap-iso .alert-primary {
  --bs-alert-color: var(--bs-primary-text-emphasis);
  --bs-alert-bg: var(--bs-primary-bg-subtle);
  --bs-alert-border-color: var(--bs-primary-border-subtle);
  --bs-alert-link-color: var(--bs-primary-text-emphasis);
}
.bootstrap-iso .alert-secondary {
  --bs-alert-color: var(--bs-secondary-text-emphasis);
  --bs-alert-bg: var(--bs-secondary-bg-subtle);
  --bs-alert-border-color: var(--bs-secondary-border-subtle);
  --bs-alert-link-color: var(--bs-secondary-text-emphasis);
}
.bootstrap-iso .alert-success {
  --bs-alert-color: var(--bs-success-text-emphasis);
  --bs-alert-bg: var(--bs-success-bg-subtle);
  --bs-alert-border-color: var(--bs-success-border-subtle);
  --bs-alert-link-color: var(--bs-success-text-emphasis);
}
.bootstrap-iso .alert-info {
  --bs-alert-color: var(--bs-info-text-emphasis);
  --bs-alert-bg: var(--bs-info-bg-subtle);
  --bs-alert-border-color: var(--bs-info-border-subtle);
  --bs-alert-link-color: var(--bs-info-text-emphasis);
}
.bootstrap-iso .alert-warning {
  --bs-alert-color: var(--bs-warning-text-emphasis);
  --bs-alert-bg: var(--bs-warning-bg-subtle);
  --bs-alert-border-color: var(--bs-warning-border-subtle);
  --bs-alert-link-color: var(--bs-warning-text-emphasis);
}
.bootstrap-iso .alert-danger {
  --bs-alert-color: var(--bs-danger-text-emphasis);
  --bs-alert-bg: var(--bs-danger-bg-subtle);
  --bs-alert-border-color: var(--bs-danger-border-subtle);
  --bs-alert-link-color: var(--bs-danger-text-emphasis);
}
.bootstrap-iso .alert-light {
  --bs-alert-color: var(--bs-light-text-emphasis);
  --bs-alert-bg: var(--bs-light-bg-subtle);
  --bs-alert-border-color: var(--bs-light-border-subtle);
  --bs-alert-link-color: var(--bs-light-text-emphasis);
}
.bootstrap-iso .alert-dark {
  --bs-alert-color: var(--bs-dark-text-emphasis);
  --bs-alert-bg: var(--bs-dark-bg-subtle);
  --bs-alert-border-color: var(--bs-dark-border-subtle);
  --bs-alert-link-color: var(--bs-dark-text-emphasis);
}
@keyframes progress-bar-stripes {
  0% {
    background-position-x: 1rem;
  }
}
.bootstrap-iso .progress,
.bootstrap-iso .progress-stacked {
  --bs-progress-height: 1rem;
  --bs-progress-font-size: 0.75rem;
  --bs-progress-bg: var(--bs-secondary-bg);
  --bs-progress-border-radius: var(--bs-border-radius);
  --bs-progress-box-shadow: var(--bs-box-shadow-inset);
  --bs-progress-bar-color: #fff;
  --bs-progress-bar-bg: #0d6efd;
  --bs-progress-bar-transition: width 0.6s ease;
  display: flex;
  height: var(--bs-progress-height);
  overflow: hidden;
  font-size: var(--bs-progress-font-size);
  background-color: var(--bs-progress-bg);
  border-radius: var(--bs-progress-border-radius);
}
.bootstrap-iso .progress-bar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  overflow: hidden;
  color: var(--bs-progress-bar-color);
  text-align: center;
  white-space: nowrap;
  background-color: var(--bs-progress-bar-bg);
  transition: var(--bs-progress-bar-transition);
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .progress-bar {
    transition: none;
  }
}
.bootstrap-iso .progress-bar-striped {
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-size: var(--bs-progress-height) var(--bs-progress-height);
}
.bootstrap-iso .progress-stacked > .progress {
  overflow: visible;
}
.bootstrap-iso .progress-stacked > .progress > .progress-bar {
  width: 100%;
}
.bootstrap-iso .progress-bar-animated {
  animation: 1s linear infinite progress-bar-stripes;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .progress-bar-animated {
    animation: none;
  }
}
.bootstrap-iso .list-group {
  --bs-list-group-color: var(--bs-body-color);
  --bs-list-group-bg: var(--bs-body-bg);
  --bs-list-group-border-color: var(--bs-border-color);
  --bs-list-group-border-width: var(--bs-border-width);
  --bs-list-group-border-radius: var(--bs-border-radius);
  --bs-list-group-item-padding-x: 1rem;
  --bs-list-group-item-padding-y: 0.5rem;
  --bs-list-group-action-color: var(--bs-secondary-color);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-tertiary-bg);
  --bs-list-group-action-active-color: var(--bs-body-color);
  --bs-list-group-action-active-bg: var(--bs-secondary-bg);
  --bs-list-group-disabled-color: var(--bs-secondary-color);
  --bs-list-group-disabled-bg: var(--bs-body-bg);
  --bs-list-group-active-color: #fff;
  --bs-list-group-active-bg: #0d6efd;
  --bs-list-group-active-border-color: #0d6efd;
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  border-radius: var(--bs-list-group-border-radius);
}
.bootstrap-iso .list-group-numbered {
  list-style-type: none;
  counter-reset: section;
}
.bootstrap-iso .list-group-numbered > .list-group-item::before {
  content: counters(section, ".") ". ";
  counter-increment: section;
}
.bootstrap-iso .list-group-item-action {
  width: 100%;
  color: var(--bs-list-group-action-color);
  text-align: inherit;
}
.bootstrap-iso .list-group-item-action:hover,
.bootstrap-iso .list-group-item-action:focus {
  z-index: 1;
  color: var(--bs-list-group-action-hover-color);
  text-decoration: none;
  background-color: var(--bs-list-group-action-hover-bg);
}
.bootstrap-iso .list-group-item-action:active {
  color: var(--bs-list-group-action-active-color);
  background-color: var(--bs-list-group-action-active-bg);
}
.bootstrap-iso .list-group-item {
  position: relative;
  display: block;
  padding: var(--bs-list-group-item-padding-y) var(--bs-list-group-item-padding-x);
  color: var(--bs-list-group-color);
  text-decoration: none;
  background-color: var(--bs-list-group-bg);
  border: var(--bs-list-group-border-width) solid var(--bs-list-group-border-color);
}
.bootstrap-iso .list-group-item:first-child {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.bootstrap-iso .list-group-item:last-child {
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
.bootstrap-iso .list-group-item.disabled,
.bootstrap-iso .list-group-item:disabled {
  color: var(--bs-list-group-disabled-color);
  pointer-events: none;
  background-color: var(--bs-list-group-disabled-bg);
}
.bootstrap-iso .list-group-item.active {
  z-index: 2;
  color: var(--bs-list-group-active-color);
  background-color: var(--bs-list-group-active-bg);
  border-color: var(--bs-list-group-active-border-color);
}
.bootstrap-iso .list-group-item + .list-group-item {
  border-top-width: 0;
}
.bootstrap-iso .list-group-item + .list-group-item.active {
  margin-top: calc(-1 * var(--bs-list-group-border-width));
  border-top-width: var(--bs-list-group-border-width);
}
.bootstrap-iso .list-group-horizontal {
  flex-direction: row;
}
.bootstrap-iso .list-group-horizontal > .list-group-item:first-child:not(:last-child) {
  border-bottom-left-radius: var(--bs-list-group-border-radius);
  border-top-right-radius: 0;
}
.bootstrap-iso .list-group-horizontal > .list-group-item:last-child:not(:first-child) {
  border-top-right-radius: var(--bs-list-group-border-radius);
  border-bottom-left-radius: 0;
}
.bootstrap-iso .list-group-horizontal > .list-group-item.active {
  margin-top: 0;
}
.bootstrap-iso .list-group-horizontal > .list-group-item + .list-group-item {
  border-top-width: var(--bs-list-group-border-width);
  border-left-width: 0;
}
.bootstrap-iso .list-group-horizontal > .list-group-item + .list-group-item.active {
  margin-left: calc(-1 * var(--bs-list-group-border-width));
  border-left-width: var(--bs-list-group-border-width);
}
@media (min-width: 576px) {
  .bootstrap-iso .list-group-horizontal-sm {
    flex-direction: row;
  }
  .bootstrap-iso .list-group-horizontal-sm > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-sm > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-sm > .list-group-item.active {
    margin-top: 0;
  }
  .bootstrap-iso .list-group-horizontal-sm > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .bootstrap-iso .list-group-horizontal-sm > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .list-group-horizontal-md {
    flex-direction: row;
  }
  .bootstrap-iso .list-group-horizontal-md > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-md > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-md > .list-group-item.active {
    margin-top: 0;
  }
  .bootstrap-iso .list-group-horizontal-md > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .bootstrap-iso .list-group-horizontal-md > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .list-group-horizontal-lg {
    flex-direction: row;
  }
  .bootstrap-iso .list-group-horizontal-lg > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-lg > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-lg > .list-group-item.active {
    margin-top: 0;
  }
  .bootstrap-iso .list-group-horizontal-lg > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .bootstrap-iso .list-group-horizontal-lg > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .list-group-horizontal-xl {
    flex-direction: row;
  }
  .bootstrap-iso .list-group-horizontal-xl > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-xl > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-xl > .list-group-item.active {
    margin-top: 0;
  }
  .bootstrap-iso .list-group-horizontal-xl > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .bootstrap-iso .list-group-horizontal-xl > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .list-group-horizontal-xxl {
    flex-direction: row;
  }
  .bootstrap-iso .list-group-horizontal-xxl > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-xxl > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .bootstrap-iso .list-group-horizontal-xxl > .list-group-item.active {
    margin-top: 0;
  }
  .bootstrap-iso .list-group-horizontal-xxl > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .bootstrap-iso .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
.bootstrap-iso .list-group-flush {
  border-radius: 0;
}
.bootstrap-iso .list-group-flush > .list-group-item {
  border-width: 0 0 var(--bs-list-group-border-width);
}
.bootstrap-iso .list-group-flush > .list-group-item:last-child {
  border-bottom-width: 0;
}
.bootstrap-iso .list-group-item-primary {
  --bs-list-group-color: var(--bs-primary-text-emphasis);
  --bs-list-group-bg: var(--bs-primary-bg-subtle);
  --bs-list-group-border-color: var(--bs-primary-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-primary-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-primary-border-subtle);
  --bs-list-group-active-color: var(--bs-primary-bg-subtle);
  --bs-list-group-active-bg: var(--bs-primary-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-primary-text-emphasis);
}
.bootstrap-iso .list-group-item-secondary {
  --bs-list-group-color: var(--bs-secondary-text-emphasis);
  --bs-list-group-bg: var(--bs-secondary-bg-subtle);
  --bs-list-group-border-color: var(--bs-secondary-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-secondary-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-secondary-border-subtle);
  --bs-list-group-active-color: var(--bs-secondary-bg-subtle);
  --bs-list-group-active-bg: var(--bs-secondary-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-secondary-text-emphasis);
}
.bootstrap-iso .list-group-item-success {
  --bs-list-group-color: var(--bs-success-text-emphasis);
  --bs-list-group-bg: var(--bs-success-bg-subtle);
  --bs-list-group-border-color: var(--bs-success-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-success-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-success-border-subtle);
  --bs-list-group-active-color: var(--bs-success-bg-subtle);
  --bs-list-group-active-bg: var(--bs-success-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-success-text-emphasis);
}
.bootstrap-iso .list-group-item-info {
  --bs-list-group-color: var(--bs-info-text-emphasis);
  --bs-list-group-bg: var(--bs-info-bg-subtle);
  --bs-list-group-border-color: var(--bs-info-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-info-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-info-border-subtle);
  --bs-list-group-active-color: var(--bs-info-bg-subtle);
  --bs-list-group-active-bg: var(--bs-info-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-info-text-emphasis);
}
.bootstrap-iso .list-group-item-warning {
  --bs-list-group-color: var(--bs-warning-text-emphasis);
  --bs-list-group-bg: var(--bs-warning-bg-subtle);
  --bs-list-group-border-color: var(--bs-warning-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-warning-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-warning-border-subtle);
  --bs-list-group-active-color: var(--bs-warning-bg-subtle);
  --bs-list-group-active-bg: var(--bs-warning-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-warning-text-emphasis);
}
.bootstrap-iso .list-group-item-danger {
  --bs-list-group-color: var(--bs-danger-text-emphasis);
  --bs-list-group-bg: var(--bs-danger-bg-subtle);
  --bs-list-group-border-color: var(--bs-danger-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-danger-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-danger-border-subtle);
  --bs-list-group-active-color: var(--bs-danger-bg-subtle);
  --bs-list-group-active-bg: var(--bs-danger-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-danger-text-emphasis);
}
.bootstrap-iso .list-group-item-light {
  --bs-list-group-color: var(--bs-light-text-emphasis);
  --bs-list-group-bg: var(--bs-light-bg-subtle);
  --bs-list-group-border-color: var(--bs-light-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-light-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-light-border-subtle);
  --bs-list-group-active-color: var(--bs-light-bg-subtle);
  --bs-list-group-active-bg: var(--bs-light-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-light-text-emphasis);
}
.bootstrap-iso .list-group-item-dark {
  --bs-list-group-color: var(--bs-dark-text-emphasis);
  --bs-list-group-bg: var(--bs-dark-bg-subtle);
  --bs-list-group-border-color: var(--bs-dark-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-dark-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-dark-border-subtle);
  --bs-list-group-active-color: var(--bs-dark-bg-subtle);
  --bs-list-group-active-bg: var(--bs-dark-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-dark-text-emphasis);
}
.bootstrap-iso .btn-close {
  --bs-btn-close-color: #000;
  --bs-btn-close-bg: url(${___CSS_LOADER_URL_REPLACEMENT_16___});
  --bs-btn-close-opacity: 0.5;
  --bs-btn-close-hover-opacity: 0.75;
  --bs-btn-close-focus-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --bs-btn-close-focus-opacity: 1;
  --bs-btn-close-disabled-opacity: 0.25;
  --bs-btn-close-white-filter: invert(1) grayscale(100%) brightness(200%);
  box-sizing: content-box;
  width: 1em;
  height: 1em;
  padding: 0.25em 0.25em;
  color: var(--bs-btn-close-color);
  background: transparent var(--bs-btn-close-bg) center / 1em auto no-repeat;
  border: 0;
  border-radius: 0.375rem;
  opacity: var(--bs-btn-close-opacity);
}
.bootstrap-iso .btn-close:hover {
  color: var(--bs-btn-close-color);
  text-decoration: none;
  opacity: var(--bs-btn-close-hover-opacity);
}
.bootstrap-iso .btn-close:focus {
  outline: 0;
  box-shadow: var(--bs-btn-close-focus-shadow);
  opacity: var(--bs-btn-close-focus-opacity);
}
.bootstrap-iso .btn-close:disabled,
.bootstrap-iso .btn-close.disabled {
  pointer-events: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  opacity: var(--bs-btn-close-disabled-opacity);
}
.bootstrap-iso .btn-close-white {
  filter: var(--bs-btn-close-white-filter);
}
.bootstrap-iso [data-bs-theme=dark] .btn-close {
  filter: var(--bs-btn-close-white-filter);
}
.bootstrap-iso .toast {
  --bs-toast-zindex: 1090;
  --bs-toast-padding-x: 0.75rem;
  --bs-toast-padding-y: 0.5rem;
  --bs-toast-spacing: 1.5rem;
  --bs-toast-max-width: 350px;
  --bs-toast-font-size: 0.875rem;
  --bs-toast-bg: rgba(var(--bs-body-bg-rgb), 0.85);
  --bs-toast-border-width: var(--bs-border-width);
  --bs-toast-border-color: var(--bs-border-color-translucent);
  --bs-toast-border-radius: var(--bs-border-radius);
  --bs-toast-box-shadow: var(--bs-box-shadow);
  --bs-toast-header-color: var(--bs-secondary-color);
  --bs-toast-header-bg: rgba(var(--bs-body-bg-rgb), 0.85);
  --bs-toast-header-border-color: var(--bs-border-color-translucent);
  width: var(--bs-toast-max-width);
  max-width: 100%;
  font-size: var(--bs-toast-font-size);
  color: var(--bs-toast-color);
  pointer-events: auto;
  background-color: var(--bs-toast-bg);
  background-clip: padding-box;
  border: var(--bs-toast-border-width) solid var(--bs-toast-border-color);
  box-shadow: var(--bs-toast-box-shadow);
  border-radius: var(--bs-toast-border-radius);
}
.bootstrap-iso .toast.showing {
  opacity: 0;
}
.bootstrap-iso .toast:not(.show) {
  display: none;
}
.bootstrap-iso .toast-container {
  --bs-toast-zindex: 1090;
  position: absolute;
  z-index: var(--bs-toast-zindex);
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  max-width: 100%;
  pointer-events: none;
}
.bootstrap-iso .toast-container > :not(:last-child) {
  margin-bottom: var(--bs-toast-spacing);
}
.bootstrap-iso .toast-header {
  display: flex;
  align-items: center;
  padding: var(--bs-toast-padding-y) var(--bs-toast-padding-x);
  color: var(--bs-toast-header-color);
  background-color: var(--bs-toast-header-bg);
  background-clip: padding-box;
  border-bottom: var(--bs-toast-border-width) solid var(--bs-toast-header-border-color);
  border-top-left-radius: calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));
  border-top-right-radius: calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));
}
.bootstrap-iso .toast-header .btn-close {
  margin-right: calc(-0.5 * var(--bs-toast-padding-x));
  margin-left: var(--bs-toast-padding-x);
}
.bootstrap-iso .toast-body {
  padding: var(--bs-toast-padding-x);
  word-wrap: break-word;
}
.bootstrap-iso .modal {
  --bs-modal-zindex: 1055;
  --bs-modal-width: 500px;
  --bs-modal-padding: 1rem;
  --bs-modal-margin: 0.5rem;
  --bs-modal-bg: var(--bs-body-bg);
  --bs-modal-border-color: var(--bs-border-color-translucent);
  --bs-modal-border-width: var(--bs-border-width);
  --bs-modal-border-radius: var(--bs-border-radius-lg);
  --bs-modal-box-shadow: var(--bs-box-shadow-sm);
  --bs-modal-inner-border-radius: calc(var(--bs-border-radius-lg) - (var(--bs-border-width)));
  --bs-modal-header-padding-x: 1rem;
  --bs-modal-header-padding-y: 1rem;
  --bs-modal-header-padding: 1rem 1rem;
  --bs-modal-header-border-color: var(--bs-border-color);
  --bs-modal-header-border-width: var(--bs-border-width);
  --bs-modal-title-line-height: 1.5;
  --bs-modal-footer-gap: 0.5rem;
  --bs-modal-footer-border-color: var(--bs-border-color);
  --bs-modal-footer-border-width: var(--bs-border-width);
  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--bs-modal-zindex);
  display: none;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
}
.bootstrap-iso .modal-dialog {
  position: relative;
  width: auto;
  margin: var(--bs-modal-margin);
  pointer-events: none;
}
.bootstrap-iso .modal.fade .modal-dialog {
  transition: transform 0.3s ease-out;
  transform: translate(0, -50px);
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .modal.fade .modal-dialog {
    transition: none;
  }
}
.bootstrap-iso .modal.show .modal-dialog {
  transform: none;
}
.bootstrap-iso .modal.modal-static .modal-dialog {
  transform: scale(1.02);
}
.bootstrap-iso .modal-dialog-scrollable {
  height: calc(100% - var(--bs-modal-margin) * 2);
}
.bootstrap-iso .modal-dialog-scrollable .modal-content {
  max-height: 100%;
  overflow: hidden;
}
.bootstrap-iso .modal-dialog-scrollable .modal-body {
  overflow-y: auto;
}
.bootstrap-iso .modal-dialog-centered {
  display: flex;
  align-items: center;
  min-height: calc(100% - var(--bs-modal-margin) * 2);
}
.bootstrap-iso .modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  color: var(--bs-modal-color);
  pointer-events: auto;
  background-color: var(--bs-modal-bg);
  background-clip: padding-box;
  border: var(--bs-modal-border-width) solid var(--bs-modal-border-color);
  border-radius: var(--bs-modal-border-radius);
  outline: 0;
}
.bootstrap-iso .modal-backdrop {
  --bs-backdrop-zindex: 1050;
  --bs-backdrop-bg: #000;
  --bs-backdrop-opacity: 0.5;
  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--bs-backdrop-zindex);
  width: 100vw;
  height: 100vh;
  background-color: var(--bs-backdrop-bg);
}
.bootstrap-iso .modal-backdrop.fade {
  opacity: 0;
}
.bootstrap-iso .modal-backdrop.show {
  opacity: var(--bs-backdrop-opacity);
}
.bootstrap-iso .modal-header {
  display: flex;
  flex-shrink: 0;
  align-items: center;
  padding: var(--bs-modal-header-padding);
  border-bottom: var(--bs-modal-header-border-width) solid var(--bs-modal-header-border-color);
  border-top-left-radius: var(--bs-modal-inner-border-radius);
  border-top-right-radius: var(--bs-modal-inner-border-radius);
}
.bootstrap-iso .modal-header .btn-close {
  padding: calc(var(--bs-modal-header-padding-y) * 0.5) calc(var(--bs-modal-header-padding-x) * 0.5);
  margin: calc(-0.5 * var(--bs-modal-header-padding-y)) calc(-0.5 * var(--bs-modal-header-padding-x)) calc(-0.5 * var(--bs-modal-header-padding-y)) auto;
}
.bootstrap-iso .modal-title {
  margin-bottom: 0;
  line-height: var(--bs-modal-title-line-height);
}
.bootstrap-iso .modal-body {
  position: relative;
  flex: 1 1 auto;
  padding: var(--bs-modal-padding);
}
.bootstrap-iso .modal-footer {
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
  padding: calc(var(--bs-modal-padding) - var(--bs-modal-footer-gap) * 0.5);
  background-color: var(--bs-modal-footer-bg);
  border-top: var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color);
  border-bottom-right-radius: var(--bs-modal-inner-border-radius);
  border-bottom-left-radius: var(--bs-modal-inner-border-radius);
}
.bootstrap-iso .modal-footer > * {
  margin: calc(var(--bs-modal-footer-gap) * 0.5);
}
@media (min-width: 576px) {
  .bootstrap-iso .modal {
    --bs-modal-margin: 1.75rem;
    --bs-modal-box-shadow: var(--bs-box-shadow);
  }
  .bootstrap-iso .modal-dialog {
    max-width: var(--bs-modal-width);
    margin-right: auto;
    margin-left: auto;
  }
  .bootstrap-iso .modal-sm {
    --bs-modal-width: 300px;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .modal-lg,
  .bootstrap-iso .modal-xl {
    --bs-modal-width: 800px;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .modal-xl {
    --bs-modal-width: 1140px;
  }
}
.bootstrap-iso .modal-fullscreen {
  width: 100vw;
  max-width: none;
  height: 100%;
  margin: 0;
}
.bootstrap-iso .modal-fullscreen .modal-content {
  height: 100%;
  border: 0;
  border-radius: 0;
}
.bootstrap-iso .modal-fullscreen .modal-header,
.bootstrap-iso .modal-fullscreen .modal-footer {
  border-radius: 0;
}
.bootstrap-iso .modal-fullscreen .modal-body {
  overflow-y: auto;
}
@media (max-width: 575.98px) {
  .bootstrap-iso .modal-fullscreen-sm-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .bootstrap-iso .modal-fullscreen-sm-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-sm-down .modal-header,
  .bootstrap-iso .modal-fullscreen-sm-down .modal-footer {
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-sm-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 767.98px) {
  .bootstrap-iso .modal-fullscreen-md-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .bootstrap-iso .modal-fullscreen-md-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-md-down .modal-header,
  .bootstrap-iso .modal-fullscreen-md-down .modal-footer {
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-md-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 991.98px) {
  .bootstrap-iso .modal-fullscreen-lg-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .bootstrap-iso .modal-fullscreen-lg-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-lg-down .modal-header,
  .bootstrap-iso .modal-fullscreen-lg-down .modal-footer {
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-lg-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 1199.98px) {
  .bootstrap-iso .modal-fullscreen-xl-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .bootstrap-iso .modal-fullscreen-xl-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-xl-down .modal-header,
  .bootstrap-iso .modal-fullscreen-xl-down .modal-footer {
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-xl-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 1399.98px) {
  .bootstrap-iso .modal-fullscreen-xxl-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .bootstrap-iso .modal-fullscreen-xxl-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-xxl-down .modal-header,
  .bootstrap-iso .modal-fullscreen-xxl-down .modal-footer {
    border-radius: 0;
  }
  .bootstrap-iso .modal-fullscreen-xxl-down .modal-body {
    overflow-y: auto;
  }
}
.bootstrap-iso .tooltip {
  --bs-tooltip-zindex: 1080;
  --bs-tooltip-max-width: 200px;
  --bs-tooltip-padding-x: 0.5rem;
  --bs-tooltip-padding-y: 0.25rem;
  --bs-tooltip-margin: none;
  --bs-tooltip-font-size: 0.875rem;
  --bs-tooltip-color: var(--bs-body-bg);
  --bs-tooltip-bg: var(--bs-emphasis-color);
  --bs-tooltip-border-radius: var(--bs-border-radius);
  --bs-tooltip-opacity: 0.9;
  --bs-tooltip-arrow-width: 0.8rem;
  --bs-tooltip-arrow-height: 0.4rem;
  z-index: var(--bs-tooltip-zindex);
  display: block;
  margin: var(--bs-tooltip-margin);
  font-family: var(--bs-font-sans-serif);
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  white-space: normal;
  word-spacing: normal;
  line-break: auto;
  font-size: var(--bs-tooltip-font-size);
  word-wrap: break-word;
  opacity: 0;
}
.bootstrap-iso .tooltip.show {
  opacity: var(--bs-tooltip-opacity);
}
.bootstrap-iso .tooltip .tooltip-arrow {
  display: block;
  width: var(--bs-tooltip-arrow-width);
  height: var(--bs-tooltip-arrow-height);
}
.bootstrap-iso .tooltip .tooltip-arrow::before {
  position: absolute;
  content: "";
  border-color: transparent;
  border-style: solid;
}
.bootstrap-iso .bs-tooltip-top .tooltip-arrow,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow {
  bottom: calc(-1 * var(--bs-tooltip-arrow-height));
}
.bootstrap-iso .bs-tooltip-top .tooltip-arrow::before,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {
  top: -1px;
  border-width: var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * 0.5) 0;
  border-top-color: var(--bs-tooltip-bg);
}
.bootstrap-iso .bs-tooltip-end .tooltip-arrow,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow {
  left: calc(-1 * var(--bs-tooltip-arrow-height));
  width: var(--bs-tooltip-arrow-height);
  height: var(--bs-tooltip-arrow-width);
}
.bootstrap-iso .bs-tooltip-end .tooltip-arrow::before,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before {
  right: -1px;
  border-width: calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * 0.5) 0;
  border-right-color: var(--bs-tooltip-bg);
}
.bootstrap-iso .bs-tooltip-bottom .tooltip-arrow,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow {
  top: calc(-1 * var(--bs-tooltip-arrow-height));
}
.bootstrap-iso .bs-tooltip-bottom .tooltip-arrow::before,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before {
  bottom: -1px;
  border-width: 0 calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height);
  border-bottom-color: var(--bs-tooltip-bg);
}
.bootstrap-iso .bs-tooltip-start .tooltip-arrow,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow {
  right: calc(-1 * var(--bs-tooltip-arrow-height));
  width: var(--bs-tooltip-arrow-height);
  height: var(--bs-tooltip-arrow-width);
}
.bootstrap-iso .bs-tooltip-start .tooltip-arrow::before,
.bootstrap-iso .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before {
  left: -1px;
  border-width: calc(var(--bs-tooltip-arrow-width) * 0.5) 0 calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height);
  border-left-color: var(--bs-tooltip-bg);
}
.bootstrap-iso .tooltip-inner {
  max-width: var(--bs-tooltip-max-width);
  padding: var(--bs-tooltip-padding-y) var(--bs-tooltip-padding-x);
  color: var(--bs-tooltip-color);
  text-align: center;
  background-color: var(--bs-tooltip-bg);
  border-radius: var(--bs-tooltip-border-radius);
}
.bootstrap-iso .popover {
  --bs-popover-zindex: 1070;
  --bs-popover-max-width: 276px;
  --bs-popover-font-size: 0.875rem;
  --bs-popover-bg: var(--bs-body-bg);
  --bs-popover-border-width: var(--bs-border-width);
  --bs-popover-border-color: var(--bs-border-color-translucent);
  --bs-popover-border-radius: var(--bs-border-radius-lg);
  --bs-popover-inner-border-radius: calc(var(--bs-border-radius-lg) - var(--bs-border-width));
  --bs-popover-box-shadow: var(--bs-box-shadow);
  --bs-popover-header-padding-x: 1rem;
  --bs-popover-header-padding-y: 0.5rem;
  --bs-popover-header-font-size: 1rem;
  --bs-popover-header-color: inherit;
  --bs-popover-header-bg: var(--bs-secondary-bg);
  --bs-popover-body-padding-x: 1rem;
  --bs-popover-body-padding-y: 1rem;
  --bs-popover-body-color: var(--bs-body-color);
  --bs-popover-arrow-width: 1rem;
  --bs-popover-arrow-height: 0.5rem;
  --bs-popover-arrow-border: var(--bs-popover-border-color);
  z-index: var(--bs-popover-zindex);
  display: block;
  max-width: var(--bs-popover-max-width);
  font-family: var(--bs-font-sans-serif);
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  white-space: normal;
  word-spacing: normal;
  line-break: auto;
  font-size: var(--bs-popover-font-size);
  word-wrap: break-word;
  background-color: var(--bs-popover-bg);
  background-clip: padding-box;
  border: var(--bs-popover-border-width) solid var(--bs-popover-border-color);
  border-radius: var(--bs-popover-border-radius);
}
.bootstrap-iso .popover .popover-arrow {
  display: block;
  width: var(--bs-popover-arrow-width);
  height: var(--bs-popover-arrow-height);
}
.bootstrap-iso .popover .popover-arrow::before,
.bootstrap-iso .popover .popover-arrow::after {
  position: absolute;
  display: block;
  content: "";
  border-color: transparent;
  border-style: solid;
  border-width: 0;
}
.bootstrap-iso .bs-popover-top > .popover-arrow,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=top] > .popover-arrow {
  bottom: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
}
.bootstrap-iso .bs-popover-top > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before,
.bootstrap-iso .bs-popover-top > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {
  border-width: var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * 0.5) 0;
}
.bootstrap-iso .bs-popover-top > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before {
  bottom: 0;
  border-top-color: var(--bs-popover-arrow-border);
}
.bootstrap-iso .bs-popover-top > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {
  bottom: var(--bs-popover-border-width);
  border-top-color: var(--bs-popover-bg);
}
.bootstrap-iso .bs-popover-end > .popover-arrow,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=right] > .popover-arrow {
  left: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
  width: var(--bs-popover-arrow-height);
  height: var(--bs-popover-arrow-width);
}
.bootstrap-iso .bs-popover-end > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before,
.bootstrap-iso .bs-popover-end > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {
  border-width: calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * 0.5) 0;
}
.bootstrap-iso .bs-popover-end > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before {
  left: 0;
  border-right-color: var(--bs-popover-arrow-border);
}
.bootstrap-iso .bs-popover-end > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {
  left: var(--bs-popover-border-width);
  border-right-color: var(--bs-popover-bg);
}
.bootstrap-iso .bs-popover-bottom > .popover-arrow,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow {
  top: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
}
.bootstrap-iso .bs-popover-bottom > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before,
.bootstrap-iso .bs-popover-bottom > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
  border-width: 0 calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height);
}
.bootstrap-iso .bs-popover-bottom > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before {
  top: 0;
  border-bottom-color: var(--bs-popover-arrow-border);
}
.bootstrap-iso .bs-popover-bottom > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
  top: var(--bs-popover-border-width);
  border-bottom-color: var(--bs-popover-bg);
}
.bootstrap-iso .bs-popover-bottom .popover-header::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=bottom] .popover-header::before {
  position: absolute;
  top: 0;
  left: 50%;
  display: block;
  width: var(--bs-popover-arrow-width);
  margin-left: calc(-0.5 * var(--bs-popover-arrow-width));
  content: "";
  border-bottom: var(--bs-popover-border-width) solid var(--bs-popover-header-bg);
}
.bootstrap-iso .bs-popover-start > .popover-arrow,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=left] > .popover-arrow {
  right: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
  width: var(--bs-popover-arrow-height);
  height: var(--bs-popover-arrow-width);
}
.bootstrap-iso .bs-popover-start > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before,
.bootstrap-iso .bs-popover-start > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {
  border-width: calc(var(--bs-popover-arrow-width) * 0.5) 0 calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height);
}
.bootstrap-iso .bs-popover-start > .popover-arrow::before,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before {
  right: 0;
  border-left-color: var(--bs-popover-arrow-border);
}
.bootstrap-iso .bs-popover-start > .popover-arrow::after,
.bootstrap-iso .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {
  right: var(--bs-popover-border-width);
  border-left-color: var(--bs-popover-bg);
}
.bootstrap-iso .popover-header {
  padding: var(--bs-popover-header-padding-y) var(--bs-popover-header-padding-x);
  margin-bottom: 0;
  font-size: var(--bs-popover-header-font-size);
  color: var(--bs-popover-header-color);
  background-color: var(--bs-popover-header-bg);
  border-bottom: var(--bs-popover-border-width) solid var(--bs-popover-border-color);
  border-top-left-radius: var(--bs-popover-inner-border-radius);
  border-top-right-radius: var(--bs-popover-inner-border-radius);
}
.bootstrap-iso .popover-header:empty {
  display: none;
}
.bootstrap-iso .popover-body {
  padding: var(--bs-popover-body-padding-y) var(--bs-popover-body-padding-x);
  color: var(--bs-popover-body-color);
}
.bootstrap-iso .carousel {
  position: relative;
}
.bootstrap-iso .carousel.pointer-event {
  touch-action: pan-y;
}
.bootstrap-iso .carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
}
.bootstrap-iso .carousel-inner::after {
  display: block;
  clear: both;
  content: "";
}
.bootstrap-iso .carousel-item {
  position: relative;
  display: none;
  float: left;
  width: 100%;
  margin-right: -100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  transition: transform 0.6s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .carousel-item {
    transition: none;
  }
}
.bootstrap-iso .carousel-item.active,
.bootstrap-iso .carousel-item-next,
.bootstrap-iso .carousel-item-prev {
  display: block;
}
.bootstrap-iso .carousel-item-next:not(.carousel-item-start),
.bootstrap-iso .active.carousel-item-end {
  transform: translateX(100%);
}
.bootstrap-iso .carousel-item-prev:not(.carousel-item-end),
.bootstrap-iso .active.carousel-item-start {
  transform: translateX(-100%);
}
.bootstrap-iso .carousel-fade .carousel-item {
  opacity: 0;
  transition-property: opacity;
  transform: none;
}
.bootstrap-iso .carousel-fade .carousel-item.active,
.bootstrap-iso .carousel-fade .carousel-item-next.carousel-item-start,
.bootstrap-iso .carousel-fade .carousel-item-prev.carousel-item-end {
  z-index: 1;
  opacity: 1;
}
.bootstrap-iso .carousel-fade .active.carousel-item-start,
.bootstrap-iso .carousel-fade .active.carousel-item-end {
  z-index: 0;
  opacity: 0;
  transition: opacity 0s 0.6s;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .carousel-fade .active.carousel-item-start,
  .bootstrap-iso .carousel-fade .active.carousel-item-end {
    transition: none;
  }
}
.bootstrap-iso .carousel-control-prev,
.bootstrap-iso .carousel-control-next {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 15%;
  padding: 0;
  color: #fff;
  text-align: center;
  background: none;
  border: 0;
  opacity: 0.5;
  transition: opacity 0.15s ease;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .carousel-control-prev,
  .bootstrap-iso .carousel-control-next {
    transition: none;
  }
}
.bootstrap-iso .carousel-control-prev:hover,
.bootstrap-iso .carousel-control-prev:focus,
.bootstrap-iso .carousel-control-next:hover,
.bootstrap-iso .carousel-control-next:focus {
  color: #fff;
  text-decoration: none;
  outline: 0;
  opacity: 0.9;
}
.bootstrap-iso .carousel-control-prev {
  left: 0;
}
.bootstrap-iso .carousel-control-next {
  right: 0;
}
.bootstrap-iso .carousel-control-prev-icon,
.bootstrap-iso .carousel-control-next-icon {
  display: inline-block;
  width: 2rem;
  height: 2rem;
  background-repeat: no-repeat;
  background-position: 50%;
  background-size: 100% 100%;
}
.bootstrap-iso .carousel-control-prev-icon {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_17___}) /*rtl:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e")*/;
}
.bootstrap-iso .carousel-control-next-icon {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_18___}) /*rtl:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e")*/;
}
.bootstrap-iso .carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 2;
  display: flex;
  justify-content: center;
  padding: 0;
  margin-right: 15%;
  margin-bottom: 1rem;
  margin-left: 15%;
}
.bootstrap-iso .carousel-indicators [data-bs-target] {
  box-sizing: content-box;
  flex: 0 1 auto;
  width: 30px;
  height: 3px;
  padding: 0;
  margin-right: 3px;
  margin-left: 3px;
  text-indent: -999px;
  cursor: pointer;
  background-color: #fff;
  background-clip: padding-box;
  border: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  opacity: 0.5;
  transition: opacity 0.6s ease;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .carousel-indicators [data-bs-target] {
    transition: none;
  }
}
.bootstrap-iso .carousel-indicators .active {
  opacity: 1;
}
.bootstrap-iso .carousel-caption {
  position: absolute;
  right: 15%;
  bottom: 1.25rem;
  left: 15%;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  color: #fff;
  text-align: center;
}
.bootstrap-iso .carousel-dark .carousel-control-prev-icon,
.bootstrap-iso .carousel-dark .carousel-control-next-icon {
  filter: invert(1) grayscale(100);
}
.bootstrap-iso .carousel-dark .carousel-indicators [data-bs-target] {
  background-color: #000;
}
.bootstrap-iso .carousel-dark .carousel-caption {
  color: #000;
}
.bootstrap-iso [data-bs-theme=dark] .carousel .carousel-control-prev-icon,
.bootstrap-iso [data-bs-theme=dark] .carousel .carousel-control-next-icon,
.bootstrap-iso [data-bs-theme=dark].carousel .carousel-control-prev-icon,
.bootstrap-iso [data-bs-theme=dark].carousel .carousel-control-next-icon {
  filter: invert(1) grayscale(100);
}
.bootstrap-iso [data-bs-theme=dark] .carousel .carousel-indicators [data-bs-target],
.bootstrap-iso [data-bs-theme=dark].carousel .carousel-indicators [data-bs-target] {
  background-color: #000;
}
.bootstrap-iso [data-bs-theme=dark] .carousel .carousel-caption,
.bootstrap-iso [data-bs-theme=dark].carousel .carousel-caption {
  color: #000;
}
.bootstrap-iso .spinner-grow,
.bootstrap-iso .spinner-border {
  display: inline-block;
  width: var(--bs-spinner-width);
  height: var(--bs-spinner-height);
  vertical-align: var(--bs-spinner-vertical-align);
  border-radius: 50%;
  animation: var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name);
}
@keyframes spinner-border {
  to {
    transform: rotate(360deg) /* rtl:ignore */;
  }
}
.bootstrap-iso .spinner-border {
  --bs-spinner-width: 2rem;
  --bs-spinner-height: 2rem;
  --bs-spinner-vertical-align: -0.125em;
  --bs-spinner-border-width: 0.25em;
  --bs-spinner-animation-speed: 0.75s;
  --bs-spinner-animation-name: spinner-border;
  border: var(--bs-spinner-border-width) solid currentcolor;
  border-right-color: transparent;
}
.bootstrap-iso .spinner-border-sm {
  --bs-spinner-width: 1rem;
  --bs-spinner-height: 1rem;
  --bs-spinner-border-width: 0.2em;
}
@keyframes spinner-grow {
  0% {
    transform: scale(0);
  }
  50% {
    opacity: 1;
    transform: none;
  }
}
.bootstrap-iso .spinner-grow {
  --bs-spinner-width: 2rem;
  --bs-spinner-height: 2rem;
  --bs-spinner-vertical-align: -0.125em;
  --bs-spinner-animation-speed: 0.75s;
  --bs-spinner-animation-name: spinner-grow;
  background-color: currentcolor;
  opacity: 0;
}
.bootstrap-iso .spinner-grow-sm {
  --bs-spinner-width: 1rem;
  --bs-spinner-height: 1rem;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .spinner-border,
  .bootstrap-iso .spinner-grow {
    --bs-spinner-animation-speed: 1.5s;
  }
}
.bootstrap-iso .offcanvas,
.bootstrap-iso .offcanvas-xxl,
.bootstrap-iso .offcanvas-xl,
.bootstrap-iso .offcanvas-lg,
.bootstrap-iso .offcanvas-md,
.bootstrap-iso .offcanvas-sm {
  --bs-offcanvas-zindex: 1045;
  --bs-offcanvas-width: 400px;
  --bs-offcanvas-height: 30vh;
  --bs-offcanvas-padding-x: 1rem;
  --bs-offcanvas-padding-y: 1rem;
  --bs-offcanvas-color: var(--bs-body-color);
  --bs-offcanvas-bg: var(--bs-body-bg);
  --bs-offcanvas-border-width: var(--bs-border-width);
  --bs-offcanvas-border-color: var(--bs-border-color-translucent);
  --bs-offcanvas-box-shadow: var(--bs-box-shadow-sm);
  --bs-offcanvas-transition: transform 0.3s ease-in-out;
  --bs-offcanvas-title-line-height: 1.5;
}
@media (max-width: 575.98px) {
  .bootstrap-iso .offcanvas-sm {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {
  .bootstrap-iso .offcanvas-sm {
    transition: none;
  }
}
@media (max-width: 575.98px) {
  .bootstrap-iso .offcanvas-sm.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .bootstrap-iso .offcanvas-sm.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .bootstrap-iso .offcanvas-sm.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .bootstrap-iso .offcanvas-sm.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .bootstrap-iso .offcanvas-sm.showing,
  .bootstrap-iso .offcanvas-sm.show:not(.hiding) {
    transform: none;
  }
  .bootstrap-iso .offcanvas-sm.showing,
  .bootstrap-iso .offcanvas-sm.hiding,
  .bootstrap-iso .offcanvas-sm.show {
    visibility: visible;
  }
}
@media (min-width: 576px) {
  .bootstrap-iso .offcanvas-sm {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .bootstrap-iso .offcanvas-sm .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .offcanvas-sm .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
@media (max-width: 767.98px) {
  .bootstrap-iso .offcanvas-md {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {
  .bootstrap-iso .offcanvas-md {
    transition: none;
  }
}
@media (max-width: 767.98px) {
  .bootstrap-iso .offcanvas-md.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .bootstrap-iso .offcanvas-md.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .bootstrap-iso .offcanvas-md.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .bootstrap-iso .offcanvas-md.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .bootstrap-iso .offcanvas-md.showing,
  .bootstrap-iso .offcanvas-md.show:not(.hiding) {
    transform: none;
  }
  .bootstrap-iso .offcanvas-md.showing,
  .bootstrap-iso .offcanvas-md.hiding,
  .bootstrap-iso .offcanvas-md.show {
    visibility: visible;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .offcanvas-md {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .bootstrap-iso .offcanvas-md .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .offcanvas-md .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
@media (max-width: 991.98px) {
  .bootstrap-iso .offcanvas-lg {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {
  .bootstrap-iso .offcanvas-lg {
    transition: none;
  }
}
@media (max-width: 991.98px) {
  .bootstrap-iso .offcanvas-lg.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .bootstrap-iso .offcanvas-lg.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .bootstrap-iso .offcanvas-lg.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .bootstrap-iso .offcanvas-lg.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .bootstrap-iso .offcanvas-lg.showing,
  .bootstrap-iso .offcanvas-lg.show:not(.hiding) {
    transform: none;
  }
  .bootstrap-iso .offcanvas-lg.showing,
  .bootstrap-iso .offcanvas-lg.hiding,
  .bootstrap-iso .offcanvas-lg.show {
    visibility: visible;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .offcanvas-lg {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .bootstrap-iso .offcanvas-lg .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .offcanvas-lg .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
@media (max-width: 1199.98px) {
  .bootstrap-iso .offcanvas-xl {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {
  .bootstrap-iso .offcanvas-xl {
    transition: none;
  }
}
@media (max-width: 1199.98px) {
  .bootstrap-iso .offcanvas-xl.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .bootstrap-iso .offcanvas-xl.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .bootstrap-iso .offcanvas-xl.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .bootstrap-iso .offcanvas-xl.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .bootstrap-iso .offcanvas-xl.showing,
  .bootstrap-iso .offcanvas-xl.show:not(.hiding) {
    transform: none;
  }
  .bootstrap-iso .offcanvas-xl.showing,
  .bootstrap-iso .offcanvas-xl.hiding,
  .bootstrap-iso .offcanvas-xl.show {
    visibility: visible;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .offcanvas-xl {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .bootstrap-iso .offcanvas-xl .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .offcanvas-xl .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
@media (max-width: 1399.98px) {
  .bootstrap-iso .offcanvas-xxl {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {
  .bootstrap-iso .offcanvas-xxl {
    transition: none;
  }
}
@media (max-width: 1399.98px) {
  .bootstrap-iso .offcanvas-xxl.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .bootstrap-iso .offcanvas-xxl.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .bootstrap-iso .offcanvas-xxl.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .bootstrap-iso .offcanvas-xxl.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .bootstrap-iso .offcanvas-xxl.showing,
  .bootstrap-iso .offcanvas-xxl.show:not(.hiding) {
    transform: none;
  }
  .bootstrap-iso .offcanvas-xxl.showing,
  .bootstrap-iso .offcanvas-xxl.hiding,
  .bootstrap-iso .offcanvas-xxl.show {
    visibility: visible;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .offcanvas-xxl {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .bootstrap-iso .offcanvas-xxl .offcanvas-header {
    display: none;
  }
  .bootstrap-iso .offcanvas-xxl .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
.bootstrap-iso .offcanvas {
  position: fixed;
  bottom: 0;
  z-index: var(--bs-offcanvas-zindex);
  display: flex;
  flex-direction: column;
  max-width: 100%;
  color: var(--bs-offcanvas-color);
  visibility: hidden;
  background-color: var(--bs-offcanvas-bg);
  background-clip: padding-box;
  outline: 0;
  transition: var(--bs-offcanvas-transition);
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .offcanvas {
    transition: none;
  }
}
.bootstrap-iso .offcanvas.offcanvas-start {
  top: 0;
  left: 0;
  width: var(--bs-offcanvas-width);
  border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateX(-100%);
}
.bootstrap-iso .offcanvas.offcanvas-end {
  top: 0;
  right: 0;
  width: var(--bs-offcanvas-width);
  border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateX(100%);
}
.bootstrap-iso .offcanvas.offcanvas-top {
  top: 0;
  right: 0;
  left: 0;
  height: var(--bs-offcanvas-height);
  max-height: 100%;
  border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateY(-100%);
}
.bootstrap-iso .offcanvas.offcanvas-bottom {
  right: 0;
  left: 0;
  height: var(--bs-offcanvas-height);
  max-height: 100%;
  border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateY(100%);
}
.bootstrap-iso .offcanvas.showing,
.bootstrap-iso .offcanvas.show:not(.hiding) {
  transform: none;
}
.bootstrap-iso .offcanvas.showing,
.bootstrap-iso .offcanvas.hiding,
.bootstrap-iso .offcanvas.show {
  visibility: visible;
}
.bootstrap-iso .offcanvas-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1040;
  width: 100vw;
  height: 100vh;
  background-color: #000;
}
.bootstrap-iso .offcanvas-backdrop.fade {
  opacity: 0;
}
.bootstrap-iso .offcanvas-backdrop.show {
  opacity: 0.5;
}
.bootstrap-iso .offcanvas-header {
  display: flex;
  align-items: center;
  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);
}
.bootstrap-iso .offcanvas-header .btn-close {
  padding: calc(var(--bs-offcanvas-padding-y) * 0.5) calc(var(--bs-offcanvas-padding-x) * 0.5);
  margin: calc(-0.5 * var(--bs-offcanvas-padding-y)) calc(-0.5 * var(--bs-offcanvas-padding-x)) calc(-0.5 * var(--bs-offcanvas-padding-y)) auto;
}
.bootstrap-iso .offcanvas-title {
  margin-bottom: 0;
  line-height: var(--bs-offcanvas-title-line-height);
}
.bootstrap-iso .offcanvas-body {
  flex-grow: 1;
  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);
  overflow-y: auto;
}
.bootstrap-iso .placeholder {
  display: inline-block;
  min-height: 1em;
  vertical-align: middle;
  cursor: wait;
  background-color: currentcolor;
  opacity: 0.5;
}
.bootstrap-iso .placeholder.btn::before {
  display: inline-block;
  content: "";
}
.bootstrap-iso .placeholder-xs {
  min-height: 0.6em;
}
.bootstrap-iso .placeholder-sm {
  min-height: 0.8em;
}
.bootstrap-iso .placeholder-lg {
  min-height: 1.2em;
}
.bootstrap-iso .placeholder-glow .placeholder {
  animation: placeholder-glow 2s ease-in-out infinite;
}
@keyframes placeholder-glow {
  50% {
    opacity: 0.2;
  }
}
.bootstrap-iso .placeholder-wave {
  -webkit-mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
  mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
  -webkit-mask-size: 200% 100%;
  mask-size: 200% 100%;
  animation: placeholder-wave 2s linear infinite;
}
@keyframes placeholder-wave {
  100% {
    -webkit-mask-position: -200% 0%;
    mask-position: -200% 0%;
  }
}
.bootstrap-iso .clearfix::after {
  display: block;
  clear: both;
  content: "";
}
.bootstrap-iso .text-bg-primary {
  color: #fff !important;
  background-color: RGBA(var(--bs-primary-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-secondary {
  color: #fff !important;
  background-color: RGBA(var(--bs-secondary-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-success {
  color: #fff !important;
  background-color: RGBA(var(--bs-success-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-info {
  color: #000 !important;
  background-color: RGBA(var(--bs-info-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-warning {
  color: #000 !important;
  background-color: RGBA(var(--bs-warning-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-danger {
  color: #fff !important;
  background-color: RGBA(var(--bs-danger-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-light {
  color: #000 !important;
  background-color: RGBA(var(--bs-light-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .text-bg-dark {
  color: #fff !important;
  background-color: RGBA(var(--bs-dark-rgb), var(--bs-bg-opacity, 1)) !important;
}
.bootstrap-iso .link-primary {
  color: RGBA(var(--bs-primary-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-primary-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-primary-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-primary:hover,
.bootstrap-iso .link-primary:focus {
  color: RGBA(10, 88, 202, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(10, 88, 202, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(10, 88, 202, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-secondary {
  color: RGBA(var(--bs-secondary-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-secondary-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-secondary-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-secondary:hover,
.bootstrap-iso .link-secondary:focus {
  color: RGBA(86, 94, 100, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(86, 94, 100, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(86, 94, 100, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-success {
  color: RGBA(var(--bs-success-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-success-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-success-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-success:hover,
.bootstrap-iso .link-success:focus {
  color: RGBA(20, 108, 67, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(20, 108, 67, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(20, 108, 67, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-info {
  color: RGBA(var(--bs-info-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-info-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-info-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-info:hover,
.bootstrap-iso .link-info:focus {
  color: RGBA(61, 213, 243, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(61, 213, 243, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(61, 213, 243, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-warning {
  color: RGBA(var(--bs-warning-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-warning-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-warning-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-warning:hover,
.bootstrap-iso .link-warning:focus {
  color: RGBA(255, 205, 57, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(255, 205, 57, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(255, 205, 57, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-danger {
  color: RGBA(var(--bs-danger-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-danger-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-danger-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-danger:hover,
.bootstrap-iso .link-danger:focus {
  color: RGBA(176, 42, 55, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(176, 42, 55, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(176, 42, 55, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-light {
  color: RGBA(var(--bs-light-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-light-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-light-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-light:hover,
.bootstrap-iso .link-light:focus {
  color: RGBA(249, 250, 251, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(249, 250, 251, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(249, 250, 251, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-dark {
  color: RGBA(var(--bs-dark-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-dark-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-dark-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-dark:hover,
.bootstrap-iso .link-dark:focus {
  color: RGBA(26, 30, 33, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(26, 30, 33, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(26, 30, 33, var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-body-emphasis {
  color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-body-emphasis:hover,
.bootstrap-iso .link-body-emphasis:focus {
  color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-opacity, 0.75)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 0.75)) !important;
  text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 0.75)) !important;
}
.bootstrap-iso .focus-ring:focus {
  outline: 0;
  box-shadow: var(--bs-focus-ring-x, 0) var(--bs-focus-ring-y, 0) var(--bs-focus-ring-blur, 0) var(--bs-focus-ring-width) var(--bs-focus-ring-color);
}
.bootstrap-iso .icon-link {
  display: inline-flex;
  gap: 0.375rem;
  align-items: center;
  -webkit-text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-opacity, 0.5));
  text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-opacity, 0.5));
  text-underline-offset: 0.25em;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}
.bootstrap-iso .icon-link > .bi {
  flex-shrink: 0;
  width: 1em;
  height: 1em;
  fill: currentcolor;
  transition: 0.2s ease-in-out transform;
}
@media (prefers-reduced-motion: reduce) {
  .bootstrap-iso .icon-link > .bi {
    transition: none;
  }
}
.bootstrap-iso .icon-link-hover:hover > .bi,
.bootstrap-iso .icon-link-hover:focus-visible > .bi {
  transform: var(--bs-icon-link-transform, translate3d(0.25em, 0, 0));
}
.bootstrap-iso .ratio {
  position: relative;
  width: 100%;
}
.bootstrap-iso .ratio::before {
  display: block;
  padding-top: var(--bs-aspect-ratio);
  content: "";
}
.bootstrap-iso .ratio > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.bootstrap-iso .ratio-1x1 {
  --bs-aspect-ratio: 100%;
}
.bootstrap-iso .ratio-4x3 {
  --bs-aspect-ratio: 75%;
}
.bootstrap-iso .ratio-16x9 {
  --bs-aspect-ratio: 56.25%;
}
.bootstrap-iso .ratio-21x9 {
  --bs-aspect-ratio: 42.85714286%;
}
.bootstrap-iso .fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
}
.bootstrap-iso .fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1030;
}
.bootstrap-iso .sticky-top {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 1020;
}
.bootstrap-iso .sticky-bottom {
  position: -webkit-sticky;
  position: sticky;
  bottom: 0;
  z-index: 1020;
}
@media (min-width: 576px) {
  .bootstrap-iso .sticky-sm-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .bootstrap-iso .sticky-sm-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .sticky-md-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .bootstrap-iso .sticky-md-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .sticky-lg-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .bootstrap-iso .sticky-lg-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .sticky-xl-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .bootstrap-iso .sticky-xl-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .sticky-xxl-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .bootstrap-iso .sticky-xxl-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
.bootstrap-iso .hstack {
  display: flex;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
}
.bootstrap-iso .vstack {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  align-self: stretch;
}
.bootstrap-iso .visually-hidden,
.bootstrap-iso .visually-hidden-focusable:not(:focus):not(:focus-within) {
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}
.bootstrap-iso .visually-hidden:not(caption),
.bootstrap-iso .visually-hidden-focusable:not(:focus):not(:focus-within):not(caption) {
  position: absolute !important;
}
.bootstrap-iso .stretched-link::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  content: "";
}
.bootstrap-iso .text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.bootstrap-iso .vr {
  display: inline-block;
  align-self: stretch;
  width: var(--bs-border-width);
  min-height: 1em;
  background-color: currentcolor;
  opacity: 0.25;
}
.bootstrap-iso .align-baseline {
  vertical-align: baseline !important;
}
.bootstrap-iso .align-top {
  vertical-align: top !important;
}
.bootstrap-iso .align-middle {
  vertical-align: middle !important;
}
.bootstrap-iso .align-bottom {
  vertical-align: bottom !important;
}
.bootstrap-iso .align-text-bottom {
  vertical-align: text-bottom !important;
}
.bootstrap-iso .align-text-top {
  vertical-align: text-top !important;
}
.bootstrap-iso .float-start {
  float: left !important;
}
.bootstrap-iso .float-end {
  float: right !important;
}
.bootstrap-iso .float-none {
  float: none !important;
}
.bootstrap-iso .object-fit-contain {
  -o-object-fit: contain !important;
  object-fit: contain !important;
}
.bootstrap-iso .object-fit-cover {
  -o-object-fit: cover !important;
  object-fit: cover !important;
}
.bootstrap-iso .object-fit-fill {
  -o-object-fit: fill !important;
  object-fit: fill !important;
}
.bootstrap-iso .object-fit-scale {
  -o-object-fit: scale-down !important;
  object-fit: scale-down !important;
}
.bootstrap-iso .object-fit-none {
  -o-object-fit: none !important;
  object-fit: none !important;
}
.bootstrap-iso .opacity-0 {
  opacity: 0 !important;
}
.bootstrap-iso .opacity-25 {
  opacity: 0.25 !important;
}
.bootstrap-iso .opacity-50 {
  opacity: 0.5 !important;
}
.bootstrap-iso .opacity-75 {
  opacity: 0.75 !important;
}
.bootstrap-iso .opacity-100 {
  opacity: 1 !important;
}
.bootstrap-iso .overflow-auto {
  overflow: auto !important;
}
.bootstrap-iso .overflow-hidden {
  overflow: hidden !important;
}
.bootstrap-iso .overflow-visible {
  overflow: visible !important;
}
.bootstrap-iso .overflow-scroll {
  overflow: scroll !important;
}
.bootstrap-iso .overflow-x-auto {
  overflow-x: auto !important;
}
.bootstrap-iso .overflow-x-hidden {
  overflow-x: hidden !important;
}
.bootstrap-iso .overflow-x-visible {
  overflow-x: visible !important;
}
.bootstrap-iso .overflow-x-scroll {
  overflow-x: scroll !important;
}
.bootstrap-iso .overflow-y-auto {
  overflow-y: auto !important;
}
.bootstrap-iso .overflow-y-hidden {
  overflow-y: hidden !important;
}
.bootstrap-iso .overflow-y-visible {
  overflow-y: visible !important;
}
.bootstrap-iso .overflow-y-scroll {
  overflow-y: scroll !important;
}
.bootstrap-iso .d-inline {
  display: inline !important;
}
.bootstrap-iso .d-inline-block {
  display: inline-block !important;
}
.bootstrap-iso .d-block {
  display: block !important;
}
.bootstrap-iso .d-grid {
  display: grid !important;
}
.bootstrap-iso .d-inline-grid {
  display: inline-grid !important;
}
.bootstrap-iso .d-table {
  display: table !important;
}
.bootstrap-iso .d-table-row {
  display: table-row !important;
}
.bootstrap-iso .d-table-cell {
  display: table-cell !important;
}
.bootstrap-iso .d-flex {
  display: flex !important;
}
.bootstrap-iso .d-inline-flex {
  display: inline-flex !important;
}
.bootstrap-iso .d-none {
  display: none !important;
}
.bootstrap-iso .shadow {
  box-shadow: var(--bs-box-shadow) !important;
}
.bootstrap-iso .shadow-sm {
  box-shadow: var(--bs-box-shadow-sm) !important;
}
.bootstrap-iso .shadow-lg {
  box-shadow: var(--bs-box-shadow-lg) !important;
}
.bootstrap-iso .shadow-none {
  box-shadow: none !important;
}
.bootstrap-iso .focus-ring-primary {
  --bs-focus-ring-color: rgba(var(--bs-primary-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-secondary {
  --bs-focus-ring-color: rgba(var(--bs-secondary-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-success {
  --bs-focus-ring-color: rgba(var(--bs-success-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-info {
  --bs-focus-ring-color: rgba(var(--bs-info-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-warning {
  --bs-focus-ring-color: rgba(var(--bs-warning-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-danger {
  --bs-focus-ring-color: rgba(var(--bs-danger-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-light {
  --bs-focus-ring-color: rgba(var(--bs-light-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .focus-ring-dark {
  --bs-focus-ring-color: rgba(var(--bs-dark-rgb), var(--bs-focus-ring-opacity));
}
.bootstrap-iso .position-static {
  position: static !important;
}
.bootstrap-iso .position-relative {
  position: relative !important;
}
.bootstrap-iso .position-absolute {
  position: absolute !important;
}
.bootstrap-iso .position-fixed {
  position: fixed !important;
}
.bootstrap-iso .position-sticky {
  position: -webkit-sticky !important;
  position: sticky !important;
}
.bootstrap-iso .top-0 {
  top: 0 !important;
}
.bootstrap-iso .top-50 {
  top: 50% !important;
}
.bootstrap-iso .top-100 {
  top: 100% !important;
}
.bootstrap-iso .bottom-0 {
  bottom: 0 !important;
}
.bootstrap-iso .bottom-50 {
  bottom: 50% !important;
}
.bootstrap-iso .bottom-100 {
  bottom: 100% !important;
}
.bootstrap-iso .start-0 {
  left: 0 !important;
}
.bootstrap-iso .start-50 {
  left: 50% !important;
}
.bootstrap-iso .start-100 {
  left: 100% !important;
}
.bootstrap-iso .end-0 {
  right: 0 !important;
}
.bootstrap-iso .end-50 {
  right: 50% !important;
}
.bootstrap-iso .end-100 {
  right: 100% !important;
}
.bootstrap-iso .translate-middle {
  transform: translate(-50%, -50%) !important;
}
.bootstrap-iso .translate-middle-x {
  transform: translateX(-50%) !important;
}
.bootstrap-iso .translate-middle-y {
  transform: translateY(-50%) !important;
}
.bootstrap-iso .border {
  border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}
.bootstrap-iso .border-0 {
  border: 0 !important;
}
.bootstrap-iso .border-top {
  border-top: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}
.bootstrap-iso .border-top-0 {
  border-top: 0 !important;
}
.bootstrap-iso .border-end {
  border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}
.bootstrap-iso .border-end-0 {
  border-right: 0 !important;
}
.bootstrap-iso .border-bottom {
  border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}
.bootstrap-iso .border-bottom-0 {
  border-bottom: 0 !important;
}
.bootstrap-iso .border-start {
  border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}
.bootstrap-iso .border-start-0 {
  border-left: 0 !important;
}
.bootstrap-iso .border-primary {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-primary-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-secondary {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-secondary-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-success {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-info {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-info-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-warning {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-warning-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-danger {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-danger-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-light {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-light-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-dark {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-dark-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-black {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-black-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-white {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-white-rgb), var(--bs-border-opacity)) !important;
}
.bootstrap-iso .border-primary-subtle {
  border-color: var(--bs-primary-border-subtle) !important;
}
.bootstrap-iso .border-secondary-subtle {
  border-color: var(--bs-secondary-border-subtle) !important;
}
.bootstrap-iso .border-success-subtle {
  border-color: var(--bs-success-border-subtle) !important;
}
.bootstrap-iso .border-info-subtle {
  border-color: var(--bs-info-border-subtle) !important;
}
.bootstrap-iso .border-warning-subtle {
  border-color: var(--bs-warning-border-subtle) !important;
}
.bootstrap-iso .border-danger-subtle {
  border-color: var(--bs-danger-border-subtle) !important;
}
.bootstrap-iso .border-light-subtle {
  border-color: var(--bs-light-border-subtle) !important;
}
.bootstrap-iso .border-dark-subtle {
  border-color: var(--bs-dark-border-subtle) !important;
}
.bootstrap-iso .border-1 {
  border-width: 1px !important;
}
.bootstrap-iso .border-2 {
  border-width: 2px !important;
}
.bootstrap-iso .border-3 {
  border-width: 3px !important;
}
.bootstrap-iso .border-4 {
  border-width: 4px !important;
}
.bootstrap-iso .border-5 {
  border-width: 5px !important;
}
.bootstrap-iso .border-opacity-10 {
  --bs-border-opacity: 0.1;
}
.bootstrap-iso .border-opacity-25 {
  --bs-border-opacity: 0.25;
}
.bootstrap-iso .border-opacity-50 {
  --bs-border-opacity: 0.5;
}
.bootstrap-iso .border-opacity-75 {
  --bs-border-opacity: 0.75;
}
.bootstrap-iso .border-opacity-100 {
  --bs-border-opacity: 1;
}
.bootstrap-iso .w-25 {
  width: 25% !important;
}
.bootstrap-iso .w-50 {
  width: 50% !important;
}
.bootstrap-iso .w-75 {
  width: 75% !important;
}
.bootstrap-iso .w-100 {
  width: 100% !important;
}
.bootstrap-iso .w-auto {
  width: auto !important;
}
.bootstrap-iso .mw-100 {
  max-width: 100% !important;
}
.bootstrap-iso .vw-100 {
  width: 100vw !important;
}
.bootstrap-iso .min-vw-100 {
  min-width: 100vw !important;
}
.bootstrap-iso .h-25 {
  height: 25% !important;
}
.bootstrap-iso .h-50 {
  height: 50% !important;
}
.bootstrap-iso .h-75 {
  height: 75% !important;
}
.bootstrap-iso .h-100 {
  height: 100% !important;
}
.bootstrap-iso .h-auto {
  height: auto !important;
}
.bootstrap-iso .mh-100 {
  max-height: 100% !important;
}
.bootstrap-iso .vh-100 {
  height: 100vh !important;
}
.bootstrap-iso .min-vh-100 {
  min-height: 100vh !important;
}
.bootstrap-iso .flex-fill {
  flex: 1 1 auto !important;
}
.bootstrap-iso .flex-row {
  flex-direction: row !important;
}
.bootstrap-iso .flex-column {
  flex-direction: column !important;
}
.bootstrap-iso .flex-row-reverse {
  flex-direction: row-reverse !important;
}
.bootstrap-iso .flex-column-reverse {
  flex-direction: column-reverse !important;
}
.bootstrap-iso .flex-grow-0 {
  flex-grow: 0 !important;
}
.bootstrap-iso .flex-grow-1 {
  flex-grow: 1 !important;
}
.bootstrap-iso .flex-shrink-0 {
  flex-shrink: 0 !important;
}
.bootstrap-iso .flex-shrink-1 {
  flex-shrink: 1 !important;
}
.bootstrap-iso .flex-wrap {
  flex-wrap: wrap !important;
}
.bootstrap-iso .flex-nowrap {
  flex-wrap: nowrap !important;
}
.bootstrap-iso .flex-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}
.bootstrap-iso .justify-content-start {
  justify-content: flex-start !important;
}
.bootstrap-iso .justify-content-end {
  justify-content: flex-end !important;
}
.bootstrap-iso .justify-content-center {
  justify-content: center !important;
}
.bootstrap-iso .justify-content-between {
  justify-content: space-between !important;
}
.bootstrap-iso .justify-content-around {
  justify-content: space-around !important;
}
.bootstrap-iso .justify-content-evenly {
  justify-content: space-evenly !important;
}
.bootstrap-iso .align-items-start {
  align-items: flex-start !important;
}
.bootstrap-iso .align-items-end {
  align-items: flex-end !important;
}
.bootstrap-iso .align-items-center {
  align-items: center !important;
}
.bootstrap-iso .align-items-baseline {
  align-items: baseline !important;
}
.bootstrap-iso .align-items-stretch {
  align-items: stretch !important;
}
.bootstrap-iso .align-content-start {
  align-content: flex-start !important;
}
.bootstrap-iso .align-content-end {
  align-content: flex-end !important;
}
.bootstrap-iso .align-content-center {
  align-content: center !important;
}
.bootstrap-iso .align-content-between {
  align-content: space-between !important;
}
.bootstrap-iso .align-content-around {
  align-content: space-around !important;
}
.bootstrap-iso .align-content-stretch {
  align-content: stretch !important;
}
.bootstrap-iso .align-self-auto {
  align-self: auto !important;
}
.bootstrap-iso .align-self-start {
  align-self: flex-start !important;
}
.bootstrap-iso .align-self-end {
  align-self: flex-end !important;
}
.bootstrap-iso .align-self-center {
  align-self: center !important;
}
.bootstrap-iso .align-self-baseline {
  align-self: baseline !important;
}
.bootstrap-iso .align-self-stretch {
  align-self: stretch !important;
}
.bootstrap-iso .order-first {
  order: -1 !important;
}
.bootstrap-iso .order-0 {
  order: 0 !important;
}
.bootstrap-iso .order-1 {
  order: 1 !important;
}
.bootstrap-iso .order-2 {
  order: 2 !important;
}
.bootstrap-iso .order-3 {
  order: 3 !important;
}
.bootstrap-iso .order-4 {
  order: 4 !important;
}
.bootstrap-iso .order-5 {
  order: 5 !important;
}
.bootstrap-iso .order-last {
  order: 6 !important;
}
.bootstrap-iso .m-0 {
  margin: 0 !important;
}
.bootstrap-iso .m-1 {
  margin: 0.25rem !important;
}
.bootstrap-iso .m-2 {
  margin: 0.5rem !important;
}
.bootstrap-iso .m-3 {
  margin: 1rem !important;
}
.bootstrap-iso .m-4 {
  margin: 1.5rem !important;
}
.bootstrap-iso .m-5 {
  margin: 3rem !important;
}
.bootstrap-iso .m-auto {
  margin: auto !important;
}
.bootstrap-iso .mx-0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}
.bootstrap-iso .mx-1 {
  margin-right: 0.25rem !important;
  margin-left: 0.25rem !important;
}
.bootstrap-iso .mx-2 {
  margin-right: 0.5rem !important;
  margin-left: 0.5rem !important;
}
.bootstrap-iso .mx-3 {
  margin-right: 1rem !important;
  margin-left: 1rem !important;
}
.bootstrap-iso .mx-4 {
  margin-right: 1.5rem !important;
  margin-left: 1.5rem !important;
}
.bootstrap-iso .mx-5 {
  margin-right: 3rem !important;
  margin-left: 3rem !important;
}
.bootstrap-iso .mx-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}
.bootstrap-iso .my-0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}
.bootstrap-iso .my-1 {
  margin-top: 0.25rem !important;
  margin-bottom: 0.25rem !important;
}
.bootstrap-iso .my-2 {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}
.bootstrap-iso .my-3 {
  margin-top: 1rem !important;
  margin-bottom: 1rem !important;
}
.bootstrap-iso .my-4 {
  margin-top: 1.5rem !important;
  margin-bottom: 1.5rem !important;
}
.bootstrap-iso .my-5 {
  margin-top: 3rem !important;
  margin-bottom: 3rem !important;
}
.bootstrap-iso .my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}
.bootstrap-iso .mt-0 {
  margin-top: 0 !important;
}
.bootstrap-iso .mt-1 {
  margin-top: 0.25rem !important;
}
.bootstrap-iso .mt-2 {
  margin-top: 0.5rem !important;
}
.bootstrap-iso .mt-3 {
  margin-top: 1rem !important;
}
.bootstrap-iso .mt-4 {
  margin-top: 1.5rem !important;
}
.bootstrap-iso .mt-5 {
  margin-top: 3rem !important;
}
.bootstrap-iso .mt-auto {
  margin-top: auto !important;
}
.bootstrap-iso .me-0 {
  margin-right: 0 !important;
}
.bootstrap-iso .me-1 {
  margin-right: 0.25rem !important;
}
.bootstrap-iso .me-2 {
  margin-right: 0.5rem !important;
}
.bootstrap-iso .me-3 {
  margin-right: 1rem !important;
}
.bootstrap-iso .me-4 {
  margin-right: 1.5rem !important;
}
.bootstrap-iso .me-5 {
  margin-right: 3rem !important;
}
.bootstrap-iso .me-auto {
  margin-right: auto !important;
}
.bootstrap-iso .mb-0 {
  margin-bottom: 0 !important;
}
.bootstrap-iso .mb-1 {
  margin-bottom: 0.25rem !important;
}
.bootstrap-iso .mb-2 {
  margin-bottom: 0.5rem !important;
}
.bootstrap-iso .mb-3 {
  margin-bottom: 1rem !important;
}
.bootstrap-iso .mb-4 {
  margin-bottom: 1.5rem !important;
}
.bootstrap-iso .mb-5 {
  margin-bottom: 3rem !important;
}
.bootstrap-iso .mb-auto {
  margin-bottom: auto !important;
}
.bootstrap-iso .ms-0 {
  margin-left: 0 !important;
}
.bootstrap-iso .ms-1 {
  margin-left: 0.25rem !important;
}
.bootstrap-iso .ms-2 {
  margin-left: 0.5rem !important;
}
.bootstrap-iso .ms-3 {
  margin-left: 1rem !important;
}
.bootstrap-iso .ms-4 {
  margin-left: 1.5rem !important;
}
.bootstrap-iso .ms-5 {
  margin-left: 3rem !important;
}
.bootstrap-iso .ms-auto {
  margin-left: auto !important;
}
.bootstrap-iso .p-0 {
  padding: 0 !important;
}
.bootstrap-iso .p-1 {
  padding: 0.25rem !important;
}
.bootstrap-iso .p-2 {
  padding: 0.5rem !important;
}
.bootstrap-iso .p-3 {
  padding: 1rem !important;
}
.bootstrap-iso .p-4 {
  padding: 1.5rem !important;
}
.bootstrap-iso .p-5 {
  padding: 3rem !important;
}
.bootstrap-iso .px-0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}
.bootstrap-iso .px-1 {
  padding-right: 0.25rem !important;
  padding-left: 0.25rem !important;
}
.bootstrap-iso .px-2 {
  padding-right: 0.5rem !important;
  padding-left: 0.5rem !important;
}
.bootstrap-iso .px-3 {
  padding-right: 1rem !important;
  padding-left: 1rem !important;
}
.bootstrap-iso .px-4 {
  padding-right: 1.5rem !important;
  padding-left: 1.5rem !important;
}
.bootstrap-iso .px-5 {
  padding-right: 3rem !important;
  padding-left: 3rem !important;
}
.bootstrap-iso .py-0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}
.bootstrap-iso .py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}
.bootstrap-iso .py-2 {
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}
.bootstrap-iso .py-3 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}
.bootstrap-iso .py-4 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}
.bootstrap-iso .py-5 {
  padding-top: 3rem !important;
  padding-bottom: 3rem !important;
}
.bootstrap-iso .pt-0 {
  padding-top: 0 !important;
}
.bootstrap-iso .pt-1 {
  padding-top: 0.25rem !important;
}
.bootstrap-iso .pt-2 {
  padding-top: 0.5rem !important;
}
.bootstrap-iso .pt-3 {
  padding-top: 1rem !important;
}
.bootstrap-iso .pt-4 {
  padding-top: 1.5rem !important;
}
.bootstrap-iso .pt-5 {
  padding-top: 3rem !important;
}
.bootstrap-iso .pe-0 {
  padding-right: 0 !important;
}
.bootstrap-iso .pe-1 {
  padding-right: 0.25rem !important;
}
.bootstrap-iso .pe-2 {
  padding-right: 0.5rem !important;
}
.bootstrap-iso .pe-3 {
  padding-right: 1rem !important;
}
.bootstrap-iso .pe-4 {
  padding-right: 1.5rem !important;
}
.bootstrap-iso .pe-5 {
  padding-right: 3rem !important;
}
.bootstrap-iso .pb-0 {
  padding-bottom: 0 !important;
}
.bootstrap-iso .pb-1 {
  padding-bottom: 0.25rem !important;
}
.bootstrap-iso .pb-2 {
  padding-bottom: 0.5rem !important;
}
.bootstrap-iso .pb-3 {
  padding-bottom: 1rem !important;
}
.bootstrap-iso .pb-4 {
  padding-bottom: 1.5rem !important;
}
.bootstrap-iso .pb-5 {
  padding-bottom: 3rem !important;
}
.bootstrap-iso .ps-0 {
  padding-left: 0 !important;
}
.bootstrap-iso .ps-1 {
  padding-left: 0.25rem !important;
}
.bootstrap-iso .ps-2 {
  padding-left: 0.5rem !important;
}
.bootstrap-iso .ps-3 {
  padding-left: 1rem !important;
}
.bootstrap-iso .ps-4 {
  padding-left: 1.5rem !important;
}
.bootstrap-iso .ps-5 {
  padding-left: 3rem !important;
}
.bootstrap-iso .gap-0 {
  gap: 0 !important;
}
.bootstrap-iso .gap-1 {
  gap: 0.25rem !important;
}
.bootstrap-iso .gap-2 {
  gap: 0.5rem !important;
}
.bootstrap-iso .gap-3 {
  gap: 1rem !important;
}
.bootstrap-iso .gap-4 {
  gap: 1.5rem !important;
}
.bootstrap-iso .gap-5 {
  gap: 3rem !important;
}
.bootstrap-iso .row-gap-0 {
  row-gap: 0 !important;
}
.bootstrap-iso .row-gap-1 {
  row-gap: 0.25rem !important;
}
.bootstrap-iso .row-gap-2 {
  row-gap: 0.5rem !important;
}
.bootstrap-iso .row-gap-3 {
  row-gap: 1rem !important;
}
.bootstrap-iso .row-gap-4 {
  row-gap: 1.5rem !important;
}
.bootstrap-iso .row-gap-5 {
  row-gap: 3rem !important;
}
.bootstrap-iso .column-gap-0 {
  -moz-column-gap: 0 !important;
  column-gap: 0 !important;
}
.bootstrap-iso .column-gap-1 {
  -moz-column-gap: 0.25rem !important;
  column-gap: 0.25rem !important;
}
.bootstrap-iso .column-gap-2 {
  -moz-column-gap: 0.5rem !important;
  column-gap: 0.5rem !important;
}
.bootstrap-iso .column-gap-3 {
  -moz-column-gap: 1rem !important;
  column-gap: 1rem !important;
}
.bootstrap-iso .column-gap-4 {
  -moz-column-gap: 1.5rem !important;
  column-gap: 1.5rem !important;
}
.bootstrap-iso .column-gap-5 {
  -moz-column-gap: 3rem !important;
  column-gap: 3rem !important;
}
.bootstrap-iso .font-monospace {
  font-family: var(--bs-font-monospace) !important;
}
.bootstrap-iso .fs-1 {
  font-size: calc(1.375rem + 1.5vw) !important;
}
.bootstrap-iso .fs-2 {
  font-size: calc(1.325rem + 0.9vw) !important;
}
.bootstrap-iso .fs-3 {
  font-size: calc(1.3rem + 0.6vw) !important;
}
.bootstrap-iso .fs-4 {
  font-size: calc(1.275rem + 0.3vw) !important;
}
.bootstrap-iso .fs-5 {
  font-size: 1.25rem !important;
}
.bootstrap-iso .fs-6 {
  font-size: 1rem !important;
}
.bootstrap-iso .fst-italic {
  font-style: italic !important;
}
.bootstrap-iso .fst-normal {
  font-style: normal !important;
}
.bootstrap-iso .fw-lighter {
  font-weight: lighter !important;
}
.bootstrap-iso .fw-light {
  font-weight: 300 !important;
}
.bootstrap-iso .fw-normal {
  font-weight: 400 !important;
}
.bootstrap-iso .fw-medium {
  font-weight: 500 !important;
}
.bootstrap-iso .fw-semibold {
  font-weight: 600 !important;
}
.bootstrap-iso .fw-bold {
  font-weight: 700 !important;
}
.bootstrap-iso .fw-bolder {
  font-weight: bolder !important;
}
.bootstrap-iso .lh-1 {
  line-height: 1 !important;
}
.bootstrap-iso .lh-sm {
  line-height: 1.25 !important;
}
.bootstrap-iso .lh-base {
  line-height: 1.5 !important;
}
.bootstrap-iso .lh-lg {
  line-height: 2 !important;
}
.bootstrap-iso .text-start {
  text-align: left !important;
}
.bootstrap-iso .text-end {
  text-align: right !important;
}
.bootstrap-iso .text-center {
  text-align: center !important;
}
.bootstrap-iso .text-decoration-none {
  text-decoration: none !important;
}
.bootstrap-iso .text-decoration-underline {
  text-decoration: underline !important;
}
.bootstrap-iso .text-decoration-line-through {
  text-decoration: line-through !important;
}
.bootstrap-iso .text-lowercase {
  text-transform: lowercase !important;
}
.bootstrap-iso .text-uppercase {
  text-transform: uppercase !important;
}
.bootstrap-iso .text-capitalize {
  text-transform: capitalize !important;
}
.bootstrap-iso .text-wrap {
  white-space: normal !important;
}
.bootstrap-iso .text-nowrap {
  white-space: nowrap !important;
}
.bootstrap-iso .text-break {
  word-wrap: break-word !important;
  word-break: break-word !important;
}
.bootstrap-iso .text-primary {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-secondary {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-success {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-success-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-info {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-info-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-warning {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-warning-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-danger {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-danger-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-light {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-dark {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-dark-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-black {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-black-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-white {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-body {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-body-color-rgb), var(--bs-text-opacity)) !important;
}
.bootstrap-iso .text-muted {
  --bs-text-opacity: 1;
  color: var(--bs-secondary-color) !important;
}
.bootstrap-iso .text-black-50 {
  --bs-text-opacity: 1;
  color: rgba(0, 0, 0, 0.5) !important;
}
.bootstrap-iso .text-white-50 {
  --bs-text-opacity: 1;
  color: rgba(255, 255, 255, 0.5) !important;
}
.bootstrap-iso .text-body-secondary {
  --bs-text-opacity: 1;
  color: var(--bs-secondary-color) !important;
}
.bootstrap-iso .text-body-tertiary {
  --bs-text-opacity: 1;
  color: var(--bs-tertiary-color) !important;
}
.bootstrap-iso .text-body-emphasis {
  --bs-text-opacity: 1;
  color: var(--bs-emphasis-color) !important;
}
.bootstrap-iso .text-reset {
  --bs-text-opacity: 1;
  color: inherit !important;
}
.bootstrap-iso .text-opacity-25 {
  --bs-text-opacity: 0.25;
}
.bootstrap-iso .text-opacity-50 {
  --bs-text-opacity: 0.5;
}
.bootstrap-iso .text-opacity-75 {
  --bs-text-opacity: 0.75;
}
.bootstrap-iso .text-opacity-100 {
  --bs-text-opacity: 1;
}
.bootstrap-iso .text-primary-emphasis {
  color: var(--bs-primary-text-emphasis) !important;
}
.bootstrap-iso .text-secondary-emphasis {
  color: var(--bs-secondary-text-emphasis) !important;
}
.bootstrap-iso .text-success-emphasis {
  color: var(--bs-success-text-emphasis) !important;
}
.bootstrap-iso .text-info-emphasis {
  color: var(--bs-info-text-emphasis) !important;
}
.bootstrap-iso .text-warning-emphasis {
  color: var(--bs-warning-text-emphasis) !important;
}
.bootstrap-iso .text-danger-emphasis {
  color: var(--bs-danger-text-emphasis) !important;
}
.bootstrap-iso .text-light-emphasis {
  color: var(--bs-light-text-emphasis) !important;
}
.bootstrap-iso .text-dark-emphasis {
  color: var(--bs-dark-text-emphasis) !important;
}
.bootstrap-iso .link-opacity-10 {
  --bs-link-opacity: 0.1;
}
.bootstrap-iso .link-opacity-10-hover:hover {
  --bs-link-opacity: 0.1;
}
.bootstrap-iso .link-opacity-25 {
  --bs-link-opacity: 0.25;
}
.bootstrap-iso .link-opacity-25-hover:hover {
  --bs-link-opacity: 0.25;
}
.bootstrap-iso .link-opacity-50 {
  --bs-link-opacity: 0.5;
}
.bootstrap-iso .link-opacity-50-hover:hover {
  --bs-link-opacity: 0.5;
}
.bootstrap-iso .link-opacity-75 {
  --bs-link-opacity: 0.75;
}
.bootstrap-iso .link-opacity-75-hover:hover {
  --bs-link-opacity: 0.75;
}
.bootstrap-iso .link-opacity-100 {
  --bs-link-opacity: 1;
}
.bootstrap-iso .link-opacity-100-hover:hover {
  --bs-link-opacity: 1;
}
.bootstrap-iso .link-offset-1 {
  text-underline-offset: 0.125em !important;
}
.bootstrap-iso .link-offset-1-hover:hover {
  text-underline-offset: 0.125em !important;
}
.bootstrap-iso .link-offset-2 {
  text-underline-offset: 0.25em !important;
}
.bootstrap-iso .link-offset-2-hover:hover {
  text-underline-offset: 0.25em !important;
}
.bootstrap-iso .link-offset-3 {
  text-underline-offset: 0.375em !important;
}
.bootstrap-iso .link-offset-3-hover:hover {
  text-underline-offset: 0.375em !important;
}
.bootstrap-iso .link-underline-primary {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-primary-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-primary-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-secondary {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-secondary-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-secondary-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-success {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-success-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-success-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-info {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-info-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-info-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-warning {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-warning-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-warning-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-danger {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-danger-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-danger-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-light {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-light-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-light-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline-dark {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-dark-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-dark-rgb), var(--bs-link-underline-opacity)) !important;
}
.bootstrap-iso .link-underline {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.bootstrap-iso .link-underline-opacity-0 {
  --bs-link-underline-opacity: 0;
}
.bootstrap-iso .link-underline-opacity-0-hover:hover {
  --bs-link-underline-opacity: 0;
}
.bootstrap-iso .link-underline-opacity-10 {
  --bs-link-underline-opacity: 0.1;
}
.bootstrap-iso .link-underline-opacity-10-hover:hover {
  --bs-link-underline-opacity: 0.1;
}
.bootstrap-iso .link-underline-opacity-25 {
  --bs-link-underline-opacity: 0.25;
}
.bootstrap-iso .link-underline-opacity-25-hover:hover {
  --bs-link-underline-opacity: 0.25;
}
.bootstrap-iso .link-underline-opacity-50 {
  --bs-link-underline-opacity: 0.5;
}
.bootstrap-iso .link-underline-opacity-50-hover:hover {
  --bs-link-underline-opacity: 0.5;
}
.bootstrap-iso .link-underline-opacity-75 {
  --bs-link-underline-opacity: 0.75;
}
.bootstrap-iso .link-underline-opacity-75-hover:hover {
  --bs-link-underline-opacity: 0.75;
}
.bootstrap-iso .link-underline-opacity-100 {
  --bs-link-underline-opacity: 1;
}
.bootstrap-iso .link-underline-opacity-100-hover:hover {
  --bs-link-underline-opacity: 1;
}
.bootstrap-iso .bg-primary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-secondary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-success {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-info {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-info-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-warning {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-warning-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-danger {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-danger-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-light {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-light-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-dark {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-black {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-black-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-white {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-white-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-body {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-body-bg-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-transparent {
  --bs-bg-opacity: 1;
  background-color: transparent !important;
}
.bootstrap-iso .bg-body-secondary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-secondary-bg-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-body-tertiary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-tertiary-bg-rgb), var(--bs-bg-opacity)) !important;
}
.bootstrap-iso .bg-opacity-10 {
  --bs-bg-opacity: 0.1;
}
.bootstrap-iso .bg-opacity-25 {
  --bs-bg-opacity: 0.25;
}
.bootstrap-iso .bg-opacity-50 {
  --bs-bg-opacity: 0.5;
}
.bootstrap-iso .bg-opacity-75 {
  --bs-bg-opacity: 0.75;
}
.bootstrap-iso .bg-opacity-100 {
  --bs-bg-opacity: 1;
}
.bootstrap-iso .bg-primary-subtle {
  background-color: var(--bs-primary-bg-subtle) !important;
}
.bootstrap-iso .bg-secondary-subtle {
  background-color: var(--bs-secondary-bg-subtle) !important;
}
.bootstrap-iso .bg-success-subtle {
  background-color: var(--bs-success-bg-subtle) !important;
}
.bootstrap-iso .bg-info-subtle {
  background-color: var(--bs-info-bg-subtle) !important;
}
.bootstrap-iso .bg-warning-subtle {
  background-color: var(--bs-warning-bg-subtle) !important;
}
.bootstrap-iso .bg-danger-subtle {
  background-color: var(--bs-danger-bg-subtle) !important;
}
.bootstrap-iso .bg-light-subtle {
  background-color: var(--bs-light-bg-subtle) !important;
}
.bootstrap-iso .bg-dark-subtle {
  background-color: var(--bs-dark-bg-subtle) !important;
}
.bootstrap-iso .bg-gradient {
  background-image: var(--bs-gradient) !important;
}
.bootstrap-iso .user-select-all {
  -webkit-user-select: all !important;
  -moz-user-select: all !important;
  user-select: all !important;
}
.bootstrap-iso .user-select-auto {
  -webkit-user-select: auto !important;
  -moz-user-select: auto !important;
  user-select: auto !important;
}
.bootstrap-iso .user-select-none {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  user-select: none !important;
}
.bootstrap-iso .pe-none {
  pointer-events: none !important;
}
.bootstrap-iso .pe-auto {
  pointer-events: auto !important;
}
.bootstrap-iso .rounded {
  border-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-0 {
  border-radius: 0 !important;
}
.bootstrap-iso .rounded-1 {
  border-radius: var(--bs-border-radius-sm) !important;
}
.bootstrap-iso .rounded-2 {
  border-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-3 {
  border-radius: var(--bs-border-radius-lg) !important;
}
.bootstrap-iso .rounded-4 {
  border-radius: var(--bs-border-radius-xl) !important;
}
.bootstrap-iso .rounded-5 {
  border-radius: var(--bs-border-radius-xxl) !important;
}
.bootstrap-iso .rounded-circle {
  border-radius: 50% !important;
}
.bootstrap-iso .rounded-pill {
  border-radius: var(--bs-border-radius-pill) !important;
}
.bootstrap-iso .rounded-top {
  border-top-left-radius: var(--bs-border-radius) !important;
  border-top-right-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-top-0 {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}
.bootstrap-iso .rounded-top-1 {
  border-top-left-radius: var(--bs-border-radius-sm) !important;
  border-top-right-radius: var(--bs-border-radius-sm) !important;
}
.bootstrap-iso .rounded-top-2 {
  border-top-left-radius: var(--bs-border-radius) !important;
  border-top-right-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-top-3 {
  border-top-left-radius: var(--bs-border-radius-lg) !important;
  border-top-right-radius: var(--bs-border-radius-lg) !important;
}
.bootstrap-iso .rounded-top-4 {
  border-top-left-radius: var(--bs-border-radius-xl) !important;
  border-top-right-radius: var(--bs-border-radius-xl) !important;
}
.bootstrap-iso .rounded-top-5 {
  border-top-left-radius: var(--bs-border-radius-xxl) !important;
  border-top-right-radius: var(--bs-border-radius-xxl) !important;
}
.bootstrap-iso .rounded-top-circle {
  border-top-left-radius: 50% !important;
  border-top-right-radius: 50% !important;
}
.bootstrap-iso .rounded-top-pill {
  border-top-left-radius: var(--bs-border-radius-pill) !important;
  border-top-right-radius: var(--bs-border-radius-pill) !important;
}
.bootstrap-iso .rounded-end {
  border-top-right-radius: var(--bs-border-radius) !important;
  border-bottom-right-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-end-0 {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
.bootstrap-iso .rounded-end-1 {
  border-top-right-radius: var(--bs-border-radius-sm) !important;
  border-bottom-right-radius: var(--bs-border-radius-sm) !important;
}
.bootstrap-iso .rounded-end-2 {
  border-top-right-radius: var(--bs-border-radius) !important;
  border-bottom-right-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-end-3 {
  border-top-right-radius: var(--bs-border-radius-lg) !important;
  border-bottom-right-radius: var(--bs-border-radius-lg) !important;
}
.bootstrap-iso .rounded-end-4 {
  border-top-right-radius: var(--bs-border-radius-xl) !important;
  border-bottom-right-radius: var(--bs-border-radius-xl) !important;
}
.bootstrap-iso .rounded-end-5 {
  border-top-right-radius: var(--bs-border-radius-xxl) !important;
  border-bottom-right-radius: var(--bs-border-radius-xxl) !important;
}
.bootstrap-iso .rounded-end-circle {
  border-top-right-radius: 50% !important;
  border-bottom-right-radius: 50% !important;
}
.bootstrap-iso .rounded-end-pill {
  border-top-right-radius: var(--bs-border-radius-pill) !important;
  border-bottom-right-radius: var(--bs-border-radius-pill) !important;
}
.bootstrap-iso .rounded-bottom {
  border-bottom-right-radius: var(--bs-border-radius) !important;
  border-bottom-left-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-bottom-0 {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}
.bootstrap-iso .rounded-bottom-1 {
  border-bottom-right-radius: var(--bs-border-radius-sm) !important;
  border-bottom-left-radius: var(--bs-border-radius-sm) !important;
}
.bootstrap-iso .rounded-bottom-2 {
  border-bottom-right-radius: var(--bs-border-radius) !important;
  border-bottom-left-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-bottom-3 {
  border-bottom-right-radius: var(--bs-border-radius-lg) !important;
  border-bottom-left-radius: var(--bs-border-radius-lg) !important;
}
.bootstrap-iso .rounded-bottom-4 {
  border-bottom-right-radius: var(--bs-border-radius-xl) !important;
  border-bottom-left-radius: var(--bs-border-radius-xl) !important;
}
.bootstrap-iso .rounded-bottom-5 {
  border-bottom-right-radius: var(--bs-border-radius-xxl) !important;
  border-bottom-left-radius: var(--bs-border-radius-xxl) !important;
}
.bootstrap-iso .rounded-bottom-circle {
  border-bottom-right-radius: 50% !important;
  border-bottom-left-radius: 50% !important;
}
.bootstrap-iso .rounded-bottom-pill {
  border-bottom-right-radius: var(--bs-border-radius-pill) !important;
  border-bottom-left-radius: var(--bs-border-radius-pill) !important;
}
.bootstrap-iso .rounded-start {
  border-bottom-left-radius: var(--bs-border-radius) !important;
  border-top-left-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-start-0 {
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
}
.bootstrap-iso .rounded-start-1 {
  border-bottom-left-radius: var(--bs-border-radius-sm) !important;
  border-top-left-radius: var(--bs-border-radius-sm) !important;
}
.bootstrap-iso .rounded-start-2 {
  border-bottom-left-radius: var(--bs-border-radius) !important;
  border-top-left-radius: var(--bs-border-radius) !important;
}
.bootstrap-iso .rounded-start-3 {
  border-bottom-left-radius: var(--bs-border-radius-lg) !important;
  border-top-left-radius: var(--bs-border-radius-lg) !important;
}
.bootstrap-iso .rounded-start-4 {
  border-bottom-left-radius: var(--bs-border-radius-xl) !important;
  border-top-left-radius: var(--bs-border-radius-xl) !important;
}
.bootstrap-iso .rounded-start-5 {
  border-bottom-left-radius: var(--bs-border-radius-xxl) !important;
  border-top-left-radius: var(--bs-border-radius-xxl) !important;
}
.bootstrap-iso .rounded-start-circle {
  border-bottom-left-radius: 50% !important;
  border-top-left-radius: 50% !important;
}
.bootstrap-iso .rounded-start-pill {
  border-bottom-left-radius: var(--bs-border-radius-pill) !important;
  border-top-left-radius: var(--bs-border-radius-pill) !important;
}
.bootstrap-iso .visible {
  visibility: visible !important;
}
.bootstrap-iso .invisible {
  visibility: hidden !important;
}
.bootstrap-iso .z-n1 {
  z-index: -1 !important;
}
.bootstrap-iso .z-0 {
  z-index: 0 !important;
}
.bootstrap-iso .z-1 {
  z-index: 1 !important;
}
.bootstrap-iso .z-2 {
  z-index: 2 !important;
}
.bootstrap-iso .z-3 {
  z-index: 3 !important;
}
@media (min-width: 576px) {
  .bootstrap-iso .float-sm-start {
    float: left !important;
  }
  .bootstrap-iso .float-sm-end {
    float: right !important;
  }
  .bootstrap-iso .float-sm-none {
    float: none !important;
  }
  .bootstrap-iso .object-fit-sm-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .bootstrap-iso .object-fit-sm-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .bootstrap-iso .object-fit-sm-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .bootstrap-iso .object-fit-sm-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .bootstrap-iso .object-fit-sm-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .bootstrap-iso .d-sm-inline {
    display: inline !important;
  }
  .bootstrap-iso .d-sm-inline-block {
    display: inline-block !important;
  }
  .bootstrap-iso .d-sm-block {
    display: block !important;
  }
  .bootstrap-iso .d-sm-grid {
    display: grid !important;
  }
  .bootstrap-iso .d-sm-inline-grid {
    display: inline-grid !important;
  }
  .bootstrap-iso .d-sm-table {
    display: table !important;
  }
  .bootstrap-iso .d-sm-table-row {
    display: table-row !important;
  }
  .bootstrap-iso .d-sm-table-cell {
    display: table-cell !important;
  }
  .bootstrap-iso .d-sm-flex {
    display: flex !important;
  }
  .bootstrap-iso .d-sm-inline-flex {
    display: inline-flex !important;
  }
  .bootstrap-iso .d-sm-none {
    display: none !important;
  }
  .bootstrap-iso .flex-sm-fill {
    flex: 1 1 auto !important;
  }
  .bootstrap-iso .flex-sm-row {
    flex-direction: row !important;
  }
  .bootstrap-iso .flex-sm-column {
    flex-direction: column !important;
  }
  .bootstrap-iso .flex-sm-row-reverse {
    flex-direction: row-reverse !important;
  }
  .bootstrap-iso .flex-sm-column-reverse {
    flex-direction: column-reverse !important;
  }
  .bootstrap-iso .flex-sm-grow-0 {
    flex-grow: 0 !important;
  }
  .bootstrap-iso .flex-sm-grow-1 {
    flex-grow: 1 !important;
  }
  .bootstrap-iso .flex-sm-shrink-0 {
    flex-shrink: 0 !important;
  }
  .bootstrap-iso .flex-sm-shrink-1 {
    flex-shrink: 1 !important;
  }
  .bootstrap-iso .flex-sm-wrap {
    flex-wrap: wrap !important;
  }
  .bootstrap-iso .flex-sm-nowrap {
    flex-wrap: nowrap !important;
  }
  .bootstrap-iso .flex-sm-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .bootstrap-iso .justify-content-sm-start {
    justify-content: flex-start !important;
  }
  .bootstrap-iso .justify-content-sm-end {
    justify-content: flex-end !important;
  }
  .bootstrap-iso .justify-content-sm-center {
    justify-content: center !important;
  }
  .bootstrap-iso .justify-content-sm-between {
    justify-content: space-between !important;
  }
  .bootstrap-iso .justify-content-sm-around {
    justify-content: space-around !important;
  }
  .bootstrap-iso .justify-content-sm-evenly {
    justify-content: space-evenly !important;
  }
  .bootstrap-iso .align-items-sm-start {
    align-items: flex-start !important;
  }
  .bootstrap-iso .align-items-sm-end {
    align-items: flex-end !important;
  }
  .bootstrap-iso .align-items-sm-center {
    align-items: center !important;
  }
  .bootstrap-iso .align-items-sm-baseline {
    align-items: baseline !important;
  }
  .bootstrap-iso .align-items-sm-stretch {
    align-items: stretch !important;
  }
  .bootstrap-iso .align-content-sm-start {
    align-content: flex-start !important;
  }
  .bootstrap-iso .align-content-sm-end {
    align-content: flex-end !important;
  }
  .bootstrap-iso .align-content-sm-center {
    align-content: center !important;
  }
  .bootstrap-iso .align-content-sm-between {
    align-content: space-between !important;
  }
  .bootstrap-iso .align-content-sm-around {
    align-content: space-around !important;
  }
  .bootstrap-iso .align-content-sm-stretch {
    align-content: stretch !important;
  }
  .bootstrap-iso .align-self-sm-auto {
    align-self: auto !important;
  }
  .bootstrap-iso .align-self-sm-start {
    align-self: flex-start !important;
  }
  .bootstrap-iso .align-self-sm-end {
    align-self: flex-end !important;
  }
  .bootstrap-iso .align-self-sm-center {
    align-self: center !important;
  }
  .bootstrap-iso .align-self-sm-baseline {
    align-self: baseline !important;
  }
  .bootstrap-iso .align-self-sm-stretch {
    align-self: stretch !important;
  }
  .bootstrap-iso .order-sm-first {
    order: -1 !important;
  }
  .bootstrap-iso .order-sm-0 {
    order: 0 !important;
  }
  .bootstrap-iso .order-sm-1 {
    order: 1 !important;
  }
  .bootstrap-iso .order-sm-2 {
    order: 2 !important;
  }
  .bootstrap-iso .order-sm-3 {
    order: 3 !important;
  }
  .bootstrap-iso .order-sm-4 {
    order: 4 !important;
  }
  .bootstrap-iso .order-sm-5 {
    order: 5 !important;
  }
  .bootstrap-iso .order-sm-last {
    order: 6 !important;
  }
  .bootstrap-iso .m-sm-0 {
    margin: 0 !important;
  }
  .bootstrap-iso .m-sm-1 {
    margin: 0.25rem !important;
  }
  .bootstrap-iso .m-sm-2 {
    margin: 0.5rem !important;
  }
  .bootstrap-iso .m-sm-3 {
    margin: 1rem !important;
  }
  .bootstrap-iso .m-sm-4 {
    margin: 1.5rem !important;
  }
  .bootstrap-iso .m-sm-5 {
    margin: 3rem !important;
  }
  .bootstrap-iso .m-sm-auto {
    margin: auto !important;
  }
  .bootstrap-iso .mx-sm-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .bootstrap-iso .mx-sm-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .mx-sm-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .mx-sm-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .bootstrap-iso .mx-sm-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .mx-sm-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .bootstrap-iso .mx-sm-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .bootstrap-iso .my-sm-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .my-sm-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .my-sm-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .my-sm-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .my-sm-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .my-sm-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .my-sm-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .bootstrap-iso .mt-sm-0 {
    margin-top: 0 !important;
  }
  .bootstrap-iso .mt-sm-1 {
    margin-top: 0.25rem !important;
  }
  .bootstrap-iso .mt-sm-2 {
    margin-top: 0.5rem !important;
  }
  .bootstrap-iso .mt-sm-3 {
    margin-top: 1rem !important;
  }
  .bootstrap-iso .mt-sm-4 {
    margin-top: 1.5rem !important;
  }
  .bootstrap-iso .mt-sm-5 {
    margin-top: 3rem !important;
  }
  .bootstrap-iso .mt-sm-auto {
    margin-top: auto !important;
  }
  .bootstrap-iso .me-sm-0 {
    margin-right: 0 !important;
  }
  .bootstrap-iso .me-sm-1 {
    margin-right: 0.25rem !important;
  }
  .bootstrap-iso .me-sm-2 {
    margin-right: 0.5rem !important;
  }
  .bootstrap-iso .me-sm-3 {
    margin-right: 1rem !important;
  }
  .bootstrap-iso .me-sm-4 {
    margin-right: 1.5rem !important;
  }
  .bootstrap-iso .me-sm-5 {
    margin-right: 3rem !important;
  }
  .bootstrap-iso .me-sm-auto {
    margin-right: auto !important;
  }
  .bootstrap-iso .mb-sm-0 {
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .mb-sm-1 {
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .mb-sm-2 {
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .mb-sm-3 {
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .mb-sm-4 {
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .mb-sm-5 {
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .mb-sm-auto {
    margin-bottom: auto !important;
  }
  .bootstrap-iso .ms-sm-0 {
    margin-left: 0 !important;
  }
  .bootstrap-iso .ms-sm-1 {
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .ms-sm-2 {
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .ms-sm-3 {
    margin-left: 1rem !important;
  }
  .bootstrap-iso .ms-sm-4 {
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .ms-sm-5 {
    margin-left: 3rem !important;
  }
  .bootstrap-iso .ms-sm-auto {
    margin-left: auto !important;
  }
  .bootstrap-iso .p-sm-0 {
    padding: 0 !important;
  }
  .bootstrap-iso .p-sm-1 {
    padding: 0.25rem !important;
  }
  .bootstrap-iso .p-sm-2 {
    padding: 0.5rem !important;
  }
  .bootstrap-iso .p-sm-3 {
    padding: 1rem !important;
  }
  .bootstrap-iso .p-sm-4 {
    padding: 1.5rem !important;
  }
  .bootstrap-iso .p-sm-5 {
    padding: 3rem !important;
  }
  .bootstrap-iso .px-sm-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .bootstrap-iso .px-sm-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .px-sm-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .px-sm-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .bootstrap-iso .px-sm-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .px-sm-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .bootstrap-iso .py-sm-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .py-sm-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .py-sm-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .py-sm-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .py-sm-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .py-sm-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .pt-sm-0 {
    padding-top: 0 !important;
  }
  .bootstrap-iso .pt-sm-1 {
    padding-top: 0.25rem !important;
  }
  .bootstrap-iso .pt-sm-2 {
    padding-top: 0.5rem !important;
  }
  .bootstrap-iso .pt-sm-3 {
    padding-top: 1rem !important;
  }
  .bootstrap-iso .pt-sm-4 {
    padding-top: 1.5rem !important;
  }
  .bootstrap-iso .pt-sm-5 {
    padding-top: 3rem !important;
  }
  .bootstrap-iso .pe-sm-0 {
    padding-right: 0 !important;
  }
  .bootstrap-iso .pe-sm-1 {
    padding-right: 0.25rem !important;
  }
  .bootstrap-iso .pe-sm-2 {
    padding-right: 0.5rem !important;
  }
  .bootstrap-iso .pe-sm-3 {
    padding-right: 1rem !important;
  }
  .bootstrap-iso .pe-sm-4 {
    padding-right: 1.5rem !important;
  }
  .bootstrap-iso .pe-sm-5 {
    padding-right: 3rem !important;
  }
  .bootstrap-iso .pb-sm-0 {
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .pb-sm-1 {
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .pb-sm-2 {
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .pb-sm-3 {
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .pb-sm-4 {
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .pb-sm-5 {
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .ps-sm-0 {
    padding-left: 0 !important;
  }
  .bootstrap-iso .ps-sm-1 {
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .ps-sm-2 {
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .ps-sm-3 {
    padding-left: 1rem !important;
  }
  .bootstrap-iso .ps-sm-4 {
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .ps-sm-5 {
    padding-left: 3rem !important;
  }
  .bootstrap-iso .gap-sm-0 {
    gap: 0 !important;
  }
  .bootstrap-iso .gap-sm-1 {
    gap: 0.25rem !important;
  }
  .bootstrap-iso .gap-sm-2 {
    gap: 0.5rem !important;
  }
  .bootstrap-iso .gap-sm-3 {
    gap: 1rem !important;
  }
  .bootstrap-iso .gap-sm-4 {
    gap: 1.5rem !important;
  }
  .bootstrap-iso .gap-sm-5 {
    gap: 3rem !important;
  }
  .bootstrap-iso .row-gap-sm-0 {
    row-gap: 0 !important;
  }
  .bootstrap-iso .row-gap-sm-1 {
    row-gap: 0.25rem !important;
  }
  .bootstrap-iso .row-gap-sm-2 {
    row-gap: 0.5rem !important;
  }
  .bootstrap-iso .row-gap-sm-3 {
    row-gap: 1rem !important;
  }
  .bootstrap-iso .row-gap-sm-4 {
    row-gap: 1.5rem !important;
  }
  .bootstrap-iso .row-gap-sm-5 {
    row-gap: 3rem !important;
  }
  .bootstrap-iso .column-gap-sm-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .bootstrap-iso .column-gap-sm-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .bootstrap-iso .column-gap-sm-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .bootstrap-iso .column-gap-sm-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .bootstrap-iso .column-gap-sm-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .bootstrap-iso .column-gap-sm-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .bootstrap-iso .text-sm-start {
    text-align: left !important;
  }
  .bootstrap-iso .text-sm-end {
    text-align: right !important;
  }
  .bootstrap-iso .text-sm-center {
    text-align: center !important;
  }
}
@media (min-width: 768px) {
  .bootstrap-iso .float-md-start {
    float: left !important;
  }
  .bootstrap-iso .float-md-end {
    float: right !important;
  }
  .bootstrap-iso .float-md-none {
    float: none !important;
  }
  .bootstrap-iso .object-fit-md-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .bootstrap-iso .object-fit-md-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .bootstrap-iso .object-fit-md-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .bootstrap-iso .object-fit-md-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .bootstrap-iso .object-fit-md-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .bootstrap-iso .d-md-inline {
    display: inline !important;
  }
  .bootstrap-iso .d-md-inline-block {
    display: inline-block !important;
  }
  .bootstrap-iso .d-md-block {
    display: block !important;
  }
  .bootstrap-iso .d-md-grid {
    display: grid !important;
  }
  .bootstrap-iso .d-md-inline-grid {
    display: inline-grid !important;
  }
  .bootstrap-iso .d-md-table {
    display: table !important;
  }
  .bootstrap-iso .d-md-table-row {
    display: table-row !important;
  }
  .bootstrap-iso .d-md-table-cell {
    display: table-cell !important;
  }
  .bootstrap-iso .d-md-flex {
    display: flex !important;
  }
  .bootstrap-iso .d-md-inline-flex {
    display: inline-flex !important;
  }
  .bootstrap-iso .d-md-none {
    display: none !important;
  }
  .bootstrap-iso .flex-md-fill {
    flex: 1 1 auto !important;
  }
  .bootstrap-iso .flex-md-row {
    flex-direction: row !important;
  }
  .bootstrap-iso .flex-md-column {
    flex-direction: column !important;
  }
  .bootstrap-iso .flex-md-row-reverse {
    flex-direction: row-reverse !important;
  }
  .bootstrap-iso .flex-md-column-reverse {
    flex-direction: column-reverse !important;
  }
  .bootstrap-iso .flex-md-grow-0 {
    flex-grow: 0 !important;
  }
  .bootstrap-iso .flex-md-grow-1 {
    flex-grow: 1 !important;
  }
  .bootstrap-iso .flex-md-shrink-0 {
    flex-shrink: 0 !important;
  }
  .bootstrap-iso .flex-md-shrink-1 {
    flex-shrink: 1 !important;
  }
  .bootstrap-iso .flex-md-wrap {
    flex-wrap: wrap !important;
  }
  .bootstrap-iso .flex-md-nowrap {
    flex-wrap: nowrap !important;
  }
  .bootstrap-iso .flex-md-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .bootstrap-iso .justify-content-md-start {
    justify-content: flex-start !important;
  }
  .bootstrap-iso .justify-content-md-end {
    justify-content: flex-end !important;
  }
  .bootstrap-iso .justify-content-md-center {
    justify-content: center !important;
  }
  .bootstrap-iso .justify-content-md-between {
    justify-content: space-between !important;
  }
  .bootstrap-iso .justify-content-md-around {
    justify-content: space-around !important;
  }
  .bootstrap-iso .justify-content-md-evenly {
    justify-content: space-evenly !important;
  }
  .bootstrap-iso .align-items-md-start {
    align-items: flex-start !important;
  }
  .bootstrap-iso .align-items-md-end {
    align-items: flex-end !important;
  }
  .bootstrap-iso .align-items-md-center {
    align-items: center !important;
  }
  .bootstrap-iso .align-items-md-baseline {
    align-items: baseline !important;
  }
  .bootstrap-iso .align-items-md-stretch {
    align-items: stretch !important;
  }
  .bootstrap-iso .align-content-md-start {
    align-content: flex-start !important;
  }
  .bootstrap-iso .align-content-md-end {
    align-content: flex-end !important;
  }
  .bootstrap-iso .align-content-md-center {
    align-content: center !important;
  }
  .bootstrap-iso .align-content-md-between {
    align-content: space-between !important;
  }
  .bootstrap-iso .align-content-md-around {
    align-content: space-around !important;
  }
  .bootstrap-iso .align-content-md-stretch {
    align-content: stretch !important;
  }
  .bootstrap-iso .align-self-md-auto {
    align-self: auto !important;
  }
  .bootstrap-iso .align-self-md-start {
    align-self: flex-start !important;
  }
  .bootstrap-iso .align-self-md-end {
    align-self: flex-end !important;
  }
  .bootstrap-iso .align-self-md-center {
    align-self: center !important;
  }
  .bootstrap-iso .align-self-md-baseline {
    align-self: baseline !important;
  }
  .bootstrap-iso .align-self-md-stretch {
    align-self: stretch !important;
  }
  .bootstrap-iso .order-md-first {
    order: -1 !important;
  }
  .bootstrap-iso .order-md-0 {
    order: 0 !important;
  }
  .bootstrap-iso .order-md-1 {
    order: 1 !important;
  }
  .bootstrap-iso .order-md-2 {
    order: 2 !important;
  }
  .bootstrap-iso .order-md-3 {
    order: 3 !important;
  }
  .bootstrap-iso .order-md-4 {
    order: 4 !important;
  }
  .bootstrap-iso .order-md-5 {
    order: 5 !important;
  }
  .bootstrap-iso .order-md-last {
    order: 6 !important;
  }
  .bootstrap-iso .m-md-0 {
    margin: 0 !important;
  }
  .bootstrap-iso .m-md-1 {
    margin: 0.25rem !important;
  }
  .bootstrap-iso .m-md-2 {
    margin: 0.5rem !important;
  }
  .bootstrap-iso .m-md-3 {
    margin: 1rem !important;
  }
  .bootstrap-iso .m-md-4 {
    margin: 1.5rem !important;
  }
  .bootstrap-iso .m-md-5 {
    margin: 3rem !important;
  }
  .bootstrap-iso .m-md-auto {
    margin: auto !important;
  }
  .bootstrap-iso .mx-md-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .bootstrap-iso .mx-md-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .mx-md-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .mx-md-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .bootstrap-iso .mx-md-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .mx-md-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .bootstrap-iso .mx-md-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .bootstrap-iso .my-md-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .my-md-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .my-md-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .my-md-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .my-md-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .my-md-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .my-md-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .bootstrap-iso .mt-md-0 {
    margin-top: 0 !important;
  }
  .bootstrap-iso .mt-md-1 {
    margin-top: 0.25rem !important;
  }
  .bootstrap-iso .mt-md-2 {
    margin-top: 0.5rem !important;
  }
  .bootstrap-iso .mt-md-3 {
    margin-top: 1rem !important;
  }
  .bootstrap-iso .mt-md-4 {
    margin-top: 1.5rem !important;
  }
  .bootstrap-iso .mt-md-5 {
    margin-top: 3rem !important;
  }
  .bootstrap-iso .mt-md-auto {
    margin-top: auto !important;
  }
  .bootstrap-iso .me-md-0 {
    margin-right: 0 !important;
  }
  .bootstrap-iso .me-md-1 {
    margin-right: 0.25rem !important;
  }
  .bootstrap-iso .me-md-2 {
    margin-right: 0.5rem !important;
  }
  .bootstrap-iso .me-md-3 {
    margin-right: 1rem !important;
  }
  .bootstrap-iso .me-md-4 {
    margin-right: 1.5rem !important;
  }
  .bootstrap-iso .me-md-5 {
    margin-right: 3rem !important;
  }
  .bootstrap-iso .me-md-auto {
    margin-right: auto !important;
  }
  .bootstrap-iso .mb-md-0 {
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .mb-md-1 {
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .mb-md-2 {
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .mb-md-3 {
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .mb-md-4 {
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .mb-md-5 {
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .mb-md-auto {
    margin-bottom: auto !important;
  }
  .bootstrap-iso .ms-md-0 {
    margin-left: 0 !important;
  }
  .bootstrap-iso .ms-md-1 {
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .ms-md-2 {
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .ms-md-3 {
    margin-left: 1rem !important;
  }
  .bootstrap-iso .ms-md-4 {
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .ms-md-5 {
    margin-left: 3rem !important;
  }
  .bootstrap-iso .ms-md-auto {
    margin-left: auto !important;
  }
  .bootstrap-iso .p-md-0 {
    padding: 0 !important;
  }
  .bootstrap-iso .p-md-1 {
    padding: 0.25rem !important;
  }
  .bootstrap-iso .p-md-2 {
    padding: 0.5rem !important;
  }
  .bootstrap-iso .p-md-3 {
    padding: 1rem !important;
  }
  .bootstrap-iso .p-md-4 {
    padding: 1.5rem !important;
  }
  .bootstrap-iso .p-md-5 {
    padding: 3rem !important;
  }
  .bootstrap-iso .px-md-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .bootstrap-iso .px-md-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .px-md-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .px-md-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .bootstrap-iso .px-md-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .px-md-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .bootstrap-iso .py-md-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .py-md-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .py-md-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .py-md-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .py-md-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .py-md-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .pt-md-0 {
    padding-top: 0 !important;
  }
  .bootstrap-iso .pt-md-1 {
    padding-top: 0.25rem !important;
  }
  .bootstrap-iso .pt-md-2 {
    padding-top: 0.5rem !important;
  }
  .bootstrap-iso .pt-md-3 {
    padding-top: 1rem !important;
  }
  .bootstrap-iso .pt-md-4 {
    padding-top: 1.5rem !important;
  }
  .bootstrap-iso .pt-md-5 {
    padding-top: 3rem !important;
  }
  .bootstrap-iso .pe-md-0 {
    padding-right: 0 !important;
  }
  .bootstrap-iso .pe-md-1 {
    padding-right: 0.25rem !important;
  }
  .bootstrap-iso .pe-md-2 {
    padding-right: 0.5rem !important;
  }
  .bootstrap-iso .pe-md-3 {
    padding-right: 1rem !important;
  }
  .bootstrap-iso .pe-md-4 {
    padding-right: 1.5rem !important;
  }
  .bootstrap-iso .pe-md-5 {
    padding-right: 3rem !important;
  }
  .bootstrap-iso .pb-md-0 {
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .pb-md-1 {
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .pb-md-2 {
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .pb-md-3 {
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .pb-md-4 {
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .pb-md-5 {
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .ps-md-0 {
    padding-left: 0 !important;
  }
  .bootstrap-iso .ps-md-1 {
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .ps-md-2 {
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .ps-md-3 {
    padding-left: 1rem !important;
  }
  .bootstrap-iso .ps-md-4 {
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .ps-md-5 {
    padding-left: 3rem !important;
  }
  .bootstrap-iso .gap-md-0 {
    gap: 0 !important;
  }
  .bootstrap-iso .gap-md-1 {
    gap: 0.25rem !important;
  }
  .bootstrap-iso .gap-md-2 {
    gap: 0.5rem !important;
  }
  .bootstrap-iso .gap-md-3 {
    gap: 1rem !important;
  }
  .bootstrap-iso .gap-md-4 {
    gap: 1.5rem !important;
  }
  .bootstrap-iso .gap-md-5 {
    gap: 3rem !important;
  }
  .bootstrap-iso .row-gap-md-0 {
    row-gap: 0 !important;
  }
  .bootstrap-iso .row-gap-md-1 {
    row-gap: 0.25rem !important;
  }
  .bootstrap-iso .row-gap-md-2 {
    row-gap: 0.5rem !important;
  }
  .bootstrap-iso .row-gap-md-3 {
    row-gap: 1rem !important;
  }
  .bootstrap-iso .row-gap-md-4 {
    row-gap: 1.5rem !important;
  }
  .bootstrap-iso .row-gap-md-5 {
    row-gap: 3rem !important;
  }
  .bootstrap-iso .column-gap-md-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .bootstrap-iso .column-gap-md-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .bootstrap-iso .column-gap-md-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .bootstrap-iso .column-gap-md-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .bootstrap-iso .column-gap-md-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .bootstrap-iso .column-gap-md-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .bootstrap-iso .text-md-start {
    text-align: left !important;
  }
  .bootstrap-iso .text-md-end {
    text-align: right !important;
  }
  .bootstrap-iso .text-md-center {
    text-align: center !important;
  }
}
@media (min-width: 992px) {
  .bootstrap-iso .float-lg-start {
    float: left !important;
  }
  .bootstrap-iso .float-lg-end {
    float: right !important;
  }
  .bootstrap-iso .float-lg-none {
    float: none !important;
  }
  .bootstrap-iso .object-fit-lg-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .bootstrap-iso .object-fit-lg-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .bootstrap-iso .object-fit-lg-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .bootstrap-iso .object-fit-lg-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .bootstrap-iso .object-fit-lg-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .bootstrap-iso .d-lg-inline {
    display: inline !important;
  }
  .bootstrap-iso .d-lg-inline-block {
    display: inline-block !important;
  }
  .bootstrap-iso .d-lg-block {
    display: block !important;
  }
  .bootstrap-iso .d-lg-grid {
    display: grid !important;
  }
  .bootstrap-iso .d-lg-inline-grid {
    display: inline-grid !important;
  }
  .bootstrap-iso .d-lg-table {
    display: table !important;
  }
  .bootstrap-iso .d-lg-table-row {
    display: table-row !important;
  }
  .bootstrap-iso .d-lg-table-cell {
    display: table-cell !important;
  }
  .bootstrap-iso .d-lg-flex {
    display: flex !important;
  }
  .bootstrap-iso .d-lg-inline-flex {
    display: inline-flex !important;
  }
  .bootstrap-iso .d-lg-none {
    display: none !important;
  }
  .bootstrap-iso .flex-lg-fill {
    flex: 1 1 auto !important;
  }
  .bootstrap-iso .flex-lg-row {
    flex-direction: row !important;
  }
  .bootstrap-iso .flex-lg-column {
    flex-direction: column !important;
  }
  .bootstrap-iso .flex-lg-row-reverse {
    flex-direction: row-reverse !important;
  }
  .bootstrap-iso .flex-lg-column-reverse {
    flex-direction: column-reverse !important;
  }
  .bootstrap-iso .flex-lg-grow-0 {
    flex-grow: 0 !important;
  }
  .bootstrap-iso .flex-lg-grow-1 {
    flex-grow: 1 !important;
  }
  .bootstrap-iso .flex-lg-shrink-0 {
    flex-shrink: 0 !important;
  }
  .bootstrap-iso .flex-lg-shrink-1 {
    flex-shrink: 1 !important;
  }
  .bootstrap-iso .flex-lg-wrap {
    flex-wrap: wrap !important;
  }
  .bootstrap-iso .flex-lg-nowrap {
    flex-wrap: nowrap !important;
  }
  .bootstrap-iso .flex-lg-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .bootstrap-iso .justify-content-lg-start {
    justify-content: flex-start !important;
  }
  .bootstrap-iso .justify-content-lg-end {
    justify-content: flex-end !important;
  }
  .bootstrap-iso .justify-content-lg-center {
    justify-content: center !important;
  }
  .bootstrap-iso .justify-content-lg-between {
    justify-content: space-between !important;
  }
  .bootstrap-iso .justify-content-lg-around {
    justify-content: space-around !important;
  }
  .bootstrap-iso .justify-content-lg-evenly {
    justify-content: space-evenly !important;
  }
  .bootstrap-iso .align-items-lg-start {
    align-items: flex-start !important;
  }
  .bootstrap-iso .align-items-lg-end {
    align-items: flex-end !important;
  }
  .bootstrap-iso .align-items-lg-center {
    align-items: center !important;
  }
  .bootstrap-iso .align-items-lg-baseline {
    align-items: baseline !important;
  }
  .bootstrap-iso .align-items-lg-stretch {
    align-items: stretch !important;
  }
  .bootstrap-iso .align-content-lg-start {
    align-content: flex-start !important;
  }
  .bootstrap-iso .align-content-lg-end {
    align-content: flex-end !important;
  }
  .bootstrap-iso .align-content-lg-center {
    align-content: center !important;
  }
  .bootstrap-iso .align-content-lg-between {
    align-content: space-between !important;
  }
  .bootstrap-iso .align-content-lg-around {
    align-content: space-around !important;
  }
  .bootstrap-iso .align-content-lg-stretch {
    align-content: stretch !important;
  }
  .bootstrap-iso .align-self-lg-auto {
    align-self: auto !important;
  }
  .bootstrap-iso .align-self-lg-start {
    align-self: flex-start !important;
  }
  .bootstrap-iso .align-self-lg-end {
    align-self: flex-end !important;
  }
  .bootstrap-iso .align-self-lg-center {
    align-self: center !important;
  }
  .bootstrap-iso .align-self-lg-baseline {
    align-self: baseline !important;
  }
  .bootstrap-iso .align-self-lg-stretch {
    align-self: stretch !important;
  }
  .bootstrap-iso .order-lg-first {
    order: -1 !important;
  }
  .bootstrap-iso .order-lg-0 {
    order: 0 !important;
  }
  .bootstrap-iso .order-lg-1 {
    order: 1 !important;
  }
  .bootstrap-iso .order-lg-2 {
    order: 2 !important;
  }
  .bootstrap-iso .order-lg-3 {
    order: 3 !important;
  }
  .bootstrap-iso .order-lg-4 {
    order: 4 !important;
  }
  .bootstrap-iso .order-lg-5 {
    order: 5 !important;
  }
  .bootstrap-iso .order-lg-last {
    order: 6 !important;
  }
  .bootstrap-iso .m-lg-0 {
    margin: 0 !important;
  }
  .bootstrap-iso .m-lg-1 {
    margin: 0.25rem !important;
  }
  .bootstrap-iso .m-lg-2 {
    margin: 0.5rem !important;
  }
  .bootstrap-iso .m-lg-3 {
    margin: 1rem !important;
  }
  .bootstrap-iso .m-lg-4 {
    margin: 1.5rem !important;
  }
  .bootstrap-iso .m-lg-5 {
    margin: 3rem !important;
  }
  .bootstrap-iso .m-lg-auto {
    margin: auto !important;
  }
  .bootstrap-iso .mx-lg-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .bootstrap-iso .mx-lg-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .mx-lg-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .mx-lg-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .bootstrap-iso .mx-lg-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .mx-lg-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .bootstrap-iso .mx-lg-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .bootstrap-iso .my-lg-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .my-lg-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .my-lg-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .my-lg-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .my-lg-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .my-lg-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .my-lg-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .bootstrap-iso .mt-lg-0 {
    margin-top: 0 !important;
  }
  .bootstrap-iso .mt-lg-1 {
    margin-top: 0.25rem !important;
  }
  .bootstrap-iso .mt-lg-2 {
    margin-top: 0.5rem !important;
  }
  .bootstrap-iso .mt-lg-3 {
    margin-top: 1rem !important;
  }
  .bootstrap-iso .mt-lg-4 {
    margin-top: 1.5rem !important;
  }
  .bootstrap-iso .mt-lg-5 {
    margin-top: 3rem !important;
  }
  .bootstrap-iso .mt-lg-auto {
    margin-top: auto !important;
  }
  .bootstrap-iso .me-lg-0 {
    margin-right: 0 !important;
  }
  .bootstrap-iso .me-lg-1 {
    margin-right: 0.25rem !important;
  }
  .bootstrap-iso .me-lg-2 {
    margin-right: 0.5rem !important;
  }
  .bootstrap-iso .me-lg-3 {
    margin-right: 1rem !important;
  }
  .bootstrap-iso .me-lg-4 {
    margin-right: 1.5rem !important;
  }
  .bootstrap-iso .me-lg-5 {
    margin-right: 3rem !important;
  }
  .bootstrap-iso .me-lg-auto {
    margin-right: auto !important;
  }
  .bootstrap-iso .mb-lg-0 {
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .mb-lg-1 {
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .mb-lg-2 {
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .mb-lg-3 {
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .mb-lg-4 {
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .mb-lg-5 {
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .mb-lg-auto {
    margin-bottom: auto !important;
  }
  .bootstrap-iso .ms-lg-0 {
    margin-left: 0 !important;
  }
  .bootstrap-iso .ms-lg-1 {
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .ms-lg-2 {
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .ms-lg-3 {
    margin-left: 1rem !important;
  }
  .bootstrap-iso .ms-lg-4 {
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .ms-lg-5 {
    margin-left: 3rem !important;
  }
  .bootstrap-iso .ms-lg-auto {
    margin-left: auto !important;
  }
  .bootstrap-iso .p-lg-0 {
    padding: 0 !important;
  }
  .bootstrap-iso .p-lg-1 {
    padding: 0.25rem !important;
  }
  .bootstrap-iso .p-lg-2 {
    padding: 0.5rem !important;
  }
  .bootstrap-iso .p-lg-3 {
    padding: 1rem !important;
  }
  .bootstrap-iso .p-lg-4 {
    padding: 1.5rem !important;
  }
  .bootstrap-iso .p-lg-5 {
    padding: 3rem !important;
  }
  .bootstrap-iso .px-lg-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .bootstrap-iso .px-lg-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .px-lg-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .px-lg-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .bootstrap-iso .px-lg-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .px-lg-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .bootstrap-iso .py-lg-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .py-lg-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .py-lg-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .py-lg-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .py-lg-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .py-lg-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .pt-lg-0 {
    padding-top: 0 !important;
  }
  .bootstrap-iso .pt-lg-1 {
    padding-top: 0.25rem !important;
  }
  .bootstrap-iso .pt-lg-2 {
    padding-top: 0.5rem !important;
  }
  .bootstrap-iso .pt-lg-3 {
    padding-top: 1rem !important;
  }
  .bootstrap-iso .pt-lg-4 {
    padding-top: 1.5rem !important;
  }
  .bootstrap-iso .pt-lg-5 {
    padding-top: 3rem !important;
  }
  .bootstrap-iso .pe-lg-0 {
    padding-right: 0 !important;
  }
  .bootstrap-iso .pe-lg-1 {
    padding-right: 0.25rem !important;
  }
  .bootstrap-iso .pe-lg-2 {
    padding-right: 0.5rem !important;
  }
  .bootstrap-iso .pe-lg-3 {
    padding-right: 1rem !important;
  }
  .bootstrap-iso .pe-lg-4 {
    padding-right: 1.5rem !important;
  }
  .bootstrap-iso .pe-lg-5 {
    padding-right: 3rem !important;
  }
  .bootstrap-iso .pb-lg-0 {
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .pb-lg-1 {
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .pb-lg-2 {
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .pb-lg-3 {
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .pb-lg-4 {
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .pb-lg-5 {
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .ps-lg-0 {
    padding-left: 0 !important;
  }
  .bootstrap-iso .ps-lg-1 {
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .ps-lg-2 {
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .ps-lg-3 {
    padding-left: 1rem !important;
  }
  .bootstrap-iso .ps-lg-4 {
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .ps-lg-5 {
    padding-left: 3rem !important;
  }
  .bootstrap-iso .gap-lg-0 {
    gap: 0 !important;
  }
  .bootstrap-iso .gap-lg-1 {
    gap: 0.25rem !important;
  }
  .bootstrap-iso .gap-lg-2 {
    gap: 0.5rem !important;
  }
  .bootstrap-iso .gap-lg-3 {
    gap: 1rem !important;
  }
  .bootstrap-iso .gap-lg-4 {
    gap: 1.5rem !important;
  }
  .bootstrap-iso .gap-lg-5 {
    gap: 3rem !important;
  }
  .bootstrap-iso .row-gap-lg-0 {
    row-gap: 0 !important;
  }
  .bootstrap-iso .row-gap-lg-1 {
    row-gap: 0.25rem !important;
  }
  .bootstrap-iso .row-gap-lg-2 {
    row-gap: 0.5rem !important;
  }
  .bootstrap-iso .row-gap-lg-3 {
    row-gap: 1rem !important;
  }
  .bootstrap-iso .row-gap-lg-4 {
    row-gap: 1.5rem !important;
  }
  .bootstrap-iso .row-gap-lg-5 {
    row-gap: 3rem !important;
  }
  .bootstrap-iso .column-gap-lg-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .bootstrap-iso .column-gap-lg-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .bootstrap-iso .column-gap-lg-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .bootstrap-iso .column-gap-lg-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .bootstrap-iso .column-gap-lg-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .bootstrap-iso .column-gap-lg-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .bootstrap-iso .text-lg-start {
    text-align: left !important;
  }
  .bootstrap-iso .text-lg-end {
    text-align: right !important;
  }
  .bootstrap-iso .text-lg-center {
    text-align: center !important;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .float-xl-start {
    float: left !important;
  }
  .bootstrap-iso .float-xl-end {
    float: right !important;
  }
  .bootstrap-iso .float-xl-none {
    float: none !important;
  }
  .bootstrap-iso .object-fit-xl-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .bootstrap-iso .object-fit-xl-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .bootstrap-iso .object-fit-xl-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .bootstrap-iso .object-fit-xl-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .bootstrap-iso .object-fit-xl-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .bootstrap-iso .d-xl-inline {
    display: inline !important;
  }
  .bootstrap-iso .d-xl-inline-block {
    display: inline-block !important;
  }
  .bootstrap-iso .d-xl-block {
    display: block !important;
  }
  .bootstrap-iso .d-xl-grid {
    display: grid !important;
  }
  .bootstrap-iso .d-xl-inline-grid {
    display: inline-grid !important;
  }
  .bootstrap-iso .d-xl-table {
    display: table !important;
  }
  .bootstrap-iso .d-xl-table-row {
    display: table-row !important;
  }
  .bootstrap-iso .d-xl-table-cell {
    display: table-cell !important;
  }
  .bootstrap-iso .d-xl-flex {
    display: flex !important;
  }
  .bootstrap-iso .d-xl-inline-flex {
    display: inline-flex !important;
  }
  .bootstrap-iso .d-xl-none {
    display: none !important;
  }
  .bootstrap-iso .flex-xl-fill {
    flex: 1 1 auto !important;
  }
  .bootstrap-iso .flex-xl-row {
    flex-direction: row !important;
  }
  .bootstrap-iso .flex-xl-column {
    flex-direction: column !important;
  }
  .bootstrap-iso .flex-xl-row-reverse {
    flex-direction: row-reverse !important;
  }
  .bootstrap-iso .flex-xl-column-reverse {
    flex-direction: column-reverse !important;
  }
  .bootstrap-iso .flex-xl-grow-0 {
    flex-grow: 0 !important;
  }
  .bootstrap-iso .flex-xl-grow-1 {
    flex-grow: 1 !important;
  }
  .bootstrap-iso .flex-xl-shrink-0 {
    flex-shrink: 0 !important;
  }
  .bootstrap-iso .flex-xl-shrink-1 {
    flex-shrink: 1 !important;
  }
  .bootstrap-iso .flex-xl-wrap {
    flex-wrap: wrap !important;
  }
  .bootstrap-iso .flex-xl-nowrap {
    flex-wrap: nowrap !important;
  }
  .bootstrap-iso .flex-xl-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .bootstrap-iso .justify-content-xl-start {
    justify-content: flex-start !important;
  }
  .bootstrap-iso .justify-content-xl-end {
    justify-content: flex-end !important;
  }
  .bootstrap-iso .justify-content-xl-center {
    justify-content: center !important;
  }
  .bootstrap-iso .justify-content-xl-between {
    justify-content: space-between !important;
  }
  .bootstrap-iso .justify-content-xl-around {
    justify-content: space-around !important;
  }
  .bootstrap-iso .justify-content-xl-evenly {
    justify-content: space-evenly !important;
  }
  .bootstrap-iso .align-items-xl-start {
    align-items: flex-start !important;
  }
  .bootstrap-iso .align-items-xl-end {
    align-items: flex-end !important;
  }
  .bootstrap-iso .align-items-xl-center {
    align-items: center !important;
  }
  .bootstrap-iso .align-items-xl-baseline {
    align-items: baseline !important;
  }
  .bootstrap-iso .align-items-xl-stretch {
    align-items: stretch !important;
  }
  .bootstrap-iso .align-content-xl-start {
    align-content: flex-start !important;
  }
  .bootstrap-iso .align-content-xl-end {
    align-content: flex-end !important;
  }
  .bootstrap-iso .align-content-xl-center {
    align-content: center !important;
  }
  .bootstrap-iso .align-content-xl-between {
    align-content: space-between !important;
  }
  .bootstrap-iso .align-content-xl-around {
    align-content: space-around !important;
  }
  .bootstrap-iso .align-content-xl-stretch {
    align-content: stretch !important;
  }
  .bootstrap-iso .align-self-xl-auto {
    align-self: auto !important;
  }
  .bootstrap-iso .align-self-xl-start {
    align-self: flex-start !important;
  }
  .bootstrap-iso .align-self-xl-end {
    align-self: flex-end !important;
  }
  .bootstrap-iso .align-self-xl-center {
    align-self: center !important;
  }
  .bootstrap-iso .align-self-xl-baseline {
    align-self: baseline !important;
  }
  .bootstrap-iso .align-self-xl-stretch {
    align-self: stretch !important;
  }
  .bootstrap-iso .order-xl-first {
    order: -1 !important;
  }
  .bootstrap-iso .order-xl-0 {
    order: 0 !important;
  }
  .bootstrap-iso .order-xl-1 {
    order: 1 !important;
  }
  .bootstrap-iso .order-xl-2 {
    order: 2 !important;
  }
  .bootstrap-iso .order-xl-3 {
    order: 3 !important;
  }
  .bootstrap-iso .order-xl-4 {
    order: 4 !important;
  }
  .bootstrap-iso .order-xl-5 {
    order: 5 !important;
  }
  .bootstrap-iso .order-xl-last {
    order: 6 !important;
  }
  .bootstrap-iso .m-xl-0 {
    margin: 0 !important;
  }
  .bootstrap-iso .m-xl-1 {
    margin: 0.25rem !important;
  }
  .bootstrap-iso .m-xl-2 {
    margin: 0.5rem !important;
  }
  .bootstrap-iso .m-xl-3 {
    margin: 1rem !important;
  }
  .bootstrap-iso .m-xl-4 {
    margin: 1.5rem !important;
  }
  .bootstrap-iso .m-xl-5 {
    margin: 3rem !important;
  }
  .bootstrap-iso .m-xl-auto {
    margin: auto !important;
  }
  .bootstrap-iso .mx-xl-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .bootstrap-iso .mx-xl-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .mx-xl-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .mx-xl-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .bootstrap-iso .mx-xl-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .mx-xl-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .bootstrap-iso .mx-xl-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .bootstrap-iso .my-xl-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .my-xl-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .my-xl-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .my-xl-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .my-xl-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .my-xl-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .my-xl-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .bootstrap-iso .mt-xl-0 {
    margin-top: 0 !important;
  }
  .bootstrap-iso .mt-xl-1 {
    margin-top: 0.25rem !important;
  }
  .bootstrap-iso .mt-xl-2 {
    margin-top: 0.5rem !important;
  }
  .bootstrap-iso .mt-xl-3 {
    margin-top: 1rem !important;
  }
  .bootstrap-iso .mt-xl-4 {
    margin-top: 1.5rem !important;
  }
  .bootstrap-iso .mt-xl-5 {
    margin-top: 3rem !important;
  }
  .bootstrap-iso .mt-xl-auto {
    margin-top: auto !important;
  }
  .bootstrap-iso .me-xl-0 {
    margin-right: 0 !important;
  }
  .bootstrap-iso .me-xl-1 {
    margin-right: 0.25rem !important;
  }
  .bootstrap-iso .me-xl-2 {
    margin-right: 0.5rem !important;
  }
  .bootstrap-iso .me-xl-3 {
    margin-right: 1rem !important;
  }
  .bootstrap-iso .me-xl-4 {
    margin-right: 1.5rem !important;
  }
  .bootstrap-iso .me-xl-5 {
    margin-right: 3rem !important;
  }
  .bootstrap-iso .me-xl-auto {
    margin-right: auto !important;
  }
  .bootstrap-iso .mb-xl-0 {
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .mb-xl-1 {
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .mb-xl-2 {
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .mb-xl-3 {
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .mb-xl-4 {
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .mb-xl-5 {
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .mb-xl-auto {
    margin-bottom: auto !important;
  }
  .bootstrap-iso .ms-xl-0 {
    margin-left: 0 !important;
  }
  .bootstrap-iso .ms-xl-1 {
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .ms-xl-2 {
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .ms-xl-3 {
    margin-left: 1rem !important;
  }
  .bootstrap-iso .ms-xl-4 {
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .ms-xl-5 {
    margin-left: 3rem !important;
  }
  .bootstrap-iso .ms-xl-auto {
    margin-left: auto !important;
  }
  .bootstrap-iso .p-xl-0 {
    padding: 0 !important;
  }
  .bootstrap-iso .p-xl-1 {
    padding: 0.25rem !important;
  }
  .bootstrap-iso .p-xl-2 {
    padding: 0.5rem !important;
  }
  .bootstrap-iso .p-xl-3 {
    padding: 1rem !important;
  }
  .bootstrap-iso .p-xl-4 {
    padding: 1.5rem !important;
  }
  .bootstrap-iso .p-xl-5 {
    padding: 3rem !important;
  }
  .bootstrap-iso .px-xl-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .bootstrap-iso .px-xl-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .px-xl-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .px-xl-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .bootstrap-iso .px-xl-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .px-xl-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .bootstrap-iso .py-xl-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .py-xl-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .py-xl-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .py-xl-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .py-xl-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .py-xl-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .pt-xl-0 {
    padding-top: 0 !important;
  }
  .bootstrap-iso .pt-xl-1 {
    padding-top: 0.25rem !important;
  }
  .bootstrap-iso .pt-xl-2 {
    padding-top: 0.5rem !important;
  }
  .bootstrap-iso .pt-xl-3 {
    padding-top: 1rem !important;
  }
  .bootstrap-iso .pt-xl-4 {
    padding-top: 1.5rem !important;
  }
  .bootstrap-iso .pt-xl-5 {
    padding-top: 3rem !important;
  }
  .bootstrap-iso .pe-xl-0 {
    padding-right: 0 !important;
  }
  .bootstrap-iso .pe-xl-1 {
    padding-right: 0.25rem !important;
  }
  .bootstrap-iso .pe-xl-2 {
    padding-right: 0.5rem !important;
  }
  .bootstrap-iso .pe-xl-3 {
    padding-right: 1rem !important;
  }
  .bootstrap-iso .pe-xl-4 {
    padding-right: 1.5rem !important;
  }
  .bootstrap-iso .pe-xl-5 {
    padding-right: 3rem !important;
  }
  .bootstrap-iso .pb-xl-0 {
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .pb-xl-1 {
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .pb-xl-2 {
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .pb-xl-3 {
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .pb-xl-4 {
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .pb-xl-5 {
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .ps-xl-0 {
    padding-left: 0 !important;
  }
  .bootstrap-iso .ps-xl-1 {
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .ps-xl-2 {
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .ps-xl-3 {
    padding-left: 1rem !important;
  }
  .bootstrap-iso .ps-xl-4 {
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .ps-xl-5 {
    padding-left: 3rem !important;
  }
  .bootstrap-iso .gap-xl-0 {
    gap: 0 !important;
  }
  .bootstrap-iso .gap-xl-1 {
    gap: 0.25rem !important;
  }
  .bootstrap-iso .gap-xl-2 {
    gap: 0.5rem !important;
  }
  .bootstrap-iso .gap-xl-3 {
    gap: 1rem !important;
  }
  .bootstrap-iso .gap-xl-4 {
    gap: 1.5rem !important;
  }
  .bootstrap-iso .gap-xl-5 {
    gap: 3rem !important;
  }
  .bootstrap-iso .row-gap-xl-0 {
    row-gap: 0 !important;
  }
  .bootstrap-iso .row-gap-xl-1 {
    row-gap: 0.25rem !important;
  }
  .bootstrap-iso .row-gap-xl-2 {
    row-gap: 0.5rem !important;
  }
  .bootstrap-iso .row-gap-xl-3 {
    row-gap: 1rem !important;
  }
  .bootstrap-iso .row-gap-xl-4 {
    row-gap: 1.5rem !important;
  }
  .bootstrap-iso .row-gap-xl-5 {
    row-gap: 3rem !important;
  }
  .bootstrap-iso .column-gap-xl-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .bootstrap-iso .column-gap-xl-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .bootstrap-iso .column-gap-xl-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .bootstrap-iso .column-gap-xl-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .bootstrap-iso .column-gap-xl-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .bootstrap-iso .column-gap-xl-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .bootstrap-iso .text-xl-start {
    text-align: left !important;
  }
  .bootstrap-iso .text-xl-end {
    text-align: right !important;
  }
  .bootstrap-iso .text-xl-center {
    text-align: center !important;
  }
}
@media (min-width: 1400px) {
  .bootstrap-iso .float-xxl-start {
    float: left !important;
  }
  .bootstrap-iso .float-xxl-end {
    float: right !important;
  }
  .bootstrap-iso .float-xxl-none {
    float: none !important;
  }
  .bootstrap-iso .object-fit-xxl-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .bootstrap-iso .object-fit-xxl-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .bootstrap-iso .object-fit-xxl-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .bootstrap-iso .object-fit-xxl-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .bootstrap-iso .object-fit-xxl-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .bootstrap-iso .d-xxl-inline {
    display: inline !important;
  }
  .bootstrap-iso .d-xxl-inline-block {
    display: inline-block !important;
  }
  .bootstrap-iso .d-xxl-block {
    display: block !important;
  }
  .bootstrap-iso .d-xxl-grid {
    display: grid !important;
  }
  .bootstrap-iso .d-xxl-inline-grid {
    display: inline-grid !important;
  }
  .bootstrap-iso .d-xxl-table {
    display: table !important;
  }
  .bootstrap-iso .d-xxl-table-row {
    display: table-row !important;
  }
  .bootstrap-iso .d-xxl-table-cell {
    display: table-cell !important;
  }
  .bootstrap-iso .d-xxl-flex {
    display: flex !important;
  }
  .bootstrap-iso .d-xxl-inline-flex {
    display: inline-flex !important;
  }
  .bootstrap-iso .d-xxl-none {
    display: none !important;
  }
  .bootstrap-iso .flex-xxl-fill {
    flex: 1 1 auto !important;
  }
  .bootstrap-iso .flex-xxl-row {
    flex-direction: row !important;
  }
  .bootstrap-iso .flex-xxl-column {
    flex-direction: column !important;
  }
  .bootstrap-iso .flex-xxl-row-reverse {
    flex-direction: row-reverse !important;
  }
  .bootstrap-iso .flex-xxl-column-reverse {
    flex-direction: column-reverse !important;
  }
  .bootstrap-iso .flex-xxl-grow-0 {
    flex-grow: 0 !important;
  }
  .bootstrap-iso .flex-xxl-grow-1 {
    flex-grow: 1 !important;
  }
  .bootstrap-iso .flex-xxl-shrink-0 {
    flex-shrink: 0 !important;
  }
  .bootstrap-iso .flex-xxl-shrink-1 {
    flex-shrink: 1 !important;
  }
  .bootstrap-iso .flex-xxl-wrap {
    flex-wrap: wrap !important;
  }
  .bootstrap-iso .flex-xxl-nowrap {
    flex-wrap: nowrap !important;
  }
  .bootstrap-iso .flex-xxl-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .bootstrap-iso .justify-content-xxl-start {
    justify-content: flex-start !important;
  }
  .bootstrap-iso .justify-content-xxl-end {
    justify-content: flex-end !important;
  }
  .bootstrap-iso .justify-content-xxl-center {
    justify-content: center !important;
  }
  .bootstrap-iso .justify-content-xxl-between {
    justify-content: space-between !important;
  }
  .bootstrap-iso .justify-content-xxl-around {
    justify-content: space-around !important;
  }
  .bootstrap-iso .justify-content-xxl-evenly {
    justify-content: space-evenly !important;
  }
  .bootstrap-iso .align-items-xxl-start {
    align-items: flex-start !important;
  }
  .bootstrap-iso .align-items-xxl-end {
    align-items: flex-end !important;
  }
  .bootstrap-iso .align-items-xxl-center {
    align-items: center !important;
  }
  .bootstrap-iso .align-items-xxl-baseline {
    align-items: baseline !important;
  }
  .bootstrap-iso .align-items-xxl-stretch {
    align-items: stretch !important;
  }
  .bootstrap-iso .align-content-xxl-start {
    align-content: flex-start !important;
  }
  .bootstrap-iso .align-content-xxl-end {
    align-content: flex-end !important;
  }
  .bootstrap-iso .align-content-xxl-center {
    align-content: center !important;
  }
  .bootstrap-iso .align-content-xxl-between {
    align-content: space-between !important;
  }
  .bootstrap-iso .align-content-xxl-around {
    align-content: space-around !important;
  }
  .bootstrap-iso .align-content-xxl-stretch {
    align-content: stretch !important;
  }
  .bootstrap-iso .align-self-xxl-auto {
    align-self: auto !important;
  }
  .bootstrap-iso .align-self-xxl-start {
    align-self: flex-start !important;
  }
  .bootstrap-iso .align-self-xxl-end {
    align-self: flex-end !important;
  }
  .bootstrap-iso .align-self-xxl-center {
    align-self: center !important;
  }
  .bootstrap-iso .align-self-xxl-baseline {
    align-self: baseline !important;
  }
  .bootstrap-iso .align-self-xxl-stretch {
    align-self: stretch !important;
  }
  .bootstrap-iso .order-xxl-first {
    order: -1 !important;
  }
  .bootstrap-iso .order-xxl-0 {
    order: 0 !important;
  }
  .bootstrap-iso .order-xxl-1 {
    order: 1 !important;
  }
  .bootstrap-iso .order-xxl-2 {
    order: 2 !important;
  }
  .bootstrap-iso .order-xxl-3 {
    order: 3 !important;
  }
  .bootstrap-iso .order-xxl-4 {
    order: 4 !important;
  }
  .bootstrap-iso .order-xxl-5 {
    order: 5 !important;
  }
  .bootstrap-iso .order-xxl-last {
    order: 6 !important;
  }
  .bootstrap-iso .m-xxl-0 {
    margin: 0 !important;
  }
  .bootstrap-iso .m-xxl-1 {
    margin: 0.25rem !important;
  }
  .bootstrap-iso .m-xxl-2 {
    margin: 0.5rem !important;
  }
  .bootstrap-iso .m-xxl-3 {
    margin: 1rem !important;
  }
  .bootstrap-iso .m-xxl-4 {
    margin: 1.5rem !important;
  }
  .bootstrap-iso .m-xxl-5 {
    margin: 3rem !important;
  }
  .bootstrap-iso .m-xxl-auto {
    margin: auto !important;
  }
  .bootstrap-iso .mx-xxl-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .bootstrap-iso .mx-xxl-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .mx-xxl-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .mx-xxl-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .bootstrap-iso .mx-xxl-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .mx-xxl-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .bootstrap-iso .mx-xxl-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .bootstrap-iso .my-xxl-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .my-xxl-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .my-xxl-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .my-xxl-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .my-xxl-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .my-xxl-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .my-xxl-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .bootstrap-iso .mt-xxl-0 {
    margin-top: 0 !important;
  }
  .bootstrap-iso .mt-xxl-1 {
    margin-top: 0.25rem !important;
  }
  .bootstrap-iso .mt-xxl-2 {
    margin-top: 0.5rem !important;
  }
  .bootstrap-iso .mt-xxl-3 {
    margin-top: 1rem !important;
  }
  .bootstrap-iso .mt-xxl-4 {
    margin-top: 1.5rem !important;
  }
  .bootstrap-iso .mt-xxl-5 {
    margin-top: 3rem !important;
  }
  .bootstrap-iso .mt-xxl-auto {
    margin-top: auto !important;
  }
  .bootstrap-iso .me-xxl-0 {
    margin-right: 0 !important;
  }
  .bootstrap-iso .me-xxl-1 {
    margin-right: 0.25rem !important;
  }
  .bootstrap-iso .me-xxl-2 {
    margin-right: 0.5rem !important;
  }
  .bootstrap-iso .me-xxl-3 {
    margin-right: 1rem !important;
  }
  .bootstrap-iso .me-xxl-4 {
    margin-right: 1.5rem !important;
  }
  .bootstrap-iso .me-xxl-5 {
    margin-right: 3rem !important;
  }
  .bootstrap-iso .me-xxl-auto {
    margin-right: auto !important;
  }
  .bootstrap-iso .mb-xxl-0 {
    margin-bottom: 0 !important;
  }
  .bootstrap-iso .mb-xxl-1 {
    margin-bottom: 0.25rem !important;
  }
  .bootstrap-iso .mb-xxl-2 {
    margin-bottom: 0.5rem !important;
  }
  .bootstrap-iso .mb-xxl-3 {
    margin-bottom: 1rem !important;
  }
  .bootstrap-iso .mb-xxl-4 {
    margin-bottom: 1.5rem !important;
  }
  .bootstrap-iso .mb-xxl-5 {
    margin-bottom: 3rem !important;
  }
  .bootstrap-iso .mb-xxl-auto {
    margin-bottom: auto !important;
  }
  .bootstrap-iso .ms-xxl-0 {
    margin-left: 0 !important;
  }
  .bootstrap-iso .ms-xxl-1 {
    margin-left: 0.25rem !important;
  }
  .bootstrap-iso .ms-xxl-2 {
    margin-left: 0.5rem !important;
  }
  .bootstrap-iso .ms-xxl-3 {
    margin-left: 1rem !important;
  }
  .bootstrap-iso .ms-xxl-4 {
    margin-left: 1.5rem !important;
  }
  .bootstrap-iso .ms-xxl-5 {
    margin-left: 3rem !important;
  }
  .bootstrap-iso .ms-xxl-auto {
    margin-left: auto !important;
  }
  .bootstrap-iso .p-xxl-0 {
    padding: 0 !important;
  }
  .bootstrap-iso .p-xxl-1 {
    padding: 0.25rem !important;
  }
  .bootstrap-iso .p-xxl-2 {
    padding: 0.5rem !important;
  }
  .bootstrap-iso .p-xxl-3 {
    padding: 1rem !important;
  }
  .bootstrap-iso .p-xxl-4 {
    padding: 1.5rem !important;
  }
  .bootstrap-iso .p-xxl-5 {
    padding: 3rem !important;
  }
  .bootstrap-iso .px-xxl-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .bootstrap-iso .px-xxl-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .px-xxl-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .px-xxl-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .bootstrap-iso .px-xxl-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .px-xxl-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .bootstrap-iso .py-xxl-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .py-xxl-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .py-xxl-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .py-xxl-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .py-xxl-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .py-xxl-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .pt-xxl-0 {
    padding-top: 0 !important;
  }
  .bootstrap-iso .pt-xxl-1 {
    padding-top: 0.25rem !important;
  }
  .bootstrap-iso .pt-xxl-2 {
    padding-top: 0.5rem !important;
  }
  .bootstrap-iso .pt-xxl-3 {
    padding-top: 1rem !important;
  }
  .bootstrap-iso .pt-xxl-4 {
    padding-top: 1.5rem !important;
  }
  .bootstrap-iso .pt-xxl-5 {
    padding-top: 3rem !important;
  }
  .bootstrap-iso .pe-xxl-0 {
    padding-right: 0 !important;
  }
  .bootstrap-iso .pe-xxl-1 {
    padding-right: 0.25rem !important;
  }
  .bootstrap-iso .pe-xxl-2 {
    padding-right: 0.5rem !important;
  }
  .bootstrap-iso .pe-xxl-3 {
    padding-right: 1rem !important;
  }
  .bootstrap-iso .pe-xxl-4 {
    padding-right: 1.5rem !important;
  }
  .bootstrap-iso .pe-xxl-5 {
    padding-right: 3rem !important;
  }
  .bootstrap-iso .pb-xxl-0 {
    padding-bottom: 0 !important;
  }
  .bootstrap-iso .pb-xxl-1 {
    padding-bottom: 0.25rem !important;
  }
  .bootstrap-iso .pb-xxl-2 {
    padding-bottom: 0.5rem !important;
  }
  .bootstrap-iso .pb-xxl-3 {
    padding-bottom: 1rem !important;
  }
  .bootstrap-iso .pb-xxl-4 {
    padding-bottom: 1.5rem !important;
  }
  .bootstrap-iso .pb-xxl-5 {
    padding-bottom: 3rem !important;
  }
  .bootstrap-iso .ps-xxl-0 {
    padding-left: 0 !important;
  }
  .bootstrap-iso .ps-xxl-1 {
    padding-left: 0.25rem !important;
  }
  .bootstrap-iso .ps-xxl-2 {
    padding-left: 0.5rem !important;
  }
  .bootstrap-iso .ps-xxl-3 {
    padding-left: 1rem !important;
  }
  .bootstrap-iso .ps-xxl-4 {
    padding-left: 1.5rem !important;
  }
  .bootstrap-iso .ps-xxl-5 {
    padding-left: 3rem !important;
  }
  .bootstrap-iso .gap-xxl-0 {
    gap: 0 !important;
  }
  .bootstrap-iso .gap-xxl-1 {
    gap: 0.25rem !important;
  }
  .bootstrap-iso .gap-xxl-2 {
    gap: 0.5rem !important;
  }
  .bootstrap-iso .gap-xxl-3 {
    gap: 1rem !important;
  }
  .bootstrap-iso .gap-xxl-4 {
    gap: 1.5rem !important;
  }
  .bootstrap-iso .gap-xxl-5 {
    gap: 3rem !important;
  }
  .bootstrap-iso .row-gap-xxl-0 {
    row-gap: 0 !important;
  }
  .bootstrap-iso .row-gap-xxl-1 {
    row-gap: 0.25rem !important;
  }
  .bootstrap-iso .row-gap-xxl-2 {
    row-gap: 0.5rem !important;
  }
  .bootstrap-iso .row-gap-xxl-3 {
    row-gap: 1rem !important;
  }
  .bootstrap-iso .row-gap-xxl-4 {
    row-gap: 1.5rem !important;
  }
  .bootstrap-iso .row-gap-xxl-5 {
    row-gap: 3rem !important;
  }
  .bootstrap-iso .column-gap-xxl-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .bootstrap-iso .column-gap-xxl-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .bootstrap-iso .column-gap-xxl-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .bootstrap-iso .column-gap-xxl-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .bootstrap-iso .column-gap-xxl-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .bootstrap-iso .column-gap-xxl-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .bootstrap-iso .text-xxl-start {
    text-align: left !important;
  }
  .bootstrap-iso .text-xxl-end {
    text-align: right !important;
  }
  .bootstrap-iso .text-xxl-center {
    text-align: center !important;
  }
}
@media (min-width: 1200px) {
  .bootstrap-iso .fs-1 {
    font-size: 2.5rem !important;
  }
  .bootstrap-iso .fs-2 {
    font-size: 2rem !important;
  }
  .bootstrap-iso .fs-3 {
    font-size: 1.75rem !important;
  }
  .bootstrap-iso .fs-4 {
    font-size: 1.5rem !important;
  }
}
@media print {
  .bootstrap-iso .d-print-inline {
    display: inline !important;
  }
  .bootstrap-iso .d-print-inline-block {
    display: inline-block !important;
  }
  .bootstrap-iso .d-print-block {
    display: block !important;
  }
  .bootstrap-iso .d-print-grid {
    display: grid !important;
  }
  .bootstrap-iso .d-print-inline-grid {
    display: inline-grid !important;
  }
  .bootstrap-iso .d-print-table {
    display: table !important;
  }
  .bootstrap-iso .d-print-table-row {
    display: table-row !important;
  }
  .bootstrap-iso .d-print-table-cell {
    display: table-cell !important;
  }
  .bootstrap-iso .d-print-flex {
    display: flex !important;
  }
  .bootstrap-iso .d-print-inline-flex {
    display: inline-flex !important;
  }
  .bootstrap-iso .d-print-none {
    display: none !important;
  }
}
.bootstrap-iso .icon-delete {
  display: inline-block;
  margin-right: 10px;
  width: 30px;
}
.bootstrap-iso ol,
.bootstrap-iso ul,
.bootstrap-iso dl {
  margin-top: 0;
  margin-bottom: 0rem;
}
.bootstrap-iso *,
.bootstrap-iso *::before,
.bootstrap-iso *::after {
  box-sizing: content-box;
}
.bootstrap-iso a {
  text-decoration: none;
}
.bootstrap-iso table#totaldevis td {
  text-align: center;
}
.bootstrap-iso td {
  white-space: normal;
  word-wrap: break-word;
}
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url(https://fonts.gstatic.com/s/materialicons/v142/flUhRq6tzZclQEJ-Vdg-IuiaDsNZ.ttf) format('truetype');
}
.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
}
.bootstrap-iso select {
  max-width: 400px;
}
.tabledt {
  table-layout: auto;
  width: 100%;
  white-space: pre-wrap;
  background-color: var(--color-main-background);
}
.tabledt tbody tr td {
  background-color: var(--color-main-background);
}
table.dataTable.display tbody tr.odd > [class*="sorting_"] {
  background-color: var(--color-main-background);
}
table.dataTable.display tbody tr.even > [class*="sorting_"] {
  background-color: var(--color-main-background);
}
.material-symbols-outlined {
  font-family: 'Material Icons';
  font-size: 30px;
  margin-right: 5px;
  display: inline-block;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  vertical-align: middle;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  font-feature-settings: 'liga';
}
.menu-content {
  font-size: 20px;
  margin-bottom: 10px;
  margin-left: 25px;
}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2425:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon[data-v-7f6b7570]{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.action-items[data-v-7f6b7570]{display:flex;align-items:center}.action-items>button[data-v-7f6b7570]{margin-right:7px}.action-item[data-v-7f6b7570]{--open-background-color: var(--color-background-hover, \$action-background-hover);position:relative;display:inline-block}.action-item.action-item--primary[data-v-7f6b7570]{--open-background-color: var(--color-primary-element-hover)}.action-item.action-item--secondary[data-v-7f6b7570]{--open-background-color: var(--color-primary-element-light-hover)}.action-item.action-item--error[data-v-7f6b7570]{--open-background-color: var(--color-error-hover)}.action-item.action-item--warning[data-v-7f6b7570]{--open-background-color: var(--color-warning-hover)}.action-item.action-item--success[data-v-7f6b7570]{--open-background-color: var(--color-success-hover)}.action-item.action-item--tertiary-no-background[data-v-7f6b7570]{--open-background-color: transparent}.action-item.action-item--open .action-item__menutoggle[data-v-7f6b7570]{background-color:var(--open-background-color)}.action-item__menutoggle__icon[data-v-7f6b7570]{width:20px;height:20px;object-fit:contain}.material-design-icon{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.v-popper--theme-dropdown.v-popper__popper.action-item__popper .v-popper__wrapper{border-radius:var(--border-radius-large);overflow:hidden}.v-popper--theme-dropdown.v-popper__popper.action-item__popper .v-popper__wrapper .v-popper__inner{border-radius:var(--border-radius-large);padding:4px;max-height:calc(50vh - 16px);overflow:auto}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5696:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon[data-v-fe3b5af5]{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.button-vue[data-v-fe3b5af5]{position:relative;width:fit-content;overflow:hidden;border:0;padding:0;font-size:var(--default-font-size);font-weight:700;min-height:44px;min-width:44px;display:flex;align-items:center;justify-content:center;cursor:pointer;border-radius:22px;transition-property:color,border-color,background-color;transition-duration:.1s;transition-timing-function:linear;color:var(--color-primary-element-light-text);background-color:var(--color-primary-element-light)}.button-vue *[data-v-fe3b5af5],.button-vue span[data-v-fe3b5af5]{cursor:pointer}.button-vue[data-v-fe3b5af5]:focus{outline:none}.button-vue[data-v-fe3b5af5]:disabled{cursor:default;opacity:.5;filter:saturate(0.7)}.button-vue:disabled *[data-v-fe3b5af5]{cursor:default}.button-vue[data-v-fe3b5af5]:hover:not(:disabled){background-color:var(--color-primary-element-light-hover)}.button-vue[data-v-fe3b5af5]:active{background-color:var(--color-primary-element-light)}.button-vue__wrapper[data-v-fe3b5af5]{display:inline-flex;align-items:center;justify-content:center;width:100%}.button-vue--end .button-vue__wrapper[data-v-fe3b5af5]{justify-content:end}.button-vue--start .button-vue__wrapper[data-v-fe3b5af5]{justify-content:start}.button-vue--reverse .button-vue__wrapper[data-v-fe3b5af5]{flex-direction:row-reverse}.button-vue--reverse.button-vue--icon-and-text[data-v-fe3b5af5]{padding-inline:calc(var(--default-grid-baseline)*4) var(--default-grid-baseline)}.button-vue__icon[data-v-fe3b5af5]{height:44px;width:44px;min-height:44px;min-width:44px;display:flex;justify-content:center;align-items:center}.button-vue__text[data-v-fe3b5af5]{font-weight:700;margin-bottom:1px;padding:2px 0;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.button-vue--icon-only[data-v-fe3b5af5]{width:44px !important}.button-vue--text-only[data-v-fe3b5af5]{padding:0 12px}.button-vue--text-only .button-vue__text[data-v-fe3b5af5]{margin-left:4px;margin-right:4px}.button-vue--icon-and-text[data-v-fe3b5af5]{padding-block:0;padding-inline:var(--default-grid-baseline) calc(var(--default-grid-baseline)*4)}.button-vue--wide[data-v-fe3b5af5]{width:100%}.button-vue[data-v-fe3b5af5]:focus-visible{outline:2px solid var(--color-main-text) !important;box-shadow:0 0 0 4px var(--color-main-background) !important}.button-vue:focus-visible.button-vue--vue-tertiary-on-primary[data-v-fe3b5af5]{outline:2px solid var(--color-primary-element-text);border-radius:var(--border-radius);background-color:rgba(0,0,0,0)}.button-vue--vue-primary[data-v-fe3b5af5]{background-color:var(--color-primary-element);color:var(--color-primary-element-text)}.button-vue--vue-primary[data-v-fe3b5af5]:hover:not(:disabled){background-color:var(--color-primary-element-hover)}.button-vue--vue-primary[data-v-fe3b5af5]:active{background-color:var(--color-primary-element)}.button-vue--vue-secondary[data-v-fe3b5af5]{color:var(--color-primary-element-light-text);background-color:var(--color-primary-element-light)}.button-vue--vue-secondary[data-v-fe3b5af5]:hover:not(:disabled){color:var(--color-primary-element-light-text);background-color:var(--color-primary-element-light-hover)}.button-vue--vue-tertiary[data-v-fe3b5af5]{color:var(--color-main-text);background-color:rgba(0,0,0,0)}.button-vue--vue-tertiary[data-v-fe3b5af5]:hover:not(:disabled){background-color:var(--color-background-hover)}.button-vue--vue-tertiary-no-background[data-v-fe3b5af5]{color:var(--color-main-text);background-color:rgba(0,0,0,0)}.button-vue--vue-tertiary-no-background[data-v-fe3b5af5]:hover:not(:disabled){background-color:rgba(0,0,0,0)}.button-vue--vue-tertiary-on-primary[data-v-fe3b5af5]{color:var(--color-primary-element-text);background-color:rgba(0,0,0,0)}.button-vue--vue-tertiary-on-primary[data-v-fe3b5af5]:hover:not(:disabled){background-color:rgba(0,0,0,0)}.button-vue--vue-success[data-v-fe3b5af5]{background-color:var(--color-success);color:#fff}.button-vue--vue-success[data-v-fe3b5af5]:hover:not(:disabled){background-color:var(--color-success-hover)}.button-vue--vue-success[data-v-fe3b5af5]:active{background-color:var(--color-success)}.button-vue--vue-warning[data-v-fe3b5af5]{background-color:var(--color-warning);color:#fff}.button-vue--vue-warning[data-v-fe3b5af5]:hover:not(:disabled){background-color:var(--color-warning-hover)}.button-vue--vue-warning[data-v-fe3b5af5]:active{background-color:var(--color-warning)}.button-vue--vue-error[data-v-fe3b5af5]{background-color:var(--color-error);color:#fff}.button-vue--vue-error[data-v-fe3b5af5]:hover:not(:disabled){background-color:var(--color-error-hover)}.button-vue--vue-error[data-v-fe3b5af5]:active{background-color:var(--color-error)}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3732:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}@media only screen and (max-width: 512px){.dialog__modal .modal-wrapper--small .modal-container{width:fit-content;height:unset;max-height:90%;position:relative;top:unset;border-radius:var(--border-radius-large)}}.material-design-icon[data-v-b0b5e355]{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.dialog[data-v-b0b5e355]{height:100%;width:100%;display:flex;flex-direction:column;justify-content:space-between;overflow:hidden}.dialog__modal[data-v-b0b5e355] .modal-wrapper .modal-container{display:flex !important;padding-block:4px 0;padding-inline:12px 0}.dialog__modal[data-v-b0b5e355] .modal-wrapper .modal-container__content{display:flex;flex-direction:column;overflow:hidden}.dialog__wrapper[data-v-b0b5e355]{display:flex;flex-direction:row;flex:1;min-height:0;overflow:hidden}.dialog__wrapper--collapsed[data-v-b0b5e355]{flex-direction:column}.dialog__navigation[data-v-b0b5e355]{display:flex;flex-shrink:0}.dialog__wrapper:not(.dialog__wrapper--collapsed) .dialog__navigation[data-v-b0b5e355]{flex-direction:column;overflow:hidden auto;height:100%;min-width:200px;margin-inline-end:20px}.dialog__wrapper.dialog__wrapper--collapsed .dialog__navigation[data-v-b0b5e355]{flex-direction:row;justify-content:space-between;overflow:auto hidden;width:100%;min-width:100%}.dialog__name[data-v-b0b5e355]{font-size:21px;text-align:center;height:fit-content;min-height:var(--default-clickable-area);line-height:var(--default-clickable-area);overflow-wrap:break-word;margin-block:0 12px}.dialog__content[data-v-b0b5e355]{flex:1;min-height:0;overflow:auto;padding-inline-end:12px}.dialog__text[data-v-b0b5e355]{padding-block-end:6px}.dialog__actions[data-v-b0b5e355]{display:flex;gap:6px;align-content:center;width:fit-content;margin-inline:auto 12px;margin-block:0}.dialog__actions[data-v-b0b5e355]:not(:empty){margin-block:6px 12px}@media only screen and (max-width: 512px){.dialog__name[data-v-b0b5e355]{text-align:start;margin-inline-end:var(--default-clickable-area)}}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8902:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon[data-v-74df2152]{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.icon-vue[data-v-74df2152]{display:flex;justify-content:center;align-items:center;min-width:44px;min-height:44px;opacity:1}.icon-vue--inline[data-v-74df2152]{display:inline-flex;min-width:fit-content;min-height:fit-content;vertical-align:text-bottom}.icon-vue[data-v-74df2152] svg{fill:currentColor;width:var(--758c7a6a);height:var(--758c7a6a);max-width:var(--758c7a6a);max-height:var(--758c7a6a)}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5277:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon[data-v-1ea9d450]{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.modal-mask[data-v-1ea9d450]{position:fixed;z-index:9998;top:0;left:0;display:block;width:100%;height:100%;background-color:rgba(0,0,0,.5019607843)}.modal-mask--dark[data-v-1ea9d450]{background-color:rgba(0,0,0,.9215686275)}.modal-header[data-v-1ea9d450]{position:absolute;z-index:10001;top:0;right:0;left:0;display:flex !important;align-items:center;justify-content:center;width:100%;height:50px;overflow:hidden;transition:opacity .25s,visibility .25s}.modal-header .modal-name[data-v-1ea9d450]{overflow-x:hidden;box-sizing:border-box;width:100%;padding:0 132px 0 12px;transition:padding ease .1s;white-space:nowrap;text-overflow:ellipsis;color:#fff;font-size:14px;margin-bottom:0}@media only screen and (min-width: 1024px){.modal-header .modal-name[data-v-1ea9d450]{padding-left:132px;text-align:center}}.modal-header .icons-menu[data-v-1ea9d450]{position:absolute;right:0;display:flex;align-items:center;justify-content:flex-end}.modal-header .icons-menu .header-close[data-v-1ea9d450]{display:flex;align-items:center;justify-content:center;box-sizing:border-box;margin:3px;padding:0}.modal-header .icons-menu .play-pause-icons[data-v-1ea9d450]{position:relative;width:50px;height:50px;margin:0;padding:0;cursor:pointer;border:none;background-color:rgba(0,0,0,0)}.modal-header .icons-menu .play-pause-icons:hover .play-pause-icons__play[data-v-1ea9d450],.modal-header .icons-menu .play-pause-icons:hover .play-pause-icons__pause[data-v-1ea9d450],.modal-header .icons-menu .play-pause-icons:focus .play-pause-icons__play[data-v-1ea9d450],.modal-header .icons-menu .play-pause-icons:focus .play-pause-icons__pause[data-v-1ea9d450]{opacity:1;border-radius:22px;background-color:rgba(127,127,127,.2509803922)}.modal-header .icons-menu .play-pause-icons__play[data-v-1ea9d450],.modal-header .icons-menu .play-pause-icons__pause[data-v-1ea9d450]{box-sizing:border-box;width:44px;height:44px;margin:3px;cursor:pointer;opacity:.7}.modal-header .icons-menu .header-actions[data-v-1ea9d450]{color:#fff}.modal-header .icons-menu[data-v-1ea9d450] .action-item{margin:3px}.modal-header .icons-menu[data-v-1ea9d450] .action-item--single{box-sizing:border-box;width:44px;height:44px;cursor:pointer;background-position:center;background-size:22px}.modal-header .icons-menu[data-v-1ea9d450] button{color:#fff}.modal-header .icons-menu[data-v-1ea9d450] .action-item__menutoggle{padding:0}.modal-header .icons-menu[data-v-1ea9d450] .action-item__menutoggle span,.modal-header .icons-menu[data-v-1ea9d450] .action-item__menutoggle svg{width:var(--icon-size);height:var(--icon-size)}.modal-wrapper[data-v-1ea9d450]{display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.modal-wrapper .prev[data-v-1ea9d450],.modal-wrapper .next[data-v-1ea9d450]{z-index:10000;height:35vh;min-height:300px;position:absolute;transition:opacity .25s;color:#fff}.modal-wrapper .prev[data-v-1ea9d450]:focus-visible,.modal-wrapper .next[data-v-1ea9d450]:focus-visible{box-shadow:0 0 0 2px var(--color-primary-element-text);background-color:var(--color-box-shadow)}.modal-wrapper .prev[data-v-1ea9d450]{left:2px}.modal-wrapper .next[data-v-1ea9d450]{right:2px}.modal-wrapper .modal-container[data-v-1ea9d450]{position:relative;display:flex;padding:0;transition:transform .3s ease;border-radius:var(--border-radius-large);background-color:var(--color-main-background);color:var(--color-main-text);box-shadow:0 0 40px rgba(0,0,0,.2)}.modal-wrapper .modal-container__close[data-v-1ea9d450]{z-index:1;position:absolute;top:4px;right:4px}.modal-wrapper .modal-container__content[data-v-1ea9d450]{width:100%;min-height:52px;overflow:auto}.modal-wrapper--small>.modal-container[data-v-1ea9d450]{width:400px;max-width:90%;max-height:min(90%,100% - 100px)}.modal-wrapper--normal>.modal-container[data-v-1ea9d450]{max-width:90%;width:600px;max-height:min(90%,100% - 100px)}.modal-wrapper--large>.modal-container[data-v-1ea9d450]{max-width:90%;width:900px;max-height:min(90%,100% - 100px)}.modal-wrapper--full>.modal-container[data-v-1ea9d450]{width:100%;height:calc(100% - var(--header-height));position:absolute;top:50px;border-radius:0}@media only screen and ((max-width: 512px) or (max-height: 400px)){.modal-wrapper .modal-container[data-v-1ea9d450]{max-width:initial;width:100%;max-height:initial;height:calc(100% - var(--header-height));position:absolute;top:50px;border-radius:0}}.fade-enter-active[data-v-1ea9d450],.fade-leave-active[data-v-1ea9d450]{transition:opacity .25s}.fade-enter[data-v-1ea9d450],.fade-leave-to[data-v-1ea9d450]{opacity:0}.fade-visibility-enter[data-v-1ea9d450],.fade-visibility-leave-to[data-v-1ea9d450]{visibility:hidden;opacity:0}.modal-in-enter-active[data-v-1ea9d450],.modal-in-leave-active[data-v-1ea9d450],.modal-out-enter-active[data-v-1ea9d450],.modal-out-leave-active[data-v-1ea9d450]{transition:opacity .25s}.modal-in-enter[data-v-1ea9d450],.modal-in-leave-to[data-v-1ea9d450],.modal-out-enter[data-v-1ea9d450],.modal-out-leave-to[data-v-1ea9d450]{opacity:0}.modal-in-enter .modal-container[data-v-1ea9d450],.modal-in-leave-to .modal-container[data-v-1ea9d450]{transform:scale(0.9)}.modal-out-enter .modal-container[data-v-1ea9d450],.modal-out-leave-to .modal-container[data-v-1ea9d450]{transform:scale(1.1)}.modal-mask .play-pause-icons .progress-ring[data-v-1ea9d450]{position:absolute;top:0;left:0;transform:rotate(-90deg)}.modal-mask .play-pause-icons .progress-ring .progress-ring__circle[data-v-1ea9d450]{transition:.1s stroke-dashoffset;transform-origin:50% 50%;animation:progressring-1ea9d450 linear var(--slideshow-duration) infinite;stroke-linecap:round;stroke-dashoffset:94.2477796077;stroke-dasharray:94.2477796077}.modal-mask .play-pause-icons--paused .icon-pause[data-v-1ea9d450]{animation:breath-1ea9d450 2s cubic-bezier(0.4, 0, 0.2, 1) infinite}.modal-mask .play-pause-icons--paused .progress-ring__circle[data-v-1ea9d450]{animation-play-state:paused !important}@keyframes progressring-1ea9d450{0%{stroke-dashoffset:94.2477796077}to{stroke-dashoffset:0}}@keyframes breath-1ea9d450{0%{opacity:1}50%{opacity:0}to{opacity:1}}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4496:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon[data-v-722d543a]{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.notecard[data-v-722d543a]{color:var(--color-main-text) !important;background-color:var(--note-background) !important;border-inline-start:4px solid var(--note-theme);border-radius:var(--border-radius);margin:1rem 0;padding:1rem;display:flex;flex-direction:row;gap:1rem}.notecard__icon--heading[data-v-722d543a]{margin-bottom:auto;margin-top:.3rem}.notecard--success[data-v-722d543a]{--note-background: rgba(var(--color-success-rgb), .1);--note-theme: var(--color-success)}.notecard--info[data-v-722d543a]{--note-background: rgba(var(--color-info-rgb), .1);--note-theme: var(--color-info)}.notecard--error[data-v-722d543a]{--note-background: rgba(var(--color-error-rgb), .1);--note-theme: var(--color-error)}.notecard--warning[data-v-722d543a]{--note-background: rgba(var(--color-warning-rgb), .1);--note-theme: var(--color-warning)}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2550:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.resize-observer{position:absolute;top:0;left:0;z-index:-1;width:100%;height:100%;border:none;background-color:rgba(0,0,0,0);pointer-events:none;display:block;overflow:hidden;opacity:0}.resize-observer object{display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1}.v-popper--theme-dropdown.v-popper__popper{z-index:100000;top:0;left:0;display:block !important;filter:drop-shadow(0 1px 10px var(--color-box-shadow))}.v-popper--theme-dropdown.v-popper__popper .v-popper__inner{padding:0;color:var(--color-main-text);border-radius:var(--border-radius-large);overflow:hidden;background:var(--color-main-background)}.v-popper--theme-dropdown.v-popper__popper .v-popper__arrow-container{position:absolute;z-index:1;width:0;height:0;border-style:solid;border-color:rgba(0,0,0,0);border-width:10px}.v-popper--theme-dropdown.v-popper__popper[data-popper-placement^=top] .v-popper__arrow-container{bottom:-10px;border-bottom-width:0;border-top-color:var(--color-main-background)}.v-popper--theme-dropdown.v-popper__popper[data-popper-placement^=bottom] .v-popper__arrow-container{top:-10px;border-top-width:0;border-bottom-color:var(--color-main-background)}.v-popper--theme-dropdown.v-popper__popper[data-popper-placement^=right] .v-popper__arrow-container{left:-10px;border-left-width:0;border-right-color:var(--color-main-background)}.v-popper--theme-dropdown.v-popper__popper[data-popper-placement^=left] .v-popper__arrow-container{right:-10px;border-right-width:0;border-left-color:var(--color-main-background)}.v-popper--theme-dropdown.v-popper__popper[aria-hidden=true]{visibility:hidden;transition:opacity var(--animation-quick),visibility var(--animation-quick);opacity:0}.v-popper--theme-dropdown.v-popper__popper[aria-hidden=false]{visibility:visible;transition:opacity var(--animation-quick);opacity:1}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3962:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.material-design-icon{display:flex;align-self:center;justify-self:center;align-items:center;justify-content:center}.v-popper--theme-tooltip.v-popper__popper{position:absolute;z-index:100000;top:0;right:auto;left:auto;display:block;margin:0;padding:0;text-align:left;text-align:start;opacity:0;line-height:1.6;line-break:auto;filter:drop-shadow(0 1px 10px var(--color-box-shadow))}.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=top] .v-popper__arrow-container{bottom:-10px;border-bottom-width:0;border-top-color:var(--color-main-background)}.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=bottom] .v-popper__arrow-container{top:-10px;border-top-width:0;border-bottom-color:var(--color-main-background)}.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=right] .v-popper__arrow-container{right:100%;border-left-width:0;border-right-color:var(--color-main-background)}.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=left] .v-popper__arrow-container{left:100%;border-right-width:0;border-left-color:var(--color-main-background)}.v-popper--theme-tooltip.v-popper__popper[aria-hidden=true]{visibility:hidden;transition:opacity .15s,visibility .15s;opacity:0}.v-popper--theme-tooltip.v-popper__popper[aria-hidden=false]{visibility:visible;transition:opacity .15s;opacity:1}.v-popper--theme-tooltip .v-popper__inner{max-width:350px;padding:5px 8px;text-align:center;color:var(--color-main-text);border-radius:var(--border-radius);background-color:var(--color-main-background)}.v-popper--theme-tooltip .v-popper__arrow-container{position:absolute;z-index:1;width:0;height:0;margin:0;border-style:solid;border-color:rgba(0,0,0,0);border-width:10px}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9041:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:root{--dt-row-selected: 13, 110, 253;--dt-row-selected-text: 255, 255, 255;--dt-row-selected-link: 9, 10, 11;--dt-row-stripe: 0, 0, 0;--dt-row-hover: 0, 0, 0;--dt-column-ordering: 0, 0, 0;--dt-html-background: white}:root.dark{--dt-html-background: rgb(33, 37, 41)}table.dataTable td.dt-control{text-align:center;cursor:pointer}table.dataTable td.dt-control:before{display:inline-block;box-sizing:border-box;content:"";border-top:5px solid rgba(0,0,0,0);border-left:10px solid rgba(0,0,0,.5);border-bottom:5px solid rgba(0,0,0,0);border-right:0px solid rgba(0,0,0,0)}table.dataTable tr.dt-hasChild td.dt-control:before{border-top:10px solid rgba(0,0,0,.5);border-left:5px solid rgba(0,0,0,0);border-bottom:0px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0)}html.dark table.dataTable td.dt-control:before,:root[data-bs-theme=dark] table.dataTable td.dt-control:before{border-left-color:rgba(255,255,255,.5)}html.dark table.dataTable tr.dt-hasChild td.dt-control:before,:root[data-bs-theme=dark] table.dataTable tr.dt-hasChild td.dt-control:before{border-top-color:rgba(255,255,255,.5);border-left-color:rgba(0,0,0,0)}div.dt-scroll-body thead tr,div.dt-scroll-body tfoot tr{height:0}div.dt-scroll-body thead tr th,div.dt-scroll-body thead tr td,div.dt-scroll-body tfoot tr th,div.dt-scroll-body tfoot tr td{height:0 !important;padding-top:0px !important;padding-bottom:0px !important;border-top-width:0px !important;border-bottom-width:0px !important}div.dt-scroll-body thead tr th div.dt-scroll-sizing,div.dt-scroll-body thead tr td div.dt-scroll-sizing,div.dt-scroll-body tfoot tr th div.dt-scroll-sizing,div.dt-scroll-body tfoot tr td div.dt-scroll-sizing{height:0 !important;overflow:hidden !important}table.dataTable thead>tr>th:active,table.dataTable thead>tr>td:active{outline:none}table.dataTable thead>tr>th.dt-orderable-asc span.dt-column-order:before,table.dataTable thead>tr>th.dt-ordering-asc span.dt-column-order:before,table.dataTable thead>tr>td.dt-orderable-asc span.dt-column-order:before,table.dataTable thead>tr>td.dt-ordering-asc span.dt-column-order:before{position:absolute;display:block;bottom:50%;content:"▲";content:"▲"/""}table.dataTable thead>tr>th.dt-orderable-desc span.dt-column-order:after,table.dataTable thead>tr>th.dt-ordering-desc span.dt-column-order:after,table.dataTable thead>tr>td.dt-orderable-desc span.dt-column-order:after,table.dataTable thead>tr>td.dt-ordering-desc span.dt-column-order:after{position:absolute;display:block;top:50%;content:"▼";content:"▼"/""}table.dataTable thead>tr>th.dt-orderable-asc,table.dataTable thead>tr>th.dt-orderable-desc,table.dataTable thead>tr>th.dt-ordering-asc,table.dataTable thead>tr>th.dt-ordering-desc,table.dataTable thead>tr>td.dt-orderable-asc,table.dataTable thead>tr>td.dt-orderable-desc,table.dataTable thead>tr>td.dt-ordering-asc,table.dataTable thead>tr>td.dt-ordering-desc{position:relative;padding-right:30px}table.dataTable thead>tr>th.dt-orderable-asc span.dt-column-order,table.dataTable thead>tr>th.dt-orderable-desc span.dt-column-order,table.dataTable thead>tr>th.dt-ordering-asc span.dt-column-order,table.dataTable thead>tr>th.dt-ordering-desc span.dt-column-order,table.dataTable thead>tr>td.dt-orderable-asc span.dt-column-order,table.dataTable thead>tr>td.dt-orderable-desc span.dt-column-order,table.dataTable thead>tr>td.dt-ordering-asc span.dt-column-order,table.dataTable thead>tr>td.dt-ordering-desc span.dt-column-order{position:absolute;right:12px;top:0;bottom:0;width:12px}table.dataTable thead>tr>th.dt-orderable-asc span.dt-column-order:before,table.dataTable thead>tr>th.dt-orderable-asc span.dt-column-order:after,table.dataTable thead>tr>th.dt-orderable-desc span.dt-column-order:before,table.dataTable thead>tr>th.dt-orderable-desc span.dt-column-order:after,table.dataTable thead>tr>th.dt-ordering-asc span.dt-column-order:before,table.dataTable thead>tr>th.dt-ordering-asc span.dt-column-order:after,table.dataTable thead>tr>th.dt-ordering-desc span.dt-column-order:before,table.dataTable thead>tr>th.dt-ordering-desc span.dt-column-order:after,table.dataTable thead>tr>td.dt-orderable-asc span.dt-column-order:before,table.dataTable thead>tr>td.dt-orderable-asc span.dt-column-order:after,table.dataTable thead>tr>td.dt-orderable-desc span.dt-column-order:before,table.dataTable thead>tr>td.dt-orderable-desc span.dt-column-order:after,table.dataTable thead>tr>td.dt-ordering-asc span.dt-column-order:before,table.dataTable thead>tr>td.dt-ordering-asc span.dt-column-order:after,table.dataTable thead>tr>td.dt-ordering-desc span.dt-column-order:before,table.dataTable thead>tr>td.dt-ordering-desc span.dt-column-order:after{left:0;opacity:.125;line-height:9px;font-size:.8em}table.dataTable thead>tr>th.dt-orderable-asc,table.dataTable thead>tr>th.dt-orderable-desc,table.dataTable thead>tr>td.dt-orderable-asc,table.dataTable thead>tr>td.dt-orderable-desc{cursor:pointer}table.dataTable thead>tr>th.dt-orderable-asc:hover,table.dataTable thead>tr>th.dt-orderable-desc:hover,table.dataTable thead>tr>td.dt-orderable-asc:hover,table.dataTable thead>tr>td.dt-orderable-desc:hover{outline:2px solid rgba(0,0,0,.05);outline-offset:-2px}table.dataTable thead>tr>th.dt-ordering-asc span.dt-column-order:before,table.dataTable thead>tr>th.dt-ordering-desc span.dt-column-order:after,table.dataTable thead>tr>td.dt-ordering-asc span.dt-column-order:before,table.dataTable thead>tr>td.dt-ordering-desc span.dt-column-order:after{opacity:.6}table.dataTable thead>tr>th.sorting_desc_disabled span.dt-column-order:after,table.dataTable thead>tr>th.sorting_asc_disabled span.dt-column-order:before,table.dataTable thead>tr>td.sorting_desc_disabled span.dt-column-order:after,table.dataTable thead>tr>td.sorting_asc_disabled span.dt-column-order:before{display:none}table.dataTable thead>tr>th:active,table.dataTable thead>tr>td:active{outline:none}div.dt-scroll-body>table.dataTable>thead>tr>th,div.dt-scroll-body>table.dataTable>thead>tr>td{overflow:hidden}:root.dark table.dataTable thead>tr>th.dt-orderable-asc:hover,:root.dark table.dataTable thead>tr>th.dt-orderable-desc:hover,:root.dark table.dataTable thead>tr>td.dt-orderable-asc:hover,:root.dark table.dataTable thead>tr>td.dt-orderable-desc:hover,:root[data-bs-theme=dark] table.dataTable thead>tr>th.dt-orderable-asc:hover,:root[data-bs-theme=dark] table.dataTable thead>tr>th.dt-orderable-desc:hover,:root[data-bs-theme=dark] table.dataTable thead>tr>td.dt-orderable-asc:hover,:root[data-bs-theme=dark] table.dataTable thead>tr>td.dt-orderable-desc:hover{outline:2px solid rgba(255,255,255,.05)}div.dt-processing{position:absolute;top:50%;left:50%;width:200px;margin-left:-100px;margin-top:-22px;text-align:center;padding:2px;z-index:10}div.dt-processing>div:last-child{position:relative;width:80px;height:15px;margin:1em auto}div.dt-processing>div:last-child>div{position:absolute;top:0;width:13px;height:13px;border-radius:50%;background:#0d6efd;background:rgb(var(--dt-row-selected));animation-timing-function:cubic-bezier(0, 1, 1, 0)}div.dt-processing>div:last-child>div:nth-child(1){left:8px;animation:datatables-loader-1 .6s infinite}div.dt-processing>div:last-child>div:nth-child(2){left:8px;animation:datatables-loader-2 .6s infinite}div.dt-processing>div:last-child>div:nth-child(3){left:32px;animation:datatables-loader-2 .6s infinite}div.dt-processing>div:last-child>div:nth-child(4){left:56px;animation:datatables-loader-3 .6s infinite}@keyframes datatables-loader-1{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes datatables-loader-3{0%{transform:scale(1)}100%{transform:scale(0)}}@keyframes datatables-loader-2{0%{transform:translate(0, 0)}100%{transform:translate(24px, 0)}}table.dataTable.nowrap th,table.dataTable.nowrap td{white-space:nowrap}table.dataTable th,table.dataTable td{box-sizing:border-box}table.dataTable th.dt-left,table.dataTable td.dt-left{text-align:left}table.dataTable th.dt-center,table.dataTable td.dt-center{text-align:center}table.dataTable th.dt-right,table.dataTable td.dt-right{text-align:right}table.dataTable th.dt-justify,table.dataTable td.dt-justify{text-align:justify}table.dataTable th.dt-nowrap,table.dataTable td.dt-nowrap{white-space:nowrap}table.dataTable th.dt-empty,table.dataTable td.dt-empty{text-align:center;vertical-align:top}table.dataTable th.dt-type-numeric,table.dataTable th.dt-type-date,table.dataTable td.dt-type-numeric,table.dataTable td.dt-type-date{text-align:right}table.dataTable thead th,table.dataTable thead td,table.dataTable tfoot th,table.dataTable tfoot td{text-align:left}table.dataTable thead th.dt-head-left,table.dataTable thead td.dt-head-left,table.dataTable tfoot th.dt-head-left,table.dataTable tfoot td.dt-head-left{text-align:left}table.dataTable thead th.dt-head-center,table.dataTable thead td.dt-head-center,table.dataTable tfoot th.dt-head-center,table.dataTable tfoot td.dt-head-center{text-align:center}table.dataTable thead th.dt-head-right,table.dataTable thead td.dt-head-right,table.dataTable tfoot th.dt-head-right,table.dataTable tfoot td.dt-head-right{text-align:right}table.dataTable thead th.dt-head-justify,table.dataTable thead td.dt-head-justify,table.dataTable tfoot th.dt-head-justify,table.dataTable tfoot td.dt-head-justify{text-align:justify}table.dataTable thead th.dt-head-nowrap,table.dataTable thead td.dt-head-nowrap,table.dataTable tfoot th.dt-head-nowrap,table.dataTable tfoot td.dt-head-nowrap{white-space:nowrap}table.dataTable tbody th.dt-body-left,table.dataTable tbody td.dt-body-left{text-align:left}table.dataTable tbody th.dt-body-center,table.dataTable tbody td.dt-body-center{text-align:center}table.dataTable tbody th.dt-body-right,table.dataTable tbody td.dt-body-right{text-align:right}table.dataTable tbody th.dt-body-justify,table.dataTable tbody td.dt-body-justify{text-align:justify}table.dataTable tbody th.dt-body-nowrap,table.dataTable tbody td.dt-body-nowrap{white-space:nowrap}table.dataTable{width:100%;margin:0 auto;border-spacing:0}table.dataTable thead th,table.dataTable tfoot th{font-weight:bold}table.dataTable>thead>tr>th,table.dataTable>thead>tr>td{padding:10px;border-bottom:1px solid rgba(0,0,0,.3)}table.dataTable>thead>tr>th:active,table.dataTable>thead>tr>td:active{outline:none}table.dataTable>tfoot>tr>th,table.dataTable>tfoot>tr>td{border-top:1px solid rgba(0,0,0,.3);padding:10px 10px 6px 10px}table.dataTable>tbody>tr{background-color:rgba(0,0,0,0)}table.dataTable>tbody>tr:first-child>*{border-top:none}table.dataTable>tbody>tr:last-child>*{border-bottom:none}table.dataTable>tbody>tr.selected>*{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.9);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.9);color:#fff;color:rgb(var(--dt-row-selected-text))}table.dataTable>tbody>tr.selected a{color:#090a0b;color:rgb(var(--dt-row-selected-link))}table.dataTable>tbody>tr>th,table.dataTable>tbody>tr>td{padding:8px 10px}table.dataTable.row-border>tbody>tr>*,table.dataTable.display>tbody>tr>*{border-top:1px solid rgba(0,0,0,.15)}table.dataTable.row-border>tbody>tr:first-child>*,table.dataTable.display>tbody>tr:first-child>*{border-top:none}table.dataTable.row-border>tbody>tr.selected+tr.selected>td,table.dataTable.display>tbody>tr.selected+tr.selected>td{border-top-color:rgba(13,110,253,.65);border-top-color:rgba(var(--dt-row-selected), 0.65)}table.dataTable.cell-border>tbody>tr>*{border-top:1px solid rgba(0,0,0,.15);border-right:1px solid rgba(0,0,0,.15)}table.dataTable.cell-border>tbody>tr>*:first-child{border-left:1px solid rgba(0,0,0,.15)}table.dataTable.cell-border>tbody>tr:first-child>*{border-top:1px solid rgba(0,0,0,.3)}table.dataTable.stripe>tbody>tr:nth-child(odd)>*,table.dataTable.display>tbody>tr:nth-child(odd)>*{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.023);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-stripe), 0.023)}table.dataTable.stripe>tbody>tr:nth-child(odd).selected>*,table.dataTable.display>tbody>tr:nth-child(odd).selected>*{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.923);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.923)}table.dataTable.hover>tbody>tr:hover>*,table.dataTable.display>tbody>tr:hover>*{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.035);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.035)}table.dataTable.hover>tbody>tr.selected:hover>*,table.dataTable.display>tbody>tr.selected:hover>*{box-shadow:inset 0 0 0 9999px #0d6efd !important;box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 1) !important}table.dataTable.order-column>tbody tr>.sorting_1,table.dataTable.order-column>tbody tr>.sorting_2,table.dataTable.order-column>tbody tr>.sorting_3,table.dataTable.display>tbody tr>.sorting_1,table.dataTable.display>tbody tr>.sorting_2,table.dataTable.display>tbody tr>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.019);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.019)}table.dataTable.order-column>tbody tr.selected>.sorting_1,table.dataTable.order-column>tbody tr.selected>.sorting_2,table.dataTable.order-column>tbody tr.selected>.sorting_3,table.dataTable.display>tbody tr.selected>.sorting_1,table.dataTable.display>tbody tr.selected>.sorting_2,table.dataTable.display>tbody tr.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.919);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.919)}table.dataTable.display>tbody>tr:nth-child(odd)>.sorting_1,table.dataTable.order-column.stripe>tbody>tr:nth-child(odd)>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.054);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.054)}table.dataTable.display>tbody>tr:nth-child(odd)>.sorting_2,table.dataTable.order-column.stripe>tbody>tr:nth-child(odd)>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.047);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.047)}table.dataTable.display>tbody>tr:nth-child(odd)>.sorting_3,table.dataTable.order-column.stripe>tbody>tr:nth-child(odd)>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.039);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.039)}table.dataTable.display>tbody>tr:nth-child(odd).selected>.sorting_1,table.dataTable.order-column.stripe>tbody>tr:nth-child(odd).selected>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.954);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.954)}table.dataTable.display>tbody>tr:nth-child(odd).selected>.sorting_2,table.dataTable.order-column.stripe>tbody>tr:nth-child(odd).selected>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.947);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.947)}table.dataTable.display>tbody>tr:nth-child(odd).selected>.sorting_3,table.dataTable.order-column.stripe>tbody>tr:nth-child(odd).selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.939);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.939)}table.dataTable.display>tbody>tr.even>.sorting_1,table.dataTable.order-column.stripe>tbody>tr.even>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.019);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.019)}table.dataTable.display>tbody>tr.even>.sorting_2,table.dataTable.order-column.stripe>tbody>tr.even>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.011);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.011)}table.dataTable.display>tbody>tr.even>.sorting_3,table.dataTable.order-column.stripe>tbody>tr.even>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.003);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.003)}table.dataTable.display>tbody>tr.even.selected>.sorting_1,table.dataTable.order-column.stripe>tbody>tr.even.selected>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.919);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.919)}table.dataTable.display>tbody>tr.even.selected>.sorting_2,table.dataTable.order-column.stripe>tbody>tr.even.selected>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.911);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.911)}table.dataTable.display>tbody>tr.even.selected>.sorting_3,table.dataTable.order-column.stripe>tbody>tr.even.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.903);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.903)}table.dataTable.display tbody tr:hover>.sorting_1,table.dataTable.order-column.hover tbody tr:hover>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.082);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.082)}table.dataTable.display tbody tr:hover>.sorting_2,table.dataTable.order-column.hover tbody tr:hover>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.074);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.074)}table.dataTable.display tbody tr:hover>.sorting_3,table.dataTable.order-column.hover tbody tr:hover>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0,0,0,.062);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.062)}table.dataTable.display tbody tr:hover.selected>.sorting_1,table.dataTable.order-column.hover tbody tr:hover.selected>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.982);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.982)}table.dataTable.display tbody tr:hover.selected>.sorting_2,table.dataTable.order-column.hover tbody tr:hover.selected>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.974);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.974)}table.dataTable.display tbody tr:hover.selected>.sorting_3,table.dataTable.order-column.hover tbody tr:hover.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13,110,253,.962);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.962)}table.dataTable.compact thead th,table.dataTable.compact thead td,table.dataTable.compact tfoot th,table.dataTable.compact tfoot td,table.dataTable.compact tbody th,table.dataTable.compact tbody td{padding:4px}div.dt-container{position:relative;clear:both}div.dt-container div.dt-layout-row{display:table;clear:both;width:100%}div.dt-container div.dt-layout-row.dt-layout-table{display:block}div.dt-container div.dt-layout-row.dt-layout-table div.dt-layout-cell{display:block}div.dt-container div.dt-layout-cell{display:table-cell;vertical-align:middle;padding:5px 0}div.dt-container div.dt-layout-cell.dt-full{text-align:center}div.dt-container div.dt-layout-cell.dt-start{text-align:left}div.dt-container div.dt-layout-cell.dt-end{text-align:right}div.dt-container div.dt-layout-cell:empty{display:none}div.dt-container .dt-search input{border:1px solid #aaa;border-radius:3px;padding:5px;background-color:rgba(0,0,0,0);color:inherit;margin-left:3px}div.dt-container .dt-input{border:1px solid #aaa;border-radius:3px;padding:5px;background-color:rgba(0,0,0,0);color:inherit}div.dt-container select.dt-input{padding:4px}div.dt-container .dt-paging .dt-paging-button{box-sizing:border-box;display:inline-block;min-width:1.5em;padding:.5em 1em;margin-left:2px;text-align:center;text-decoration:none !important;cursor:pointer;color:inherit !important;border:1px solid rgba(0,0,0,0);border-radius:2px;background:rgba(0,0,0,0)}div.dt-container .dt-paging .dt-paging-button.current,div.dt-container .dt-paging .dt-paging-button.current:hover{color:inherit !important;border:1px solid rgba(0,0,0,.3);background-color:rgba(0,0,0,.05);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(230, 230, 230, 0.05)), color-stop(100%, rgba(0, 0, 0, 0.05)));background:-webkit-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:-moz-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:-ms-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:-o-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:linear-gradient(to bottom, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%)}div.dt-container .dt-paging .dt-paging-button.disabled,div.dt-container .dt-paging .dt-paging-button.disabled:hover,div.dt-container .dt-paging .dt-paging-button.disabled:active{cursor:default;color:rgba(0,0,0,.5) !important;border:1px solid rgba(0,0,0,0);background:rgba(0,0,0,0);box-shadow:none}div.dt-container .dt-paging .dt-paging-button:hover{color:#fff !important;border:1px solid #111;background-color:#111;background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #585858), color-stop(100%, #111));background:-webkit-linear-gradient(top, #585858 0%, #111 100%);background:-moz-linear-gradient(top, #585858 0%, #111 100%);background:-ms-linear-gradient(top, #585858 0%, #111 100%);background:-o-linear-gradient(top, #585858 0%, #111 100%);background:linear-gradient(to bottom, #585858 0%, #111 100%)}div.dt-container .dt-paging .dt-paging-button:active{outline:none;background-color:#0c0c0c;background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #2b2b2b), color-stop(100%, #0c0c0c));background:-webkit-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:-moz-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:-ms-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:-o-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:linear-gradient(to bottom, #2b2b2b 0%, #0c0c0c 100%);box-shadow:inset 0 0 3px #111}div.dt-container .dt-paging .ellipsis{padding:0 1em}div.dt-container .dt-length,div.dt-container .dt-search,div.dt-container .dt-info,div.dt-container .dt-processing,div.dt-container .dt-paging{color:inherit}div.dt-container .dataTables_scroll{clear:both}div.dt-container .dataTables_scroll div.dt-scroll-body{-webkit-overflow-scrolling:touch}div.dt-container .dataTables_scroll div.dt-scroll-body>table>thead>tr>th,div.dt-container .dataTables_scroll div.dt-scroll-body>table>thead>tr>td,div.dt-container .dataTables_scroll div.dt-scroll-body>table>tbody>tr>th,div.dt-container .dataTables_scroll div.dt-scroll-body>table>tbody>tr>td{vertical-align:middle}div.dt-container .dataTables_scroll div.dt-scroll-body>table>thead>tr>th>div.dataTables_sizing,div.dt-container .dataTables_scroll div.dt-scroll-body>table>thead>tr>td>div.dataTables_sizing,div.dt-container .dataTables_scroll div.dt-scroll-body>table>tbody>tr>th>div.dataTables_sizing,div.dt-container .dataTables_scroll div.dt-scroll-body>table>tbody>tr>td>div.dataTables_sizing{height:0;overflow:hidden;margin:0 !important;padding:0 !important}div.dt-container.dt-empty-footer tbody>tr:last-child>*{border-bottom:1px solid rgba(0,0,0,.3)}div.dt-container.dt-empty-footer .dt-scroll-body{border-bottom:1px solid rgba(0,0,0,.3)}div.dt-container.dt-empty-footer .dt-scroll-body tbody>tr:last-child>*{border-bottom:none}@media screen and (max-width: 767px){div.dt-container div.dt-layout-row{display:block}div.dt-container div.dt-layout-cell{display:block}div.dt-container div.dt-layout-cell.dt-full,div.dt-container div.dt-layout-cell.dt-start,div.dt-container div.dt-layout-cell.dt-end{text-align:center}}@media screen and (max-width: 640px){.dt-container .dt-length,.dt-container .dt-search{float:none;text-align:center}.dt-container .dt-search{margin-top:.5em}}html.dark{--dt-row-hover: 255, 255, 255;--dt-row-stripe: 255, 255, 255;--dt-column-ordering: 255, 255, 255}html.dark table.dataTable>thead>tr>th,html.dark table.dataTable>thead>tr>td{border-bottom:1px solid #595b5e}html.dark table.dataTable>thead>tr>th:active,html.dark table.dataTable>thead>tr>td:active{outline:none}html.dark table.dataTable>tfoot>tr>th,html.dark table.dataTable>tfoot>tr>td{border-top:1px solid #595b5e}html.dark table.dataTable.row-border>tbody>tr>*,html.dark table.dataTable.display>tbody>tr>*{border-top:1px solid #404346}html.dark table.dataTable.row-border>tbody>tr:first-child>*,html.dark table.dataTable.display>tbody>tr:first-child>*{border-top:none}html.dark table.dataTable.row-border>tbody>tr.selected+tr.selected>td,html.dark table.dataTable.display>tbody>tr.selected+tr.selected>td{border-top-color:rgba(13,110,253,.65);border-top-color:rgba(var(--dt-row-selected), 0.65)}html.dark table.dataTable.cell-border>tbody>tr>th,html.dark table.dataTable.cell-border>tbody>tr>td{border-top:1px solid #404346;border-right:1px solid #404346}html.dark table.dataTable.cell-border>tbody>tr>th:first-child,html.dark table.dataTable.cell-border>tbody>tr>td:first-child{border-left:1px solid #404346}html.dark .dt-container.dt-empty-footer table.dataTable{border-bottom:1px solid #595b5e}html.dark .dt-container .dt-search input,html.dark .dt-container .dt-length select{border:1px solid rgba(255,255,255,.2);background-color:var(--dt-html-background)}html.dark .dt-container .dt-paging .dt-paging-button.current,html.dark .dt-container .dt-paging .dt-paging-button.current:hover{border:1px solid #595b5e;background:rgba(255,255,255,.15)}html.dark .dt-container .dt-paging .dt-paging-button.disabled,html.dark .dt-container .dt-paging .dt-paging-button.disabled:hover,html.dark .dt-container .dt-paging .dt-paging-button.disabled:active{color:#666 !important}html.dark .dt-container .dt-paging .dt-paging-button:hover{border:1px solid #353535;background:#353535}html.dark .dt-container .dt-paging .dt-paging-button:active{background:#3a3a3a}*[dir=rtl] table.dataTable thead th,*[dir=rtl] table.dataTable thead td,*[dir=rtl] table.dataTable tfoot th,*[dir=rtl] table.dataTable tfoot td{text-align:right}*[dir=rtl] table.dataTable th.dt-type-numeric,*[dir=rtl] table.dataTable th.dt-type-date,*[dir=rtl] table.dataTable td.dt-type-numeric,*[dir=rtl] table.dataTable td.dt-type-date{text-align:left}*[dir=rtl] div.dt-container div.dt-layout-cell.dt-start{text-align:right}*[dir=rtl] div.dt-container div.dt-layout-cell.dt-end{text-align:left}*[dir=rtl] div.dt-container div.dt-search input{margin:0 3px 0 0}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 6314:
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ 4417:
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    options = {};
  }
  if (!url) {
    return url;
  }
  url = String(url.__esModule ? url.default : url);

  // If url is already wrapped in quotes, remove them
  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }
  if (options.hash) {
    url += options.hash;
  }

  // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls
  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }
  return url;
};

/***/ }),

/***/ 1601:
/***/ ((module) => {

"use strict";


module.exports = function (i) {
  return i[1];
};

/***/ }),

/***/ 2838:
/***/ (function(module) {

/*! @license DOMPurify 3.1.2 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.2/LICENSE */

(function (global, factory) {
   true ? module.exports = factory() :
  0;
})(this, (function () { 'use strict';

  const {
    entries,
    setPrototypeOf,
    isFrozen,
    getPrototypeOf,
    getOwnPropertyDescriptor
  } = Object;
  let {
    freeze,
    seal,
    create
  } = Object; // eslint-disable-line import/no-mutable-exports
  let {
    apply,
    construct
  } = typeof Reflect !== 'undefined' && Reflect;
  if (!freeze) {
    freeze = function freeze(x) {
      return x;
    };
  }
  if (!seal) {
    seal = function seal(x) {
      return x;
    };
  }
  if (!apply) {
    apply = function apply(fun, thisValue, args) {
      return fun.apply(thisValue, args);
    };
  }
  if (!construct) {
    construct = function construct(Func, args) {
      return new Func(...args);
    };
  }
  const arrayForEach = unapply(Array.prototype.forEach);
  const arrayPop = unapply(Array.prototype.pop);
  const arrayPush = unapply(Array.prototype.push);
  const stringToLowerCase = unapply(String.prototype.toLowerCase);
  const stringToString = unapply(String.prototype.toString);
  const stringMatch = unapply(String.prototype.match);
  const stringReplace = unapply(String.prototype.replace);
  const stringIndexOf = unapply(String.prototype.indexOf);
  const stringTrim = unapply(String.prototype.trim);
  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);
  const regExpTest = unapply(RegExp.prototype.test);
  const typeErrorCreate = unconstruct(TypeError);

  /**
   * Creates a new function that calls the given function with a specified thisArg and arguments.
   *
   * @param {Function} func - The function to be wrapped and called.
   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.
   */
  function unapply(func) {
    return function (thisArg) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return apply(func, thisArg, args);
    };
  }

  /**
   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.
   *
   * @param {Function} func - The constructor function to be wrapped and called.
   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.
   */
  function unconstruct(func) {
    return function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return construct(func, args);
    };
  }

  /**
   * Add properties to a lookup table
   *
   * @param {Object} set - The set to which elements will be added.
   * @param {Array} array - The array containing elements to be added to the set.
   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.
   * @returns {Object} The modified set with added elements.
   */
  function addToSet(set, array) {
    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;
    if (setPrototypeOf) {
      // Make 'in' and truthy checks like Boolean(set.constructor)
      // independent of any properties defined on Object.prototype.
      // Prevent prototype setters from intercepting set as a this value.
      setPrototypeOf(set, null);
    }
    let l = array.length;
    while (l--) {
      let element = array[l];
      if (typeof element === 'string') {
        const lcElement = transformCaseFunc(element);
        if (lcElement !== element) {
          // Config presets (e.g. tags.js, attrs.js) are immutable.
          if (!isFrozen(array)) {
            array[l] = lcElement;
          }
          element = lcElement;
        }
      }
      set[element] = true;
    }
    return set;
  }

  /**
   * Clean up an array to harden against CSPP
   *
   * @param {Array} array - The array to be cleaned.
   * @returns {Array} The cleaned version of the array
   */
  function cleanArray(array) {
    for (let index = 0; index < array.length; index++) {
      const isPropertyExist = objectHasOwnProperty(array, index);
      if (!isPropertyExist) {
        array[index] = null;
      }
    }
    return array;
  }

  /**
   * Shallow clone an object
   *
   * @param {Object} object - The object to be cloned.
   * @returns {Object} A new object that copies the original.
   */
  function clone(object) {
    const newObject = create(null);
    for (const [property, value] of entries(object)) {
      const isPropertyExist = objectHasOwnProperty(object, property);
      if (isPropertyExist) {
        if (Array.isArray(value)) {
          newObject[property] = cleanArray(value);
        } else if (value && typeof value === 'object' && value.constructor === Object) {
          newObject[property] = clone(value);
        } else {
          newObject[property] = value;
        }
      }
    }
    return newObject;
  }

  /**
   * This method automatically checks if the prop is function or getter and behaves accordingly.
   *
   * @param {Object} object - The object to look up the getter function in its prototype chain.
   * @param {String} prop - The property name for which to find the getter function.
   * @returns {Function} The getter function found in the prototype chain or a fallback function.
   */
  function lookupGetter(object, prop) {
    while (object !== null) {
      const desc = getOwnPropertyDescriptor(object, prop);
      if (desc) {
        if (desc.get) {
          return unapply(desc.get);
        }
        if (typeof desc.value === 'function') {
          return unapply(desc.value);
        }
      }
      object = getPrototypeOf(object);
    }
    function fallbackValue() {
      return null;
    }
    return fallbackValue;
  }

  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);

  // SVG
  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);
  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);

  // List of SVG elements that are disallowed by default.
  // We still need to know them so that we can do namespace
  // checks properly in case one wants to add them to
  // allow-list.
  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);
  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);

  // Similarly to SVG, we want to know all MathML elements,
  // even those that we disallow by default.
  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);
  const text = freeze(['#text']);

  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);
  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);
  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);
  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);

  // eslint-disable-next-line unicorn/better-regex
  const MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode
  const ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
  const TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
  const DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/); // eslint-disable-line no-useless-escape
  const ARIA_ATTR = seal(/^aria-[\-\w]+$/); // eslint-disable-line no-useless-escape
  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i // eslint-disable-line no-useless-escape
  );

  const IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
  const ATTR_WHITESPACE = seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g // eslint-disable-line no-control-regex
  );

  const DOCTYPE_NAME = seal(/^html$/i);
  const CUSTOM_ELEMENT = seal(/^[a-z][.\w]*(-[.\w]+)+$/i);

  var EXPRESSIONS = /*#__PURE__*/Object.freeze({
    __proto__: null,
    MUSTACHE_EXPR: MUSTACHE_EXPR,
    ERB_EXPR: ERB_EXPR,
    TMPLIT_EXPR: TMPLIT_EXPR,
    DATA_ATTR: DATA_ATTR,
    ARIA_ATTR: ARIA_ATTR,
    IS_ALLOWED_URI: IS_ALLOWED_URI,
    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,
    ATTR_WHITESPACE: ATTR_WHITESPACE,
    DOCTYPE_NAME: DOCTYPE_NAME,
    CUSTOM_ELEMENT: CUSTOM_ELEMENT
  });

  const getGlobal = function getGlobal() {
    return typeof window === 'undefined' ? null : window;
  };

  /**
   * Creates a no-op policy for internal use only.
   * Don't export this function outside this module!
   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.
   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).
   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types
   * are not supported or creating the policy failed).
   */
  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {
    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {
      return null;
    }

    // Allow the callers to control the unique policy name
    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.
    // Policy creation with duplicate names throws in Trusted Types.
    let suffix = null;
    const ATTR_NAME = 'data-tt-policy-suffix';
    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {
      suffix = purifyHostElement.getAttribute(ATTR_NAME);
    }
    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');
    try {
      return trustedTypes.createPolicy(policyName, {
        createHTML(html) {
          return html;
        },
        createScriptURL(scriptUrl) {
          return scriptUrl;
        }
      });
    } catch (_) {
      // Policy creation failed (most likely another DOMPurify script has
      // already run). Skip creating the policy, as this will only cause errors
      // if TT are enforced.
      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');
      return null;
    }
  };
  function createDOMPurify() {
    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();
    const DOMPurify = root => createDOMPurify(root);

    /**
     * Version label, exposed for easier checks
     * if DOMPurify is up to date or not
     */
    DOMPurify.version = '3.1.2';

    /**
     * Array of elements that DOMPurify removed during sanitation.
     * Empty if nothing was removed.
     */
    DOMPurify.removed = [];
    if (!window || !window.document || window.document.nodeType !== 9) {
      // Not running in a browser, provide a factory function
      // so that you can pass your own Window
      DOMPurify.isSupported = false;
      return DOMPurify;
    }
    let {
      document
    } = window;
    const originalDocument = document;
    const currentScript = originalDocument.currentScript;
    const {
      DocumentFragment,
      HTMLTemplateElement,
      Node,
      Element,
      NodeFilter,
      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,
      HTMLFormElement,
      DOMParser,
      trustedTypes
    } = window;
    const ElementPrototype = Element.prototype;
    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');
    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');
    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');
    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');

    // As per issue #47, the web-components registry is inherited by a
    // new document created via createHTMLDocument. As per the spec
    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
    // a new empty registry is used when creating a template contents owner
    // document, so we use that as our parent document to ensure nothing
    // is inherited.
    if (typeof HTMLTemplateElement === 'function') {
      const template = document.createElement('template');
      if (template.content && template.content.ownerDocument) {
        document = template.content.ownerDocument;
      }
    }
    let trustedTypesPolicy;
    let emptyHTML = '';
    const {
      implementation,
      createNodeIterator,
      createDocumentFragment,
      getElementsByTagName
    } = document;
    const {
      importNode
    } = originalDocument;
    let hooks = {};

    /**
     * Expose whether this browser supports running the full DOMPurify.
     */
    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;
    const {
      MUSTACHE_EXPR,
      ERB_EXPR,
      TMPLIT_EXPR,
      DATA_ATTR,
      ARIA_ATTR,
      IS_SCRIPT_OR_DATA,
      ATTR_WHITESPACE,
      CUSTOM_ELEMENT
    } = EXPRESSIONS;
    let {
      IS_ALLOWED_URI: IS_ALLOWED_URI$1
    } = EXPRESSIONS;

    /**
     * We consider the elements and attributes below to be safe. Ideally
     * don't add any new ones but feel free to remove unwanted ones.
     */

    /* allowed element names */
    let ALLOWED_TAGS = null;
    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);

    /* Allowed attribute names */
    let ALLOWED_ATTR = null;
    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);

    /*
     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.
     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)
     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)
     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.
     */
    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {
      tagNameCheck: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: null
      },
      attributeNameCheck: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: null
      },
      allowCustomizedBuiltInElements: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: false
      }
    }));

    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */
    let FORBID_TAGS = null;

    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */
    let FORBID_ATTR = null;

    /* Decide if ARIA attributes are okay */
    let ALLOW_ARIA_ATTR = true;

    /* Decide if custom data attributes are okay */
    let ALLOW_DATA_ATTR = true;

    /* Decide if unknown protocols are okay */
    let ALLOW_UNKNOWN_PROTOCOLS = false;

    /* Decide if self-closing tags in attributes are allowed.
     * Usually removed due to a mXSS issue in jQuery 3.0 */
    let ALLOW_SELF_CLOSE_IN_ATTR = true;

    /* Output should be safe for common template engines.
     * This means, DOMPurify removes data attributes, mustaches and ERB
     */
    let SAFE_FOR_TEMPLATES = false;

    /* Output should be safe even for XML used within HTML and alike.
     * This means, DOMPurify removes comments when containing risky content.
     */
    let SAFE_FOR_XML = true;

    /* Decide if document with <html>... should be returned */
    let WHOLE_DOCUMENT = false;

    /* Track whether config is already set on this instance of DOMPurify. */
    let SET_CONFIG = false;

    /* Decide if all elements (e.g. style, script) must be children of
     * document.body. By default, browsers might move them to document.head */
    let FORCE_BODY = false;

    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html
     * string (or a TrustedHTML object if Trusted Types are supported).
     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
     */
    let RETURN_DOM = false;

    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html
     * string  (or a TrustedHTML object if Trusted Types are supported) */
    let RETURN_DOM_FRAGMENT = false;

    /* Try to return a Trusted Type object instead of a string, return a string in
     * case Trusted Types are not supported  */
    let RETURN_TRUSTED_TYPE = false;

    /* Output should be free from DOM clobbering attacks?
     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.
     */
    let SANITIZE_DOM = true;

    /* Achieve full DOM Clobbering protection by isolating the namespace of named
     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.
     *
     * HTML/DOM spec rules that enable DOM Clobbering:
     *   - Named Access on Window (§7.3.3)
     *   - DOM Tree Accessors (§3.1.5)
     *   - Form Element Parent-Child Relations (§4.10.3)
     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)
     *   - HTMLCollection (§4.2.10.2)
     *
     * Namespace isolation is implemented by prefixing `id` and `name` attributes
     * with a constant string, i.e., `user-content-`
     */
    let SANITIZE_NAMED_PROPS = false;
    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';

    /* Keep element content when removing element? */
    let KEEP_CONTENT = true;

    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead
     * of importing it into a new Document and returning a sanitized copy */
    let IN_PLACE = false;

    /* Allow usage of profiles like html, svg and mathMl */
    let USE_PROFILES = {};

    /* Tags to ignore content of when KEEP_CONTENT is true */
    let FORBID_CONTENTS = null;
    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);

    /* Tags that are safe for data: URIs */
    let DATA_URI_TAGS = null;
    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);

    /* Attributes safe for values like "javascript:" */
    let URI_SAFE_ATTRIBUTES = null;
    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);
    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    /* Document namespace */
    let NAMESPACE = HTML_NAMESPACE;
    let IS_EMPTY_INPUT = false;

    /* Allowed XHTML+XML namespaces */
    let ALLOWED_NAMESPACES = null;
    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);

    /* Parsing of strict XHTML documents */
    let PARSER_MEDIA_TYPE = null;
    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];
    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';
    let transformCaseFunc = null;

    /* Keep a reference to config to pass to hooks */
    let CONFIG = null;

    /* Specify the maximum element nesting depth to prevent mXSS */
    const MAX_NESTING_DEPTH = 255;

    /* Ideally, do not touch anything below this line */
    /* ______________________________________________ */

    const formElement = document.createElement('form');
    const isRegexOrFunction = function isRegexOrFunction(testValue) {
      return testValue instanceof RegExp || testValue instanceof Function;
    };

    /**
     * _parseConfig
     *
     * @param  {Object} cfg optional config literal
     */
    // eslint-disable-next-line complexity
    const _parseConfig = function _parseConfig() {
      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (CONFIG && CONFIG === cfg) {
        return;
      }

      /* Shield configuration object from tampering */
      if (!cfg || typeof cfg !== 'object') {
        cfg = {};
      }

      /* Shield configuration object from prototype pollution */
      cfg = clone(cfg);
      PARSER_MEDIA_TYPE =
      // eslint-disable-next-line unicorn/prefer-includes
      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;

      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.
      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;

      /* Set configuration parameters */
      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),
      // eslint-disable-line indent
      cfg.ADD_URI_SAFE_ATTR,
      // eslint-disable-line indent
      transformCaseFunc // eslint-disable-line indent
      ) // eslint-disable-line indent
      : DEFAULT_URI_SAFE_ATTRIBUTES;
      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),
      // eslint-disable-line indent
      cfg.ADD_DATA_URI_TAGS,
      // eslint-disable-line indent
      transformCaseFunc // eslint-disable-line indent
      ) // eslint-disable-line indent
      : DEFAULT_DATA_URI_TAGS;
      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;
      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true
      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true
      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false
      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true
      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false
      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true
      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false
      RETURN_DOM = cfg.RETURN_DOM || false; // Default false
      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false
      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false
      FORCE_BODY = cfg.FORCE_BODY || false; // Default false
      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true
      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false
      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true
      IN_PLACE = cfg.IN_PLACE || false; // Default false
      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;
      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
      }
      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
      }
      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {
        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
      }
      if (SAFE_FOR_TEMPLATES) {
        ALLOW_DATA_ATTR = false;
      }
      if (RETURN_DOM_FRAGMENT) {
        RETURN_DOM = true;
      }

      /* Parse profile info */
      if (USE_PROFILES) {
        ALLOWED_TAGS = addToSet({}, text);
        ALLOWED_ATTR = [];
        if (USE_PROFILES.html === true) {
          addToSet(ALLOWED_TAGS, html$1);
          addToSet(ALLOWED_ATTR, html);
        }
        if (USE_PROFILES.svg === true) {
          addToSet(ALLOWED_TAGS, svg$1);
          addToSet(ALLOWED_ATTR, svg);
          addToSet(ALLOWED_ATTR, xml);
        }
        if (USE_PROFILES.svgFilters === true) {
          addToSet(ALLOWED_TAGS, svgFilters);
          addToSet(ALLOWED_ATTR, svg);
          addToSet(ALLOWED_ATTR, xml);
        }
        if (USE_PROFILES.mathMl === true) {
          addToSet(ALLOWED_TAGS, mathMl$1);
          addToSet(ALLOWED_ATTR, mathMl);
          addToSet(ALLOWED_ATTR, xml);
        }
      }

      /* Merge configuration parameters */
      if (cfg.ADD_TAGS) {
        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
          ALLOWED_TAGS = clone(ALLOWED_TAGS);
        }
        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
      }
      if (cfg.ADD_ATTR) {
        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
          ALLOWED_ATTR = clone(ALLOWED_ATTR);
        }
        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
      }
      if (cfg.ADD_URI_SAFE_ATTR) {
        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
      }
      if (cfg.FORBID_CONTENTS) {
        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
          FORBID_CONTENTS = clone(FORBID_CONTENTS);
        }
        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
      }

      /* Add #text in case KEEP_CONTENT is set to true */
      if (KEEP_CONTENT) {
        ALLOWED_TAGS['#text'] = true;
      }

      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */
      if (WHOLE_DOCUMENT) {
        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);
      }

      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */
      if (ALLOWED_TAGS.table) {
        addToSet(ALLOWED_TAGS, ['tbody']);
        delete FORBID_TAGS.tbody;
      }
      if (cfg.TRUSTED_TYPES_POLICY) {
        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {
          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        }
        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {
          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        }

        // Overwrite existing TrustedTypes policy.
        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;

        // Sign local variables required by `sanitize`.
        emptyHTML = trustedTypesPolicy.createHTML('');
      } else {
        // Uninitialized policy, attempt to initialize the internal dompurify policy.
        if (trustedTypesPolicy === undefined) {
          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);
        }

        // If creating the internal policy succeeded sign internal variables.
        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {
          emptyHTML = trustedTypesPolicy.createHTML('');
        }
      }

      // Prevent further manipulation of configuration.
      // Not available in IE8, Safari 5, etc.
      if (freeze) {
        freeze(cfg);
      }
      CONFIG = cfg;
    };
    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);
    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'annotation-xml']);

    // Certain elements are allowed in both SVG and HTML
    // namespace. We need to specify them explicitly
    // so that they don't get erroneously deleted from
    // HTML namespace.
    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);

    /* Keep track of all possible SVG and MathML tags
     * so that we can perform the namespace checks
     * correctly. */
    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);
    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);

    /**
     * @param  {Element} element a DOM element whose namespace is being checked
     * @returns {boolean} Return false if the element has a
     *  namespace that a spec-compliant parser would never
     *  return. Return true otherwise.
     */
    const _checkValidNamespace = function _checkValidNamespace(element) {
      let parent = getParentNode(element);

      // In JSDOM, if we're inside shadow DOM, then parentNode
      // can be null. We just simulate parent in this case.
      if (!parent || !parent.tagName) {
        parent = {
          namespaceURI: NAMESPACE,
          tagName: 'template'
        };
      }
      const tagName = stringToLowerCase(element.tagName);
      const parentTagName = stringToLowerCase(parent.tagName);
      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
        return false;
      }
      if (element.namespaceURI === SVG_NAMESPACE) {
        // The only way to switch from HTML namespace to SVG
        // is via <svg>. If it happens via any other tag, then
        // it should be killed.
        if (parent.namespaceURI === HTML_NAMESPACE) {
          return tagName === 'svg';
        }

        // The only way to switch from MathML to SVG is via`
        // svg if parent is either <annotation-xml> or MathML
        // text integration points.
        if (parent.namespaceURI === MATHML_NAMESPACE) {
          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
        }

        // We only allow elements that are defined in SVG
        // spec. All others are disallowed in SVG namespace.
        return Boolean(ALL_SVG_TAGS[tagName]);
      }
      if (element.namespaceURI === MATHML_NAMESPACE) {
        // The only way to switch from HTML namespace to MathML
        // is via <math>. If it happens via any other tag, then
        // it should be killed.
        if (parent.namespaceURI === HTML_NAMESPACE) {
          return tagName === 'math';
        }

        // The only way to switch from SVG to MathML is via
        // <math> and HTML integration points
        if (parent.namespaceURI === SVG_NAMESPACE) {
          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];
        }

        // We only allow elements that are defined in MathML
        // spec. All others are disallowed in MathML namespace.
        return Boolean(ALL_MATHML_TAGS[tagName]);
      }
      if (element.namespaceURI === HTML_NAMESPACE) {
        // The only way to switch from SVG to HTML is via
        // HTML integration points, and from MathML to HTML
        // is via MathML text integration points
        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
          return false;
        }
        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
          return false;
        }

        // We disallow tags that are specific for MathML
        // or SVG and should never appear in HTML namespace
        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
      }

      // For XHTML and XML documents that support custom namespaces
      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {
        return true;
      }

      // The code should never reach this place (this means
      // that the element somehow got namespace that is not
      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).
      // Return false just in case.
      return false;
    };

    /**
     * _forceRemove
     *
     * @param  {Node} node a DOM node
     */
    const _forceRemove = function _forceRemove(node) {
      arrayPush(DOMPurify.removed, {
        element: node
      });
      try {
        // eslint-disable-next-line unicorn/prefer-dom-node-remove
        node.parentNode.removeChild(node);
      } catch (_) {
        node.remove();
      }
    };

    /**
     * _removeAttribute
     *
     * @param  {String} name an Attribute name
     * @param  {Node} node a DOM node
     */
    const _removeAttribute = function _removeAttribute(name, node) {
      try {
        arrayPush(DOMPurify.removed, {
          attribute: node.getAttributeNode(name),
          from: node
        });
      } catch (_) {
        arrayPush(DOMPurify.removed, {
          attribute: null,
          from: node
        });
      }
      node.removeAttribute(name);

      // We void attribute values for unremovable "is"" attributes
      if (name === 'is' && !ALLOWED_ATTR[name]) {
        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
          try {
            _forceRemove(node);
          } catch (_) {}
        } else {
          try {
            node.setAttribute(name, '');
          } catch (_) {}
        }
      }
    };

    /**
     * _initDocument
     *
     * @param  {String} dirty a string of dirty markup
     * @return {Document} a DOM, filled with the dirty markup
     */
    const _initDocument = function _initDocument(dirty) {
      /* Create a HTML document */
      let doc = null;
      let leadingWhitespace = null;
      if (FORCE_BODY) {
        dirty = '<remove></remove>' + dirty;
      } else {
        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */
        const matches = stringMatch(dirty, /^[\r\n\t ]+/);
        leadingWhitespace = matches && matches[0];
      }
      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {
        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)
        dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + '</body></html>';
      }
      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
      /*
       * Use the DOMParser API by default, fallback later if needs be
       * DOMParser not work for svg when has multiple root element.
       */
      if (NAMESPACE === HTML_NAMESPACE) {
        try {
          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
        } catch (_) {}
      }

      /* Use createHTMLDocument in case DOMParser is not available */
      if (!doc || !doc.documentElement) {
        doc = implementation.createDocument(NAMESPACE, 'template', null);
        try {
          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
        } catch (_) {
          // Syntax error if dirtyPayload is invalid xml
        }
      }
      const body = doc.body || doc.documentElement;
      if (dirty && leadingWhitespace) {
        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);
      }

      /* Work on whole document or just its body */
      if (NAMESPACE === HTML_NAMESPACE) {
        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
      }
      return WHOLE_DOCUMENT ? doc.documentElement : body;
    };

    /**
     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.
     *
     * @param  {Node} root The root element or node to start traversing on.
     * @return {NodeIterator} The created NodeIterator
     */
    const _createNodeIterator = function _createNodeIterator(root) {
      return createNodeIterator.call(root.ownerDocument || root, root,
      // eslint-disable-next-line no-bitwise
      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);
    };

    /**
     * _isClobbered
     *
     * @param  {Node} elm element to check for clobbering attacks
     * @return {Boolean} true if clobbered, false if safe
     */
    const _isClobbered = function _isClobbered(elm) {
      return elm instanceof HTMLFormElement && (
      // eslint-disable-next-line unicorn/no-typeof-undefined
      typeof elm.__depth !== 'undefined' && typeof elm.__depth !== 'number' ||
      // eslint-disable-next-line unicorn/no-typeof-undefined
      typeof elm.__removalCount !== 'undefined' && typeof elm.__removalCount !== 'number' || typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');
    };

    /**
     * Checks whether the given object is a DOM node.
     *
     * @param  {Node} object object to check whether it's a DOM node
     * @return {Boolean} true is object is a DOM node
     */
    const _isNode = function _isNode(object) {
      return typeof Node === 'function' && object instanceof Node;
    };

    /**
     * _executeHook
     * Execute user configurable hooks
     *
     * @param  {String} entryPoint  Name of the hook's entry point
     * @param  {Node} currentNode node to work on with the hook
     * @param  {Object} data additional hook parameters
     */
    const _executeHook = function _executeHook(entryPoint, currentNode, data) {
      if (!hooks[entryPoint]) {
        return;
      }
      arrayForEach(hooks[entryPoint], hook => {
        hook.call(DOMPurify, currentNode, data, CONFIG);
      });
    };

    /**
     * _sanitizeElements
     *
     * @protect nodeName
     * @protect textContent
     * @protect removeChild
     *
     * @param   {Node} currentNode to check for permission to exist
     * @return  {Boolean} true if node was killed, false if left alive
     */
    const _sanitizeElements = function _sanitizeElements(currentNode) {
      let content = null;

      /* Execute a hook if present */
      _executeHook('beforeSanitizeElements', currentNode, null);

      /* Check if element is clobbered or can clobber */
      if (_isClobbered(currentNode)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Now let's check the element's type and name */
      const tagName = transformCaseFunc(currentNode.nodeName);

      /* Execute a hook if present */
      _executeHook('uponSanitizeElement', currentNode, {
        tagName,
        allowedTags: ALLOWED_TAGS
      });

      /* Detect mXSS attempts abusing namespace confusion */
      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Remove any ocurrence of processing instructions */
      if (currentNode.nodeType === 7) {
        _forceRemove(currentNode);
        return true;
      }

      /* Remove any kind of possibly harmful comments */
      if (SAFE_FOR_XML && currentNode.nodeType === 8 && regExpTest(/<[/\w]/g, currentNode.data)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Remove element if anything forbids its presence */
      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
        /* Check if we have a custom element to handle */
        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {
          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {
            return false;
          }
          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {
            return false;
          }
        }

        /* Keep content except for bad-listed elements */
        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
          const parentNode = getParentNode(currentNode) || currentNode.parentNode;
          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;
          if (childNodes && parentNode) {
            const childCount = childNodes.length;
            for (let i = childCount - 1; i >= 0; --i) {
              const childClone = cloneNode(childNodes[i], true);
              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;
              parentNode.insertBefore(childClone, getNextSibling(currentNode));
            }
          }
        }
        _forceRemove(currentNode);
        return true;
      }

      /* Check whether element has a valid namespace */
      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Make sure that older browsers don't get fallback-tag mXSS */
      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Sanitize element content to be template-safe */
      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
        /* Get the element's text content */
        content = currentNode.textContent;
        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {
          content = stringReplace(content, expr, ' ');
        });
        if (currentNode.textContent !== content) {
          arrayPush(DOMPurify.removed, {
            element: currentNode.cloneNode()
          });
          currentNode.textContent = content;
        }
      }

      /* Execute a hook if present */
      _executeHook('afterSanitizeElements', currentNode, null);
      return false;
    };

    /**
     * _isValidAttribute
     *
     * @param  {string} lcTag Lowercase tag name of containing element.
     * @param  {string} lcName Lowercase attribute name.
     * @param  {string} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid, otherwise false.
     */
    // eslint-disable-next-line complexity
    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {
      /* Make sure attribute cannot clobber */
      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {
        return false;
      }

      /* Allow valid data-* attributes: At least one character after "-"
          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
          We don't need to check the value; it's always URI safe. */
      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
        if (
        // First condition does a very basic check if a) it's basically a valid custom element tagname AND
        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||
        // Alternative, second condition checks if it's an `is`-attribute, AND
        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {
          return false;
        }
        /* Check value is safe. First, is attr inert? If so, is safe */
      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {
        return false;
      } else ;
      return true;
    };

    /**
     * _isBasicCustomElement
     * checks if at least one dash is included in tagName, and it's not the first char
     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name
     *
     * @param {string} tagName name of the tag of the node to sanitize
     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.
     */
    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {
      return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);
    };

    /**
     * _sanitizeAttributes
     *
     * @protect attributes
     * @protect nodeName
     * @protect removeAttribute
     * @protect setAttribute
     *
     * @param  {Node} currentNode to sanitize
     */
    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
      /* Execute a hook if present */
      _executeHook('beforeSanitizeAttributes', currentNode, null);
      const {
        attributes
      } = currentNode;

      /* Check if we have attributes; if not we might have a text node */
      if (!attributes) {
        return;
      }
      const hookEvent = {
        attrName: '',
        attrValue: '',
        keepAttr: true,
        allowedAttributes: ALLOWED_ATTR
      };
      let l = attributes.length;

      /* Go backwards over all attributes; safely remove bad ones */
      while (l--) {
        const attr = attributes[l];
        const {
          name,
          namespaceURI,
          value: attrValue
        } = attr;
        const lcName = transformCaseFunc(name);
        let value = name === 'value' ? attrValue : stringTrim(attrValue);

        /* Execute a hook if present */
        hookEvent.attrName = lcName;
        hookEvent.attrValue = value;
        hookEvent.keepAttr = true;
        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set
        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
        value = hookEvent.attrValue;
        /* Did the hooks approve of the attribute? */
        if (hookEvent.forceKeepAttr) {
          continue;
        }

        /* Remove attribute */
        _removeAttribute(name, currentNode);

        /* Did the hooks approve of the attribute? */
        if (!hookEvent.keepAttr) {
          continue;
        }

        /* Work around a security issue in jQuery 3.0 */
        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
          _removeAttribute(name, currentNode);
          continue;
        }

        /* Sanitize attribute content to be template-safe */
        if (SAFE_FOR_TEMPLATES) {
          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {
            value = stringReplace(value, expr, ' ');
          });
        }

        /* Is `value` valid for this attribute? */
        const lcTag = transformCaseFunc(currentNode.nodeName);
        if (!_isValidAttribute(lcTag, lcName, value)) {
          continue;
        }

        /* Full DOM Clobbering protection via namespace isolation,
         * Prefix id and name attributes with `user-content-`
         */
        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {
          // Remove the attribute with this value
          _removeAttribute(name, currentNode);

          // Prefix the value and later re-create the attribute with the sanitized value
          value = SANITIZE_NAMED_PROPS_PREFIX + value;
        }

        /* Handle attributes that require Trusted Types */
        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {
          if (namespaceURI) ; else {
            switch (trustedTypes.getAttributeType(lcTag, lcName)) {
              case 'TrustedHTML':
                {
                  value = trustedTypesPolicy.createHTML(value);
                  break;
                }
              case 'TrustedScriptURL':
                {
                  value = trustedTypesPolicy.createScriptURL(value);
                  break;
                }
            }
          }
        }

        /* Handle invalid data-* attribute set by try-catching it */
        try {
          if (namespaceURI) {
            currentNode.setAttributeNS(namespaceURI, name, value);
          } else {
            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. "x-schema". */
            currentNode.setAttribute(name, value);
          }
          arrayPop(DOMPurify.removed);
        } catch (_) {}
      }

      /* Execute a hook if present */
      _executeHook('afterSanitizeAttributes', currentNode, null);
    };

    /**
     * _sanitizeShadowDOM
     *
     * @param  {DocumentFragment} fragment to iterate over recursively
     */
    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {
      let shadowNode = null;
      const shadowIterator = _createNodeIterator(fragment);

      /* Execute a hook if present */
      _executeHook('beforeSanitizeShadowDOM', fragment, null);
      while (shadowNode = shadowIterator.nextNode()) {
        /* Execute a hook if present */
        _executeHook('uponSanitizeShadowNode', shadowNode, null);

        /* Sanitize tags and elements */
        if (_sanitizeElements(shadowNode)) {
          continue;
        }
        const parentNode = getParentNode(shadowNode);

        /* Set the nesting depth of an element */
        if (shadowNode.nodeType === 1) {
          if (parentNode && parentNode.__depth) {
            /*
              We want the depth of the node in the original tree, which can
              change when it's removed from its parent.
            */
            shadowNode.__depth = (shadowNode.__removalCount || 0) + parentNode.__depth + 1;
          } else {
            shadowNode.__depth = 1;
          }
        }

        /* Remove an element if nested too deeply to avoid mXSS */
        if (shadowNode.__depth >= MAX_NESTING_DEPTH) {
          _forceRemove(shadowNode);
        }

        /* Deep shadow DOM detected */
        if (shadowNode.content instanceof DocumentFragment) {
          shadowNode.content.__depth = shadowNode.__depth;
          _sanitizeShadowDOM(shadowNode.content);
        }

        /* Check attributes, sanitize if necessary */
        _sanitizeAttributes(shadowNode);
      }

      /* Execute a hook if present */
      _executeHook('afterSanitizeShadowDOM', fragment, null);
    };

    /**
     * Sanitize
     * Public method providing core sanitation functionality
     *
     * @param {String|Node} dirty string or DOM node
     * @param {Object} cfg object
     */
    // eslint-disable-next-line complexity
    DOMPurify.sanitize = function (dirty) {
      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      let body = null;
      let importedNode = null;
      let currentNode = null;
      let returnNode = null;
      /* Make sure we have a string to sanitize.
        DO NOT return early, as this will return the wrong type if
        the user has requested a DOM object rather than a string */
      IS_EMPTY_INPUT = !dirty;
      if (IS_EMPTY_INPUT) {
        dirty = '<!-->';
      }

      /* Stringify, in case dirty is an object */
      if (typeof dirty !== 'string' && !_isNode(dirty)) {
        if (typeof dirty.toString === 'function') {
          dirty = dirty.toString();
          if (typeof dirty !== 'string') {
            throw typeErrorCreate('dirty is not a string, aborting');
          }
        } else {
          throw typeErrorCreate('toString is not a function');
        }
      }

      /* Return dirty HTML if DOMPurify cannot run */
      if (!DOMPurify.isSupported) {
        return dirty;
      }

      /* Assign config vars */
      if (!SET_CONFIG) {
        _parseConfig(cfg);
      }

      /* Clean up removed elements */
      DOMPurify.removed = [];

      /* Check if dirty is correctly typed for IN_PLACE */
      if (typeof dirty === 'string') {
        IN_PLACE = false;
      }
      if (IN_PLACE) {
        /* Do some early pre-sanitization to avoid unsafe root nodes */
        if (dirty.nodeName) {
          const tagName = transformCaseFunc(dirty.nodeName);
          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');
          }
        }
      } else if (dirty instanceof Node) {
        /* If dirty is a DOM element, append to an empty document to avoid
           elements being stripped by the parser */
        body = _initDocument('<!---->');
        importedNode = body.ownerDocument.importNode(dirty, true);
        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {
          /* Node is already a body, use as is */
          body = importedNode;
        } else if (importedNode.nodeName === 'HTML') {
          body = importedNode;
        } else {
          // eslint-disable-next-line unicorn/prefer-dom-node-append
          body.appendChild(importedNode);
        }
      } else {
        /* Exit directly if we have nothing to do */
        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&
        // eslint-disable-next-line unicorn/prefer-includes
        dirty.indexOf('<') === -1) {
          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
        }

        /* Initialize the document to work on */
        body = _initDocument(dirty);

        /* Check we have a DOM node from the data */
        if (!body) {
          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';
        }
      }

      /* Remove first element node (ours) if FORCE_BODY is set */
      if (body && FORCE_BODY) {
        _forceRemove(body.firstChild);
      }

      /* Get node iterator */
      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);

      /* Now start iterating over the created document */
      while (currentNode = nodeIterator.nextNode()) {
        /* Sanitize tags and elements */
        if (_sanitizeElements(currentNode)) {
          continue;
        }
        const parentNode = getParentNode(currentNode);

        /* Set the nesting depth of an element */
        if (currentNode.nodeType === 1) {
          if (parentNode && parentNode.__depth) {
            /*
              We want the depth of the node in the original tree, which can
              change when it's removed from its parent.
            */
            currentNode.__depth = (currentNode.__removalCount || 0) + parentNode.__depth + 1;
          } else {
            currentNode.__depth = 1;
          }
        }

        /* Remove an element if nested too deeply to avoid mXSS */
        if (currentNode.__depth >= MAX_NESTING_DEPTH) {
          _forceRemove(currentNode);
        }

        /* Shadow DOM detected, sanitize it */
        if (currentNode.content instanceof DocumentFragment) {
          currentNode.content.__depth = currentNode.__depth;
          _sanitizeShadowDOM(currentNode.content);
        }

        /* Check attributes, sanitize if necessary */
        _sanitizeAttributes(currentNode);
      }

      /* If we sanitized `dirty` in-place, return it. */
      if (IN_PLACE) {
        return dirty;
      }

      /* Return sanitized string or DOM */
      if (RETURN_DOM) {
        if (RETURN_DOM_FRAGMENT) {
          returnNode = createDocumentFragment.call(body.ownerDocument);
          while (body.firstChild) {
            // eslint-disable-next-line unicorn/prefer-dom-node-append
            returnNode.appendChild(body.firstChild);
          }
        } else {
          returnNode = body;
        }
        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {
          /*
            AdoptNode() is not used because internal state is not reset
            (e.g. the past names map of a HTMLFormElement), this is safe
            in theory but we would rather not risk another attack vector.
            The state that is cloned by importNode() is explicitly defined
            by the specs.
          */
          returnNode = importNode.call(originalDocument, returnNode, true);
        }
        return returnNode;
      }
      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;

      /* Serialize doctype if allowed */
      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\n' + serializedHTML;
      }

      /* Sanitize final string template-safe */
      if (SAFE_FOR_TEMPLATES) {
        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {
          serializedHTML = stringReplace(serializedHTML, expr, ' ');
        });
      }
      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
    };

    /**
     * Public method to set the configuration once
     * setConfig
     *
     * @param {Object} cfg configuration object
     */
    DOMPurify.setConfig = function () {
      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _parseConfig(cfg);
      SET_CONFIG = true;
    };

    /**
     * Public method to remove the configuration
     * clearConfig
     *
     */
    DOMPurify.clearConfig = function () {
      CONFIG = null;
      SET_CONFIG = false;
    };

    /**
     * Public method to check if an attribute value is valid.
     * Uses last set config, if any. Otherwise, uses config defaults.
     * isValidAttribute
     *
     * @param  {String} tag Tag name of containing element.
     * @param  {String} attr Attribute name.
     * @param  {String} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
     */
    DOMPurify.isValidAttribute = function (tag, attr, value) {
      /* Initialize shared config vars if necessary. */
      if (!CONFIG) {
        _parseConfig({});
      }
      const lcTag = transformCaseFunc(tag);
      const lcName = transformCaseFunc(attr);
      return _isValidAttribute(lcTag, lcName, value);
    };

    /**
     * AddHook
     * Public method to add DOMPurify hooks
     *
     * @param {String} entryPoint entry point for the hook to add
     * @param {Function} hookFunction function to execute
     */
    DOMPurify.addHook = function (entryPoint, hookFunction) {
      if (typeof hookFunction !== 'function') {
        return;
      }
      hooks[entryPoint] = hooks[entryPoint] || [];
      arrayPush(hooks[entryPoint], hookFunction);
    };

    /**
     * RemoveHook
     * Public method to remove a DOMPurify hook at a given entryPoint
     * (pops it from the stack of hooks if more are present)
     *
     * @param {String} entryPoint entry point for the hook to remove
     * @return {Function} removed(popped) hook
     */
    DOMPurify.removeHook = function (entryPoint) {
      if (hooks[entryPoint]) {
        return arrayPop(hooks[entryPoint]);
      }
    };

    /**
     * RemoveHooks
     * Public method to remove all DOMPurify hooks at a given entryPoint
     *
     * @param  {String} entryPoint entry point for the hooks to remove
     */
    DOMPurify.removeHooks = function (entryPoint) {
      if (hooks[entryPoint]) {
        hooks[entryPoint] = [];
      }
    };

    /**
     * RemoveAllHooks
     * Public method to remove all DOMPurify hooks
     */
    DOMPurify.removeAllHooks = function () {
      hooks = {};
    };
    return DOMPurify;
  }
  var purify = createDOMPurify();

  return purify;

}));
//# sourceMappingURL=purify.js.map


/***/ }),

/***/ 580:
/***/ ((module) => {

"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */



/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Module exports.
 * @public
 */

module.exports = escapeHtml;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34: // "
        escape = '&quot;';
        break;
      case 38: // &
        escape = '&amp;';
        break;
      case 39: // '
        escape = '&#39;';
        break;
      case 60: // <
        escape = '&lt;';
        break;
      case 62: // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index
    ? html + str.substring(lastIndex, index)
    : html;
}


/***/ }),

/***/ 2508:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  ms: () => (/* binding */ Dropdown),
  yw: () => (/* binding */ VTooltip),
  fF: () => (/* binding */ options)
});

// UNUSED EXPORTS: HIDE_EVENT_MAP, Menu, Popper, PopperContent, PopperMethods, PopperWrapper, SHOW_EVENT_MAP, ThemeClass, Tooltip, TooltipDirective, VClosePopper, createTooltip, default, destroyTooltip, hideAllPoppers, install, placements

;// CONCATENATED MODULE: ./node_modules/floating-vue/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js
function getBasePlacement(placement) {
  return placement.split('-')[0];
}

function getAlignment(placement) {
  return placement.split('-')[1];
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].includes(getBasePlacement(placement)) ? 'x' : 'y';
}

function getLengthFromAxis(axis) {
  return axis === 'y' ? 'height' : 'width';
}

function computeCoordsFromPlacement(_ref) {
  let {
    reference,
    floating,
    placement
  } = _ref;
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  let coords;

  switch (getBasePlacement(placement)) {
    case 'top':
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;

    case 'bottom':
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case 'right':
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case 'left':
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;

    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }

  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);

  switch (getAlignment(placement)) {
    case 'start':
      coords[mainAxis] = coords[mainAxis] - (reference[length] / 2 - floating[length] / 2);
      break;

    case 'end':
      coords[mainAxis] = coords[mainAxis] + (reference[length] / 2 - floating[length] / 2);
      break;
  }

  return coords;
}

const computePosition = async (reference, floating, config) => {
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    platform
  } = config;

  if (false) {}

  let rects = await platform.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement({ ...rects,
    placement
  });
  let statefulPlacement = placement;
  let middlewareData = {};
  let _debug_loop_count_ = 0;

  for (let i = 0; i < middleware.length; i++) {
    if (false) {}

    const {
      name,
      fn
    } = middleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = { ...middlewareData,
      [name]: data != null ? data : {}
    };

    if (reset) {
      if (typeof reset === 'object') {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }

        if (reset.rects) {
          rects = reset.rects === true ? await platform.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }

        ({
          x,
          y
        } = computeCoordsFromPlacement({ ...rects,
          placement: statefulPlacement
        }));
      }

      i = -1;
      continue;
    }
  }

  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};

function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}

function getSideObjectFromPadding(padding) {
  return typeof padding !== 'number' ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}

function rectToClientRect(rect) {
  return { ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}

async function detectOverflow(middlewareArguments, options) {
  if (options === void 0) {
    options = {};
  }

  const {
    x,
    y,
    platform,
    rects,
    elements,
    strategy
  } = middlewareArguments;
  const {
    boundary = 'clippingParents',
    rootBoundary = 'viewport',
    elementContext = 'floating',
    altBoundary = false,
    padding = 0
  } = options;
  const paddingObject = getSideObjectFromPadding(padding);
  const altContext = elementContext === 'floating' ? 'reference' : 'floating';
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = await platform.getClippingClientRect({
    element: (await platform.isElement(element)) ? element : element.contextElement || (await platform.getDocumentElement({
      element: elements.floating
    })),
    boundary,
    rootBoundary
  });
  const elementClientRect = rectToClientRect(await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect: elementContext === 'floating' ? { ...rects.floating,
      x,
      y
    } : rects.reference,
    offsetParent: await platform.getOffsetParent({
      element: elements.floating
    }),
    strategy
  })); // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  return {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
}

const min = Math.min;
const max = Math.max;

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}

const arrow = options => ({
  name: 'arrow',
  options,

  async fn(middlewareArguments) {
    // Since `element` is required, we don't Partial<> the type
    const {
      element,
      padding = 0
    } = options != null ? options : {};
    const {
      x,
      y,
      placement,
      rects,
      platform
    } = middlewareArguments;

    if (element == null) {
      if (false) {}

      return {};
    }

    const paddingObject = getSideObjectFromPadding(padding);
    const coords = {
      x,
      y
    };
    const basePlacement = getBasePlacement(placement);
    const axis = getMainAxisFromPlacement(basePlacement);
    const length = getLengthFromAxis(axis);
    const arrowDimensions = await platform.getDimensions({
      element
    });
    const minProp = axis === 'y' ? 'top' : 'left';
    const maxProp = axis === 'y' ? 'bottom' : 'right';
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await platform.getOffsetParent({
      element
    });
    const clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center
    // point is outside of the floating element's bounds

    const min = paddingObject[minProp];
    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset = within(min, center, max);
    return {
      data: {
        [axis]: offset,
        centerOffset: center - offset
      }
    };
  }

});

const hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);
}

function getAlignmentSides(placement, rects) {
  const isStart = getAlignment(placement) === 'start';
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  let mainAlignmentSide = mainAxis === 'x' ? isStart ? 'right' : 'left' : isStart ? 'bottom' : 'top';

  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }

  return {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}

const hash = {
  start: 'end',
  end: 'start'
};
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, matched => hash[matched]);
}

const basePlacements = ['top', 'right', 'bottom', 'left'];
const allPlacements = /*#__PURE__*/basePlacements.reduce((acc, basePlacement) => acc.concat(basePlacement, basePlacement + "-start", basePlacement + "-end"), []);

function getPlacementList(alignment, autoAlignment, allowedPlacements) {
  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getBasePlacement(placement) === placement);
  return allowedPlacementsSortedByAlignment.filter(placement => {
    if (alignment) {
      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);
    }

    return true;
  });
}
const autoPlacement = function (options) {
  if (options === void 0) {
    options = {};
  }

  return {
    name: 'autoPlacement',
    options,

    async fn(middlewareArguments) {
      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _middlewareData$autoP5, _placementsSortedByLe;

      const {
        x,
        y,
        rects,
        middlewareData,
        placement
      } = middlewareArguments;
      const {
        alignment = null,
        allowedPlacements = allPlacements,
        autoAlignment = true,
        ...detectOverflowOptions
      } = options;

      if ((_middlewareData$autoP = middlewareData.autoPlacement) != null && _middlewareData$autoP.skip) {
        return {};
      }

      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const currentIndex = (_middlewareData$autoP2 = (_middlewareData$autoP3 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP3.index) != null ? _middlewareData$autoP2 : 0;
      const currentPlacement = placements[currentIndex];
      const {
        main,
        cross
      } = getAlignmentSides(currentPlacement, rects); // Make `computeCoords` start from the right place

      if (placement !== currentPlacement) {
        return {
          x,
          y,
          reset: {
            placement: placements[0]
          }
        };
      }

      const currentOverflows = [overflow[getBasePlacement(currentPlacement)], overflow[main], overflow[cross]];
      const allOverflows = [...((_middlewareData$autoP4 = (_middlewareData$autoP5 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP5.overflows) != null ? _middlewareData$autoP4 : []), {
        placement: currentPlacement,
        overflows: currentOverflows
      }];
      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check

      if (nextPlacement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: nextPlacement
          }
        };
      }

      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);
      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {
        let {
          overflows
        } = _ref;
        return overflows.every(overflow => overflow <= 0);
      })) == null ? void 0 : _placementsSortedByLe.placement;
      return {
        data: {
          skip: true
        },
        reset: {
          placement: placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement
        }
      };
    }

  };
};

function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}

const flip = function (options) {
  if (options === void 0) {
    options = {};
  }

  return {
    name: 'flip',
    options,

    async fn(middlewareArguments) {
      var _middlewareData$flip, _middlewareData$flip2;

      const {
        placement,
        middlewareData,
        rects,
        initialPlacement
      } = middlewareArguments;

      if ((_middlewareData$flip = middlewareData.flip) != null && _middlewareData$flip.skip) {
        return {};
      }

      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = 'bestFit',
        flipAlignment = true,
        ...detectOverflowOptions
      } = options;
      const basePlacement = getBasePlacement(placement);
      const isBasePlacement = basePlacement === initialPlacement;
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.overflows) || [];

      if (checkMainAxis) {
        overflows.push(overflow[basePlacement]);
      }

      if (checkCrossAxis) {
        const {
          main,
          cross
        } = getAlignmentSides(placement, rects);
        overflows.push(overflow[main], overflow[cross]);
      }

      overflowsData = [...overflowsData, {
        placement,
        overflows
      }]; // One or more sides is overflowing

      if (!overflows.every(side => side <= 0)) {
        var _middlewareData$flip$, _middlewareData$flip3;

        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip3 = middlewareData.flip) == null ? void 0 : _middlewareData$flip3.index) != null ? _middlewareData$flip$ : 0) + 1;
        const nextPlacement = placements[nextIndex];

        if (nextPlacement) {
          // Try next placement and re-run the lifecycle
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }

        let resetPlacement = 'bottom';

        switch (fallbackStrategy) {
          case 'bestFit':
            {
              var _overflowsData$slice$;

              const placement = (_overflowsData$slice$ = overflowsData.slice().sort((a, b) => a.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0) - b.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0))[0]) == null ? void 0 : _overflowsData$slice$.placement;

              if (placement) {
                resetPlacement = placement;
              }

              break;
            }

          case 'initialPlacement':
            resetPlacement = initialPlacement;
            break;
        }

        return {
          data: {
            skip: true
          },
          reset: {
            placement: resetPlacement
          }
        };
      }

      return {};
    }

  };
};

function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}

function isAnySideFullyClipped(overflow) {
  return basePlacements.some(side => overflow[side] >= 0);
}

const hide = () => ({
  name: 'hide',

  async fn(modifierArguments) {
    const referenceOverflow = await detectOverflow(modifierArguments, {
      elementContext: 'reference'
    });
    const floatingAltOverflow = await detectOverflow(modifierArguments, {
      altBoundary: true
    });
    const referenceHiddenOffsets = getSideOffsets(referenceOverflow, modifierArguments.rects.reference);
    const escapedOffsets = getSideOffsets(floatingAltOverflow, modifierArguments.rects.floating);
    const referenceHidden = isAnySideFullyClipped(referenceHiddenOffsets);
    const escaped = isAnySideFullyClipped(escapedOffsets);
    return {
      data: {
        referenceHidden,
        referenceHiddenOffsets,
        escaped,
        escapedOffsets
      }
    };
  }

});

function convertValueToCoords(_ref) {
  let {
    placement,
    rects,
    value
  } = _ref;
  const basePlacement = getBasePlacement(placement);
  const multiplier = ['left', 'top'].includes(basePlacement) ? -1 : 1;
  const rawValue = typeof value === 'function' ? value({ ...rects,
    placement
  }) : value;
  const {
    mainAxis,
    crossAxis
  } = typeof rawValue === 'number' ? {
    mainAxis: rawValue,
    crossAxis: 0
  } : {
    mainAxis: 0,
    crossAxis: 0,
    ...rawValue
  };
  return getMainAxisFromPlacement(basePlacement) === 'x' ? {
    x: crossAxis,
    y: mainAxis * multiplier
  } : {
    x: mainAxis * multiplier,
    y: crossAxis
  };
}
const offset = function (value) {
  if (value === void 0) {
    value = 0;
  }

  return {
    name: 'offset',
    options: value,

    fn(middlewareArguments) {
      const {
        x,
        y,
        placement,
        rects
      } = middlewareArguments;
      const diffCoords = convertValueToCoords({
        placement,
        rects,
        value
      });
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }

  };
};

function getCrossAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

const shift = function (options) {
  if (options === void 0) {
    options = {};
  }

  return {
    name: 'shift',
    options,

    async fn(middlewareArguments) {
      const {
        x,
        y,
        placement
      } = middlewareArguments;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: _ref => {
            let {
              x,
              y
            } = _ref;
            return {
              x,
              y
            };
          }
        },
        ...detectOverflowOptions
      } = options;
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const mainAxis = getMainAxisFromPlacement(getBasePlacement(placement));
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];

      if (checkMainAxis) {
        const minSide = mainAxis === 'y' ? 'top' : 'left';
        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';
        const min = mainAxisCoord + overflow[minSide];
        const max = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = within(min, mainAxisCoord, max);
      }

      if (checkCrossAxis) {
        const minSide = crossAxis === 'y' ? 'top' : 'left';
        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';
        const min = crossAxisCoord + overflow[minSide];
        const max = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = within(min, crossAxisCoord, max);
      }

      const limitedCoords = limiter.fn({ ...middlewareArguments,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return { ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }

  };
};
const limitShift = function (options) {
  if (options === void 0) {
    options = {};
  }

  return {
    options,

    fn(middlewareArguments) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = middlewareArguments;
      const {
        offset = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = options;
      const coords = {
        x,
        y
      };
      const mainAxis = getMainAxisFromPlacement(placement);
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = typeof offset === 'function' ? offset({ ...rects,
        placement
      }) : offset;
      const computedOffset = typeof rawOffset === 'number' ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };

      if (checkMainAxis) {
        const len = mainAxis === 'y' ? 'height' : 'width';
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;

        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }

      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;

        const len = mainAxis === 'y' ? 'width' : 'height';
        const isOriginSide = ['top', 'left'].includes(getBasePlacement(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);

        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }

      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }

  };
};

const size = function (options) {
  if (options === void 0) {
    options = {};
  }

  return {
    name: 'size',
    options,

    async fn(middlewareArguments) {
      var _middlewareData$size;

      const {
        placement,
        rects,
        middlewareData
      } = middlewareArguments;
      const {
        apply,
        ...detectOverflowOptions
      } = options;

      if ((_middlewareData$size = middlewareData.size) != null && _middlewareData$size.skip) {
        return {};
      }

      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const basePlacement = getBasePlacement(placement);
      const isEnd = getAlignment(placement) === 'end';
      let heightSide;
      let widthSide;

      if (basePlacement === 'top' || basePlacement === 'bottom') {
        heightSide = basePlacement;
        widthSide = isEnd ? 'left' : 'right';
      } else {
        widthSide = basePlacement;
        heightSide = isEnd ? 'top' : 'bottom';
      }

      const xMin = max(overflow.left, 0);
      const xMax = max(overflow.right, 0);
      const yMin = max(overflow.top, 0);
      const yMax = max(overflow.bottom, 0);
      const dimensions = {
        height: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),
        width: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])
      };
      apply == null ? void 0 : apply({ ...dimensions,
        ...rects
      });
      return {
        data: {
          skip: true
        },
        reset: {
          rects: true
        }
      };
    }

  };
};

const inline = function (options) {
  if (options === void 0) {
    options = {};
  }

  return {
    name: 'inline',
    options,

    async fn(middlewareArguments) {
      var _middlewareData$inlin, _await$platform$getCl;

      const {
        placement,
        elements,
        rects,
        platform,
        strategy,
        middlewareData
      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a
      // ClientRect's bounds, despite the event listener being triggered. A
      // padding of 2 seems to handle this issue.

      const {
        padding = 2,
        x,
        y
      } = options;

      if ((_middlewareData$inlin = middlewareData.inline) != null && _middlewareData$inlin.skip) {
        return {};
      }

      const fallback = rectToClientRect(await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
        rect: rects.reference,
        offsetParent: await platform.getOffsetParent({
          element: elements.floating
        }),
        strategy
      }));
      const clientRects = Array.from((_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects({
        element: elements.reference
      }))) != null ? _await$platform$getCl : []);
      const paddingObject = getSideObjectFromPadding(padding);

      function getBoundingClientRect() {
        // There are two rects and they are disjoined
        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {
          var _clientRects$find;

          // Find the first rect in which the point is fully inside
          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;
        } // There are 2 or more connected rects


        if (clientRects.length >= 2) {
          if (getMainAxisFromPlacement(placement) === 'x') {
            const firstRect = clientRects[0];
            const lastRect = clientRects[clientRects.length - 1];
            const isTop = getBasePlacement(placement) === 'top';
            const top = firstRect.top;
            const bottom = lastRect.bottom;
            const left = isTop ? firstRect.left : lastRect.left;
            const right = isTop ? firstRect.right : lastRect.right;
            const width = right - left;
            const height = bottom - top;
            return {
              top,
              bottom,
              left,
              right,
              width,
              height,
              x: left,
              y: top
            };
          }

          const isLeftPlacement = getBasePlacement(placement) === 'left';
          const maxRight = max(...clientRects.map(rect => rect.right));
          const minLeft = min(...clientRects.map(rect => rect.left));
          const measureRects = clientRects.filter(rect => isLeftPlacement ? rect.left === minLeft : rect.right === maxRight);
          const top = measureRects[0].top;
          const bottom = measureRects[measureRects.length - 1].bottom;
          const left = minLeft;
          const right = maxRight;
          const width = right - left;
          const height = bottom - top;
          return {
            top,
            bottom,
            left,
            right,
            width,
            height,
            x: left,
            y: top
          };
        }

        return fallback;
      }

      return {
        data: {
          skip: true
        },
        reset: {
          rects: await platform.getElementRects({
            reference: {
              getBoundingClientRect
            },
            floating: elements.floating,
            strategy
          })
        }
      };
    }

  };
};



;// CONCATENATED MODULE: ./node_modules/floating-vue/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js



function isWindow(value) {
  return (value == null ? void 0 : value.toString()) === '[object Window]';
}
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (!isWindow(node)) {
    const ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function getNodeName(node) {
  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';
}

function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement(value) {
  return value instanceof getWindow(value).Element;
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function isShadowRoot(node) {
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  const {
    overflow,
    overflowX,
    overflowY
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
function isTableElement(element) {
  return ['table', 'td', 'th'].includes(getNodeName(element));
}
function isContainingBlock(element) {
  // TODO: Try and use feature detection here instead
  const isFirefox = navigator.userAgent.toLowerCase().includes('firefox');
  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that
  // create a containing block.
  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

  return css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);
}

const floating_ui_dom_esm_min = Math.min;
const floating_ui_dom_esm_max = Math.max;
const round = Math.round;

function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  const clientRect = element.getBoundingClientRect();
  let scaleX = 1;
  let scaleY = 1;

  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  return {
    width: clientRect.width / scaleX,
    height: clientRect.height / scaleY,
    top: clientRect.top / scaleY,
    right: clientRect.right / scaleX,
    bottom: clientRect.bottom / scaleY,
    left: clientRect.left / scaleX,
    x: clientRect.left / scaleX,
    y: clientRect.top / scaleY
  };
}

function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}

function getNodeScroll(element) {
  if (isWindow(element)) {
    return {
      scrollLeft: element.pageXOffset,
      scrollTop: element.pageYOffset
    };
  }

  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}

function isScaled(element) {
  const rect = getBoundingClientRect(element);
  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;
}

function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const rect = getBoundingClientRect(element, isOffsetParentAnElement && isScaled(offsetParent));
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {
    if (getNodeName(offsetParent) !== 'body' || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function getParentNode(node) {
  if (getNodeName(node) === 'html') {
    return node;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // @ts-ignore
    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    node.parentNode || ( // DOM Element detected
    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected
    getDocumentElement(node) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
}

function getContainingBlock(element) {
  let currentNode = getParentNode(element);

  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  const window = getWindow(element);
  let offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getDimensions(element) {
  return {
    width: element.offsetWidth,
    height: element.offsetHeight
  };
}

function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);

  if (offsetParent === documentElement) {
    return rect;
  }

  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {
    if (getNodeName(offsetParent) !== 'body' || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } // This doesn't appear to be need to be negated.
    // else if (documentElement) {
    //   offsets.x = getWindowScrollBarX(documentElement);
    // }

  }

  return { ...rect,
    x: rect.x - scroll.scrollLeft + offsets.x,
    y: rect.y - scroll.scrollTop + offsets.y
  };
}

function getViewportRect(element) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed

    if (Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) < 0.01) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width,
    height,
    x,
    y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  const width = floating_ui_dom_esm_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  const height = floating_ui_dom_esm_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += floating_ui_dom_esm_max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width,
    height,
    x,
    y
  };
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].includes(getNodeName(node))) {
    // @ts-ignore assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

function getScrollParents(node, list) {
  var _node$ownerDocument;

  if (list === void 0) {
    list = [];
  }

  const scrollParent = getScrollParent(node);
  const isBody = scrollParent === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  const win = getWindow(scrollParent);
  const target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  const updatedList = list.concat(target);
  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here
  updatedList.concat(getScrollParents(getParentNode(target)));
}

function contains(parent, child) {
  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
    let next = child;

    do {
      // use `===` replace node.isSameNode()
      if (next && parent === next) {
        return true;
      } // @ts-ignore: need a better way to handle this...


      next = next.parentNode || next.host;
    } while (next);
  }

  return false;
}

function getInnerBoundingClientRect(element) {
  const clientRect = getBoundingClientRect(element);
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  return {
    top,
    left,
    x: left,
    y: top,
    right: left + element.clientWidth,
    bottom: top + element.clientHeight,
    width: element.clientWidth,
    height: element.clientHeight
  };
}

function getClientRectFromClippingParent(element, clippingParent) {
  if (clippingParent === 'viewport') {
    return rectToClientRect(getViewportRect(element));
  }

  if (isElement(clippingParent)) {
    return getInnerBoundingClientRect(clippingParent);
  }

  return rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  const clippingParents = getScrollParents(getParentNode(element));
  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);
  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // @ts-ignore isElement check ensures we return Array<Element>


  return clippingParents.filter(clippingParent => isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body');
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingClientRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary
  } = _ref;
  const mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  const clippingParents = [...mainClippingParents, rootBoundary];
  const firstClippingParent = clippingParents[0];
  const clippingRect = clippingParents.reduce((accRect, clippingParent) => {
    const rect = getClientRectFromClippingParent(element, clippingParent);
    accRect.top = floating_ui_dom_esm_max(rect.top, accRect.top);
    accRect.right = floating_ui_dom_esm_min(rect.right, accRect.right);
    accRect.bottom = floating_ui_dom_esm_min(rect.bottom, accRect.bottom);
    accRect.left = floating_ui_dom_esm_max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingParent(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

const platform = {
  getElementRects: _ref => {
    let {
      reference,
      floating,
      strategy
    } = _ref;
    return {
      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),
      floating: { ...getDimensions(floating),
        x: 0,
        y: 0
      }
    };
  },
  convertOffsetParentRelativeRectToViewportRelativeRect: args => convertOffsetParentRelativeRectToViewportRelativeRect(args),
  getOffsetParent: _ref2 => {
    let {
      element
    } = _ref2;
    return getOffsetParent(element);
  },
  isElement: value => isElement(value),
  getDocumentElement: _ref3 => {
    let {
      element
    } = _ref3;
    return getDocumentElement(element);
  },
  getClippingClientRect: args => getClippingClientRect(args),
  getDimensions: _ref4 => {
    let {
      element
    } = _ref4;
    return getDimensions(element);
  },
  getClientRects: _ref5 => {
    let {
      element
    } = _ref5;
    return element.getClientRects();
  }
};

const floating_ui_dom_esm_computePosition = (reference, floating, options) => computePosition(reference, floating, {
  platform,
  ...options
});



// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
;// CONCATENATED MODULE: ./node_modules/floating-vue/dist/floating-vue.es.js
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};


function floating_vue_es_assign(to, from) {
  for (const key in from) {
    if (Object.prototype.hasOwnProperty.call(from, key)) {
      if (typeof from[key] === "object" && to[key]) {
        floating_vue_es_assign(to[key], from[key]);
      } else {
        to[key] = from[key];
      }
    }
  }
}
const config = {
  disabled: false,
  distance: 5,
  skidding: 0,
  container: "body",
  boundary: void 0,
  instantMove: false,
  disposeTimeout: 5e3,
  popperTriggers: [],
  strategy: "absolute",
  preventOverflow: true,
  flip: true,
  shift: true,
  overflowPadding: 0,
  arrowPadding: 0,
  arrowOverflow: true,
  themes: {
    tooltip: {
      placement: "top",
      triggers: ["hover", "focus", "touch"],
      hideTriggers: (events) => [...events, "click"],
      delay: {
        show: 200,
        hide: 0
      },
      handleResize: false,
      html: false,
      loadingContent: "..."
    },
    dropdown: {
      placement: "bottom",
      triggers: ["click"],
      delay: 0,
      handleResize: true,
      autoHide: true
    },
    menu: {
      $extend: "dropdown",
      triggers: ["hover", "focus"],
      popperTriggers: ["hover", "focus"],
      delay: {
        show: 0,
        hide: 400
      }
    }
  }
};
function getDefaultConfig(theme, key) {
  let themeConfig = config.themes[theme] || {};
  let value;
  do {
    value = themeConfig[key];
    if (typeof value === "undefined") {
      if (themeConfig.$extend) {
        themeConfig = config.themes[themeConfig.$extend] || {};
      } else {
        themeConfig = null;
        value = config[key];
      }
    } else {
      themeConfig = null;
    }
  } while (themeConfig);
  return value;
}
function getThemeClasses(theme) {
  const result = [theme];
  let themeConfig = config.themes[theme] || {};
  do {
    if (themeConfig.$extend && !themeConfig.$resetCss) {
      result.push(themeConfig.$extend);
      themeConfig = config.themes[themeConfig.$extend] || {};
    } else {
      themeConfig = null;
    }
  } while (themeConfig);
  return result.map((c) => `v-popper--theme-${c}`);
}
function getAllParentThemes(theme) {
  const result = [theme];
  let themeConfig = config.themes[theme] || {};
  do {
    if (themeConfig.$extend) {
      result.push(themeConfig.$extend);
      themeConfig = config.themes[themeConfig.$extend] || {};
    } else {
      themeConfig = null;
    }
  } while (themeConfig);
  return result;
}
var vueResize = "";
let supportsPassive = false;
if (typeof window !== "undefined") {
  supportsPassive = false;
  try {
    const opts = Object.defineProperty({}, "passive", {
      get() {
        supportsPassive = true;
      }
    });
    window.addEventListener("test", null, opts);
  } catch (e) {
  }
}
let isIOS = false;
if (typeof window !== "undefined" && typeof navigator !== "undefined") {
  isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
}
const placements = ["auto", "top", "bottom", "left", "right"].reduce((acc, base) => acc.concat([
  base,
  `${base}-start`,
  `${base}-end`
]), []);
const SHOW_EVENT_MAP = {
  hover: "mouseenter",
  focus: "focus",
  click: "click",
  touch: "touchstart"
};
const HIDE_EVENT_MAP = {
  hover: "mouseleave",
  focus: "blur",
  click: "click",
  touch: "touchend"
};
function removeFromArray(array, item) {
  const index = array.indexOf(item);
  if (index !== -1) {
    array.splice(index, 1);
  }
}
function nextFrame() {
  return new Promise((resolve) => requestAnimationFrame(() => {
    requestAnimationFrame(resolve);
  }));
}
const shownPoppers = [];
let hidingPopper = null;
const shownPoppersByTheme = {};
function getShownPoppersByTheme(theme) {
  let list = shownPoppersByTheme[theme];
  if (!list) {
    list = shownPoppersByTheme[theme] = [];
  }
  return list;
}
let Element = function() {
};
if (typeof window !== "undefined") {
  Element = window.Element;
}
function defaultPropFactory(prop) {
  return function() {
    const props = this.$props;
    return getDefaultConfig(props.theme, prop);
  };
}
const PROVIDE_KEY = "__floating-vue__popper";
var PrivatePopper = () => ({
  name: "VPopper",
  props: {
    theme: {
      type: String,
      required: true
    },
    targetNodes: {
      type: Function,
      required: true
    },
    referenceNode: {
      type: Function,
      required: true
    },
    popperNode: {
      type: Function,
      required: true
    },
    shown: {
      type: Boolean,
      default: false
    },
    showGroup: {
      type: String,
      default: null
    },
    ariaId: {
      default: null
    },
    disabled: {
      type: Boolean,
      default: defaultPropFactory("disabled")
    },
    positioningDisabled: {
      type: Boolean,
      default: defaultPropFactory("positioningDisabled")
    },
    placement: {
      type: String,
      default: defaultPropFactory("placement"),
      validator: (value) => placements.includes(value)
    },
    delay: {
      type: [String, Number, Object],
      default: defaultPropFactory("delay")
    },
    distance: {
      type: [Number, String],
      default: defaultPropFactory("distance")
    },
    skidding: {
      type: [Number, String],
      default: defaultPropFactory("skidding")
    },
    triggers: {
      type: Array,
      default: defaultPropFactory("triggers")
    },
    showTriggers: {
      type: [Array, Function],
      default: defaultPropFactory("showTriggers")
    },
    hideTriggers: {
      type: [Array, Function],
      default: defaultPropFactory("hideTriggers")
    },
    popperTriggers: {
      type: Array,
      default: defaultPropFactory("popperTriggers")
    },
    popperShowTriggers: {
      type: [Array, Function],
      default: defaultPropFactory("popperShowTriggers")
    },
    popperHideTriggers: {
      type: [Array, Function],
      default: defaultPropFactory("popperHideTriggers")
    },
    container: {
      type: [String, Object, Element, Boolean],
      default: defaultPropFactory("container")
    },
    boundary: {
      type: [String, Element],
      default: defaultPropFactory("boundary")
    },
    strategy: {
      type: String,
      validator: (value) => ["absolute", "fixed"].includes(value),
      default: defaultPropFactory("strategy")
    },
    autoHide: {
      type: [Boolean, Function],
      default: defaultPropFactory("autoHide")
    },
    handleResize: {
      type: Boolean,
      default: defaultPropFactory("handleResize")
    },
    instantMove: {
      type: Boolean,
      default: defaultPropFactory("instantMove")
    },
    eagerMount: {
      type: Boolean,
      default: defaultPropFactory("eagerMount")
    },
    popperClass: {
      type: [String, Array, Object],
      default: defaultPropFactory("popperClass")
    },
    computeTransformOrigin: {
      type: Boolean,
      default: defaultPropFactory("computeTransformOrigin")
    },
    autoMinSize: {
      type: Boolean,
      default: defaultPropFactory("autoMinSize")
    },
    autoSize: {
      type: [Boolean, String],
      default: defaultPropFactory("autoSize")
    },
    autoMaxSize: {
      type: Boolean,
      default: defaultPropFactory("autoMaxSize")
    },
    autoBoundaryMaxSize: {
      type: Boolean,
      default: defaultPropFactory("autoBoundaryMaxSize")
    },
    preventOverflow: {
      type: Boolean,
      default: defaultPropFactory("preventOverflow")
    },
    overflowPadding: {
      type: [Number, String],
      default: defaultPropFactory("overflowPadding")
    },
    arrowPadding: {
      type: [Number, String],
      default: defaultPropFactory("arrowPadding")
    },
    arrowOverflow: {
      type: Boolean,
      default: defaultPropFactory("arrowOverflow")
    },
    flip: {
      type: Boolean,
      default: defaultPropFactory("flip")
    },
    shift: {
      type: Boolean,
      default: defaultPropFactory("shift")
    },
    shiftCrossAxis: {
      type: Boolean,
      default: defaultPropFactory("shiftCrossAxis")
    },
    noAutoFocus: {
      type: Boolean,
      default: defaultPropFactory("noAutoFocus")
    }
  },
  provide() {
    return {
      [PROVIDE_KEY]: {
        parentPopper: this
      }
    };
  },
  inject: {
    [PROVIDE_KEY]: { default: null }
  },
  data() {
    return {
      isShown: false,
      isMounted: false,
      skipTransition: false,
      classes: {
        showFrom: false,
        showTo: false,
        hideFrom: false,
        hideTo: true
      },
      result: {
        x: 0,
        y: 0,
        placement: "",
        strategy: this.strategy,
        arrow: {
          x: 0,
          y: 0,
          centerOffset: 0
        },
        transformOrigin: null
      },
      shownChildren: /* @__PURE__ */ new Set(),
      lastAutoHide: true
    };
  },
  computed: {
    popperId() {
      return this.ariaId != null ? this.ariaId : this.randomId;
    },
    shouldMountContent() {
      return this.eagerMount || this.isMounted;
    },
    slotData() {
      return {
        popperId: this.popperId,
        isShown: this.isShown,
        shouldMountContent: this.shouldMountContent,
        skipTransition: this.skipTransition,
        autoHide: typeof this.autoHide === "function" ? this.lastAutoHide : this.autoHide,
        show: this.show,
        hide: this.hide,
        handleResize: this.handleResize,
        onResize: this.onResize,
        classes: __spreadProps(__spreadValues({}, this.classes), {
          popperClass: this.popperClass
        }),
        result: this.positioningDisabled ? null : this.result
      };
    },
    parentPopper() {
      var _a;
      return (_a = this[PROVIDE_KEY]) == null ? void 0 : _a.parentPopper;
    },
    hasPopperShowTriggerHover() {
      var _a, _b;
      return ((_a = this.popperTriggers) == null ? void 0 : _a.includes("hover")) || ((_b = this.popperShowTriggers) == null ? void 0 : _b.includes("hover"));
    }
  },
  watch: __spreadValues(__spreadValues({
    shown: "$_autoShowHide",
    disabled(value) {
      if (value) {
        this.dispose();
      } else {
        this.init();
      }
    },
    async container() {
      if (this.isShown) {
        this.$_ensureTeleport();
        await this.$_computePosition();
      }
    }
  }, [
    "triggers",
    "positioningDisabled"
  ].reduce((acc, prop) => {
    acc[prop] = "$_refreshListeners";
    return acc;
  }, {})), [
    "placement",
    "distance",
    "skidding",
    "boundary",
    "strategy",
    "overflowPadding",
    "arrowPadding",
    "preventOverflow",
    "shift",
    "shiftCrossAxis",
    "flip"
  ].reduce((acc, prop) => {
    acc[prop] = "$_computePosition";
    return acc;
  }, {})),
  created() {
    this.$_isDisposed = true;
    this.randomId = `popper_${[Math.random(), Date.now()].map((n) => n.toString(36).substring(2, 10)).join("_")}`;
    if (this.autoMinSize) {
      console.warn('[floating-vue] `autoMinSize` option is deprecated. Use `autoSize="min"` instead.');
    }
    if (this.autoMaxSize) {
      console.warn("[floating-vue] `autoMaxSize` option is deprecated. Use `autoBoundaryMaxSize` instead.");
    }
  },
  mounted() {
    this.init();
    this.$_detachPopperNode();
  },
  activated() {
    this.$_autoShowHide();
  },
  deactivated() {
    this.hide();
  },
  beforeDestroy() {
    this.dispose();
  },
  methods: {
    show({ event = null, skipDelay = false, force = false } = {}) {
      var _a, _b;
      if (((_a = this.parentPopper) == null ? void 0 : _a.lockedChild) && this.parentPopper.lockedChild !== this)
        return;
      this.$_pendingHide = false;
      if (force || !this.disabled) {
        if (((_b = this.parentPopper) == null ? void 0 : _b.lockedChild) === this) {
          this.parentPopper.lockedChild = null;
        }
        this.$_scheduleShow(event, skipDelay);
        this.$emit("show");
        this.$_showFrameLocked = true;
        requestAnimationFrame(() => {
          this.$_showFrameLocked = false;
        });
      }
      this.$emit("update:shown", true);
    },
    hide({ event = null, skipDelay = false, skipAiming = false } = {}) {
      var _a;
      if (this.$_hideInProgress)
        return;
      if (this.shownChildren.size > 0) {
        this.$_pendingHide = true;
        return;
      }
      if (!skipAiming && this.hasPopperShowTriggerHover && this.$_isAimingPopper()) {
        if (this.parentPopper) {
          this.parentPopper.lockedChild = this;
          clearTimeout(this.parentPopper.lockedChildTimer);
          this.parentPopper.lockedChildTimer = setTimeout(() => {
            if (this.parentPopper.lockedChild === this) {
              this.parentPopper.lockedChild.hide({ skipDelay });
              this.parentPopper.lockedChild = null;
            }
          }, 1e3);
        }
        return;
      }
      if (((_a = this.parentPopper) == null ? void 0 : _a.lockedChild) === this) {
        this.parentPopper.lockedChild = null;
      }
      this.$_pendingHide = false;
      this.$_scheduleHide(event, skipDelay);
      this.$emit("hide");
      this.$emit("update:shown", false);
    },
    init() {
      if (!this.$_isDisposed)
        return;
      this.$_isDisposed = false;
      this.isMounted = false;
      this.$_events = [];
      this.$_preventShow = false;
      this.$_referenceNode = this.referenceNode();
      this.$_targetNodes = this.targetNodes().filter((e) => e.nodeType === e.ELEMENT_NODE);
      this.$_popperNode = this.popperNode();
      this.$_innerNode = this.$_popperNode.querySelector(".v-popper__inner");
      this.$_arrowNode = this.$_popperNode.querySelector(".v-popper__arrow-container");
      this.$_swapTargetAttrs("title", "data-original-title");
      this.$_detachPopperNode();
      if (this.triggers.length) {
        this.$_addEventListeners();
      }
      if (this.shown) {
        this.show();
      }
    },
    dispose() {
      if (this.$_isDisposed)
        return;
      this.$_isDisposed = true;
      this.$_removeEventListeners();
      this.hide({ skipDelay: true });
      this.$_detachPopperNode();
      this.isMounted = false;
      this.isShown = false;
      this.$_updateParentShownChildren(false);
      this.$_swapTargetAttrs("data-original-title", "title");
      this.$emit("dispose");
    },
    async onResize() {
      if (this.isShown) {
        await this.$_computePosition();
        this.$emit("resize");
      }
    },
    async $_computePosition() {
      var _a;
      if (this.$_isDisposed || this.positioningDisabled)
        return;
      const options2 = {
        strategy: this.strategy,
        middleware: []
      };
      if (this.distance || this.skidding) {
        options2.middleware.push(offset({
          mainAxis: this.distance,
          crossAxis: this.skidding
        }));
      }
      const isPlacementAuto = this.placement.startsWith("auto");
      if (isPlacementAuto) {
        options2.middleware.push(autoPlacement({
          alignment: (_a = this.placement.split("-")[1]) != null ? _a : ""
        }));
      } else {
        options2.placement = this.placement;
      }
      if (this.preventOverflow) {
        if (this.shift) {
          options2.middleware.push(shift({
            padding: this.overflowPadding,
            boundary: this.boundary,
            crossAxis: this.shiftCrossAxis
          }));
        }
        if (!isPlacementAuto && this.flip) {
          options2.middleware.push(flip({
            padding: this.overflowPadding,
            boundary: this.boundary
          }));
        }
      }
      options2.middleware.push(arrow({
        element: this.$_arrowNode,
        padding: this.arrowPadding
      }));
      if (this.arrowOverflow) {
        options2.middleware.push({
          name: "arrowOverflow",
          fn: ({ placement, rects, middlewareData }) => {
            let overflow;
            const { centerOffset } = middlewareData.arrow;
            if (placement.startsWith("top") || placement.startsWith("bottom")) {
              overflow = Math.abs(centerOffset) > rects.reference.width / 2;
            } else {
              overflow = Math.abs(centerOffset) > rects.reference.height / 2;
            }
            return {
              data: {
                overflow
              }
            };
          }
        });
      }
      if (this.autoMinSize || this.autoSize) {
        const autoSize = this.autoSize ? this.autoSize : this.autoMinSize ? "min" : null;
        options2.middleware.push({
          name: "autoSize",
          fn: ({ rects, placement, middlewareData }) => {
            var _a2;
            if ((_a2 = middlewareData.autoSize) == null ? void 0 : _a2.skip) {
              return {};
            }
            let width;
            let height;
            if (placement.startsWith("top") || placement.startsWith("bottom")) {
              width = rects.reference.width;
            } else {
              height = rects.reference.height;
            }
            this.$_innerNode.style[autoSize === "min" ? "minWidth" : autoSize === "max" ? "maxWidth" : "width"] = width != null ? `${width}px` : null;
            this.$_innerNode.style[autoSize === "min" ? "minHeight" : autoSize === "max" ? "maxHeight" : "height"] = height != null ? `${height}px` : null;
            return {
              data: {
                skip: true
              },
              reset: {
                rects: true
              }
            };
          }
        });
      }
      if (this.autoMaxSize || this.autoBoundaryMaxSize) {
        this.$_innerNode.style.maxWidth = null;
        this.$_innerNode.style.maxHeight = null;
        options2.middleware.push(size({
          boundary: this.boundary,
          padding: this.overflowPadding,
          apply: ({ width, height }) => {
            this.$_innerNode.style.maxWidth = width != null ? `${width}px` : null;
            this.$_innerNode.style.maxHeight = height != null ? `${height}px` : null;
          }
        }));
      }
      const data = await floating_ui_dom_esm_computePosition(this.$_referenceNode, this.$_popperNode, options2);
      Object.assign(this.result, {
        x: data.x,
        y: data.y,
        placement: data.placement,
        strategy: data.strategy,
        arrow: __spreadValues(__spreadValues({}, data.middlewareData.arrow), data.middlewareData.arrowOverflow)
      });
    },
    $_scheduleShow(event = null, skipDelay = false) {
      this.$_updateParentShownChildren(true);
      this.$_hideInProgress = false;
      clearTimeout(this.$_scheduleTimer);
      if (hidingPopper && this.instantMove && hidingPopper.instantMove && hidingPopper !== this.parentPopper) {
        hidingPopper.$_applyHide(true);
        this.$_applyShow(true);
        return;
      }
      if (skipDelay) {
        this.$_applyShow();
      } else {
        this.$_scheduleTimer = setTimeout(this.$_applyShow.bind(this), this.$_computeDelay("show"));
      }
    },
    $_scheduleHide(event = null, skipDelay = false) {
      if (this.shownChildren.size > 0) {
        this.$_pendingHide = true;
        return;
      }
      this.$_updateParentShownChildren(false);
      this.$_hideInProgress = true;
      clearTimeout(this.$_scheduleTimer);
      if (this.isShown) {
        hidingPopper = this;
      }
      if (skipDelay) {
        this.$_applyHide();
      } else {
        this.$_scheduleTimer = setTimeout(this.$_applyHide.bind(this), this.$_computeDelay("hide"));
      }
    },
    $_computeDelay(type) {
      const delay = this.delay;
      return parseInt(delay && delay[type] || delay || 0);
    },
    async $_applyShow(skipTransition = false) {
      clearTimeout(this.$_disposeTimer);
      clearTimeout(this.$_scheduleTimer);
      this.skipTransition = skipTransition;
      if (this.isShown) {
        return;
      }
      this.$_ensureTeleport();
      await nextFrame();
      await this.$_computePosition();
      await this.$_applyShowEffect();
      if (!this.positioningDisabled) {
        this.$_registerEventListeners([
          ...getScrollParents(this.$_referenceNode),
          ...getScrollParents(this.$_popperNode)
        ], "scroll", () => {
          this.$_computePosition();
        });
      }
    },
    async $_applyShowEffect() {
      if (this.$_hideInProgress)
        return;
      if (this.computeTransformOrigin) {
        const bounds = this.$_referenceNode.getBoundingClientRect();
        const popperWrapper = this.$_popperNode.querySelector(".v-popper__wrapper");
        const parentBounds = popperWrapper.parentNode.getBoundingClientRect();
        const x = bounds.x + bounds.width / 2 - (parentBounds.left + popperWrapper.offsetLeft);
        const y = bounds.y + bounds.height / 2 - (parentBounds.top + popperWrapper.offsetTop);
        this.result.transformOrigin = `${x}px ${y}px`;
      }
      this.isShown = true;
      this.$_applyAttrsToTarget({
        "aria-describedby": this.popperId,
        "data-popper-shown": ""
      });
      const showGroup = this.showGroup;
      if (showGroup) {
        let popover;
        for (let i = 0; i < shownPoppers.length; i++) {
          popover = shownPoppers[i];
          if (popover.showGroup !== showGroup) {
            popover.hide();
            popover.$emit("close-group");
          }
        }
      }
      shownPoppers.push(this);
      document.body.classList.add("v-popper--some-open");
      for (const theme of getAllParentThemes(this.theme)) {
        getShownPoppersByTheme(theme).push(this);
        document.body.classList.add(`v-popper--some-open--${theme}`);
      }
      this.$emit("apply-show");
      this.classes.showFrom = true;
      this.classes.showTo = false;
      this.classes.hideFrom = false;
      this.classes.hideTo = false;
      await nextFrame();
      this.classes.showFrom = false;
      this.classes.showTo = true;
      if (!this.noAutoFocus)
        this.$_popperNode.focus();
    },
    async $_applyHide(skipTransition = false) {
      if (this.shownChildren.size > 0) {
        this.$_pendingHide = true;
        this.$_hideInProgress = false;
        return;
      }
      clearTimeout(this.$_scheduleTimer);
      if (!this.isShown) {
        return;
      }
      this.skipTransition = skipTransition;
      removeFromArray(shownPoppers, this);
      if (shownPoppers.length === 0) {
        document.body.classList.remove("v-popper--some-open");
      }
      for (const theme of getAllParentThemes(this.theme)) {
        const list = getShownPoppersByTheme(theme);
        removeFromArray(list, this);
        if (list.length === 0) {
          document.body.classList.remove(`v-popper--some-open--${theme}`);
        }
      }
      if (hidingPopper === this) {
        hidingPopper = null;
      }
      this.isShown = false;
      this.$_applyAttrsToTarget({
        "aria-describedby": void 0,
        "data-popper-shown": void 0
      });
      clearTimeout(this.$_disposeTimer);
      const disposeTime = getDefaultConfig(this.theme, "disposeTimeout");
      if (disposeTime !== null) {
        this.$_disposeTimer = setTimeout(() => {
          if (this.$_popperNode) {
            this.$_detachPopperNode();
            this.isMounted = false;
          }
        }, disposeTime);
      }
      this.$_removeEventListeners("scroll");
      this.$emit("apply-hide");
      this.classes.showFrom = false;
      this.classes.showTo = false;
      this.classes.hideFrom = true;
      this.classes.hideTo = false;
      await nextFrame();
      this.classes.hideFrom = false;
      this.classes.hideTo = true;
    },
    $_autoShowHide() {
      if (this.shown) {
        this.show();
      } else {
        this.hide();
      }
    },
    $_ensureTeleport() {
      if (this.$_isDisposed)
        return;
      let container = this.container;
      if (typeof container === "string") {
        container = window.document.querySelector(container);
      } else if (container === false) {
        container = this.$_targetNodes[0].parentNode;
      }
      if (!container) {
        throw new Error("No container for popover: " + this.container);
      }
      container.appendChild(this.$_popperNode);
      this.isMounted = true;
    },
    $_addEventListeners() {
      const handleShow = (event) => {
        if (this.isShown && !this.$_hideInProgress) {
          return;
        }
        event.usedByTooltip = true;
        !this.$_preventShow && this.show({ event });
      };
      this.$_registerTriggerListeners(this.$_targetNodes, SHOW_EVENT_MAP, this.triggers, this.showTriggers, handleShow);
      this.$_registerTriggerListeners([this.$_popperNode], SHOW_EVENT_MAP, this.popperTriggers, this.popperShowTriggers, handleShow);
      const handleHide = (skipAiming) => (event) => {
        if (event.usedByTooltip) {
          return;
        }
        this.hide({ event, skipAiming });
      };
      this.$_registerTriggerListeners(this.$_targetNodes, HIDE_EVENT_MAP, this.triggers, this.hideTriggers, handleHide(false));
      this.$_registerTriggerListeners([this.$_popperNode], HIDE_EVENT_MAP, this.popperTriggers, this.popperHideTriggers, handleHide(true));
    },
    $_registerEventListeners(targetNodes, eventType, handler) {
      this.$_events.push({ targetNodes, eventType, handler });
      targetNodes.forEach((node) => node.addEventListener(eventType, handler, supportsPassive ? {
        passive: true
      } : void 0));
    },
    $_registerTriggerListeners(targetNodes, eventMap, commonTriggers, customTrigger, handler) {
      let triggers = commonTriggers;
      if (customTrigger != null) {
        triggers = typeof customTrigger === "function" ? customTrigger(triggers) : customTrigger;
      }
      triggers.forEach((trigger) => {
        const eventType = eventMap[trigger];
        if (eventType) {
          this.$_registerEventListeners(targetNodes, eventType, handler);
        }
      });
    },
    $_removeEventListeners(filterEventType) {
      const newList = [];
      this.$_events.forEach((listener) => {
        const { targetNodes, eventType, handler } = listener;
        if (!filterEventType || filterEventType === eventType) {
          targetNodes.forEach((node) => node.removeEventListener(eventType, handler));
        } else {
          newList.push(listener);
        }
      });
      this.$_events = newList;
    },
    $_refreshListeners() {
      if (!this.$_isDisposed) {
        this.$_removeEventListeners();
        this.$_addEventListeners();
      }
    },
    $_handleGlobalClose(event, touch = false) {
      if (this.$_showFrameLocked)
        return;
      this.hide({ event });
      if (event.closePopover) {
        this.$emit("close-directive");
      } else {
        this.$emit("auto-hide");
      }
      if (touch) {
        this.$_preventShow = true;
        setTimeout(() => {
          this.$_preventShow = false;
        }, 300);
      }
    },
    $_detachPopperNode() {
      this.$_popperNode.parentNode && this.$_popperNode.parentNode.removeChild(this.$_popperNode);
    },
    $_swapTargetAttrs(attrFrom, attrTo) {
      for (const el of this.$_targetNodes) {
        const value = el.getAttribute(attrFrom);
        if (value) {
          el.removeAttribute(attrFrom);
          el.setAttribute(attrTo, value);
        }
      }
    },
    $_applyAttrsToTarget(attrs) {
      for (const el of this.$_targetNodes) {
        for (const n in attrs) {
          const value = attrs[n];
          if (value == null) {
            el.removeAttribute(n);
          } else {
            el.setAttribute(n, value);
          }
        }
      }
    },
    $_updateParentShownChildren(value) {
      let parent = this.parentPopper;
      while (parent) {
        if (value) {
          parent.shownChildren.add(this.randomId);
        } else {
          parent.shownChildren.delete(this.randomId);
          if (parent.$_pendingHide) {
            parent.hide();
          }
        }
        parent = parent.parentPopper;
      }
    },
    $_isAimingPopper() {
      const referenceBounds = this.$el.getBoundingClientRect();
      if (mouseX >= referenceBounds.left && mouseX <= referenceBounds.right && mouseY >= referenceBounds.top && mouseY <= referenceBounds.bottom) {
        const popperBounds = this.$_popperNode.getBoundingClientRect();
        const vectorX = mouseX - mousePreviousX;
        const vectorY = mouseY - mousePreviousY;
        const distance = popperBounds.left + popperBounds.width / 2 - mousePreviousX + (popperBounds.top + popperBounds.height / 2) - mousePreviousY;
        const newVectorLength = distance + popperBounds.width + popperBounds.height;
        const edgeX = mousePreviousX + vectorX * newVectorLength;
        const edgeY = mousePreviousY + vectorY * newVectorLength;
        return lineIntersectsLine(mousePreviousX, mousePreviousY, edgeX, edgeY, popperBounds.left, popperBounds.top, popperBounds.left, popperBounds.bottom) || lineIntersectsLine(mousePreviousX, mousePreviousY, edgeX, edgeY, popperBounds.left, popperBounds.top, popperBounds.right, popperBounds.top) || lineIntersectsLine(mousePreviousX, mousePreviousY, edgeX, edgeY, popperBounds.right, popperBounds.top, popperBounds.right, popperBounds.bottom) || lineIntersectsLine(mousePreviousX, mousePreviousY, edgeX, edgeY, popperBounds.left, popperBounds.bottom, popperBounds.right, popperBounds.bottom);
      }
      return false;
    }
  },
  render() {
    return this.$scopedSlots.default(this.slotData)[0];
  }
});
if (typeof document !== "undefined" && typeof window !== "undefined") {
  if (isIOS) {
    document.addEventListener("touchstart", handleGlobalMousedown, supportsPassive ? {
      passive: true,
      capture: true
    } : true);
    document.addEventListener("touchend", handleGlobalTouchend, supportsPassive ? {
      passive: true,
      capture: true
    } : true);
  } else {
    window.addEventListener("mousedown", handleGlobalMousedown, true);
    window.addEventListener("click", handleGlobalClick, true);
  }
  window.addEventListener("resize", computePositionAllShownPoppers);
}
function handleGlobalMousedown(event) {
  for (let i = 0; i < shownPoppers.length; i++) {
    const popper = shownPoppers[i];
    try {
      const popperContent = popper.popperNode();
      popper.$_mouseDownContains = popperContent.contains(event.target);
    } catch (e) {
    }
  }
}
function handleGlobalClick(event) {
  handleGlobalClose(event);
}
function handleGlobalTouchend(event) {
  handleGlobalClose(event, true);
}
function handleGlobalClose(event, touch = false) {
  const preventClose = {};
  for (let i = shownPoppers.length - 1; i >= 0; i--) {
    const popper = shownPoppers[i];
    try {
      const contains = popper.$_containsGlobalTarget = isContainingEventTarget(popper, event);
      popper.$_pendingHide = false;
      requestAnimationFrame(() => {
        popper.$_pendingHide = false;
        if (preventClose[popper.randomId])
          return;
        if (shouldAutoHide(popper, contains, event)) {
          popper.$_handleGlobalClose(event, touch);
          if (!event.closeAllPopover && event.closePopover && contains) {
            let parent2 = popper.parentPopper;
            while (parent2) {
              preventClose[parent2.randomId] = true;
              parent2 = parent2.parentPopper;
            }
            return;
          }
          let parent = popper.parentPopper;
          while (parent) {
            if (shouldAutoHide(parent, parent.$_containsGlobalTarget, event)) {
              parent.$_handleGlobalClose(event, touch);
            } else {
              break;
            }
            parent = parent.parentPopper;
          }
        }
      });
    } catch (e) {
    }
  }
}
function isContainingEventTarget(popper, event) {
  const popperContent = popper.popperNode();
  return popper.$_mouseDownContains || popperContent.contains(event.target);
}
function shouldAutoHide(popper, contains, event) {
  return event.closeAllPopover || event.closePopover && contains || getAutoHideResult(popper, event) && !contains;
}
function getAutoHideResult(popper, event) {
  if (typeof popper.autoHide === "function") {
    const result = popper.autoHide(event);
    popper.lastAutoHide = result;
    return result;
  }
  return popper.autoHide;
}
function computePositionAllShownPoppers(event) {
  for (let i = 0; i < shownPoppers.length; i++) {
    const popper = shownPoppers[i];
    popper.$_computePosition(event);
  }
}
function hideAllPoppers() {
  for (let i = 0; i < shownPoppers.length; i++) {
    const popper = shownPoppers[i];
    popper.hide();
  }
}
let mousePreviousX = 0;
let mousePreviousY = 0;
let mouseX = 0;
let mouseY = 0;
if (typeof window !== "undefined") {
  window.addEventListener("mousemove", (event) => {
    mousePreviousX = mouseX;
    mousePreviousY = mouseY;
    mouseX = event.clientX;
    mouseY = event.clientY;
  }, supportsPassive ? {
    passive: true
  } : void 0);
}
function lineIntersectsLine(x1, y1, x2, y2, x3, y3, x4, y4) {
  const uA = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));
  const uB = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));
  return uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1;
}
function getInternetExplorerVersion() {
  var ua = window.navigator.userAgent;
  var msie = ua.indexOf("MSIE ");
  if (msie > 0) {
    return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)), 10);
  }
  var trident = ua.indexOf("Trident/");
  if (trident > 0) {
    var rv = ua.indexOf("rv:");
    return parseInt(ua.substring(rv + 3, ua.indexOf(".", rv)), 10);
  }
  var edge = ua.indexOf("Edge/");
  if (edge > 0) {
    return parseInt(ua.substring(edge + 5, ua.indexOf(".", edge)), 10);
  }
  return -1;
}
var isIE;
function initCompat() {
  if (!initCompat.init) {
    initCompat.init = true;
    isIE = getInternetExplorerVersion() !== -1;
  }
}
var script = {
  name: "ResizeObserver",
  props: {
    emitOnMount: {
      type: Boolean,
      default: false
    },
    ignoreWidth: {
      type: Boolean,
      default: false
    },
    ignoreHeight: {
      type: Boolean,
      default: false
    }
  },
  mounted: function mounted() {
    var _this = this;
    initCompat();
    this.$nextTick(function() {
      _this._w = _this.$el.offsetWidth;
      _this._h = _this.$el.offsetHeight;
      if (_this.emitOnMount) {
        _this.emitSize();
      }
    });
    var object = document.createElement("object");
    this._resizeObject = object;
    object.setAttribute("aria-hidden", "true");
    object.setAttribute("tabindex", -1);
    object.onload = this.addResizeHandlers;
    object.type = "text/html";
    if (isIE) {
      this.$el.appendChild(object);
    }
    object.data = "about:blank";
    if (!isIE) {
      this.$el.appendChild(object);
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.removeResizeHandlers();
  },
  methods: {
    compareAndNotify: function compareAndNotify() {
      if (!this.ignoreWidth && this._w !== this.$el.offsetWidth || !this.ignoreHeight && this._h !== this.$el.offsetHeight) {
        this._w = this.$el.offsetWidth;
        this._h = this.$el.offsetHeight;
        this.emitSize();
      }
    },
    emitSize: function emitSize() {
      this.$emit("notify", {
        width: this._w,
        height: this._h
      });
    },
    addResizeHandlers: function addResizeHandlers() {
      this._resizeObject.contentDocument.defaultView.addEventListener("resize", this.compareAndNotify);
      this.compareAndNotify();
    },
    removeResizeHandlers: function removeResizeHandlers() {
      if (this._resizeObject && this._resizeObject.onload) {
        if (!isIE && this._resizeObject.contentDocument) {
          this._resizeObject.contentDocument.defaultView.removeEventListener("resize", this.compareAndNotify);
        }
        this.$el.removeChild(this._resizeObject);
        this._resizeObject.onload = null;
        this._resizeObject = null;
      }
    }
  }
};
function normalizeComponent$1(template, style, script2, scopeId, isFunctionalTemplate, moduleIdentifier, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== "boolean") {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  }
  var options2 = typeof script2 === "function" ? script2.options : script2;
  if (template && template.render) {
    options2.render = template.render;
    options2.staticRenderFns = template.staticRenderFns;
    options2._compiled = true;
    if (isFunctionalTemplate) {
      options2.functional = true;
    }
  }
  if (scopeId) {
    options2._scopeId = scopeId;
  }
  var hook;
  if (moduleIdentifier) {
    hook = function hook2(context) {
      context = context || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
      if (!context && typeof __VUE_SSR_CONTEXT__ !== "undefined") {
        context = __VUE_SSR_CONTEXT__;
      }
      if (style) {
        style.call(this, createInjectorSSR(context));
      }
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    };
    options2._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function(context) {
      style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
    } : function(context) {
      style.call(this, createInjector(context));
    };
  }
  if (hook) {
    if (options2.functional) {
      var originalRender = options2.render;
      options2.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      var existing = options2.beforeCreate;
      options2.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }
  return script2;
}
var __vue_script__ = script;
var __vue_render__ = function __vue_render__2() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "resize-observer",
    attrs: {
      tabindex: "-1"
    }
  });
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;
var __vue_inject_styles__ = void 0;
var __vue_scope_id__ = "data-v-8859cc6c";
var __vue_module_identifier__ = void 0;
var __vue_is_functional_template__ = false;
var __vue_component__ = /* @__PURE__ */ normalizeComponent$1({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, void 0, void 0, void 0);
function install$1(Vue2) {
  Vue2.component("resize-observer", __vue_component__);
  Vue2.component("ResizeObserver", __vue_component__);
}
var plugin$1 = {
  version: "1.0.1",
  install: install$1
};
var GlobalVue$1 = null;
if (typeof window !== "undefined") {
  GlobalVue$1 = window.Vue;
} else if (typeof __webpack_require__.g !== "undefined") {
  GlobalVue$1 = __webpack_require__.g.Vue;
}
if (GlobalVue$1) {
  GlobalVue$1.use(plugin$1);
}
var PrivateThemeClass = {
  computed: {
    themeClass() {
      return getThemeClasses(this.theme);
    }
  }
};
var __vue2_script$5 = {
  name: "VPopperContent",
  components: {
    ResizeObserver: __vue_component__
  },
  mixins: [
    PrivateThemeClass
  ],
  props: {
    popperId: String,
    theme: String,
    shown: Boolean,
    mounted: Boolean,
    skipTransition: Boolean,
    autoHide: Boolean,
    handleResize: Boolean,
    classes: Object,
    result: Object
  },
  methods: {
    toPx(value) {
      if (value != null && !isNaN(value)) {
        return `${value}px`;
      }
      return null;
    }
  }
};
var render$2 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", { ref: "popover", staticClass: "v-popper__popper", class: [
    _vm.themeClass,
    _vm.classes.popperClass,
    {
      "v-popper__popper--shown": _vm.shown,
      "v-popper__popper--hidden": !_vm.shown,
      "v-popper__popper--show-from": _vm.classes.showFrom,
      "v-popper__popper--show-to": _vm.classes.showTo,
      "v-popper__popper--hide-from": _vm.classes.hideFrom,
      "v-popper__popper--hide-to": _vm.classes.hideTo,
      "v-popper__popper--skip-transition": _vm.skipTransition,
      "v-popper__popper--arrow-overflow": _vm.result && _vm.result.arrow.overflow,
      "v-popper__popper--no-positioning": !_vm.result
    }
  ], style: _vm.result ? {
    position: _vm.result.strategy,
    transform: "translate3d(" + Math.round(_vm.result.x) + "px," + Math.round(_vm.result.y) + "px,0)"
  } : void 0, attrs: { "id": _vm.popperId, "aria-hidden": _vm.shown ? "false" : "true", "tabindex": _vm.autoHide ? 0 : void 0, "data-popper-placement": _vm.result ? _vm.result.placement : void 0 }, on: { "keyup": function($event) {
    if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "esc", 27, $event.key, ["Esc", "Escape"])) {
      return null;
    }
    _vm.autoHide && _vm.$emit("hide");
  } } }, [_c("div", { staticClass: "v-popper__backdrop", on: { "click": function($event) {
    _vm.autoHide && _vm.$emit("hide");
  } } }), _c("div", { staticClass: "v-popper__wrapper", style: _vm.result ? {
    transformOrigin: _vm.result.transformOrigin
  } : void 0 }, [_c("div", { ref: "inner", staticClass: "v-popper__inner" }, [_vm.mounted ? [_c("div", [_vm._t("default")], 2), _vm.handleResize ? _c("ResizeObserver", { on: { "notify": function($event) {
    return _vm.$emit("resize", $event);
  } } }) : _vm._e()] : _vm._e()], 2), _c("div", { ref: "arrow", staticClass: "v-popper__arrow-container", style: _vm.result ? {
    left: _vm.toPx(_vm.result.arrow.x),
    top: _vm.toPx(_vm.result.arrow.y)
  } : void 0 }, [_c("div", { staticClass: "v-popper__arrow-outer" }), _c("div", { staticClass: "v-popper__arrow-inner" })])])]);
};
var staticRenderFns$2 = [];
var PopperContent_vue_vue_type_style_index_0_lang = "";
function normalizeComponent(scriptExports, render2, staticRenderFns2, functionalTemplate, injectStyles, scopeId, moduleIdentifier, shadowMode) {
  var options2 = typeof scriptExports === "function" ? scriptExports.options : scriptExports;
  if (render2) {
    options2.render = render2;
    options2.staticRenderFns = staticRenderFns2;
    options2._compiled = true;
  }
  if (functionalTemplate) {
    options2.functional = true;
  }
  if (scopeId) {
    options2._scopeId = "data-v-" + scopeId;
  }
  var hook;
  if (moduleIdentifier) {
    hook = function(context) {
      context = context || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
      if (!context && typeof __VUE_SSR_CONTEXT__ !== "undefined") {
        context = __VUE_SSR_CONTEXT__;
      }
      if (injectStyles) {
        injectStyles.call(this, context);
      }
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    };
    options2._ssrRegister = hook;
  } else if (injectStyles) {
    hook = shadowMode ? function() {
      injectStyles.call(this, (options2.functional ? this.parent : this).$root.$options.shadowRoot);
    } : injectStyles;
  }
  if (hook) {
    if (options2.functional) {
      options2._injectStyles = hook;
      var originalRender = options2.render;
      options2.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      var existing = options2.beforeCreate;
      options2.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }
  return {
    exports: scriptExports,
    options: options2
  };
}
const __cssModules$5 = {};
var __component__$5 = /* @__PURE__ */ normalizeComponent(__vue2_script$5, render$2, staticRenderFns$2, false, __vue2_injectStyles$5, null, null, null);
function __vue2_injectStyles$5(context) {
  for (let o in __cssModules$5) {
    this[o] = __cssModules$5[o];
  }
}
var PrivatePopperContent = /* @__PURE__ */ function() {
  return __component__$5.exports;
}();
var PrivatePopperMethods = {
  methods: {
    show(...args) {
      return this.$refs.popper.show(...args);
    },
    hide(...args) {
      return this.$refs.popper.hide(...args);
    },
    dispose(...args) {
      return this.$refs.popper.dispose(...args);
    },
    onResize(...args) {
      return this.$refs.popper.onResize(...args);
    }
  }
};
var __vue2_script$4 = {
  name: "VPopperWrapper",
  components: {
    Popper: PrivatePopper(),
    PopperContent: PrivatePopperContent
  },
  mixins: [
    PrivatePopperMethods,
    PrivateThemeClass
  ],
  inheritAttrs: false,
  props: {
    theme: {
      type: String,
      default() {
        return this.$options.vPopperTheme;
      }
    }
  },
  methods: {
    getTargetNodes() {
      return Array.from(this.$refs.reference.children).filter((node) => node !== this.$refs.popperContent.$el);
    }
  }
};
var render$1 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("Popper", _vm._g(_vm._b({ ref: "popper", attrs: { "theme": _vm.theme, "target-nodes": _vm.getTargetNodes, "reference-node": function() {
    return _vm.$refs.reference;
  }, "popper-node": function() {
    return _vm.$refs.popperContent.$el;
  } }, scopedSlots: _vm._u([{ key: "default", fn: function(ref) {
    var popperId = ref.popperId;
    var isShown = ref.isShown;
    var shouldMountContent = ref.shouldMountContent;
    var skipTransition = ref.skipTransition;
    var autoHide = ref.autoHide;
    var show = ref.show;
    var hide = ref.hide;
    var handleResize = ref.handleResize;
    var onResize = ref.onResize;
    var classes = ref.classes;
    var result = ref.result;
    return [_c("div", { ref: "reference", staticClass: "v-popper", class: [
      _vm.themeClass,
      {
        "v-popper--shown": isShown
      }
    ] }, [_vm._t("default", null, { "shown": isShown, "show": show, "hide": hide }), _c("PopperContent", { ref: "popperContent", attrs: { "popper-id": popperId, "theme": _vm.theme, "shown": isShown, "mounted": shouldMountContent, "skip-transition": skipTransition, "auto-hide": autoHide, "handle-resize": handleResize, "classes": classes, "result": result }, on: { "hide": hide, "resize": onResize } }, [_vm._t("popper", null, { "shown": isShown, "hide": hide })], 2)], 2)];
  } }], null, true) }, "Popper", _vm.$attrs, false), _vm.$listeners));
};
var staticRenderFns$1 = [];
const __cssModules$4 = {};
var __component__$4 = /* @__PURE__ */ normalizeComponent(__vue2_script$4, render$1, staticRenderFns$1, false, __vue2_injectStyles$4, null, null, null);
function __vue2_injectStyles$4(context) {
  for (let o in __cssModules$4) {
    this[o] = __cssModules$4[o];
  }
}
var PrivatePopperWrapper = /* @__PURE__ */ function() {
  return __component__$4.exports;
}();
var __vue2_script$3 = __spreadProps(__spreadValues({}, PrivatePopperWrapper), {
  name: "VDropdown",
  vPopperTheme: "dropdown"
});
var Dropdown_vue_vue_type_style_index_0_lang = "";
let __vue2_render$2, __vue2_staticRenderFns$2;
const __cssModules$3 = {};
var __component__$3 = /* @__PURE__ */ normalizeComponent(__vue2_script$3, __vue2_render$2, __vue2_staticRenderFns$2, false, __vue2_injectStyles$3, null, null, null);
function __vue2_injectStyles$3(context) {
  for (let o in __cssModules$3) {
    this[o] = __cssModules$3[o];
  }
}
var PrivateDropdown = /* @__PURE__ */ function() {
  return __component__$3.exports;
}();
var __vue2_script$2 = __spreadProps(__spreadValues({}, PrivatePopperWrapper), {
  name: "VMenu",
  vPopperTheme: "menu"
});
let __vue2_render$1, __vue2_staticRenderFns$1;
const __cssModules$2 = {};
var __component__$2 = /* @__PURE__ */ normalizeComponent(__vue2_script$2, __vue2_render$1, __vue2_staticRenderFns$1, false, __vue2_injectStyles$2, null, null, null);
function __vue2_injectStyles$2(context) {
  for (let o in __cssModules$2) {
    this[o] = __cssModules$2[o];
  }
}
var PrivateMenu = /* @__PURE__ */ function() {
  return __component__$2.exports;
}();
var __vue2_script$1 = __spreadProps(__spreadValues({}, PrivatePopperWrapper), {
  name: "VTooltip",
  vPopperTheme: "tooltip"
});
var Tooltip_vue_vue_type_style_index_0_lang = "";
let __vue2_render, __vue2_staticRenderFns;
const __cssModules$1 = {};
var __component__$1 = /* @__PURE__ */ normalizeComponent(__vue2_script$1, __vue2_render, __vue2_staticRenderFns, false, __vue2_injectStyles$1, null, null, null);
function __vue2_injectStyles$1(context) {
  for (let o in __cssModules$1) {
    this[o] = __cssModules$1[o];
  }
}
var PrivateTooltip = /* @__PURE__ */ function() {
  return __component__$1.exports;
}();
var __vue2_script = {
  name: "VTooltipDirective",
  components: {
    Popper: PrivatePopper(),
    PopperContent: PrivatePopperContent
  },
  mixins: [
    PrivatePopperMethods
  ],
  inheritAttrs: false,
  props: {
    theme: {
      type: String,
      default: "tooltip"
    },
    html: {
      type: Boolean,
      default() {
        return getDefaultConfig(this.theme, "html");
      }
    },
    content: {
      type: [String, Number, Function],
      default: null
    },
    loadingContent: {
      type: String,
      default() {
        return getDefaultConfig(this.theme, "loadingContent");
      }
    }
  },
  data() {
    return {
      asyncContent: null
    };
  },
  computed: {
    isContentAsync() {
      return typeof this.content === "function";
    },
    loading() {
      return this.isContentAsync && this.asyncContent == null;
    },
    finalContent() {
      if (this.isContentAsync) {
        return this.loading ? this.loadingContent : this.asyncContent;
      }
      return this.content;
    }
  },
  watch: {
    content: {
      handler() {
        this.fetchContent(true);
      },
      immediate: true
    },
    async finalContent(value) {
      await this.$nextTick();
      this.$refs.popper.onResize();
    }
  },
  created() {
    this.$_fetchId = 0;
  },
  methods: {
    fetchContent(force) {
      if (typeof this.content === "function" && this.$_isShown && (force || !this.$_loading && this.asyncContent == null)) {
        this.asyncContent = null;
        this.$_loading = true;
        const fetchId = ++this.$_fetchId;
        const result = this.content(this);
        if (result.then) {
          result.then((res) => this.onResult(fetchId, res));
        } else {
          this.onResult(fetchId, result);
        }
      }
    },
    onResult(fetchId, result) {
      if (fetchId !== this.$_fetchId)
        return;
      this.$_loading = false;
      this.asyncContent = result;
    },
    onShow() {
      this.$_isShown = true;
      this.fetchContent();
    },
    onHide() {
      this.$_isShown = false;
    }
  }
};
var render = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("Popper", _vm._g(_vm._b({ ref: "popper", attrs: { "theme": _vm.theme, "popper-node": function() {
    return _vm.$refs.popperContent.$el;
  } }, on: { "apply-show": _vm.onShow, "apply-hide": _vm.onHide }, scopedSlots: _vm._u([{ key: "default", fn: function(ref) {
    var popperId = ref.popperId;
    var isShown = ref.isShown;
    var shouldMountContent = ref.shouldMountContent;
    var skipTransition = ref.skipTransition;
    var autoHide = ref.autoHide;
    var hide = ref.hide;
    var handleResize = ref.handleResize;
    var onResize = ref.onResize;
    var classes = ref.classes;
    var result = ref.result;
    return [_c("PopperContent", { ref: "popperContent", class: {
      "v-popper--tooltip-loading": _vm.loading
    }, attrs: { "popper-id": popperId, "theme": _vm.theme, "shown": isShown, "mounted": shouldMountContent, "skip-transition": skipTransition, "auto-hide": autoHide, "handle-resize": handleResize, "classes": classes, "result": result }, on: { "hide": hide, "resize": onResize } }, [_vm.html ? _c("div", { domProps: { "innerHTML": _vm._s(_vm.finalContent) } }) : _c("div", { domProps: { "textContent": _vm._s(_vm.finalContent) } })])];
  } }]) }, "Popper", _vm.$attrs, false), _vm.$listeners));
};
var staticRenderFns = [];
const __cssModules = {};
var __component__ = /* @__PURE__ */ normalizeComponent(__vue2_script, render, staticRenderFns, false, __vue2_injectStyles, null, null, null);
function __vue2_injectStyles(context) {
  for (let o in __cssModules) {
    this[o] = __cssModules[o];
  }
}
var PrivateTooltipDirective = /* @__PURE__ */ function() {
  return __component__.exports;
}();
const TARGET_CLASS = "v-popper--has-tooltip";
function getPlacement(options2, modifiers) {
  let result = options2.placement;
  if (!result && modifiers) {
    for (const pos of placements) {
      if (modifiers[pos]) {
        result = pos;
      }
    }
  }
  if (!result) {
    result = getDefaultConfig(options2.theme || "tooltip", "placement");
  }
  return result;
}
function getOptions(el, value, modifiers) {
  let options2;
  const type = typeof value;
  if (type === "string") {
    options2 = { content: value };
  } else if (value && type === "object") {
    options2 = value;
  } else {
    options2 = { content: false };
  }
  options2.placement = getPlacement(options2, modifiers);
  options2.targetNodes = () => [el];
  options2.referenceNode = () => el;
  return options2;
}
function createTooltip(el, value, modifiers) {
  const options2 = getOptions(el, value, modifiers);
  const tooltipApp = el.$_popper = new vue_runtime_esm/* default */.Ay({
    mixins: [
      PrivatePopperMethods
    ],
    data() {
      return {
        options: options2
      };
    },
    render(h) {
      const _a = this.options, {
        theme,
        html,
        content,
        loadingContent
      } = _a, otherOptions = __objRest(_a, [
        "theme",
        "html",
        "content",
        "loadingContent"
      ]);
      return h(PrivateTooltipDirective, {
        props: {
          theme,
          html,
          content,
          loadingContent
        },
        attrs: otherOptions,
        ref: "popper"
      });
    },
    devtools: {
      hide: true
    }
  });
  const mountTarget = document.createElement("div");
  document.body.appendChild(mountTarget);
  tooltipApp.$mount(mountTarget);
  if (el.classList) {
    el.classList.add(TARGET_CLASS);
  }
  return tooltipApp;
}
function destroyTooltip(el) {
  if (el.$_popper) {
    el.$_popper.$destroy();
    delete el.$_popper;
    delete el.$_popperOldShown;
  }
  if (el.classList) {
    el.classList.remove(TARGET_CLASS);
  }
}
function bind(el, { value, oldValue, modifiers }) {
  const options2 = getOptions(el, value, modifiers);
  if (!options2.content || getDefaultConfig(options2.theme || "tooltip", "disabled")) {
    destroyTooltip(el);
  } else {
    let tooltipApp;
    if (el.$_popper) {
      tooltipApp = el.$_popper;
      tooltipApp.options = options2;
    } else {
      tooltipApp = createTooltip(el, value, modifiers);
    }
    if (typeof value.shown !== "undefined" && value.shown !== el.$_popperOldShown) {
      el.$_popperOldShown = value.shown;
      value.shown ? tooltipApp.show() : tooltipApp.hide();
    }
  }
}
var PrivateVTooltip = {
  bind,
  update: bind,
  unbind(el) {
    destroyTooltip(el);
  }
};
function addListeners(el) {
  el.addEventListener("click", onClick);
  el.addEventListener("touchstart", onTouchStart, supportsPassive ? {
    passive: true
  } : false);
}
function removeListeners(el) {
  el.removeEventListener("click", onClick);
  el.removeEventListener("touchstart", onTouchStart);
  el.removeEventListener("touchend", onTouchEnd);
  el.removeEventListener("touchcancel", onTouchCancel);
}
function onClick(event) {
  const el = event.currentTarget;
  event.closePopover = !el.$_vclosepopover_touch;
  event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;
}
function onTouchStart(event) {
  if (event.changedTouches.length === 1) {
    const el = event.currentTarget;
    el.$_vclosepopover_touch = true;
    const touch = event.changedTouches[0];
    el.$_vclosepopover_touchPoint = touch;
    el.addEventListener("touchend", onTouchEnd);
    el.addEventListener("touchcancel", onTouchCancel);
  }
}
function onTouchEnd(event) {
  const el = event.currentTarget;
  el.$_vclosepopover_touch = false;
  if (event.changedTouches.length === 1) {
    const touch = event.changedTouches[0];
    const firstTouch = el.$_vclosepopover_touchPoint;
    event.closePopover = Math.abs(touch.screenY - firstTouch.screenY) < 20 && Math.abs(touch.screenX - firstTouch.screenX) < 20;
    event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;
  }
}
function onTouchCancel(event) {
  const el = event.currentTarget;
  el.$_vclosepopover_touch = false;
}
var PrivateVClosePopper = {
  bind(el, { value, modifiers }) {
    el.$_closePopoverModifiers = modifiers;
    if (typeof value === "undefined" || value) {
      addListeners(el);
    }
  },
  update(el, { value, oldValue, modifiers }) {
    el.$_closePopoverModifiers = modifiers;
    if (value !== oldValue) {
      if (typeof value === "undefined" || value) {
        addListeners(el);
      } else {
        removeListeners(el);
      }
    }
  },
  unbind(el) {
    removeListeners(el);
  }
};
const options = config;
const VTooltip = PrivateVTooltip;
const VClosePopper = (/* unused pure expression or super */ null && (PrivateVClosePopper));
const Dropdown = PrivateDropdown;
const Menu = (/* unused pure expression or super */ null && (PrivateMenu));
const Popper = (/* unused pure expression or super */ null && (PrivatePopper));
const PopperContent = (/* unused pure expression or super */ null && (PrivatePopperContent));
const PopperMethods = (/* unused pure expression or super */ null && (PrivatePopperMethods));
const PopperWrapper = (/* unused pure expression or super */ null && (PrivatePopperWrapper));
const ThemeClass = (/* unused pure expression or super */ null && (PrivateThemeClass));
const Tooltip = (/* unused pure expression or super */ null && (PrivateTooltip));
const TooltipDirective = (/* unused pure expression or super */ null && (PrivateTooltipDirective));
function install(app, options2 = {}) {
  if (app.$_vTooltipInstalled)
    return;
  app.$_vTooltipInstalled = true;
  floating_vue_es_assign(config, options2);
  app.directive("tooltip", PrivateVTooltip);
  app.directive("close-popper", PrivateVClosePopper);
  app.component("v-tooltip", PrivateTooltip);
  app.component("VTooltip", PrivateTooltip);
  app.component("v-dropdown", PrivateDropdown);
  app.component("VDropdown", PrivateDropdown);
  app.component("v-menu", PrivateMenu);
  app.component("VMenu", PrivateMenu);
}
const floating_vue_es_plugin = {
  version: "1.0.0-beta.19",
  install,
  options: config
};
let GlobalVue = null;
if (typeof window !== "undefined") {
  GlobalVue = window.Vue;
} else if (typeof __webpack_require__.g !== "undefined") {
  GlobalVue = __webpack_require__.g.Vue;
}
if (GlobalVue) {
  GlobalVue.use(floating_vue_es_plugin);
}



/***/ }),

/***/ 2078:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  K: () => (/* binding */ createFocusTrap)
});

;// CONCATENATED MODULE: ./node_modules/tabbable/dist/index.esm.js
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
// NOTE: separate `:not()` selectors has broader browser support than the newer
//  `:not([inert], [inert] *)` (Feb 2023)
// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes
//  the entire query to fail, resulting in no nodes found, which will break a lot
//  of things... so we have to rely on JS to identify nodes inside an inert container
var candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable="false"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];
var candidateSelector = /* #__PURE__ */candidateSelectors.join(',');
var NoElement = typeof Element === 'undefined';
var matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function (element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};

/**
 * Determines if a node is inert or in an inert ancestor.
 * @param {Element} [node]
 * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to
 *  see if any of them are inert. If false, only `node` itself is considered.
 * @returns {boolean} True if inert itself or by way of being in an inert ancestor.
 *  False if `node` is falsy.
 */
var isInert = function isInert(node, lookUp) {
  var _node$getAttribute;
  if (lookUp === void 0) {
    lookUp = true;
  }
  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`
  //  JS API property; we have to check the attribute, which can either be empty or 'true';
  //  if it's `null` (not specified) or 'false', it's an active element
  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');
  var inert = inertAtt === '' || inertAtt === 'true';

  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`
  //  if it weren't for `matches()` not being a function on shadow roots; the following
  //  code works for any kind of node
  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`
  //  so it likely would not support `:is([inert] *)` either...
  var result = inert || lookUp && node && isInert(node.parentNode); // recursive

  return result;
};

/**
 * Determines if a node's content is editable.
 * @param {Element} [node]
 * @returns True if it's content-editable; false if it's not or `node` is falsy.
 */
var isContentEditable = function isContentEditable(node) {
  var _node$getAttribute2;
  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have
  //  to use the attribute directly to check for this, which can either be empty or 'true';
  //  if it's `null` (not specified) or 'false', it's a non-editable element
  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');
  return attValue === '' || attValue === 'true';
};

/**
 * @param {Element} el container to check in
 * @param {boolean} includeContainer add container to check
 * @param {(node: Element) => boolean} filter filter candidates
 * @returns {Element[]}
 */
var getCandidates = function getCandidates(el, includeContainer, filter) {
  // even if `includeContainer=false`, we still have to check it for inertness because
  //  if it's inert, all its children are inert
  if (isInert(el)) {
    return [];
  }
  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));
  if (includeContainer && matches.call(el, candidateSelector)) {
    candidates.unshift(el);
  }
  candidates = candidates.filter(filter);
  return candidates;
};

/**
 * @callback GetShadowRoot
 * @param {Element} element to check for shadow root
 * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.
 */

/**
 * @callback ShadowRootFilter
 * @param {Element} shadowHostNode the element which contains shadow content
 * @returns {boolean} true if a shadow root could potentially contain valid candidates.
 */

/**
 * @typedef {Object} CandidateScope
 * @property {Element} scopeParent contains inner candidates
 * @property {Element[]} candidates list of candidates found in the scope parent
 */

/**
 * @typedef {Object} IterativeOptions
 * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;
 *  if a function, implies shadow support is enabled and either returns the shadow root of an element
 *  or a boolean stating if it has an undisclosed shadow root
 * @property {(node: Element) => boolean} filter filter candidates
 * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list
 * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;
 */

/**
 * @param {Element[]} elements list of element containers to match candidates from
 * @param {boolean} includeContainer add container list to check
 * @param {IterativeOptions} options
 * @returns {Array.<Element|CandidateScope>}
 */
var getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {
  var candidates = [];
  var elementsToCheck = Array.from(elements);
  while (elementsToCheck.length) {
    var element = elementsToCheck.shift();
    if (isInert(element, false)) {
      // no need to look up since we're drilling down
      // anything inside this container will also be inert
      continue;
    }
    if (element.tagName === 'SLOT') {
      // add shadow dom slot scope (slot itself cannot be focusable)
      var assigned = element.assignedElements();
      var content = assigned.length ? assigned : element.children;
      var nestedCandidates = getCandidatesIteratively(content, true, options);
      if (options.flatten) {
        candidates.push.apply(candidates, nestedCandidates);
      } else {
        candidates.push({
          scopeParent: element,
          candidates: nestedCandidates
        });
      }
    } else {
      // check candidate element
      var validCandidate = matches.call(element, candidateSelector);
      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {
        candidates.push(element);
      }

      // iterate over shadow content if possible
      var shadowRoot = element.shadowRoot ||
      // check for an undisclosed shadow
      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);

      // no inert look up because we're already drilling down and checking for inertness
      //  on the way down, so all containers to this root node should have already been
      //  vetted as non-inert
      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));
      if (shadowRoot && validShadowRoot) {
        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed
        //  shadow exists, so look at light dom children as fallback BUT create a scope for any
        //  child candidates found because they're likely slotted elements (elements that are
        //  children of the web component element (which has the shadow), in the light dom, but
        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,
        //  _after_ we return from this recursive call
        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);
        if (options.flatten) {
          candidates.push.apply(candidates, _nestedCandidates);
        } else {
          candidates.push({
            scopeParent: element,
            candidates: _nestedCandidates
          });
        }
      } else {
        // there's not shadow so just dig into the element's (light dom) children
        //  __without__ giving the element special scope treatment
        elementsToCheck.unshift.apply(elementsToCheck, element.children);
      }
    }
  }
  return candidates;
};

/**
 * @private
 * Determines if the node has an explicitly specified `tabindex` attribute.
 * @param {HTMLElement} node
 * @returns {boolean} True if so; false if not.
 */
var hasTabIndex = function hasTabIndex(node) {
  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));
};

/**
 * Determine the tab index of a given node.
 * @param {HTMLElement} node
 * @returns {number} Tab order (negative, 0, or positive number).
 * @throws {Error} If `node` is falsy.
 */
var getTabIndex = function getTabIndex(node) {
  if (!node) {
    throw new Error('No node provided');
  }
  if (node.tabIndex < 0) {
    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
    // yet they are still part of the regular tab order; in FF, they get a default
    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab
    // order, consider their tab index to be 0.
    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;
    // so if they don't have a tabindex attribute specifically set, assume it's 0.
    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {
      return 0;
    }
  }
  return node.tabIndex;
};

/**
 * Determine the tab index of a given node __for sort order purposes__.
 * @param {HTMLElement} node
 * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,
 *  has tabIndex -1, but needs to be sorted by document order in order for its content to be
 *  inserted into the correct sort position.
 * @returns {number} Tab order (negative, 0, or positive number).
 */
var getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {
  var tabIndex = getTabIndex(node);
  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {
    return 0;
  }
  return tabIndex;
};
var sortOrderedTabbables = function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
};
var isInput = function isInput(node) {
  return node.tagName === 'INPUT';
};
var isHiddenInput = function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
};
var isDetailsWithSummary = function isDetailsWithSummary(node) {
  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {
    return child.tagName === 'SUMMARY';
  });
  return r;
};
var getCheckedRadio = function getCheckedRadio(nodes, form) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked && nodes[i].form === form) {
      return nodes[i];
    }
  }
};
var isTabbableRadio = function isTabbableRadio(node) {
  if (!node.name) {
    return true;
  }
  var radioScope = node.form || getRootNode(node);
  var queryRadios = function queryRadios(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };
  var radioSet;
  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {
    radioSet = queryRadios(window.CSS.escape(node.name));
  } else {
    try {
      radioSet = queryRadios(node.name);
    } catch (err) {
      // eslint-disable-next-line no-console
      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);
      return false;
    }
  }
  var checked = getCheckedRadio(radioSet, node.form);
  return !checked || checked === node;
};
var isRadio = function isRadio(node) {
  return isInput(node) && node.type === 'radio';
};
var isNonTabbableRadio = function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
};

// determines if a node is ultimately attached to the window's document
var isNodeAttached = function isNodeAttached(node) {
  var _nodeRoot;
  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise
  //  (but NOT _the_ document; see second 'If' comment below for more).
  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow
  //  is attached, and the one we need to check if it's in the document or not (because the
  //  shadow, and all nodes it contains, is never considered in the document since shadows
  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,
  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's
  //  visibility, including all the nodes it contains). The host could be any normal node,
  //  or a custom element (i.e. web component). Either way, that's the one that is considered
  //  part of the document, not the shadow root, nor any of its children (i.e. the node being
  //  tested).
  // To further complicate things, we have to look all the way up until we find a shadow HOST
  //  that is attached (or find none) because the node might be in nested shadows...
  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the
  //  document (per the docs) and while it's a Document-type object, that document does not
  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer
  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,
  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when
  //  node is actually detached.
  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible
  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed
  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then
  //  `ownerDocument` will be `null`, hence the optional chaining on it.
  var nodeRoot = node && getRootNode(node);
  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;

  // in some cases, a detached node will return itself as the root instead of a document or
  //  shadow root object, in which case, we shouldn't try to look further up the host chain
  var attached = false;
  if (nodeRoot && nodeRoot !== node) {
    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;
    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));
    while (!attached && nodeRootHost) {
      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;
      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,
      //  which means we need to get the host's host and check if that parent host is contained
      //  in (i.e. attached to) the document
      nodeRoot = getRootNode(nodeRootHost);
      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;
      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));
    }
  }
  return attached;
};
var isZeroArea = function isZeroArea(node) {
  var _node$getBoundingClie = node.getBoundingClientRect(),
    width = _node$getBoundingClie.width,
    height = _node$getBoundingClie.height;
  return width === 0 && height === 0;
};
var isHidden = function isHidden(node, _ref) {
  var displayCheck = _ref.displayCheck,
    getShadowRoot = _ref.getShadowRoot;
  // NOTE: visibility will be `undefined` if node is detached from the document
  //  (see notes about this further down), which means we will consider it visible
  //  (this is legacy behavior from a very long way back)
  // NOTE: we check this regardless of `displayCheck="none"` because this is a
  //  _visibility_ check, not a _display_ check
  if (getComputedStyle(node).visibility === 'hidden') {
    return true;
  }
  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');
  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;
  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {
    return true;
  }
  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {
    if (typeof getShadowRoot === 'function') {
      // figure out if we should consider the node to be in an undisclosed shadow and use the
      //  'non-zero-area' fallback
      var originalNode = node;
      while (node) {
        var parentElement = node.parentElement;
        var rootNode = getRootNode(node);
        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow
        ) {
          // node has an undisclosed shadow which means we can only treat it as a black box, so we
          //  fall back to a non-zero-area test
          return isZeroArea(node);
        } else if (node.assignedSlot) {
          // iterate up slot
          node = node.assignedSlot;
        } else if (!parentElement && rootNode !== node.ownerDocument) {
          // cross shadow boundary
          node = rootNode.host;
        } else {
          // iterate up normal dom
          node = parentElement;
        }
      }
      node = originalNode;
    }
    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support
    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or
    //  it might be a falsy value, which means shadow DOM support is disabled

    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)
    //  now we can just test to see if it would normally be visible or not, provided it's
    //  attached to the main document.
    // NOTE: We must consider case where node is inside a shadow DOM and given directly to
    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.

    if (isNodeAttached(node)) {
      // this works wherever the node is: if there's at least one client rect, it's
      //  somehow displayed; it also covers the CSS 'display: contents' case where the
      //  node itself is hidden in place of its contents; and there's no need to search
      //  up the hierarchy either
      return !node.getClientRects().length;
    }

    // Else, the node isn't attached to the document, which means the `getClientRects()`
    //  API will __always__ return zero rects (this can happen, for example, if React
    //  is used to render nodes onto a detached tree, as confirmed in this thread:
    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)
    //
    // It also means that even window.getComputedStyle(node).display will return `undefined`
    //  because styles are only computed for nodes that are in the document.
    //
    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable
    //  somehow. Though it was never stated officially, anyone who has ever used tabbable
    //  APIs on nodes in detached containers has actually implicitly used tabbable in what
    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck="none"` mode -- essentially
    //  considering __everything__ to be visible because of the innability to determine styles.
    //
    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached
    //  nodes as visible with the 'none' fallback.__
    if (displayCheck !== 'legacy-full') {
      return true; // hidden
    }
    // else, fallback to 'none' mode and consider the node visible
  } else if (displayCheck === 'non-zero-area') {
    // NOTE: Even though this tests that the node's client rect is non-zero to determine
    //  whether it's displayed, and that a detached node will __always__ have a zero-area
    //  client rect, we don't special-case for whether the node is attached or not. In
    //  this mode, we do want to consider nodes that have a zero area to be hidden at all
    //  times, and that includes attached or not.
    return isZeroArea(node);
  }

  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume
  //  it's visible
  return false;
};

// form fields (nested) inside a disabled fieldset are not focusable/tabbable
//  unless they are in the _first_ <legend> element of the top-most disabled
//  fieldset
var isDisabledFromFieldset = function isDisabledFromFieldset(node) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {
    var parentNode = node.parentElement;
    // check if `node` is contained in a disabled <fieldset>
    while (parentNode) {
      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {
        // look for the first <legend> among the children of the disabled <fieldset>
        for (var i = 0; i < parentNode.children.length; i++) {
          var child = parentNode.children.item(i);
          // when the first <legend> (in document order) is found
          if (child.tagName === 'LEGEND') {
            // if its parent <fieldset> is not nested in another disabled <fieldset>,
            // return whether `node` is a descendant of its first <legend>
            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);
          }
        }
        // the disabled <fieldset> containing `node` has no <legend>
        return true;
      }
      parentNode = parentNode.parentElement;
    }
  }

  // else, node's tabbable/focusable state should not be affected by a fieldset's
  //  enabled/disabled state
  return false;
};
var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {
  if (node.disabled ||
  // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||
  // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {
    return false;
  }
  return true;
};
var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {
  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {
    return false;
  }
  return true;
};
var isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {
  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);
  if (isNaN(tabIndex) || tabIndex >= 0) {
    return true;
  }
  // If a custom element has an explicit negative tabindex,
  // browsers will not allow tab targeting said element's children.
  return false;
};

/**
 * @param {Array.<Element|CandidateScope>} candidates
 * @returns Element[]
 */
var sortByOrder = function sortByOrder(candidates) {
  var regularTabbables = [];
  var orderedTabbables = [];
  candidates.forEach(function (item, i) {
    var isScope = !!item.scopeParent;
    var element = isScope ? item.scopeParent : item;
    var candidateTabindex = getSortOrderTabIndex(element, isScope);
    var elements = isScope ? sortByOrder(item.candidates) : element;
    if (candidateTabindex === 0) {
      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        item: item,
        isScope: isScope,
        content: elements
      });
    }
  });
  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {
    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);
    return acc;
  }, []).concat(regularTabbables);
};
var tabbable = function tabbable(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorTabbable.bind(null, options),
      flatten: false,
      getShadowRoot: options.getShadowRoot,
      shadowRootFilter: isValidShadowRootTabbable
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));
  }
  return sortByOrder(candidates);
};
var focusable = function focusable(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorFocusable.bind(null, options),
      flatten: true,
      getShadowRoot: options.getShadowRoot
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));
  }
  return candidates;
};
var isTabbable = function isTabbable(node, options) {
  options = options || {};
  if (!node) {
    throw new Error('No node provided');
  }
  if (matches.call(node, candidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorTabbable(options, node);
};
var focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');
var isFocusable = function isFocusable(node, options) {
  options = options || {};
  if (!node) {
    throw new Error('No node provided');
  }
  if (matches.call(node, focusableCandidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorFocusable(options, node);
};


//# sourceMappingURL=index.esm.js.map

;// CONCATENATED MODULE: ./node_modules/focus-trap/dist/focus-trap.esm.js
/*!
* focus-trap 7.5.4
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/


function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

var activeFocusTraps = {
  activateTrap: function activateTrap(trapStack, trap) {
    if (trapStack.length > 0) {
      var activeTrap = trapStack[trapStack.length - 1];
      if (activeTrap !== trap) {
        activeTrap.pause();
      }
    }
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex === -1) {
      trapStack.push(trap);
    } else {
      // move this existing trap to the front of the queue
      trapStack.splice(trapIndex, 1);
      trapStack.push(trap);
    }
  },
  deactivateTrap: function deactivateTrap(trapStack, trap) {
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex !== -1) {
      trapStack.splice(trapIndex, 1);
    }
    if (trapStack.length > 0) {
      trapStack[trapStack.length - 1].unpause();
    }
  }
};
var isSelectableInput = function isSelectableInput(node) {
  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
};
var isEscapeEvent = function isEscapeEvent(e) {
  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;
};
var isTabEvent = function isTabEvent(e) {
  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;
};

// checks for TAB by default
var isKeyForward = function isKeyForward(e) {
  return isTabEvent(e) && !e.shiftKey;
};

// checks for SHIFT+TAB by default
var isKeyBackward = function isKeyBackward(e) {
  return isTabEvent(e) && e.shiftKey;
};
var delay = function delay(fn) {
  return setTimeout(fn, 0);
};

// Array.find/findIndex() are not supported on IE; this replicates enough
//  of Array.findIndex() for our needs
var findIndex = function findIndex(arr, fn) {
  var idx = -1;
  arr.every(function (value, i) {
    if (fn(value)) {
      idx = i;
      return false; // break
    }

    return true; // next
  });

  return idx;
};

/**
 * Get an option's value when it could be a plain value, or a handler that provides
 *  the value.
 * @param {*} value Option's value to check.
 * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.
 * @returns {*} The `value`, or the handler's returned value.
 */
var valueOrHandler = function valueOrHandler(value) {
  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }
  return typeof value === 'function' ? value.apply(void 0, params) : value;
};
var getActualTarget = function getActualTarget(event) {
  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the
  //  shadow host. However, event.target.composedPath() will be an array of
  //  nodes "clicked" from inner-most (the actual element inside the shadow) to
  //  outer-most (the host HTML document). If we have access to composedPath(),
  //  then use its first element; otherwise, fall back to event.target (and
  //  this only works for an _open_ shadow DOM; otherwise,
  //  composedPath()[0] === event.target always).
  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;
};

// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this
//  current instance use the same stack if `userOptions.trapStack` isn't specified
var internalTrapStack = [];
var createFocusTrap = function createFocusTrap(elements, userOptions) {
  // SSR: a live trap shouldn't be created in this type of environment so this
  //  should be safe code to execute if the `document` option isn't specified
  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;
  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;
  var config = _objectSpread2({
    returnFocusOnDeactivate: true,
    escapeDeactivates: true,
    delayInitialFocus: true,
    isKeyForward: isKeyForward,
    isKeyBackward: isKeyBackward
  }, userOptions);
  var state = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   posTabIndexesFound: boolean,
    //   firstTabbableNode: HTMLElement|undefined,
    //   lastTabbableNode: HTMLElement|undefined,
    //   firstDomTabbableNode: HTMLElement|undefined,
    //   lastDomTabbableNode: HTMLElement|undefined,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list

    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: undefined,
    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any
    recentNavEvent: undefined
  };
  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later

  /**
   * Gets a configuration option value.
   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,
   *  value will be taken from this object. Otherwise, value will be taken from base configuration.
   * @param {string} optionName Name of the option whose value is sought.
   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`
   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.
   */
  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {
    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];
  };

  /**
   * Finds the index of the container that contains the element.
   * @param {HTMLElement} element
   * @param {Event} [event] If available, and `element` isn't directly found in any container,
   *  the event's composed path is used to see if includes any known trap containers in the
   *  case where the element is inside a Shadow DOM.
   * @returns {number} Index of the container in either `state.containers` or
   *  `state.containerGroups` (the order/length of these lists are the same); -1
   *  if the element isn't found.
   */
  var findContainerIndex = function findContainerIndex(element, event) {
    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;
    // NOTE: search `containerGroups` because it's possible a group contains no tabbable
    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)
    //  and we still need to find the element in there
    return state.containerGroups.findIndex(function (_ref) {
      var container = _ref.container,
        tabbableNodes = _ref.tabbableNodes;
      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any
      //  web components if the `tabbableOptions.getShadowRoot` option was used for
      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't
      //  look inside web components even if open)
      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {
        return node === element;
      });
    });
  };

  /**
   * Gets the node for the given option, which is expected to be an option that
   *  can be either a DOM node, a string that is a selector to get a node, `false`
   *  (if a node is explicitly NOT given), or a function that returns any of these
   *  values.
   * @param {string} optionName
   * @returns {undefined | false | HTMLElement | SVGElement} Returns
   *  `undefined` if the option is not specified; `false` if the option
   *  resolved to `false` (node explicitly not given); otherwise, the resolved
   *  DOM node.
   * @throws {Error} If the option is set, not `false`, and is not, or does not
   *  resolve to a node.
   */
  var getNodeForOption = function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    if (typeof optionValue === 'function') {
      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        params[_key2 - 1] = arguments[_key2];
      }
      optionValue = optionValue.apply(void 0, params);
    }
    if (optionValue === true) {
      optionValue = undefined; // use default value
    }

    if (!optionValue) {
      if (optionValue === undefined || optionValue === false) {
        return optionValue;
      }
      // else, empty string (invalid), null (invalid), 0 (invalid)

      throw new Error("`".concat(optionName, "` was specified but was not a node, or did not return a node"));
    }
    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point

    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue); // resolve to node, or null if fails
      if (!node) {
        throw new Error("`".concat(optionName, "` as selector refers to no known node"));
      }
    }
    return node;
  };
  var getInitialFocusNode = function getInitialFocusNode() {
    var node = getNodeForOption('initialFocus');

    // false explicitly indicates we want no initialFocus at all
    if (node === false) {
      return false;
    }
    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {
      // option not specified nor focusable: use fallback options
      if (findContainerIndex(doc.activeElement) >= 0) {
        node = doc.activeElement;
      } else {
        var firstTabbableGroup = state.tabbableGroups[0];
        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;

        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)
        node = firstTabbableNode || getNodeForOption('fallbackFocus');
      }
    }
    if (!node) {
      throw new Error('Your focus-trap needs to have at least one focusable element');
    }
    return node;
  };
  var updateTabbableNodes = function updateTabbableNodes() {
    state.containerGroups = state.containers.map(function (container) {
      var tabbableNodes = tabbable(container, config.tabbableOptions);

      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes
      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes
      //  are focusable but not tabbable
      var focusableNodes = focusable(container, config.tabbableOptions);
      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;
      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;
      var firstDomTabbableNode = focusableNodes.find(function (node) {
        return isTabbable(node);
      });
      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {
        return isTabbable(node);
      });
      var posTabIndexesFound = !!tabbableNodes.find(function (node) {
        return getTabIndex(node) > 0;
      });
      return {
        container: container,
        tabbableNodes: tabbableNodes,
        focusableNodes: focusableNodes,
        /** True if at least one node with positive `tabindex` was found in this container. */
        posTabIndexesFound: posTabIndexesFound,
        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */
        firstTabbableNode: firstTabbableNode,
        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */
        lastTabbableNode: lastTabbableNode,
        // NOTE: DOM order is NOT NECESSARILY "document position" order, but figuring that out
        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
        //  because that API doesn't work with Shadow DOM as well as it should (@see
        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,
        //  to address an edge case related to positive tabindex support, this seems like a much easier,
        //  "close enough most of the time" alternative for positive tabindexes which should generally
        //  be avoided anyway...
        /** First tabbable node in container, __DOM__ order; `undefined` if none. */
        firstDomTabbableNode: firstDomTabbableNode,
        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */
        lastDomTabbableNode: lastDomTabbableNode,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function nextTabbableNode(node) {
          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var nodeIdx = tabbableNodes.indexOf(node);
          if (nodeIdx < 0) {
            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):
            //  since `node` should at least have been focusable, we assume that's the case and mimic
            //  what browsers do, which is set focus to the next node in __document position order__,
            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE
            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to
            //  basic DOM order
            if (forward) {
              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {
                return isTabbable(el);
              });
            }
            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {
              return isTabbable(el);
            });
          }
          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];
        }
      };
    });
    state.tabbableGroups = state.containerGroups.filter(function (group) {
      return group.tabbableNodes.length > 0;
    });

    // throw if no groups have tabbable nodes and we don't have a fallback focus node either
    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option
    ) {
      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');
    }

    // NOTE: Positive tabindexes are only properly supported in single-container traps because
    //  doing it across multiple containers where tabindexes could be all over the place
    //  would require Tabbable to support multiple containers, would require additional
    //  specialized Shadow DOM support, and would require Tabbable's multi-container support
    //  to look at those containers in document position order rather than user-provided
    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on
    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.
    if (state.containerGroups.find(function (g) {
      return g.posTabIndexesFound;
    }) && state.containerGroups.length > 1) {
      throw new Error("At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.");
    }
  };

  /**
   * Gets the current activeElement. If it's a web-component and has open shadow-root
   * it will recursively search inside shadow roots for the "true" activeElement.
   *
   * @param {Document | ShadowRoot} el
   *
   * @returns {HTMLElement} The element that currently has the focus
   **/
  var getActiveElement = function getActiveElement(el) {
    var activeElement = el.activeElement;
    if (!activeElement) {
      return;
    }
    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {
      return getActiveElement(activeElement.shadowRoot);
    }
    return activeElement;
  };
  var tryFocus = function tryFocus(node) {
    if (node === false) {
      return;
    }
    if (node === getActiveElement(document)) {
      return;
    }
    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }
    node.focus({
      preventScroll: !!config.preventScroll
    });
    // NOTE: focus() API does not trigger focusIn event so set MRU node manually
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  };
  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {
    var node = getNodeForOption('setReturnFocus', previousActiveElement);
    return node ? node : node === false ? false : previousActiveElement;
  };

  /**
   * Finds the next node (in either direction) where focus should move according to a
   *  keyboard focus-in event.
   * @param {Object} params
   * @param {Node} [params.target] Known target __from which__ to navigate, if any.
   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event
   *  will be used to determine the `target`). Ignored if `target` is specified.
   * @param {boolean} [params.isBackward] True if focus should move backward.
   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be
   *  determined given the current state of the trap.
   */
  var findNextNavNode = function findNextNavNode(_ref2) {
    var target = _ref2.target,
      event = _ref2.event,
      _ref2$isBackward = _ref2.isBackward,
      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;
    target = target || getActualTarget(event);
    updateTabbableNodes();
    var destinationNode = null;
    if (state.tabbableGroups.length > 0) {
      // make sure the target is actually contained in a group
      // NOTE: the target may also be the container itself if it's focusable
      //  with tabIndex='-1' and was given initial focus
      var containerIndex = findContainerIndex(target, event);
      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;
      if (containerIndex < 0) {
        // target not found in any group: quite possible focus has escaped the trap,
        //  so bring it back into...
        if (isBackward) {
          // ...the last node in the last group
          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;
        } else {
          // ...the first node in the first group
          destinationNode = state.tabbableGroups[0].firstTabbableNode;
        }
      } else if (isBackward) {
        // REVERSE

        // is the target the first tabbable node in a group?
        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {
          var firstTabbableNode = _ref3.firstTabbableNode;
          return target === firstTabbableNode;
        });
        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {
          // an exception case where the target is either the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus)
          //  and is not followed by any other tabbable node, in which
          //  case, we should handle shift+tab as if focus were on the container's
          //  first tabbable node, and go to the last tabbable node of the LAST group
          startOfGroupIndex = containerIndex;
        }
        if (startOfGroupIndex >= 0) {
          // YES: then shift+tab should go to the last tabbable node in the
          //  previous group (and wrap around to the last tabbable node of
          //  the LAST group if it's the first tabbable node of the FIRST group)
          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;
          var destinationGroup = state.tabbableGroups[destinationGroupIndex];
          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;
        } else if (!isTabEvent(event)) {
          // user must have customized the nav keys so we have to move focus manually _within_
          //  the active group: do this based on the order determined by tabbable()
          destinationNode = containerGroup.nextTabbableNode(target, false);
        }
      } else {
        // FORWARD

        // is the target the last tabbable node in a group?
        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {
          var lastTabbableNode = _ref4.lastTabbableNode;
          return target === lastTabbableNode;
        });
        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {
          // an exception case where the target is the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus)
          //  and is not followed by any other tabbable node, in which
          //  case, we should handle tab as if focus were on the container's
          //  last tabbable node, and go to the first tabbable node of the FIRST group
          lastOfGroupIndex = containerIndex;
        }
        if (lastOfGroupIndex >= 0) {
          // YES: then tab should go to the first tabbable node in the next
          //  group (and wrap around to the first tabbable node of the FIRST
          //  group if it's the last tabbable node of the LAST group)
          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;
          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];
          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;
        } else if (!isTabEvent(event)) {
          // user must have customized the nav keys so we have to move focus manually _within_
          //  the active group: do this based on the order determined by tabbable()
          destinationNode = containerGroup.nextTabbableNode(target);
        }
      }
    } else {
      // no groups available
      // NOTE: the fallbackFocus option does not support returning false to opt-out
      destinationNode = getNodeForOption('fallbackFocus');
    }
    return destinationNode;
  };

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.
  var checkPointerDown = function checkPointerDown(e) {
    var target = getActualTarget(e);
    if (findContainerIndex(target, e) >= 0) {
      // allow the click since it ocurred inside the trap
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      // immediately deactivate the trap
      trap.deactivate({
        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
        //  which will result in the outside click setting focus to the node
        //  that was clicked (and if not focusable, to "nothing"); by setting
        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
        //  on activation (or the configured `setReturnFocus` node), whether the
        //  outside click was on a focusable node or not
        returnFocus: config.returnFocusOnDeactivate
      });
      return;
    }

    // This is needed for mobile devices.
    // (If we'll only let `click` events through,
    // then on mobile they will be blocked anyways if `touchstart` is blocked.)
    if (valueOrHandler(config.allowOutsideClick, e)) {
      // allow the click outside the trap to take place
      return;
    }

    // otherwise, prevent the click
    e.preventDefault();
  };

  // In case focus escapes the trap for some strange reason, pull it back in.
  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected
  //  scrolling if the node that got focused was out of view; there's nothing we can do to
  //  prevent that from happening by the time we discover that focus escaped
  var checkFocusIn = function checkFocusIn(event) {
    var target = getActualTarget(event);
    var targetContained = findContainerIndex(target, event) >= 0;

    // In Firefox when you Tab out of an iframe the Document is briefly focused.
    if (targetContained || target instanceof Document) {
      if (targetContained) {
        state.mostRecentlyFocusedNode = target;
      }
    } else {
      // escaped! pull it back in to where it just left
      event.stopImmediatePropagation();

      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;
      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward
      //  toward a node with a positive tab index
      var nextNode; // next node to focus, if we find one
      var navAcrossContainers = true;
      if (state.mostRecentlyFocusedNode) {
        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {
          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...
          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);
          // there MAY not be any tabbable nodes in the container if there are at least 2 containers
          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container
          //  with at least one tabbable node in order to function, so this could be the other container
          //  with nothing tabbable in it)
          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;
          if (tabbableNodes.length > 0) {
            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable
            var mruTabIdx = tabbableNodes.findIndex(function (node) {
              return node === state.mostRecentlyFocusedNode;
            });
            if (mruTabIdx >= 0) {
              if (config.isKeyForward(state.recentNavEvent)) {
                if (mruTabIdx + 1 < tabbableNodes.length) {
                  nextNode = tabbableNodes[mruTabIdx + 1];
                  navAcrossContainers = false;
                }
                // else, don't wrap within the container as focus should move to next/previous
                //  container
              } else {
                if (mruTabIdx - 1 >= 0) {
                  nextNode = tabbableNodes[mruTabIdx - 1];
                  navAcrossContainers = false;
                }
                // else, don't wrap within the container as focus should move to next/previous
                //  container
              }
              // else, don't find in container order without considering direction too
            }
          }
          // else, no tabbable nodes in that container (which means we must have at least one other
          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown
          //  an error the last time updateTabbableNodes() was run): find next node among all known
          //  containers
        } else {
          // check to see if there's at least one tabbable node with a positive tab index inside
          //  the trap because focus seems to escape when navigating backward from a tabbable node
          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with
          //  the greatest positive tab index like it should)
          if (!state.containerGroups.some(function (g) {
            return g.tabbableNodes.some(function (n) {
              return getTabIndex(n) > 0;
            });
          })) {
            // no containers with tabbable nodes with positive tab indexes which means the focus
            //  escaped for some other reason and we should just execute the fallback to the
            //  MRU node or initial focus node, if any
            navAcrossContainers = false;
          }
        }
      } else {
        // no MRU node means we're likely in some initial condition when the trap has just
        //  been activated and initial focus hasn't been given yet, in which case we should
        //  fall through to trying to focus the initial focus node, which is what should
        //  happen below at this point in the logic
        navAcrossContainers = false;
      }
      if (navAcrossContainers) {
        nextNode = findNextNavNode({
          // move FROM the MRU node, not event-related node (which will be the node that is
          //  outside the trap causing the focus escape we're trying to fix)
          target: state.mostRecentlyFocusedNode,
          isBackward: config.isKeyBackward(state.recentNavEvent)
        });
      }
      if (nextNode) {
        tryFocus(nextNode);
      } else {
        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
      }
    }
    state.recentNavEvent = undefined; // clear
  };

  // Hijack key nav events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.
  var checkKeyNav = function checkKeyNav(event) {
    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    state.recentNavEvent = event;
    var destinationNode = findNextNavNode({
      event: event,
      isBackward: isBackward
    });
    if (destinationNode) {
      if (isTabEvent(event)) {
        // since tab natively moves focus, we wouldn't have a destination node unless we
        //  were on the edge of a container and had to move to the next/previous edge, in
        //  which case we want to prevent default to keep the browser from moving focus
        //  to where it normally would
        event.preventDefault();
      }
      tryFocus(destinationNode);
    }
    // else, let the browser take care of [shift+]tab and move the focus
  };

  var checkKey = function checkKey(event) {
    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {
      event.preventDefault();
      trap.deactivate();
      return;
    }
    if (config.isKeyForward(event) || config.isKeyBackward(event)) {
      checkKeyNav(event, config.isKeyBackward(event));
    }
  };
  var checkClick = function checkClick(e) {
    var target = getActualTarget(e);
    if (findContainerIndex(target, e) >= 0) {
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      return;
    }
    if (valueOrHandler(config.allowOutsideClick, e)) {
      return;
    }
    e.preventDefault();
    e.stopImmediatePropagation();
  };

  //
  // EVENT LISTENERS
  //

  var addListeners = function addListeners() {
    if (!state.active) {
      return;
    }

    // There can be only one listening focus trap at a time
    activeFocusTraps.activateTrap(trapStack, trap);

    // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.
    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {
      tryFocus(getInitialFocusNode());
    }) : tryFocus(getInitialFocusNode());
    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('touchstart', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('click', checkClick, {
      capture: true,
      passive: false
    });
    doc.addEventListener('keydown', checkKey, {
      capture: true,
      passive: false
    });
    return trap;
  };
  var removeListeners = function removeListeners() {
    if (!state.active) {
      return;
    }
    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);
    return trap;
  };

  //
  // MUTATION OBSERVER
  //

  var checkDomRemoval = function checkDomRemoval(mutations) {
    var isFocusedNodeRemoved = mutations.some(function (mutation) {
      var removedNodes = Array.from(mutation.removedNodes);
      return removedNodes.some(function (node) {
        return node === state.mostRecentlyFocusedNode;
      });
    });

    // If the currently focused is removed then browsers will move focus to the
    // <body> element. If this happens, try to move focus back into the trap.
    if (isFocusedNodeRemoved) {
      tryFocus(getInitialFocusNode());
    }
  };

  // Use MutationObserver - if supported - to detect if focused node is removed
  // from the DOM.
  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;
  var updateObservedNodes = function updateObservedNodes() {
    if (!mutationObserver) {
      return;
    }
    mutationObserver.disconnect();
    if (state.active && !state.paused) {
      state.containers.map(function (container) {
        mutationObserver.observe(container, {
          subtree: true,
          childList: true
        });
      });
    }
  };

  //
  // TRAP DEFINITION
  //

  trap = {
    get active() {
      return state.active;
    },
    get paused() {
      return state.paused;
    },
    activate: function activate(activateOptions) {
      if (state.active) {
        return this;
      }
      var onActivate = getOption(activateOptions, 'onActivate');
      var onPostActivate = getOption(activateOptions, 'onPostActivate');
      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');
      if (!checkCanFocusTrap) {
        updateTabbableNodes();
      }
      state.active = true;
      state.paused = false;
      state.nodeFocusedBeforeActivation = doc.activeElement;
      onActivate === null || onActivate === void 0 || onActivate();
      var finishActivation = function finishActivation() {
        if (checkCanFocusTrap) {
          updateTabbableNodes();
        }
        addListeners();
        updateObservedNodes();
        onPostActivate === null || onPostActivate === void 0 || onPostActivate();
      };
      if (checkCanFocusTrap) {
        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);
        return this;
      }
      finishActivation();
      return this;
    },
    deactivate: function deactivate(deactivateOptions) {
      if (!state.active) {
        return this;
      }
      var options = _objectSpread2({
        onDeactivate: config.onDeactivate,
        onPostDeactivate: config.onPostDeactivate,
        checkCanReturnFocus: config.checkCanReturnFocus
      }, deactivateOptions);
      clearTimeout(state.delayInitialFocusTimer); // noop if undefined
      state.delayInitialFocusTimer = undefined;
      removeListeners();
      state.active = false;
      state.paused = false;
      updateObservedNodes();
      activeFocusTraps.deactivateTrap(trapStack, trap);
      var onDeactivate = getOption(options, 'onDeactivate');
      var onPostDeactivate = getOption(options, 'onPostDeactivate');
      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');
      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');
      onDeactivate === null || onDeactivate === void 0 || onDeactivate();
      var finishDeactivation = function finishDeactivation() {
        delay(function () {
          if (returnFocus) {
            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));
          }
          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();
        });
      };
      if (returnFocus && checkCanReturnFocus) {
        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);
        return this;
      }
      finishDeactivation();
      return this;
    },
    pause: function pause(pauseOptions) {
      if (state.paused || !state.active) {
        return this;
      }
      var onPause = getOption(pauseOptions, 'onPause');
      var onPostPause = getOption(pauseOptions, 'onPostPause');
      state.paused = true;
      onPause === null || onPause === void 0 || onPause();
      removeListeners();
      updateObservedNodes();
      onPostPause === null || onPostPause === void 0 || onPostPause();
      return this;
    },
    unpause: function unpause(unpauseOptions) {
      if (!state.paused || !state.active) {
        return this;
      }
      var onUnpause = getOption(unpauseOptions, 'onUnpause');
      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');
      state.paused = false;
      onUnpause === null || onUnpause === void 0 || onUnpause();
      updateTabbableNodes();
      addListeners();
      updateObservedNodes();
      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();
      return this;
    },
    updateContainerElements: function updateContainerElements(containerElements) {
      var elementsAsArray = [].concat(containerElements).filter(Boolean);
      state.containers = elementsAsArray.map(function (element) {
        return typeof element === 'string' ? doc.querySelector(element) : element;
      });
      if (state.active) {
        updateTabbableNodes();
      }
      updateObservedNodes();
      return this;
    }
  };

  // initialize container elements
  trap.updateContainerElements(elements);
  return trap;
};


//# sourceMappingURL=focus-trap.esm.js.map


/***/ }),

/***/ 4692:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.7.1
 * https://jquery.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2023-08-28T13:37Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket trac-14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var version = "3.7.1",

	rhtmlSuffix = /HTML$/i,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},


	// Retrieve the text value of an array of DOM nodes
	text: function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {

			// If no nodeType, this is expected to be an array
			while ( ( node = elem[ i++ ] ) ) {

				// Do not traverse comment nodes
				ret += jQuery.text( node );
			}
		}
		if ( nodeType === 1 || nodeType === 11 ) {
			return elem.textContent;
		}
		if ( nodeType === 9 ) {
			return elem.documentElement.textContent;
		}
		if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}

		// Do not include comment or processing instruction nodes

		return ret;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	isXMLDoc: function( elem ) {
		var namespace = elem && elem.namespaceURI,
			docElem = elem && ( elem.ownerDocument || elem ).documentElement;

		// Assume HTML when documentElement doesn't yet exist, such as inside
		// document fragments.
		return !rhtmlSuffix.test( namespace || docElem && docElem.nodeName || "HTML" );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}


function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var pop = arr.pop;


var sort = arr.sort;


var splice = arr.splice;


var whitespace = "[\\x20\\t\\r\\n\\f]";


var rtrimCSS = new RegExp(
	"^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
	"g"
);




// Note: an element does not contain itself
jQuery.contains = function( a, b ) {
	var bup = b && b.parentNode;

	return a === bup || !!( bup && bup.nodeType === 1 && (

		// Support: IE 9 - 11+
		// IE doesn't have `contains` on SVG.
		a.contains ?
			a.contains( bup ) :
			a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
	) );
};




// CSS string/identifier serialization
// https://drafts.csswg.org/cssom/#common-serializing-idioms
var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;

function fcssescape( ch, asCodePoint ) {
	if ( asCodePoint ) {

		// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
		if ( ch === "\0" ) {
			return "\uFFFD";
		}

		// Control characters and (dependent upon position) numbers get escaped as code points
		return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
	}

	// Other potentially-special ASCII characters get backslash-escaped
	return "\\" + ch;
}

jQuery.escapeSelector = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};




var preferredDoc = document,
	pushNative = push;

( function() {

var i,
	Expr,
	outermostContext,
	sortInput,
	hasDuplicate,
	push = pushNative,

	// Local document vars
	document,
	documentElement,
	documentIsHTML,
	rbuggyQSA,
	matches,

	// Instance-specific data
	expando = jQuery.expando,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|" +
		"loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rleadingCombinator = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" +
		whitespace + "*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		ID: new RegExp( "^#(" + identifier + ")" ),
		CLASS: new RegExp( "^\\.(" + identifier + ")" ),
		TAG: new RegExp( "^(" + identifier + "|[*])" ),
		ATTR: new RegExp( "^" + attributes ),
		PSEUDO: new RegExp( "^" + pseudos ),
		CHILD: new RegExp(
			"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
				whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
				whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		bool: new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		needsContext: new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// https://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		if ( nonHex ) {

			// Strip the backslash prefix from a non-hex escape sequence
			return nonHex;
		}

		// Replace a hexadecimal escape sequence with the encoded Unicode code point
		// Support: IE <=11+
		// For values outside the Basic Multilingual Plane (BMP), manually construct a
		// surrogate pair
		return high < 0 ?
			String.fromCharCode( high + 0x10000 ) :
			String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes; see `setDocument`.
	// Support: IE 9 - 11+, Edge 12 - 18+
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE/Edge.
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && nodeName( elem, "fieldset" );
		},
		{ dir: "parentNode", next: "legend" }
	);

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android <=4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = {
		apply: function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		},
		call: function( target ) {
			pushNative.apply( target, slice.call( arguments, 1 ) );
		}
	};
}

function find( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE 9 only
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								push.call( results, elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE 9 only
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							find.contains( context, elem ) &&
							elem.id === m ) {

							push.call( results, elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && context.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( !nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rleadingCombinator.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when
					// strict-comparing two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( newContext != context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = jQuery.escapeSelector( nid );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrimCSS, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties
		// (see https://github.com/jquery/sizzle/issues/157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by jQuery selector module
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		return nodeName( elem, "input" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		return ( nodeName( elem, "input" ) || nodeName( elem, "button" ) ) &&
			elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11+
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					elem.isDisabled !== !disabled &&
						inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a jQuery selector context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [node] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
function setDocument( node ) {
	var subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	documentElement = document.documentElement;
	documentIsHTML = !jQuery.isXMLDoc( document );

	// Support: iOS 7 only, IE 9 - 11+
	// Older browsers didn't support unprefixed `matches`.
	matches = documentElement.matches ||
		documentElement.webkitMatchesSelector ||
		documentElement.msMatchesSelector;

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors
	// (see trac-13936).
	// Limit the fix to IE & Edge Legacy; despite Edge 15+ implementing `matches`,
	// all IE 9+ and Edge Legacy versions implement `msMatchesSelector` as well.
	if ( documentElement.msMatchesSelector &&

		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 9 - 11+, Edge 12 - 18+
		subWindow.addEventListener( "unload", unloadHandler );
	}

	// Support: IE <10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		documentElement.appendChild( el ).id = jQuery.expando;
		return !document.getElementsByName ||
			!document.getElementsByName( jQuery.expando ).length;
	} );

	// Support: IE 9 only
	// Check to see if it's possible to do matchesSelector
	// on a disconnected node.
	support.disconnectedMatch = assert( function( el ) {
		return matches.call( el, "*" );
	} );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// IE/Edge don't support the :scope pseudo-class.
	support.scope = assert( function() {
		return document.querySelectorAll( ":scope" );
	} );

	// Support: Chrome 105 - 111 only, Safari 15.4 - 16.3 only
	// Make sure the `:has()` argument is parsed unforgivingly.
	// We include `*` in the test to detect buggy implementations that are
	// _selectively_ forgiving (specifically when the list includes at least
	// one valid selector).
	// Note that we treat complete lack of support for `:has()` as if it were
	// spec-compliant support, which is fine because use of `:has()` in such
	// environments will fail in the qSA path and fall back to jQuery traversal
	// anyway.
	support.cssHas = assert( function() {
		try {
			document.querySelector( ":has(*,:jqfake)" );
			return false;
		} catch ( e ) {
			return true;
		}
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter.ID = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find.ID = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter.ID =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find.ID = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find.TAG = function( tag, context ) {
		if ( typeof context.getElementsByTagName !== "undefined" ) {
			return context.getElementsByTagName( tag );

		// DocumentFragment nodes don't have gEBTN
		} else {
			return context.querySelectorAll( tag );
		}
	};

	// Class
	Expr.find.CLASS = function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	rbuggyQSA = [];

	// Build QSA regex
	// Regex strategy adopted from Diego Perini
	assert( function( el ) {

		var input;

		documentElement.appendChild( el ).innerHTML =
			"<a id='" + expando + "' href='' disabled='disabled'></a>" +
			"<select id='" + expando + "-\r\\' disabled='disabled'>" +
			"<option selected=''></option></select>";

		// Support: iOS <=7 - 8 only
		// Boolean attributes and "value" are not treated correctly in some XML documents
		if ( !el.querySelectorAll( "[selected]" ).length ) {
			rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
		}

		// Support: iOS <=7 - 8 only
		if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
			rbuggyQSA.push( "~=" );
		}

		// Support: iOS 8 only
		// https://bugs.webkit.org/show_bug.cgi?id=136851
		// In-page `selector#id sibling-combinator selector` fails
		if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
			rbuggyQSA.push( ".#.+[+~]" );
		}

		// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+
		// In some of the document kinds, these selectors wouldn't work natively.
		// This is probably OK but for backwards compatibility we want to maintain
		// handling them through jQuery traversal in jQuery 3.x.
		if ( !el.querySelectorAll( ":checked" ).length ) {
			rbuggyQSA.push( ":checked" );
		}

		// Support: Windows 8 Native Apps
		// The type and name attributes are restricted during .innerHTML assignment
		input = document.createElement( "input" );
		input.setAttribute( "type", "hidden" );
		el.appendChild( input ).setAttribute( "name", "D" );

		// Support: IE 9 - 11+
		// IE's :disabled selector does not pick up the children of disabled fieldsets
		// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+
		// In some of the document kinds, these selectors wouldn't work natively.
		// This is probably OK but for backwards compatibility we want to maintain
		// handling them through jQuery traversal in jQuery 3.x.
		documentElement.appendChild( el ).disabled = true;
		if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
			rbuggyQSA.push( ":enabled", ":disabled" );
		}

		// Support: IE 11+, Edge 15 - 18+
		// IE 11/Edge don't find elements on a `[name='']` query in some cases.
		// Adding a temporary attribute to the document before the selection works
		// around the issue.
		// Interestingly, IE 10 & older don't seem to have the issue.
		input = document.createElement( "input" );
		input.setAttribute( "name", "" );
		el.appendChild( input );
		if ( !el.querySelectorAll( "[name='']" ).length ) {
			rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
				whitespace + "*(?:''|\"\")" );
		}
	} );

	if ( !support.cssHas ) {

		// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+
		// Our regular `try-catch` mechanism fails to detect natively-unsupported
		// pseudo-classes inside `:has()` (such as `:has(:contains("Foo"))`)
		// in browsers that parse the `:has()` argument as a forgiving selector list.
		// https://drafts.csswg.org/selectors/#relational now requires the argument
		// to be parsed unforgivingly, but browsers have not yet fully adjusted.
		rbuggyQSA.push( ":has" );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a === document || a.ownerDocument == preferredDoc &&
				find.contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b === document || b.ownerDocument == preferredDoc &&
				find.contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	};

	return document;
}

find.matches = function( expr, elements ) {
	return find( expr, null, null, elements );
};

find.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyQSA || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return find( expr, document, null, [ elem ] ).length > 0;
};

find.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return jQuery.contains( context, elem );
};


find.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (see trac-13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	if ( val !== undefined ) {
		return val;
	}

	return elem.getAttribute( name );
};

find.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
jQuery.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	//
	// Support: Android <=4.0+
	// Testing for detecting duplicates is unpredictable so instead assume we can't
	// depend on duplicate detection in all browsers without a stable sort.
	hasDuplicate = !support.sortStable;
	sortInput = !support.sortStable && slice.call( results, 0 );
	sort.call( results, sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			splice.call( results, duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

jQuery.fn.uniqueSort = function() {
	return this.pushStack( jQuery.uniqueSort( slice.apply( this ) ) );
};

Expr = jQuery.expr = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		ATTR: function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] || match[ 5 ] || "" )
				.replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		CHILD: function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					find.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" )
				);
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

			// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				find.error( match[ 0 ] );
			}

			return match;
		},

		PSEUDO: function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr.CHILD.test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		TAG: function( nodeNameSelector ) {
			var expectedNodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return nodeName( elem, expectedNodeName );
				};
		},

		CLASS: function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace + ")" + className +
					"(" + whitespace + "|$)" ) ) &&
				classCache( className, function( elem ) {
					return pattern.test(
						typeof elem.className === "string" && elem.className ||
							typeof elem.getAttribute !== "undefined" &&
								elem.getAttribute( "class" ) ||
							""
					);
				} );
		},

		ATTR: function( name, operator, check ) {
			return function( elem ) {
				var result = find.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				if ( operator === "=" ) {
					return result === check;
				}
				if ( operator === "!=" ) {
					return result !== check;
				}
				if ( operator === "^=" ) {
					return check && result.indexOf( check ) === 0;
				}
				if ( operator === "*=" ) {
					return check && result.indexOf( check ) > -1;
				}
				if ( operator === "$=" ) {
					return check && result.slice( -check.length ) === check;
				}
				if ( operator === "~=" ) {
					return ( " " + result.replace( rwhitespace, " " ) + " " )
						.indexOf( check ) > -1;
				}
				if ( operator === "|=" ) {
					return result === check || result.slice( 0, check.length + 1 ) === check + "-";
				}

				return false;
			};
		},

		CHILD: function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										nodeName( node, name ) :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || ( parent[ expando ] = {} );
							cache = outerCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {
								outerCache = elem[ expando ] || ( elem[ expando ] = {} );
								cache = outerCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										nodeName( node, name ) :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );
											outerCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		PSEUDO: function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// https://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					find.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as jQuery does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		not: markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrimCSS, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element
					// (see https://github.com/jquery/sizzle/issues/299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		has: markFunction( function( selector ) {
			return function( elem ) {
				return find( selector, elem ).length > 0;
			};
		} ),

		contains: markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || jQuery.text( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// https://www.w3.org/TR/selectors/#lang-pseudo
		lang: markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				find.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		target: function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		root: function( elem ) {
			return elem === documentElement;
		},

		focus: function( elem ) {
			return elem === safeActiveElement() &&
				document.hasFocus() &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		enabled: createDisabledPseudo( false ),
		disabled: createDisabledPseudo( true ),

		checked: function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			return ( nodeName( elem, "input" ) && !!elem.checked ) ||
				( nodeName( elem, "option" ) && !!elem.selected );
		},

		selected: function( elem ) {

			// Support: IE <=11+
			// Accessing the selectedIndex property
			// forces the browser to treat the default option as
			// selected when in an optgroup.
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		empty: function( elem ) {

			// https://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		parent: function( elem ) {
			return !Expr.pseudos.empty( elem );
		},

		// Element/input types
		header: function( elem ) {
			return rheader.test( elem.nodeName );
		},

		input: function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		button: function( elem ) {
			return nodeName( elem, "input" ) && elem.type === "button" ||
				nodeName( elem, "button" );
		},

		text: function( elem ) {
			var attr;
			return nodeName( elem, "input" ) && elem.type === "text" &&

				// Support: IE <10 only
				// New HTML5 attribute values (e.g., "search") appear
				// with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		first: createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		last: createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		eq: createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		even: createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		odd: createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		lt: createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i;

			if ( argument < 0 ) {
				i = argument + length;
			} else if ( argument > length ) {
				i = length;
			} else {
				i = argument;
			}

			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		gt: createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos.nth = Expr.pseudos.eq;

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rleadingCombinator.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrimCSS, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	if ( parseOnly ) {
		return soFar.length;
	}

	return soFar ?
		find.error( selector ) :

		// Cache the tokens
		tokenCache( selector, groups ).slice( 0 );
}

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						if ( skip && nodeName( elem, skip ) ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = outerCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							outerCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		find( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem, matcherOut,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed ||
				multipleContexts( selector || "*",
					context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems;

		if ( matcher ) {

			// If we have a postFinder, or filtered seed, or non-seed postFilter
			// or preexisting results,
			matcherOut = postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

				// ...intermediate processing is necessary
				[] :

				// ...otherwise use results directly
				results;

			// Find primary matches
			matcher( matcherIn, matcherOut, context, xml );
		} else {
			matcherOut = matcherIn;
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf.call( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			var ret = ( !leadingRelative && ( xml || context != outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element
			// (see https://github.com/jquery/sizzle/issues/299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 )
							.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrimCSS, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find.TAG( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: iOS <=7 - 9 only
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching
			// elements by id. (see trac-14142)
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							push.call( results, elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					jQuery.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

function compile( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
}

/**
 * A low-level selection function that works with jQuery's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with jQuery selector compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
function select( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find.ID(
				token.matches[ 0 ].replace( runescape, funescape ),
				context
			) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr.needsContext.test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) &&
						testContext( context.parentNode ) || context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
}

// One-time assignments

// Support: Android <=4.0 - 4.1+
// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Initialize against the default document
setDocument();

// Support: Android <=4.0 - 4.1+
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

jQuery.find = find;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.unique = jQuery.uniqueSort;

// These have always been private, but they used to be documented as part of
// Sizzle so let's maintain them for now for backwards compatibility purposes.
find.compile = compile;
find.select = select;
find.setDocument = setDocument;
find.tokenize = tokenize;

find.escape = jQuery.escapeSelector;
find.getText = jQuery.text;
find.isXML = jQuery.isXMLDoc;
find.selectors = jQuery.expr;
find.support = jQuery.support;
find.uniqueSort = jQuery.uniqueSort;

	/* eslint-enable */

} )();


var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)
	// Strict HTML recognition (trac-11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to jQuery#find
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.error );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the error, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getErrorHook ) {
									process.error = jQuery.Deferred.getErrorHook();

								// The deprecated alias of the above. While the name suggests
								// returning the stack, not an error instance, jQuery just passes
								// it directly to `console.warn` so both will work; an instance
								// just better cooperates with source maps.
								} else if ( jQuery.Deferred.getStackHook ) {
									process.error = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

// If `jQuery.Deferred.getErrorHook` is defined, `asyncError` is an error
// captured before the async barrier to get the original error cause
// which may otherwise be hidden.
jQuery.Deferred.exceptionHook = function( error, asyncError ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message,
			error.stack, asyncError );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See trac-6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (trac-9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see trac-8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (trac-14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (trac-11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (trac-14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (trac-13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (trac-12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (trac-13208)
				// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (trac-13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", true );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, isSetup ) {

	// Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add
	if ( !isSetup ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				if ( !saved ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					this[ type ]();
					result = dataPriv.get( this, type );
					dataPriv.set( this, type, false );

					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						return result;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering
				// the native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved ) {

				// ...and capture the result
				dataPriv.set( this, type, jQuery.event.trigger(
					saved[ 0 ],
					saved.slice( 1 ),
					this
				) );

				// Abort handling of the native event by all jQuery handlers while allowing
				// native handlers on the same element to run. On target, this is achieved
				// by stopping immediate propagation just on the jQuery event. However,
				// the native event is re-wrapped by a jQuery one on each level of the
				// propagation so the only way to stop it for jQuery is to stop it for
				// everyone via native `stopPropagation()`. This is not a problem for
				// focus/blur which don't bubble, but it does also stop click on checkboxes
				// and radios. We accept this limitation.
				event.stopPropagation();
				event.isImmediatePropagationStopped = returnTrue;
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (trac-504, trac-13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {

	function focusMappedHandler( nativeEvent ) {
		if ( document.documentMode ) {

			// Support: IE 11+
			// Attach a single focusin/focusout handler on the document while someone wants
			// focus/blur. This is because the former are synchronous in IE while the latter
			// are async. In other browsers, all those handlers are invoked synchronously.

			// `handle` from private data would already wrap the event, but we need
			// to change the `type` here.
			var handle = dataPriv.get( this, "handle" ),
				event = jQuery.event.fix( nativeEvent );
			event.type = nativeEvent.type === "focusin" ? "focus" : "blur";
			event.isSimulated = true;

			// First, handle focusin/focusout
			handle( nativeEvent );

			// ...then, handle focus/blur
			//
			// focus/blur don't bubble while focusin/focusout do; simulate the former by only
			// invoking the handler at the lower level.
			if ( event.target === event.currentTarget ) {

				// The setup part calls `leverageNative`, which, in turn, calls
				// `jQuery.event.add`, so event handle will already have been set
				// by this point.
				handle( event );
			}
		} else {

			// For non-IE browsers, attach a single capturing handler on the document
			// while someone wants focusin/focusout.
			jQuery.event.simulate( delegateType, nativeEvent.target,
				jQuery.event.fix( nativeEvent ) );
		}
	}

	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			var attaches;

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, true );

			if ( document.documentMode ) {

				// Support: IE 9 - 11+
				// We use the same native handler for focusin & focus (and focusout & blur)
				// so we need to coordinate setup & teardown parts between those events.
				// Use `delegateType` as the key as `type` is already used by `leverageNative`.
				attaches = dataPriv.get( this, delegateType );
				if ( !attaches ) {
					this.addEventListener( delegateType, focusMappedHandler );
				}
				dataPriv.set( this, delegateType, ( attaches || 0 ) + 1 );
			} else {

				// Return false to allow normal processing in the caller
				return false;
			}
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		teardown: function() {
			var attaches;

			if ( document.documentMode ) {
				attaches = dataPriv.get( this, delegateType ) - 1;
				if ( !attaches ) {
					this.removeEventListener( delegateType, focusMappedHandler );
					dataPriv.remove( this, delegateType );
				} else {
					dataPriv.set( this, delegateType, attaches );
				}
			} else {

				// Return false to indicate standard teardown should be applied
				return false;
			}
		},

		// Suppress native focus or blur if we're currently inside
		// a leveraged native-event stack
		_default: function( event ) {
			return dataPriv.get( event.target, type );
		},

		delegateType: delegateType
	};

	// Support: Firefox <=44
	// Firefox doesn't have focus(in | out) events
	// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
	//
	// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
	// focus(in | out) events fire after focus & blur events,
	// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
	// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
	//
	// Support: IE 9 - 11+
	// To preserve relative focusin/focus & focusout/blur event order guaranteed on the 3.x branch,
	// attach a single handler for both events in IE.
	jQuery.event.special[ delegateType ] = {
		setup: function() {

			// Handle: regular nodes (via `this.ownerDocument`), window
			// (via `this.document`) & document (via `this`).
			var doc = this.ownerDocument || this.document || this,
				dataHolder = document.documentMode ? this : doc,
				attaches = dataPriv.get( dataHolder, delegateType );

			// Support: IE 9 - 11+
			// We use the same native handler for focusin & focus (and focusout & blur)
			// so we need to coordinate setup & teardown parts between those events.
			// Use `delegateType` as the key as `type` is already used by `leverageNative`.
			if ( !attaches ) {
				if ( document.documentMode ) {
					this.addEventListener( delegateType, focusMappedHandler );
				} else {
					doc.addEventListener( type, focusMappedHandler, true );
				}
			}
			dataPriv.set( dataHolder, delegateType, ( attaches || 0 ) + 1 );
		},
		teardown: function() {
			var doc = this.ownerDocument || this.document || this,
				dataHolder = document.documentMode ? this : doc,
				attaches = dataPriv.get( dataHolder, delegateType ) - 1;

			if ( !attaches ) {
				if ( document.documentMode ) {
					this.removeEventListener( delegateType, focusMappedHandler );
				} else {
					doc.removeEventListener( type, focusMappedHandler, true );
				}
				dataPriv.remove( dataHolder, delegateType );
			} else {
				dataPriv.set( dataHolder, delegateType, attaches );
			}
		}
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,

	rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (trac-8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Re-enable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {

							// Unwrap a CDATA section containing script contents. This shouldn't be
							// needed as in XML documents they're already not visible when
							// inspecting element contents and in HTML documents they have no
							// meaning but we're preserving that logic for backwards compatibility.
							// This will be removed completely in 4.0. See gh-4904.
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew jQuery#find here for performance reasons:
			// https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var rcustomProp = /^--/;


var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (trac-8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "box-sizing:content-box;border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is `display: block`
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		isCustomProp = rcustomProp.test( name ),

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, trac-12537)
	//   .css('--customProperty) (gh-3144)
	if ( computed ) {

		// Support: IE <=9 - 11+
		// IE only supports `"float"` in `getPropertyValue`; in computed styles
		// it's only available as `"cssFloat"`. We no longer modify properties
		// sent to `.css()` apart from camelCasing, so we need to check both.
		// Normally, this would create difference in behavior: if
		// `getPropertyValue` returns an empty string, the value returned
		// by `.css()` would be `undefined`. This is usually the case for
		// disconnected elements. However, in IE even disconnected elements
		// with no styles return `"none"` for `getPropertyValue( "float" )`
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( isCustomProp && ret ) {

			// Support: Firefox 105+, Chrome <=105+
			// Spec requires trimming whitespace for custom properties (gh-4926).
			// Firefox only trims leading whitespace. Chrome just collapses
			// both leading & trailing whitespace to a single space.
			//
			// Fall back to `undefined` if empty string returned.
			// This collapses a missing definition with property defined
			// and set to an empty string but there's no standard API
			// allowing us to differentiate them without a performance penalty
			// and returning `undefined` aligns with older jQuery.
			//
			// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED
			// as whitespace while CSS does not, but this is not a problem
			// because CSS preprocessing replaces them with U+000A LINE FEED
			// (which *is* CSS whitespace)
			// https://www.w3.org/TR/css-syntax-3/#input-preprocessing
			ret = ret.replace( rtrimCSS, "$1" ) || undefined;
		}

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0,
		marginDelta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		// Count margin delta separately to only add it after scroll gutter adjustment.
		// This is needed to make negative margins work with `outerHeight( true )` (gh-3982).
		if ( box === "margin" ) {
			marginDelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta + marginDelta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		animationIterationCount: true,
		aspectRatio: true,
		borderImageSlice: true,
		columnCount: true,
		flexGrow: true,
		flexShrink: true,
		fontWeight: true,
		gridArea: true,
		gridColumn: true,
		gridColumnEnd: true,
		gridColumnStart: true,
		gridRow: true,
		gridRowEnd: true,
		gridRowStart: true,
		lineHeight: true,
		opacity: true,
		order: true,
		orphans: true,
		scale: true,
		widows: true,
		zIndex: true,
		zoom: true,

		// SVG-related
		fillOpacity: true,
		floodOpacity: true,
		stopOpacity: true,
		strokeMiterlimit: true,
		strokeOpacity: true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (trac-7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug trac-9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (trac-7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// Use proper attribute retrieval (trac-12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classNames, cur, curValue, className, i, finalValue;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classNames = classesToArray( value );

		if ( classNames.length ) {
			return this.each( function() {
				curValue = getClass( this );
				cur = this.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					for ( i = 0; i < classNames.length; i++ ) {
						className = classNames[ i ];
						if ( cur.indexOf( " " + className + " " ) < 0 ) {
							cur += className + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						this.setAttribute( "class", finalValue );
					}
				}
			} );
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, cur, curValue, className, i, finalValue;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classNames = classesToArray( value );

		if ( classNames.length ) {
			return this.each( function() {
				curValue = getClass( this );

				// This expression is here for better compressibility (see addClass)
				cur = this.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					for ( i = 0; i < classNames.length; i++ ) {
						className = classNames[ i ];

						// Remove *all* instances
						while ( cur.indexOf( " " + className + " " ) > -1 ) {
							cur = cur.replace( " " + className + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						this.setAttribute( "class", finalValue );
					}
				}
			} );
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var classNames, className, i, self,
			type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		classNames = classesToArray( value );

		return this.each( function() {
			if ( isValidValue ) {

				// Toggle individual class names
				self = jQuery( this );

				for ( i = 0; i < classNames.length; i++ ) {
					className = classNames[ i ];

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (trac-14686, trac-14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (trac-2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (trac-9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (trac-6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// trac-7653, trac-8125, trac-8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes trac-9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (trac-10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket trac-12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// trac-9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (trac-11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// trac-1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see trac-8605, trac-14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// trac-14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this
			.on( "mouseenter", fnOver )
			.on( "mouseleave", fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
// Require that the "whitespace run" starts from a non-whitespace
// to avoid O(N^2) behavior when the engine would try matching "\s+$" at each space position.
var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "$1" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (trac-13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ 6762:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    symbolTag = '[object Symbol]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = isKey(path, object) ? [path] : castPath(path);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ 2148:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var get = __webpack_require__(6762);
var plurals = __webpack_require__(635);

module.exports = Gettext;

/**
 * Creates and returns a new Gettext instance.
 *
 * @constructor
 * @param  {Object}  [options]             A set of options
 * @param  {String}  options.sourceLocale  The locale that the source code and its
 *                                         texts are written in. Translations for
 *                                         this locale is not necessary.
 * @param  {Boolean} options.debug         Whether to output debug info into the
 *                                         console.
 * @return {Object}  A Gettext instance
 */
function Gettext(options) {
    options = options || {};

    this.catalogs = {};
    this.locale = '';
    this.domain = 'messages';

    this.listeners = [];

    // Set source locale
    this.sourceLocale = '';
    if (options.sourceLocale) {
        if (typeof options.sourceLocale === 'string') {
            this.sourceLocale = options.sourceLocale;
        }
        else {
            this.warn('The `sourceLocale` option should be a string');
        }
    }

    // Set debug flag
    this.debug = 'debug' in options && options.debug === true;
}

/**
 * Adds an event listener.
 *
 * @param  {String}   eventName  An event name
 * @param  {Function} callback   An event handler function
 */
Gettext.prototype.on = function(eventName, callback) {
    this.listeners.push({
        eventName: eventName,
        callback: callback
    });
};

/**
 * Removes an event listener.
 *
 * @param  {String}   eventName  An event name
 * @param  {Function} callback   A previously registered event handler function
 */
Gettext.prototype.off = function(eventName, callback) {
    this.listeners = this.listeners.filter(function(listener) {
        return (
            listener.eventName === eventName &&
            listener.callback === callback
        ) === false;
    });
};

/**
 * Emits an event to all registered event listener.
 *
 * @private
 * @param  {String} eventName  An event name
 * @param  {any}    eventData  Data to pass to event listeners
 */
Gettext.prototype.emit = function(eventName, eventData) {
    for (var i = 0; i < this.listeners.length; i++) {
        var listener = this.listeners[i];
        if (listener.eventName === eventName) {
            listener.callback(eventData);
        }
    }
};

/**
 * Logs a warning to the console if debug mode is enabled.
 *
 * @ignore
 * @param  {String} message  A warning message
 */
Gettext.prototype.warn = function(message) {
    if (this.debug) {
        console.warn(message);
    }

    this.emit('error', new Error(message));
};

/**
 * Stores a set of translations in the set of gettext
 * catalogs.
 *
 * @example
 *     gt.addTranslations('sv-SE', 'messages', translationsObject)
 *
 * @param {String} locale        A locale string
 * @param {String} domain        A domain name
 * @param {Object} translations  An object of gettext-parser JSON shape
 */
Gettext.prototype.addTranslations = function(locale, domain, translations) {
    if (!this.catalogs[locale]) {
        this.catalogs[locale] = {};
    }

    this.catalogs[locale][domain] = translations;
};

/**
 * Sets the locale to get translated messages for.
 *
 * @example
 *     gt.setLocale('sv-SE')
 *
 * @param {String} locale  A locale
 */
Gettext.prototype.setLocale = function(locale) {
    if (typeof locale !== 'string') {
        this.warn(
            'You called setLocale() with an argument of type ' + (typeof locale) + '. ' +
            'The locale must be a string.'
        );
        return;
    }

    if (locale.trim() === '') {
        this.warn('You called setLocale() with an empty value, which makes little sense.');
    }

    if (locale !== this.sourceLocale && !this.catalogs[locale]) {
        this.warn('You called setLocale() with "' + locale + '", but no translations for that locale has been added.');
    }

    this.locale = locale;
};

/**
 * Sets the default gettext domain.
 *
 * @example
 *     gt.setTextDomain('domainname')
 *
 * @param {String} domain  A gettext domain name
 */
Gettext.prototype.setTextDomain = function(domain) {
    if (typeof domain !== 'string') {
        this.warn(
            'You called setTextDomain() with an argument of type ' + (typeof domain) + '. ' +
            'The domain must be a string.'
        );
        return;
    }

    if (domain.trim() === '') {
        this.warn('You called setTextDomain() with an empty `domain` value.');
    }

    this.domain = domain;
};

/**
 * Translates a string using the default textdomain
 *
 * @example
 *     gt.gettext('Some text')
 *
 * @param  {String} msgid  String to be translated
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.gettext = function(msgid) {
    return this.dnpgettext(this.domain, '', msgid);
};

/**
 * Translates a string using a specific domain
 *
 * @example
 *     gt.dgettext('domainname', 'Some text')
 *
 * @param  {String} domain  A gettext domain name
 * @param  {String} msgid   String to be translated
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.dgettext = function(domain, msgid) {
    return this.dnpgettext(domain, '', msgid);
};

/**
 * Translates a plural string using the default textdomain
 *
 * @example
 *     gt.ngettext('One thing', 'Many things', numberOfThings)
 *
 * @param  {String} msgid        String to be translated when count is not plural
 * @param  {String} msgidPlural  String to be translated when count is plural
 * @param  {Number} count        Number count for the plural
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.ngettext = function(msgid, msgidPlural, count) {
    return this.dnpgettext(this.domain, '', msgid, msgidPlural, count);
};

/**
 * Translates a plural string using a specific textdomain
 *
 * @example
 *     gt.dngettext('domainname', 'One thing', 'Many things', numberOfThings)
 *
 * @param  {String} domain       A gettext domain name
 * @param  {String} msgid        String to be translated when count is not plural
 * @param  {String} msgidPlural  String to be translated when count is plural
 * @param  {Number} count        Number count for the plural
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.dngettext = function(domain, msgid, msgidPlural, count) {
    return this.dnpgettext(domain, '', msgid, msgidPlural, count);
};

/**
 * Translates a string from a specific context using the default textdomain
 *
 * @example
 *    gt.pgettext('sports', 'Back')
 *
 * @param  {String} msgctxt  Translation context
 * @param  {String} msgid    String to be translated
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.pgettext = function(msgctxt, msgid) {
    return this.dnpgettext(this.domain, msgctxt, msgid);
};

/**
 * Translates a string from a specific context using s specific textdomain
 *
 * @example
 *     gt.dpgettext('domainname', 'sports', 'Back')
 *
 * @param  {String} domain   A gettext domain name
 * @param  {String} msgctxt  Translation context
 * @param  {String} msgid    String to be translated
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.dpgettext = function(domain, msgctxt, msgid) {
    return this.dnpgettext(domain, msgctxt, msgid);
};

/**
 * Translates a plural string from a specific context using the default textdomain
 *
 * @example
 *     gt.npgettext('sports', 'Back', '%d backs', numberOfBacks)
 *
 * @param  {String} msgctxt      Translation context
 * @param  {String} msgid        String to be translated when count is not plural
 * @param  {String} msgidPlural  String to be translated when count is plural
 * @param  {Number} count        Number count for the plural
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.npgettext = function(msgctxt, msgid, msgidPlural, count) {
    return this.dnpgettext(this.domain, msgctxt, msgid, msgidPlural, count);
};

/**
 * Translates a plural string from a specifi context using a specific textdomain
 *
 * @example
 *     gt.dnpgettext('domainname', 'sports', 'Back', '%d backs', numberOfBacks)
 *
 * @param  {String} domain       A gettext domain name
 * @param  {String} msgctxt      Translation context
 * @param  {String} msgid        String to be translated
 * @param  {String} msgidPlural  If no translation was found, return this on count!=1
 * @param  {Number} count        Number count for the plural
 * @return {String} Translation or the original string if no translation was found
 */
Gettext.prototype.dnpgettext = function(domain, msgctxt, msgid, msgidPlural, count) {
    var defaultTranslation = msgid;
    var translation;
    var index;

    msgctxt = msgctxt || '';

    if (!isNaN(count) && count !== 1) {
        defaultTranslation = msgidPlural || msgid;
    }

    translation = this._getTranslation(domain, msgctxt, msgid);

    if (translation) {
        if (typeof count === 'number') {
            var pluralsFunc = plurals[Gettext.getLanguageCode(this.locale)].pluralsFunc;
            index = pluralsFunc(count);
            if (typeof index === 'boolean') {
                index = index ? 1 : 0;
            }
        } else {
            index = 0;
        }

        return translation.msgstr[index] || defaultTranslation;
    }
    else if (!this.sourceLocale || this.locale !== this.sourceLocale) {
        this.warn('No translation was found for msgid "' + msgid + '" in msgctxt "' + msgctxt + '" and domain "' + domain + '"');
    }

    return defaultTranslation;
};

/**
 * Retrieves comments object for a translation. The comments object
 * has the shape `{ translator, extracted, reference, flag, previous }`.
 *
 * @example
 *     const comment = gt.getComment('domainname', 'sports', 'Backs')
 *
 * @private
 * @param  {String} domain   A gettext domain name
 * @param  {String} msgctxt  Translation context
 * @param  {String} msgid    String to be translated
 * @return {Object} Comments object or false if not found
 */
Gettext.prototype.getComment = function(domain, msgctxt, msgid) {
    var translation;

    translation = this._getTranslation(domain, msgctxt, msgid);
    if (translation) {
        return translation.comments || {};
    }

    return {};
};

/**
 * Retrieves translation object from the domain and context
 *
 * @private
 * @param  {String} domain   A gettext domain name
 * @param  {String} msgctxt  Translation context
 * @param  {String} msgid    String to be translated
 * @return {Object} Translation object or false if not found
 */
Gettext.prototype._getTranslation = function(domain, msgctxt, msgid) {
    msgctxt = msgctxt || '';

    return get(this.catalogs, [this.locale, domain, 'translations', msgctxt, msgid]);
};

/**
 * Returns the language code part of a locale
 *
 * @example
 *     Gettext.getLanguageCode('sv-SE')
 *     // -> "sv"
 *
 * @private
 * @param   {String} locale  A case-insensitive locale string
 * @returns {String} A language code
 */
Gettext.getLanguageCode = function(locale) {
    return locale.split(/[\-_]/)[0].toLowerCase();
};

/* C-style aliases */

/**
 * C-style alias for [setTextDomain](#gettextsettextdomaindomain)
 *
 * @see Gettext#setTextDomain
 */
Gettext.prototype.textdomain = function(domain) {
    if (this.debug) {
        console.warn('textdomain(domain) was used to set locales in node-gettext v1. ' +
            'Make sure you are using it for domains, and switch to setLocale(locale) if you are not.\n\n ' +
            'To read more about the migration from node-gettext v1 to v2, ' +
            'see https://github.com/alexanderwallin/node-gettext/#migrating-from-1x-to-2x\n\n' +
            'This warning will be removed in the final 2.0.0');
    }

    this.setTextDomain(domain);
};

/**
 * C-style alias for [setLocale](#gettextsetlocalelocale)
 *
 * @see Gettext#setLocale
 */
Gettext.prototype.setlocale = function(locale) {
    this.setLocale(locale);
};

/* Deprecated functions */

/**
 * This function will be removed in the final 2.0.0 release.
 *
 * @deprecated
 */
Gettext.prototype.addTextdomain = function() {
    console.error('addTextdomain() is deprecated.\n\n' +
        '* To add translations, use addTranslations()\n' +
        '* To set the default domain, use setTextDomain() (or its alias textdomain())\n' +
        '\n' +
        'To read more about the migration from node-gettext v1 to v2, ' +
        'see https://github.com/alexanderwallin/node-gettext/#migrating-from-1x-to-2x');
};


/***/ }),

/***/ 635:
/***/ ((module) => {

"use strict";


module.exports = {
    ach: {
        name: 'Acholi',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    af: {
        name: 'Afrikaans',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ak: {
        name: 'Akan',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    am: {
        name: 'Amharic',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    an: {
        name: 'Aragonese',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ar: {
        name: 'Arabic',
        examples: [{
            plural: 0,
            sample: 0
        }, {
            plural: 1,
            sample: 1
        }, {
            plural: 2,
            sample: 2
        }, {
            plural: 3,
            sample: 3
        }, {
            plural: 4,
            sample: 11
        }, {
            plural: 5,
            sample: 100
        }],
        nplurals: 6,
        pluralsText: 'nplurals = 6; plural = (n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5)',
        pluralsFunc: function(n) {
            return (n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
        }
    },
    arn: {
        name: 'Mapudungun',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    ast: {
        name: 'Asturian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ay: {
        name: 'Aymará',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    az: {
        name: 'Azerbaijani',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    be: {
        name: 'Belarusian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    bg: {
        name: 'Bulgarian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    bn: {
        name: 'Bengali',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    bo: {
        name: 'Tibetan',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    br: {
        name: 'Breton',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    brx: {
        name: 'Bodo',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    bs: {
        name: 'Bosnian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    ca: {
        name: 'Catalan',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    cgg: {
        name: 'Chiga',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    cs: {
        name: 'Czech',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n === 1 ? 0 : (n >= 2 && n <= 4) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : (n >= 2 && n <= 4) ? 1 : 2);
        }
    },
    csb: {
        name: 'Kashubian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    cy: {
        name: 'Welsh',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 3
        }, {
            plural: 3,
            sample: 8
        }],
        nplurals: 4,
        pluralsText: 'nplurals = 4; plural = (n === 1 ? 0 : n === 2 ? 1 : (n !== 8 && n !== 11) ? 2 : 3)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : n === 2 ? 1 : (n !== 8 && n !== 11) ? 2 : 3);
        }
    },
    da: {
        name: 'Danish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    de: {
        name: 'German',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    doi: {
        name: 'Dogri',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    dz: {
        name: 'Dzongkha',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    el: {
        name: 'Greek',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    en: {
        name: 'English',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    eo: {
        name: 'Esperanto',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    es: {
        name: 'Spanish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    et: {
        name: 'Estonian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    eu: {
        name: 'Basque',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    fa: {
        name: 'Persian',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    ff: {
        name: 'Fulah',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    fi: {
        name: 'Finnish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    fil: {
        name: 'Filipino',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    fo: {
        name: 'Faroese',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    fr: {
        name: 'French',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    fur: {
        name: 'Friulian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    fy: {
        name: 'Frisian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ga: {
        name: 'Irish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 3
        }, {
            plural: 3,
            sample: 7
        }, {
            plural: 4,
            sample: 11
        }],
        nplurals: 5,
        pluralsText: 'nplurals = 5; plural = (n === 1 ? 0 : n === 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : n === 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
        }
    },
    gd: {
        name: 'Scottish Gaelic',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 3
        }, {
            plural: 3,
            sample: 20
        }],
        nplurals: 4,
        pluralsText: 'nplurals = 4; plural = ((n === 1 || n === 11) ? 0 : (n === 2 || n === 12) ? 1 : (n > 2 && n < 20) ? 2 : 3)',
        pluralsFunc: function(n) {
            return ((n === 1 || n === 11) ? 0 : (n === 2 || n === 12) ? 1 : (n > 2 && n < 20) ? 2 : 3);
        }
    },
    gl: {
        name: 'Galician',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    gu: {
        name: 'Gujarati',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    gun: {
        name: 'Gun',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    ha: {
        name: 'Hausa',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    he: {
        name: 'Hebrew',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    hi: {
        name: 'Hindi',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    hne: {
        name: 'Chhattisgarhi',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    hr: {
        name: 'Croatian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    hu: {
        name: 'Hungarian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    hy: {
        name: 'Armenian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    id: {
        name: 'Indonesian',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    is: {
        name: 'Icelandic',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n % 10 !== 1 || n % 100 === 11)',
        pluralsFunc: function(n) {
            return (n % 10 !== 1 || n % 100 === 11);
        }
    },
    it: {
        name: 'Italian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ja: {
        name: 'Japanese',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    jbo: {
        name: 'Lojban',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    jv: {
        name: 'Javanese',
        examples: [{
            plural: 0,
            sample: 0
        }, {
            plural: 1,
            sample: 1
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 0)',
        pluralsFunc: function(n) {
            return (n !== 0);
        }
    },
    ka: {
        name: 'Georgian',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    kk: {
        name: 'Kazakh',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    km: {
        name: 'Khmer',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    kn: {
        name: 'Kannada',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ko: {
        name: 'Korean',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    ku: {
        name: 'Kurdish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    kw: {
        name: 'Cornish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 3
        }, {
            plural: 3,
            sample: 4
        }],
        nplurals: 4,
        pluralsText: 'nplurals = 4; plural = (n === 1 ? 0 : n === 2 ? 1 : n === 3 ? 2 : 3)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : n === 2 ? 1 : n === 3 ? 2 : 3);
        }
    },
    ky: {
        name: 'Kyrgyz',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    lb: {
        name: 'Letzeburgesch',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ln: {
        name: 'Lingala',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    lo: {
        name: 'Lao',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    lt: {
        name: 'Lithuanian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 10
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    lv: {
        name: 'Latvian',
        examples: [{
            plural: 2,
            sample: 0
        }, {
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n !== 0 ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n !== 0 ? 1 : 2);
        }
    },
    mai: {
        name: 'Maithili',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    mfe: {
        name: 'Mauritian Creole',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    mg: {
        name: 'Malagasy',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    mi: {
        name: 'Maori',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    mk: {
        name: 'Macedonian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n === 1 || n % 10 === 1 ? 0 : 1)',
        pluralsFunc: function(n) {
            return (n === 1 || n % 10 === 1 ? 0 : 1);
        }
    },
    ml: {
        name: 'Malayalam',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    mn: {
        name: 'Mongolian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    mni: {
        name: 'Manipuri',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    mnk: {
        name: 'Mandinka',
        examples: [{
            plural: 0,
            sample: 0
        }, {
            plural: 1,
            sample: 1
        }, {
            plural: 2,
            sample: 2
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n === 0 ? 0 : n === 1 ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n === 0 ? 0 : n === 1 ? 1 : 2);
        }
    },
    mr: {
        name: 'Marathi',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ms: {
        name: 'Malay',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    mt: {
        name: 'Maltese',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 11
        }, {
            plural: 3,
            sample: 20
        }],
        nplurals: 4,
        pluralsText: 'nplurals = 4; plural = (n === 1 ? 0 : n === 0 || ( n % 100 > 1 && n % 100 < 11) ? 1 : (n % 100 > 10 && n % 100 < 20 ) ? 2 : 3)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : n === 0 || (n % 100 > 1 && n % 100 < 11) ? 1 : (n % 100 > 10 && n % 100 < 20) ? 2 : 3);
        }
    },
    my: {
        name: 'Burmese',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    nah: {
        name: 'Nahuatl',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    nap: {
        name: 'Neapolitan',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    nb: {
        name: 'Norwegian Bokmal',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ne: {
        name: 'Nepali',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    nl: {
        name: 'Dutch',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    nn: {
        name: 'Norwegian Nynorsk',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    no: {
        name: 'Norwegian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    nso: {
        name: 'Northern Sotho',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    oc: {
        name: 'Occitan',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    or: {
        name: 'Oriya',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    pa: {
        name: 'Punjabi',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    pap: {
        name: 'Papiamento',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    pl: {
        name: 'Polish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    pms: {
        name: 'Piemontese',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ps: {
        name: 'Pashto',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    pt: {
        name: 'Portuguese',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    rm: {
        name: 'Romansh',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ro: {
        name: 'Romanian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 20
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n === 1 ? 0 : (n === 0 || (n % 100 > 0 && n % 100 < 20)) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : (n === 0 || (n % 100 > 0 && n % 100 < 20)) ? 1 : 2);
        }
    },
    ru: {
        name: 'Russian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    rw: {
        name: 'Kinyarwanda',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sah: {
        name: 'Yakut',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    sat: {
        name: 'Santali',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sco: {
        name: 'Scots',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sd: {
        name: 'Sindhi',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    se: {
        name: 'Northern Sami',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    si: {
        name: 'Sinhala',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sk: {
        name: 'Slovak',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n === 1 ? 0 : (n >= 2 && n <= 4) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n === 1 ? 0 : (n >= 2 && n <= 4) ? 1 : 2);
        }
    },
    sl: {
        name: 'Slovenian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 3
        }, {
            plural: 3,
            sample: 5
        }],
        nplurals: 4,
        pluralsText: 'nplurals = 4; plural = (n % 100 === 1 ? 0 : n % 100 === 2 ? 1 : n % 100 === 3 || n % 100 === 4 ? 2 : 3)',
        pluralsFunc: function(n) {
            return (n % 100 === 1 ? 0 : n % 100 === 2 ? 1 : n % 100 === 3 || n % 100 === 4 ? 2 : 3);
        }
    },
    so: {
        name: 'Somali',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    son: {
        name: 'Songhay',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sq: {
        name: 'Albanian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sr: {
        name: 'Serbian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    su: {
        name: 'Sundanese',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    sv: {
        name: 'Swedish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    sw: {
        name: 'Swahili',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    ta: {
        name: 'Tamil',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    te: {
        name: 'Telugu',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    tg: {
        name: 'Tajik',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    th: {
        name: 'Thai',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    ti: {
        name: 'Tigrinya',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    tk: {
        name: 'Turkmen',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    tr: {
        name: 'Turkish',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    tt: {
        name: 'Tatar',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    ug: {
        name: 'Uyghur',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    uk: {
        name: 'Ukrainian',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }, {
            plural: 2,
            sample: 5
        }],
        nplurals: 3,
        pluralsText: 'nplurals = 3; plural = (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2)',
        pluralsFunc: function(n) {
            return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
        }
    },
    ur: {
        name: 'Urdu',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    uz: {
        name: 'Uzbek',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    vi: {
        name: 'Vietnamese',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    wa: {
        name: 'Walloon',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n > 1)',
        pluralsFunc: function(n) {
            return (n > 1);
        }
    },
    wo: {
        name: 'Wolof',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    },
    yo: {
        name: 'Yoruba',
        examples: [{
            plural: 0,
            sample: 1
        }, {
            plural: 1,
            sample: 2
        }],
        nplurals: 2,
        pluralsText: 'nplurals = 2; plural = (n !== 1)',
        pluralsFunc: function(n) {
            return (n !== 1);
        }
    },
    zh: {
        name: 'Chinese',
        examples: [{
            plural: 0,
            sample: 1
        }],
        nplurals: 1,
        pluralsText: 'nplurals = 1; plural = 0',
        pluralsFunc: function() {
            return 0;
        }
    }
};


/***/ }),

/***/ 7599:
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),

/***/ 3016:
/***/ ((module) => {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),

/***/ 6920:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(__webpack_require__.g.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(3016);

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(7599);

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}


/***/ }),

/***/ 3627:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.




var isWindows = "browser" === 'win32';
var util = __webpack_require__(6920);


// resolves . and .. elements in a path array with directory names there
// must be no slashes or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  var res = [];
  for (var i = 0; i < parts.length; i++) {
    var p = parts[i];

    // ignore empty parts
    if (!p || p === '.')
      continue;

    if (p === '..') {
      if (res.length && res[res.length - 1] !== '..') {
        res.pop();
      } else if (allowAboveRoot) {
        res.push('..');
      }
    } else {
      res.push(p);
    }
  }

  return res;
}

// returns an array with empty elements removed from either end of the input
// array or the original array if no elements need to be removed
function trimArray(arr) {
  var lastIndex = arr.length - 1;
  var start = 0;
  for (; start <= lastIndex; start++) {
    if (arr[start])
      break;
  }

  var end = lastIndex;
  for (; end >= 0; end--) {
    if (arr[end])
      break;
  }

  if (start === 0 && end === lastIndex)
    return arr;
  if (start > end)
    return [];
  return arr.slice(start, end + 1);
}

// Regex to split a windows path into three parts: [*, device, slash,
// tail] windows-only
var splitDeviceRe =
    /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;

// Regex to split the tail part of the above into [*, dir, basename, ext]
var splitTailRe =
    /^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/;

var win32 = {};

// Function to split a filename into [root, dir, basename, ext]
function win32SplitPath(filename) {
  // Separate device+slash from tail
  var result = splitDeviceRe.exec(filename),
      device = (result[1] || '') + (result[2] || ''),
      tail = result[3] || '';
  // Split the tail into dir, basename and extension
  var result2 = splitTailRe.exec(tail),
      dir = result2[1],
      basename = result2[2],
      ext = result2[3];
  return [device, dir, basename, ext];
}

function win32StatPath(path) {
  var result = splitDeviceRe.exec(path),
      device = result[1] || '',
      isUnc = !!device && device[1] !== ':';
  return {
    device: device,
    isUnc: isUnc,
    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute
    tail: result[3]
  };
}

function normalizeUNCRoot(device) {
  return '\\\\' + device.replace(/^[\\\/]+/, '').replace(/[\\\/]+/g, '\\');
}

// path.resolve([from ...], to)
win32.resolve = function() {
  var resolvedDevice = '',
      resolvedTail = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1; i--) {
    var path;
    if (i >= 0) {
      path = arguments[i];
    } else if (!resolvedDevice) {
      path = process.cwd();
    } else {
      // Windows has the concept of drive-specific current working
      // directories. If we've resolved a drive letter but not yet an
      // absolute path, get cwd for that drive. We're sure the device is not
      // an unc path at this points, because unc paths are always absolute.
      path = process.env['=' + resolvedDevice];
      // Verify that a drive-local cwd was found and that it actually points
      // to our drive. If not, default to the drive's root.
      if (!path || path.substr(0, 3).toLowerCase() !==
          resolvedDevice.toLowerCase() + '\\') {
        path = resolvedDevice + '\\';
      }
    }

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    var result = win32StatPath(path),
        device = result.device,
        isUnc = result.isUnc,
        isAbsolute = result.isAbsolute,
        tail = result.tail;

    if (device &&
        resolvedDevice &&
        device.toLowerCase() !== resolvedDevice.toLowerCase()) {
      // This path points to another device so it is not applicable
      continue;
    }

    if (!resolvedDevice) {
      resolvedDevice = device;
    }
    if (!resolvedAbsolute) {
      resolvedTail = tail + '\\' + resolvedTail;
      resolvedAbsolute = isAbsolute;
    }

    if (resolvedDevice && resolvedAbsolute) {
      break;
    }
  }

  // Convert slashes to backslashes when `resolvedDevice` points to an UNC
  // root. Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    resolvedDevice = normalizeUNCRoot(resolvedDevice);
  }

  // At this point the path should be resolved to a full absolute path,
  // but handle relative paths to be safe (might happen when process.cwd()
  // fails)

  // Normalize the tail path
  resolvedTail = normalizeArray(resolvedTail.split(/[\\\/]+/),
                                !resolvedAbsolute).join('\\');

  return (resolvedDevice + (resolvedAbsolute ? '\\' : '') + resolvedTail) ||
         '.';
};


win32.normalize = function(path) {
  var result = win32StatPath(path),
      device = result.device,
      isUnc = result.isUnc,
      isAbsolute = result.isAbsolute,
      tail = result.tail,
      trailingSlash = /[\\\/]$/.test(tail);

  // Normalize the tail path
  tail = normalizeArray(tail.split(/[\\\/]+/), !isAbsolute).join('\\');

  if (!tail && !isAbsolute) {
    tail = '.';
  }
  if (tail && trailingSlash) {
    tail += '\\';
  }

  // Convert slashes to backslashes when `device` points to an UNC root.
  // Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    device = normalizeUNCRoot(device);
  }

  return device + (isAbsolute ? '\\' : '') + tail;
};


win32.isAbsolute = function(path) {
  return win32StatPath(path).isAbsolute;
};

win32.join = function() {
  var paths = [];
  for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i];
    if (!util.isString(arg)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (arg) {
      paths.push(arg);
    }
  }

  var joined = paths.join('\\');

  // Make sure that the joined path doesn't start with two slashes, because
  // normalize() will mistake it for an UNC path then.
  //
  // This step is skipped when it is very clear that the user actually
  // intended to point at an UNC path. This is assumed when the first
  // non-empty string arguments starts with exactly two slashes followed by
  // at least one more non-slash character.
  //
  // Note that for normalize() to treat a path as an UNC path it needs to
  // have at least 2 components, so we don't filter for that here.
  // This means that the user can use join to construct UNC paths from
  // a server name and a share name; for example:
  //   path.join('//server', 'share') -> '\\\\server\\share\')
  if (!/^[\\\/]{2}[^\\\/]/.test(paths[0])) {
    joined = joined.replace(/^[\\\/]{2,}/, '\\');
  }

  return win32.normalize(joined);
};


// path.relative(from, to)
// it will solve the relative path from 'from' to 'to', for instance:
// from = 'C:\\orandea\\test\\aaa'
// to = 'C:\\orandea\\impl\\bbb'
// The output of the function should be: '..\\..\\impl\\bbb'
win32.relative = function(from, to) {
  from = win32.resolve(from);
  to = win32.resolve(to);

  // windows is not case sensitive
  var lowerFrom = from.toLowerCase();
  var lowerTo = to.toLowerCase();

  var toParts = trimArray(to.split('\\'));

  var lowerFromParts = trimArray(lowerFrom.split('\\'));
  var lowerToParts = trimArray(lowerTo.split('\\'));

  var length = Math.min(lowerFromParts.length, lowerToParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (lowerFromParts[i] !== lowerToParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  if (samePartsLength == 0) {
    return to;
  }

  var outputParts = [];
  for (var i = samePartsLength; i < lowerFromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('\\');
};


win32._makeLong = function(path) {
  // Note: this will *probably* throw somewhere.
  if (!util.isString(path))
    return path;

  if (!path) {
    return '';
  }

  var resolvedPath = win32.resolve(path);

  if (/^[a-zA-Z]\:\\/.test(resolvedPath)) {
    // path is local filesystem path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\' + resolvedPath;
  } else if (/^\\\\[^?.]/.test(resolvedPath)) {
    // path is network UNC path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\UNC\\' + resolvedPath.substring(2);
  }

  return path;
};


win32.dirname = function(path) {
  var result = win32SplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


win32.basename = function(path, ext) {
  var f = win32SplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


win32.extname = function(path) {
  return win32SplitPath(path)[3];
};


win32.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir;
  var base = pathObject.base || '';
  if (!dir) {
    return base;
  }
  if (dir[dir.length - 1] === win32.sep) {
    return dir + base;
  }
  return dir + win32.sep + base;
};


win32.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = win32SplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, -1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


win32.sep = '\\';
win32.delimiter = ';';


// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var posix = {};


function posixSplitPath(filename) {
  return splitPathRe.exec(filename).slice(1);
}


// path.resolve([from ...], to)
// posix version
posix.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path[0] === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(resolvedPath.split('/'),
                                !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
posix.normalize = function(path) {
  var isAbsolute = posix.isAbsolute(path),
      trailingSlash = path && path[path.length - 1] === '/';

  // Normalize the path
  path = normalizeArray(path.split('/'), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
posix.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
posix.join = function() {
  var path = '';
  for (var i = 0; i < arguments.length; i++) {
    var segment = arguments[i];
    if (!util.isString(segment)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (segment) {
      if (!path) {
        path += segment;
      } else {
        path += '/' + segment;
      }
    }
  }
  return posix.normalize(path);
};


// path.relative(from, to)
// posix version
posix.relative = function(from, to) {
  from = posix.resolve(from).substr(1);
  to = posix.resolve(to).substr(1);

  var fromParts = trimArray(from.split('/'));
  var toParts = trimArray(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};


posix._makeLong = function(path) {
  return path;
};


posix.dirname = function(path) {
  var result = posixSplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


posix.basename = function(path, ext) {
  var f = posixSplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


posix.extname = function(path) {
  return posixSplitPath(path)[3];
};


posix.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';
  var base = pathObject.base || '';
  return dir + base;
};


posix.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = posixSplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  allParts[1] = allParts[1] || '';
  allParts[2] = allParts[2] || '';
  allParts[3] = allParts[3] || '';

  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, -1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


posix.sep = '/';
posix.delimiter = ':';


if (isWindows)
  module.exports = win32;
else /* posix */
  module.exports = posix;

module.exports.posix = posix;
module.exports.win32 = win32;


/***/ }),

/***/ 5072:
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 7659:
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ 540:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ 5056:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ 7825:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ 1113:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ 7736:
/***/ (function(module) {

/*!
 * Toastify js 1.12.0
 * https://github.com/apvarun/toastify-js
 * @license MIT licensed
 *
 * Copyright (C) 2018 Varun A P
 */
(function(root, factory) {
  if ( true && module.exports) {
    module.exports = factory();
  } else {
    root.Toastify = factory();
  }
})(this, function(global) {
  // Object initialization
  var Toastify = function(options) {
      // Returning a new init object
      return new Toastify.lib.init(options);
    },
    // Library version
    version = "1.12.0";

  // Set the default global options
  Toastify.defaults = {
    oldestFirst: true,
    text: "Toastify is awesome!",
    node: undefined,
    duration: 3000,
    selector: undefined,
    callback: function () {
    },
    destination: undefined,
    newWindow: false,
    close: false,
    gravity: "toastify-top",
    positionLeft: false,
    position: '',
    backgroundColor: '',
    avatar: "",
    className: "",
    stopOnFocus: true,
    onClick: function () {
    },
    offset: {x: 0, y: 0},
    escapeMarkup: true,
    ariaLive: 'polite',
    style: {background: ''}
  };

  // Defining the prototype of the object
  Toastify.lib = Toastify.prototype = {
    toastify: version,

    constructor: Toastify,

    // Initializing the object with required parameters
    init: function(options) {
      // Verifying and validating the input object
      if (!options) {
        options = {};
      }

      // Creating the options object
      this.options = {};

      this.toastElement = null;

      // Validating the options
      this.options.text = options.text || Toastify.defaults.text; // Display message
      this.options.node = options.node || Toastify.defaults.node;  // Display content as node
      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration
      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector
      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display
      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination
      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window
      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon
      this.options.gravity = options.gravity === "bottom" ? "toastify-bottom" : Toastify.defaults.gravity; // toast position - top or bottom
      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right
      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right
      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color
      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path
      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast
      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus
      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click
      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset
      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;
      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;
      this.options.style = options.style || Toastify.defaults.style;
      if(options.backgroundColor) {
        this.options.style.background = options.backgroundColor;
      }

      // Returning the current object for chaining functions
      return this;
    },

    // Building the DOM element
    buildToast: function() {
      // Validating if the options are defined
      if (!this.options) {
        throw "Toastify is not initialized";
      }

      // Creating the DOM object
      var divElement = document.createElement("div");
      divElement.className = "toastify on " + this.options.className;

      // Positioning toast to left or right or center
      if (!!this.options.position) {
        divElement.className += " toastify-" + this.options.position;
      } else {
        // To be depreciated in further versions
        if (this.options.positionLeft === true) {
          divElement.className += " toastify-left";
          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')
        } else {
          // Default position
          divElement.className += " toastify-right";
        }
      }

      // Assigning gravity of element
      divElement.className += " " + this.options.gravity;

      if (this.options.backgroundColor) {
        // This is being deprecated in favor of using the style HTML DOM property
        console.warn('DEPRECATION NOTICE: "backgroundColor" is being deprecated. Please use the "style.background" property.');
      }

      // Loop through our style object and apply styles to divElement
      for (var property in this.options.style) {
        divElement.style[property] = this.options.style[property];
      }

      // Announce the toast to screen readers
      if (this.options.ariaLive) {
        divElement.setAttribute('aria-live', this.options.ariaLive)
      }

      // Adding the toast message/node
      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {
        // If we have a valid node, we insert it
        divElement.appendChild(this.options.node)
      } else {
        if (this.options.escapeMarkup) {
          divElement.innerText = this.options.text;
        } else {
          divElement.innerHTML = this.options.text;
        }

        if (this.options.avatar !== "") {
          var avatarElement = document.createElement("img");
          avatarElement.src = this.options.avatar;

          avatarElement.className = "toastify-avatar";

          if (this.options.position == "left" || this.options.positionLeft === true) {
            // Adding close icon on the left of content
            divElement.appendChild(avatarElement);
          } else {
            // Adding close icon on the right of content
            divElement.insertAdjacentElement("afterbegin", avatarElement);
          }
        }
      }

      // Adding a close icon to the toast
      if (this.options.close === true) {
        // Create a span for close element
        var closeElement = document.createElement("button");
        closeElement.type = "button";
        closeElement.setAttribute("aria-label", "Close");
        closeElement.className = "toast-close";
        closeElement.innerHTML = "&#10006;";

        // Triggering the removal of toast from DOM on close click
        closeElement.addEventListener(
          "click",
          function(event) {
            event.stopPropagation();
            this.removeElement(this.toastElement);
            window.clearTimeout(this.toastElement.timeOutValue);
          }.bind(this)
        );

        //Calculating screen width
        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;

        // Adding the close icon to the toast element
        // Display on the right if screen width is less than or equal to 360px
        if ((this.options.position == "left" || this.options.positionLeft === true) && width > 360) {
          // Adding close icon on the left of content
          divElement.insertAdjacentElement("afterbegin", closeElement);
        } else {
          // Adding close icon on the right of content
          divElement.appendChild(closeElement);
        }
      }

      // Clear timeout while toast is focused
      if (this.options.stopOnFocus && this.options.duration > 0) {
        var self = this;
        // stop countdown
        divElement.addEventListener(
          "mouseover",
          function(event) {
            window.clearTimeout(divElement.timeOutValue);
          }
        )
        // add back the timeout
        divElement.addEventListener(
          "mouseleave",
          function() {
            divElement.timeOutValue = window.setTimeout(
              function() {
                // Remove the toast from DOM
                self.removeElement(divElement);
              },
              self.options.duration
            )
          }
        )
      }

      // Adding an on-click destination path
      if (typeof this.options.destination !== "undefined") {
        divElement.addEventListener(
          "click",
          function(event) {
            event.stopPropagation();
            if (this.options.newWindow === true) {
              window.open(this.options.destination, "_blank");
            } else {
              window.location = this.options.destination;
            }
          }.bind(this)
        );
      }

      if (typeof this.options.onClick === "function" && typeof this.options.destination === "undefined") {
        divElement.addEventListener(
          "click",
          function(event) {
            event.stopPropagation();
            this.options.onClick();
          }.bind(this)
        );
      }

      // Adding offset
      if(typeof this.options.offset === "object") {

        var x = getAxisOffsetAValue("x", this.options);
        var y = getAxisOffsetAValue("y", this.options);

        var xOffset = this.options.position == "left" ? x : "-" + x;
        var yOffset = this.options.gravity == "toastify-top" ? y : "-" + y;

        divElement.style.transform = "translate(" + xOffset + "," + yOffset + ")";

      }

      // Returning the generated element
      return divElement;
    },

    // Displaying the toast
    showToast: function() {
      // Creating the DOM object for the toast
      this.toastElement = this.buildToast();

      // Getting the root element to with the toast needs to be added
      var rootElement;
      if (typeof this.options.selector === "string") {
        rootElement = document.getElementById(this.options.selector);
      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {
        rootElement = this.options.selector;
      } else {
        rootElement = document.body;
      }

      // Validating if root element is present in DOM
      if (!rootElement) {
        throw "Root element is not defined";
      }

      // Adding the DOM element
      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;
      rootElement.insertBefore(this.toastElement, elementToInsert);

      // Repositioning the toasts in case multiple toasts are present
      Toastify.reposition();

      if (this.options.duration > 0) {
        this.toastElement.timeOutValue = window.setTimeout(
          function() {
            // Remove the toast from DOM
            this.removeElement(this.toastElement);
          }.bind(this),
          this.options.duration
        ); // Binding `this` for function invocation
      }

      // Supporting function chaining
      return this;
    },

    hideToast: function() {
      if (this.toastElement.timeOutValue) {
        clearTimeout(this.toastElement.timeOutValue);
      }
      this.removeElement(this.toastElement);
    },

    // Removing the element from the DOM
    removeElement: function(toastElement) {
      // Hiding the element
      // toastElement.classList.remove("on");
      toastElement.className = toastElement.className.replace(" on", "");

      // Removing the element from DOM after transition end
      window.setTimeout(
        function() {
          // remove options node if any
          if (this.options.node && this.options.node.parentNode) {
            this.options.node.parentNode.removeChild(this.options.node);
          }

          // Remove the element from the DOM, only when the parent node was not removed before.
          if (toastElement.parentNode) {
            toastElement.parentNode.removeChild(toastElement);
          }

          // Calling the callback function
          this.options.callback.call(toastElement);

          // Repositioning the toasts again
          Toastify.reposition();
        }.bind(this),
        400
      ); // Binding `this` for function invocation
    },
  };

  // Positioning the toasts on the DOM
  Toastify.reposition = function() {

    // Top margins with gravity
    var topLeftOffsetSize = {
      top: 15,
      bottom: 15,
    };
    var topRightOffsetSize = {
      top: 15,
      bottom: 15,
    };
    var offsetSize = {
      top: 15,
      bottom: 15,
    };

    // Get all toast messages on the DOM
    var allToasts = document.getElementsByClassName("toastify");

    var classUsed;

    // Modifying the position of each toast element
    for (var i = 0; i < allToasts.length; i++) {
      // Getting the applied gravity
      if (containsClass(allToasts[i], "toastify-top") === true) {
        classUsed = "toastify-top";
      } else {
        classUsed = "toastify-bottom";
      }

      var height = allToasts[i].offsetHeight;
      classUsed = classUsed.substr(9, classUsed.length-1)
      // Spacing between toasts
      var offset = 15;

      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;

      // Show toast in center if screen with less than or equal to 360px
      if (width <= 360) {
        // Setting the position
        allToasts[i].style[classUsed] = offsetSize[classUsed] + "px";

        offsetSize[classUsed] += height + offset;
      } else {
        if (containsClass(allToasts[i], "toastify-left") === true) {
          // Setting the position
          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + "px";

          topLeftOffsetSize[classUsed] += height + offset;
        } else {
          // Setting the position
          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + "px";

          topRightOffsetSize[classUsed] += height + offset;
        }
      }
    }

    // Supporting function chaining
    return this;
  };

  // Helper function to get offset.
  function getAxisOffsetAValue(axis, options) {

    if(options.offset[axis]) {
      if(isNaN(options.offset[axis])) {
        return options.offset[axis];
      }
      else {
        return options.offset[axis] + 'px';
      }
    }

    return '0px';

  }

  function containsClass(elem, yourClass) {
    if (!elem || typeof yourClass !== "string") {
      return false;
    } else if (
      elem.className &&
      elem.className
        .trim()
        .split(/\s+/gi)
        .indexOf(yourClass) > -1
    ) {
      return true;
    } else {
      return false;
    }
  }

  // Setting up the prototype for the init object
  Toastify.lib.init.prototype = Toastify.lib;

  // Returning the Toastify function to be assigned to the window object/module
  return Toastify;
});


/***/ }),

/***/ 5471:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $9: () => (/* binding */ useCssVars),
/* harmony export */   $V: () => (/* binding */ defineAsyncComponent),
/* harmony export */   Ay: () => (/* binding */ Vue),
/* harmony export */   EW: () => (/* binding */ computed),
/* harmony export */   IJ: () => (/* binding */ shallowRef),
/* harmony export */   KC: () => (/* binding */ onBeforeMount),
/* harmony export */   KR: () => (/* binding */ ref$1),
/* harmony export */   Kh: () => (/* binding */ reactive),
/* harmony export */   QW: () => (/* binding */ toRefs),
/* harmony export */   R1: () => (/* binding */ unref),
/* harmony export */   Tm: () => (/* binding */ isReadonly),
/* harmony export */   dY: () => (/* binding */ nextTick),
/* harmony export */   h: () => (/* binding */ h),
/* harmony export */   hi: () => (/* binding */ onUnmounted),
/* harmony export */   i9: () => (/* binding */ isRef),
/* harmony export */   jr: () => (/* binding */ onScopeDispose),
/* harmony export */   lW: () => (/* binding */ toRef),
/* harmony export */   nI: () => (/* binding */ getCurrentInstance),
/* harmony export */   nT: () => (/* binding */ watchEffect),
/* harmony export */   o5: () => (/* binding */ getCurrentScope),
/* harmony export */   pM: () => (/* binding */ defineComponent),
/* harmony export */   rY: () => (/* binding */ customRef),
/* harmony export */   sV: () => (/* binding */ onMounted),
/* harmony export */   tB: () => (/* binding */ readonly),
/* harmony export */   ux: () => (/* binding */ toRaw),
/* harmony export */   wB: () => (/* binding */ watch)
/* harmony export */ });
/* unused harmony exports EffectScope, del, effectScope, inject, isProxy, isReactive, isShallow, markRaw, mergeDefaults, onActivated, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onRenderTracked, onRenderTriggered, onServerPrefetch, onUpdated, provide, proxyRefs, set, shallowReactive, shallowReadonly, triggerRef, useAttrs, useCssModule, useListeners, useSlots, version, watchPostEffect, watchSyncEffect */
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var emptyObject = Object.freeze({});
var isArray = Array.isArray;
// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef(v) {
    return v === undefined || v === null;
}
function isDef(v) {
    return v !== undefined && v !== null;
}
function isTrue(v) {
    return v === true;
}
function isFalse(v) {
    return v === false;
}
/**
 * Check if value is primitive.
 */
function isPrimitive(value) {
    return (typeof value === 'string' ||
        typeof value === 'number' ||
        // $flow-disable-line
        typeof value === 'symbol' ||
        typeof value === 'boolean');
}
function isFunction(value) {
    return typeof value === 'function';
}
/**
 * Quick object check - this is primarily used to tell
 * objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject(obj) {
    return obj !== null && typeof obj === 'object';
}
/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;
function toRawType(value) {
    return _toString.call(value).slice(8, -1);
}
/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject(obj) {
    return _toString.call(obj) === '[object Object]';
}
function isRegExp(v) {
    return _toString.call(v) === '[object RegExp]';
}
/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex(val) {
    var n = parseFloat(String(val));
    return n >= 0 && Math.floor(n) === n && isFinite(val);
}
function isPromise(val) {
    return (isDef(val) &&
        typeof val.then === 'function' &&
        typeof val.catch === 'function');
}
/**
 * Convert a value to a string that is actually rendered.
 */
function toString(val) {
    return val == null
        ? ''
        : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
            ? JSON.stringify(val, replacer, 2)
            : String(val);
}
function replacer(_key, val) {
    // avoid circular deps from v3
    if (val && val.__v_isRef) {
        return val.value;
    }
    return val;
}
/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber(val) {
    var n = parseFloat(val);
    return isNaN(n) ? val : n;
}
/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap(str, expectsLowerCase) {
    var map = Object.create(null);
    var list = str.split(',');
    for (var i = 0; i < list.length; i++) {
        map[list[i]] = true;
    }
    return expectsLowerCase ? function (val) { return map[val.toLowerCase()]; } : function (val) { return map[val]; };
}
/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);
/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
/**
 * Remove an item from an array.
 */
function remove$2(arr, item) {
    var len = arr.length;
    if (len) {
        // fast path for the only / last item
        if (item === arr[len - 1]) {
            arr.length = len - 1;
            return;
        }
        var index = arr.indexOf(item);
        if (index > -1) {
            return arr.splice(index, 1);
        }
    }
}
/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(obj, key) {
    return hasOwnProperty.call(obj, key);
}
/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
    var cache = Object.create(null);
    return function cachedFn(str) {
        var hit = cache[str];
        return hit || (cache[str] = fn(str));
    };
}
/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
    return str.replace(camelizeRE, function (_, c) { return (c ? c.toUpperCase() : ''); });
});
/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
});
/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
    return str.replace(hyphenateRE, '-$1').toLowerCase();
});
/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */
/* istanbul ignore next */
function polyfillBind(fn, ctx) {
    function boundFn(a) {
        var l = arguments.length;
        return l
            ? l > 1
                ? fn.apply(ctx, arguments)
                : fn.call(ctx, a)
            : fn.call(ctx);
    }
    boundFn._length = fn.length;
    return boundFn;
}
function nativeBind(fn, ctx) {
    return fn.bind(ctx);
}
// @ts-expect-error bind cannot be `undefined`
var bind = Function.prototype.bind ? nativeBind : polyfillBind;
/**
 * Convert an Array-like object to a real Array.
 */
function toArray(list, start) {
    start = start || 0;
    var i = list.length - start;
    var ret = new Array(i);
    while (i--) {
        ret[i] = list[i + start];
    }
    return ret;
}
/**
 * Mix properties into target object.
 */
function extend(to, _from) {
    for (var key in _from) {
        to[key] = _from[key];
    }
    return to;
}
/**
 * Merge an Array of Objects into a single Object.
 */
function toObject(arr) {
    var res = {};
    for (var i = 0; i < arr.length; i++) {
        if (arr[i]) {
            extend(res, arr[i]);
        }
    }
    return res;
}
/* eslint-disable no-unused-vars */
/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop(a, b, c) { }
/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };
/* eslint-enable no-unused-vars */
/**
 * Return the same value.
 */
var identity = function (_) { return _; };
/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual(a, b) {
    if (a === b)
        return true;
    var isObjectA = isObject(a);
    var isObjectB = isObject(b);
    if (isObjectA && isObjectB) {
        try {
            var isArrayA = Array.isArray(a);
            var isArrayB = Array.isArray(b);
            if (isArrayA && isArrayB) {
                return (a.length === b.length &&
                    a.every(function (e, i) {
                        return looseEqual(e, b[i]);
                    }));
            }
            else if (a instanceof Date && b instanceof Date) {
                return a.getTime() === b.getTime();
            }
            else if (!isArrayA && !isArrayB) {
                var keysA = Object.keys(a);
                var keysB = Object.keys(b);
                return (keysA.length === keysB.length &&
                    keysA.every(function (key) {
                        return looseEqual(a[key], b[key]);
                    }));
            }
            else {
                /* istanbul ignore next */
                return false;
            }
        }
        catch (e) {
            /* istanbul ignore next */
            return false;
        }
    }
    else if (!isObjectA && !isObjectB) {
        return String(a) === String(b);
    }
    else {
        return false;
    }
}
/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf(arr, val) {
    for (var i = 0; i < arr.length; i++) {
        if (looseEqual(arr[i], val))
            return i;
    }
    return -1;
}
/**
 * Ensure a function is called only once.
 */
function once(fn) {
    var called = false;
    return function () {
        if (!called) {
            called = true;
            fn.apply(this, arguments);
        }
    };
}
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#polyfill
function hasChanged(x, y) {
    if (x === y) {
        return x === 0 && 1 / x !== 1 / y;
    }
    else {
        return x === x || y === y;
    }
}

var SSR_ATTR = 'data-server-rendered';
var ASSET_TYPES = ['component', 'directive', 'filter'];
var LIFECYCLE_HOOKS = [
    'beforeCreate',
    'created',
    'beforeMount',
    'mounted',
    'beforeUpdate',
    'updated',
    'beforeDestroy',
    'destroyed',
    'activated',
    'deactivated',
    'errorCaptured',
    'serverPrefetch',
    'renderTracked',
    'renderTriggered'
];

var config = {
    /**
     * Option merge strategies (used in core/util/options)
     */
    // $flow-disable-line
    optionMergeStrategies: Object.create(null),
    /**
     * Whether to suppress warnings.
     */
    silent: false,
    /**
     * Show production mode tip message on boot?
     */
    productionTip: "production" !== 'production',
    /**
     * Whether to enable devtools
     */
    devtools: "production" !== 'production',
    /**
     * Whether to record perf
     */
    performance: false,
    /**
     * Error handler for watcher errors
     */
    errorHandler: null,
    /**
     * Warn handler for watcher warns
     */
    warnHandler: null,
    /**
     * Ignore certain custom elements
     */
    ignoredElements: [],
    /**
     * Custom user key aliases for v-on
     */
    // $flow-disable-line
    keyCodes: Object.create(null),
    /**
     * Check if a tag is reserved so that it cannot be registered as a
     * component. This is platform-dependent and may be overwritten.
     */
    isReservedTag: no,
    /**
     * Check if an attribute is reserved so that it cannot be used as a component
     * prop. This is platform-dependent and may be overwritten.
     */
    isReservedAttr: no,
    /**
     * Check if a tag is an unknown element.
     * Platform-dependent.
     */
    isUnknownElement: no,
    /**
     * Get the namespace of an element
     */
    getTagNamespace: noop,
    /**
     * Parse the real tag name for the specific platform.
     */
    parsePlatformTagName: identity,
    /**
     * Check if an attribute must be bound using property, e.g. value
     * Platform-dependent.
     */
    mustUseProp: no,
    /**
     * Perform updates asynchronously. Intended to be used by Vue Test Utils
     * This will significantly reduce performance if set to false.
     */
    async: true,
    /**
     * Exposed for legacy reasons
     */
    _lifecycleHooks: LIFECYCLE_HOOKS
};

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
/**
 * Check if a string starts with $ or _
 */
function isReserved(str) {
    var c = (str + '').charCodeAt(0);
    return c === 0x24 || c === 0x5f;
}
/**
 * Define a property.
 */
function def(obj, key, val, enumerable) {
    Object.defineProperty(obj, key, {
        value: val,
        enumerable: !!enumerable,
        writable: true,
        configurable: true
    });
}
/**
 * Parse simple path.
 */
var bailRE = new RegExp("[^".concat(unicodeRegExp.source, ".$_\\d]"));
function parsePath(path) {
    if (bailRE.test(path)) {
        return;
    }
    var segments = path.split('.');
    return function (obj) {
        for (var i = 0; i < segments.length; i++) {
            if (!obj)
                return;
            obj = obj[segments[i]];
        }
        return obj;
    };
}

// can we use __proto__?
var hasProto = '__proto__' in {};
// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
UA && UA.indexOf('android') > 0;
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
UA && /chrome\/\d+/.test(UA) && !isEdge;
UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);
// Firefox has a "watch" function on Object.prototype...
// @ts-expect-error firebox support
var nativeWatch = {}.watch;
var supportsPassive = false;
if (inBrowser) {
    try {
        var opts = {};
        Object.defineProperty(opts, 'passive', {
            get: function () {
                /* istanbul ignore next */
                supportsPassive = true;
            }
        }); // https://github.com/facebook/flow/issues/285
        window.addEventListener('test-passive', null, opts);
    }
    catch (e) { }
}
// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
    if (_isServer === undefined) {
        /* istanbul ignore if */
        if (!inBrowser && typeof __webpack_require__.g !== 'undefined') {
            // detect presence of vue-server-renderer and avoid
            // Webpack shimming the process
            _isServer =
                __webpack_require__.g['process'] && __webpack_require__.g['process'].env.VUE_ENV === 'server';
        }
        else {
            _isServer = false;
        }
    }
    return _isServer;
};
// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
/* istanbul ignore next */
function isNative(Ctor) {
    return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
}
var hasSymbol = typeof Symbol !== 'undefined' &&
    isNative(Symbol) &&
    typeof Reflect !== 'undefined' &&
    isNative(Reflect.ownKeys);
var _Set; // $flow-disable-line
/* istanbul ignore if */ if (typeof Set !== 'undefined' && isNative(Set)) {
    // use native Set when available.
    _Set = Set;
}
else {
    // a non-standard Set polyfill that only works with primitive keys.
    _Set = /** @class */ (function () {
        function Set() {
            this.set = Object.create(null);
        }
        Set.prototype.has = function (key) {
            return this.set[key] === true;
        };
        Set.prototype.add = function (key) {
            this.set[key] = true;
        };
        Set.prototype.clear = function () {
            this.set = Object.create(null);
        };
        return Set;
    }());
}

var currentInstance = null;
/**
 * This is exposed for compatibility with v3 (e.g. some functions in VueUse
 * relies on it). Do not use this internally, just use `currentInstance`.
 *
 * @internal this function needs manual type declaration because it relies
 * on previously manually authored types from Vue 2
 */
function getCurrentInstance() {
    return currentInstance && { proxy: currentInstance };
}
/**
 * @internal
 */
function setCurrentInstance(vm) {
    if (vm === void 0) { vm = null; }
    if (!vm)
        currentInstance && currentInstance._scope.off();
    currentInstance = vm;
    vm && vm._scope.on();
}

/**
 * @internal
 */
var VNode = /** @class */ (function () {
    function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
        this.tag = tag;
        this.data = data;
        this.children = children;
        this.text = text;
        this.elm = elm;
        this.ns = undefined;
        this.context = context;
        this.fnContext = undefined;
        this.fnOptions = undefined;
        this.fnScopeId = undefined;
        this.key = data && data.key;
        this.componentOptions = componentOptions;
        this.componentInstance = undefined;
        this.parent = undefined;
        this.raw = false;
        this.isStatic = false;
        this.isRootInsert = true;
        this.isComment = false;
        this.isCloned = false;
        this.isOnce = false;
        this.asyncFactory = asyncFactory;
        this.asyncMeta = undefined;
        this.isAsyncPlaceholder = false;
    }
    Object.defineProperty(VNode.prototype, "child", {
        // DEPRECATED: alias for componentInstance for backwards compat.
        /* istanbul ignore next */
        get: function () {
            return this.componentInstance;
        },
        enumerable: false,
        configurable: true
    });
    return VNode;
}());
var createEmptyVNode = function (text) {
    if (text === void 0) { text = ''; }
    var node = new VNode();
    node.text = text;
    node.isComment = true;
    return node;
};
function createTextVNode(val) {
    return new VNode(undefined, undefined, undefined, String(val));
}
// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode(vnode) {
    var cloned = new VNode(vnode.tag, vnode.data, 
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(), vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);
    cloned.ns = vnode.ns;
    cloned.isStatic = vnode.isStatic;
    cloned.key = vnode.key;
    cloned.isComment = vnode.isComment;
    cloned.fnContext = vnode.fnContext;
    cloned.fnOptions = vnode.fnOptions;
    cloned.fnScopeId = vnode.fnScopeId;
    cloned.asyncMeta = vnode.asyncMeta;
    cloned.isCloned = true;
    return cloned;
}

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

var uid$2 = 0;
var pendingCleanupDeps = [];
var cleanupDeps = function () {
    for (var i = 0; i < pendingCleanupDeps.length; i++) {
        var dep = pendingCleanupDeps[i];
        dep.subs = dep.subs.filter(function (s) { return s; });
        dep._pending = false;
    }
    pendingCleanupDeps.length = 0;
};
/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 * @internal
 */
var Dep = /** @class */ (function () {
    function Dep() {
        // pending subs cleanup
        this._pending = false;
        this.id = uid$2++;
        this.subs = [];
    }
    Dep.prototype.addSub = function (sub) {
        this.subs.push(sub);
    };
    Dep.prototype.removeSub = function (sub) {
        // #12696 deps with massive amount of subscribers are extremely slow to
        // clean up in Chromium
        // to workaround this, we unset the sub for now, and clear them on
        // next scheduler flush.
        this.subs[this.subs.indexOf(sub)] = null;
        if (!this._pending) {
            this._pending = true;
            pendingCleanupDeps.push(this);
        }
    };
    Dep.prototype.depend = function (info) {
        if (Dep.target) {
            Dep.target.addDep(this);
            if (false) {}
        }
    };
    Dep.prototype.notify = function (info) {
        // stabilize the subscriber list first
        var subs = this.subs.filter(function (s) { return s; });
        if (false) {}
        for (var i = 0, l = subs.length; i < l; i++) {
            var sub = subs[i];
            if (false) {}
            sub.update();
        }
    };
    return Dep;
}());
// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
Dep.target = null;
var targetStack = [];
function pushTarget(target) {
    targetStack.push(target);
    Dep.target = target;
}
function popTarget() {
    targetStack.pop();
    Dep.target = targetStack[targetStack.length - 1];
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */
var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);
var methodsToPatch = [
    'push',
    'pop',
    'shift',
    'unshift',
    'splice',
    'sort',
    'reverse'
];
/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
    // cache original method
    var original = arrayProto[method];
    def(arrayMethods, method, function mutator() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var result = original.apply(this, args);
        var ob = this.__ob__;
        var inserted;
        switch (method) {
            case 'push':
            case 'unshift':
                inserted = args;
                break;
            case 'splice':
                inserted = args.slice(2);
                break;
        }
        if (inserted)
            ob.observeArray(inserted);
        // notify change
        if (false) {}
        else {
            ob.dep.notify();
        }
        return result;
    });
});

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);
var NO_INITIAL_VALUE = {};
/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;
function toggleObserving(value) {
    shouldObserve = value;
}
// ssr mock dep
var mockDep = {
    notify: noop,
    depend: noop,
    addSub: noop,
    removeSub: noop
};
/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = /** @class */ (function () {
    function Observer(value, shallow, mock) {
        if (shallow === void 0) { shallow = false; }
        if (mock === void 0) { mock = false; }
        this.value = value;
        this.shallow = shallow;
        this.mock = mock;
        // this.value = value
        this.dep = mock ? mockDep : new Dep();
        this.vmCount = 0;
        def(value, '__ob__', this);
        if (isArray(value)) {
            if (!mock) {
                if (hasProto) {
                    value.__proto__ = arrayMethods;
                    /* eslint-enable no-proto */
                }
                else {
                    for (var i = 0, l = arrayKeys.length; i < l; i++) {
                        var key = arrayKeys[i];
                        def(value, key, arrayMethods[key]);
                    }
                }
            }
            if (!shallow) {
                this.observeArray(value);
            }
        }
        else {
            /**
             * Walk through all properties and convert them into
             * getter/setters. This method should only be called when
             * value type is Object.
             */
            var keys = Object.keys(value);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                defineReactive(value, key, NO_INITIAL_VALUE, undefined, shallow, mock);
            }
        }
    }
    /**
     * Observe a list of Array items.
     */
    Observer.prototype.observeArray = function (value) {
        for (var i = 0, l = value.length; i < l; i++) {
            observe(value[i], false, this.mock);
        }
    };
    return Observer;
}());
// helpers
/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe(value, shallow, ssrMockReactivity) {
    if (value && hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
        return value.__ob__;
    }
    if (shouldObserve &&
        (ssrMockReactivity || !isServerRendering()) &&
        (isArray(value) || isPlainObject(value)) &&
        Object.isExtensible(value) &&
        !value.__v_skip /* ReactiveFlags.SKIP */ &&
        !isRef(value) &&
        !(value instanceof VNode)) {
        return new Observer(value, shallow, ssrMockReactivity);
    }
}
/**
 * Define a reactive property on an Object.
 */
function defineReactive(obj, key, val, customSetter, shallow, mock, observeEvenIfShallow) {
    if (observeEvenIfShallow === void 0) { observeEvenIfShallow = false; }
    var dep = new Dep();
    var property = Object.getOwnPropertyDescriptor(obj, key);
    if (property && property.configurable === false) {
        return;
    }
    // cater for pre-defined getter/setters
    var getter = property && property.get;
    var setter = property && property.set;
    if ((!getter || setter) &&
        (val === NO_INITIAL_VALUE || arguments.length === 2)) {
        val = obj[key];
    }
    var childOb = shallow ? val && val.__ob__ : observe(val, false, mock);
    Object.defineProperty(obj, key, {
        enumerable: true,
        configurable: true,
        get: function reactiveGetter() {
            var value = getter ? getter.call(obj) : val;
            if (Dep.target) {
                if (false) {}
                else {
                    dep.depend();
                }
                if (childOb) {
                    childOb.dep.depend();
                    if (isArray(value)) {
                        dependArray(value);
                    }
                }
            }
            return isRef(value) && !shallow ? value.value : value;
        },
        set: function reactiveSetter(newVal) {
            var value = getter ? getter.call(obj) : val;
            if (!hasChanged(value, newVal)) {
                return;
            }
            if (false) {}
            if (setter) {
                setter.call(obj, newVal);
            }
            else if (getter) {
                // #7981: for accessor properties without setter
                return;
            }
            else if (!shallow && isRef(value) && !isRef(newVal)) {
                value.value = newVal;
                return;
            }
            else {
                val = newVal;
            }
            childOb = shallow ? newVal && newVal.__ob__ : observe(newVal, false, mock);
            if (false) {}
            else {
                dep.notify();
            }
        }
    });
    return dep;
}
function set(target, key, val) {
    if (false) {}
    if (isReadonly(target)) {
         false && 0;
        return;
    }
    var ob = target.__ob__;
    if (isArray(target) && isValidArrayIndex(key)) {
        target.length = Math.max(target.length, key);
        target.splice(key, 1, val);
        // when mocking for SSR, array methods are not hijacked
        if (ob && !ob.shallow && ob.mock) {
            observe(val, false, true);
        }
        return val;
    }
    if (key in target && !(key in Object.prototype)) {
        target[key] = val;
        return val;
    }
    if (target._isVue || (ob && ob.vmCount)) {
         false &&
            0;
        return val;
    }
    if (!ob) {
        target[key] = val;
        return val;
    }
    defineReactive(ob.value, key, val, undefined, ob.shallow, ob.mock);
    if (false) {}
    else {
        ob.dep.notify();
    }
    return val;
}
function del(target, key) {
    if (false) {}
    if (isArray(target) && isValidArrayIndex(key)) {
        target.splice(key, 1);
        return;
    }
    var ob = target.__ob__;
    if (target._isVue || (ob && ob.vmCount)) {
         false &&
            0;
        return;
    }
    if (isReadonly(target)) {
         false &&
            0;
        return;
    }
    if (!hasOwn(target, key)) {
        return;
    }
    delete target[key];
    if (!ob) {
        return;
    }
    if (false) {}
    else {
        ob.dep.notify();
    }
}
/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray(value) {
    for (var e = void 0, i = 0, l = value.length; i < l; i++) {
        e = value[i];
        if (e && e.__ob__) {
            e.__ob__.dep.depend();
        }
        if (isArray(e)) {
            dependArray(e);
        }
    }
}

function reactive(target) {
    makeReactive(target, false);
    return target;
}
/**
 * Return a shallowly-reactive copy of the original object, where only the root
 * level properties are reactive. It also does not auto-unwrap refs (even at the
 * root level).
 */
function shallowReactive(target) {
    makeReactive(target, true);
    def(target, "__v_isShallow" /* ReactiveFlags.IS_SHALLOW */, true);
    return target;
}
function makeReactive(target, shallow) {
    // if trying to observe a readonly proxy, return the readonly version.
    if (!isReadonly(target)) {
        if (false) { var existingOb; }
        var ob = observe(target, shallow, isServerRendering() /* ssr mock reactivity */);
        if (false) {}
    }
}
function isReactive(value) {
    if (isReadonly(value)) {
        return isReactive(value["__v_raw" /* ReactiveFlags.RAW */]);
    }
    return !!(value && value.__ob__);
}
function isShallow(value) {
    return !!(value && value.__v_isShallow);
}
function isReadonly(value) {
    return !!(value && value.__v_isReadonly);
}
function isProxy(value) {
    return isReactive(value) || isReadonly(value);
}
function toRaw(observed) {
    var raw = observed && observed["__v_raw" /* ReactiveFlags.RAW */];
    return raw ? toRaw(raw) : observed;
}
function markRaw(value) {
    // non-extensible objects won't be observed anyway
    if (Object.isExtensible(value)) {
        def(value, "__v_skip" /* ReactiveFlags.SKIP */, true);
    }
    return value;
}
/**
 * @internal
 */
function isCollectionType(value) {
    var type = toRawType(value);
    return (type === 'Map' || type === 'WeakMap' || type === 'Set' || type === 'WeakSet');
}

/**
 * @internal
 */
var RefFlag = "__v_isRef";
function isRef(r) {
    return !!(r && r.__v_isRef === true);
}
function ref$1(value) {
    return createRef(value, false);
}
function shallowRef(value) {
    return createRef(value, true);
}
function createRef(rawValue, shallow) {
    if (isRef(rawValue)) {
        return rawValue;
    }
    var ref = {};
    def(ref, RefFlag, true);
    def(ref, "__v_isShallow" /* ReactiveFlags.IS_SHALLOW */, shallow);
    def(ref, 'dep', defineReactive(ref, 'value', rawValue, null, shallow, isServerRendering()));
    return ref;
}
function triggerRef(ref) {
    if (false) {}
    if (false) {}
    else {
        ref.dep && ref.dep.notify();
    }
}
function unref(ref) {
    return isRef(ref) ? ref.value : ref;
}
function proxyRefs(objectWithRefs) {
    if (isReactive(objectWithRefs)) {
        return objectWithRefs;
    }
    var proxy = {};
    var keys = Object.keys(objectWithRefs);
    for (var i = 0; i < keys.length; i++) {
        proxyWithRefUnwrap(proxy, objectWithRefs, keys[i]);
    }
    return proxy;
}
function proxyWithRefUnwrap(target, source, key) {
    Object.defineProperty(target, key, {
        enumerable: true,
        configurable: true,
        get: function () {
            var val = source[key];
            if (isRef(val)) {
                return val.value;
            }
            else {
                var ob = val && val.__ob__;
                if (ob)
                    ob.dep.depend();
                return val;
            }
        },
        set: function (value) {
            var oldValue = source[key];
            if (isRef(oldValue) && !isRef(value)) {
                oldValue.value = value;
            }
            else {
                source[key] = value;
            }
        }
    });
}
function customRef(factory) {
    var dep = new Dep();
    var _a = factory(function () {
        if (false) {}
        else {
            dep.depend();
        }
    }, function () {
        if (false) {}
        else {
            dep.notify();
        }
    }), get = _a.get, set = _a.set;
    var ref = {
        get value() {
            return get();
        },
        set value(newVal) {
            set(newVal);
        }
    };
    def(ref, RefFlag, true);
    return ref;
}
function toRefs(object) {
    if (false) {}
    var ret = isArray(object) ? new Array(object.length) : {};
    for (var key in object) {
        ret[key] = toRef(object, key);
    }
    return ret;
}
function toRef(object, key, defaultValue) {
    var val = object[key];
    if (isRef(val)) {
        return val;
    }
    var ref = {
        get value() {
            var val = object[key];
            return val === undefined ? defaultValue : val;
        },
        set value(newVal) {
            object[key] = newVal;
        }
    };
    def(ref, RefFlag, true);
    return ref;
}

var rawToReadonlyFlag = "__v_rawToReadonly";
var rawToShallowReadonlyFlag = "__v_rawToShallowReadonly";
function readonly(target) {
    return createReadonly(target, false);
}
function createReadonly(target, shallow) {
    if (!isPlainObject(target)) {
        if (false) {}
        return target;
    }
    if (false) {}
    // already a readonly object
    if (isReadonly(target)) {
        return target;
    }
    // already has a readonly proxy
    var existingFlag = shallow ? rawToShallowReadonlyFlag : rawToReadonlyFlag;
    var existingProxy = target[existingFlag];
    if (existingProxy) {
        return existingProxy;
    }
    var proxy = Object.create(Object.getPrototypeOf(target));
    def(target, existingFlag, proxy);
    def(proxy, "__v_isReadonly" /* ReactiveFlags.IS_READONLY */, true);
    def(proxy, "__v_raw" /* ReactiveFlags.RAW */, target);
    if (isRef(target)) {
        def(proxy, RefFlag, true);
    }
    if (shallow || isShallow(target)) {
        def(proxy, "__v_isShallow" /* ReactiveFlags.IS_SHALLOW */, true);
    }
    var keys = Object.keys(target);
    for (var i = 0; i < keys.length; i++) {
        defineReadonlyProperty(proxy, target, keys[i], shallow);
    }
    return proxy;
}
function defineReadonlyProperty(proxy, target, key, shallow) {
    Object.defineProperty(proxy, key, {
        enumerable: true,
        configurable: true,
        get: function () {
            var val = target[key];
            return shallow || !isPlainObject(val) ? val : readonly(val);
        },
        set: function () {
             false &&
                0;
        }
    });
}
/**
 * Returns a reactive-copy of the original object, where only the root level
 * properties are readonly, and does NOT unwrap refs nor recursively convert
 * returned properties.
 * This is used for creating the props proxy object for stateful components.
 */
function shallowReadonly(target) {
    return createReadonly(target, true);
}

function computed(getterOrOptions, debugOptions) {
    var getter;
    var setter;
    var onlyGetter = isFunction(getterOrOptions);
    if (onlyGetter) {
        getter = getterOrOptions;
        setter =  false
            ? 0
            : noop;
    }
    else {
        getter = getterOrOptions.get;
        setter = getterOrOptions.set;
    }
    var watcher = isServerRendering()
        ? null
        : new Watcher(currentInstance, getter, noop, { lazy: true });
    if (false) {}
    var ref = {
        // some libs rely on the presence effect for checking computed refs
        // from normal refs, but the implementation doesn't matter
        effect: watcher,
        get value() {
            if (watcher) {
                if (watcher.dirty) {
                    watcher.evaluate();
                }
                if (Dep.target) {
                    if (false) {}
                    watcher.depend();
                }
                return watcher.value;
            }
            else {
                return getter();
            }
        },
        set value(newVal) {
            setter(newVal);
        }
    };
    def(ref, RefFlag, true);
    def(ref, "__v_isReadonly" /* ReactiveFlags.IS_READONLY */, onlyGetter);
    return ref;
}

var WATCHER = "watcher";
var WATCHER_CB = "".concat(WATCHER, " callback");
var WATCHER_GETTER = "".concat(WATCHER, " getter");
var WATCHER_CLEANUP = "".concat(WATCHER, " cleanup");
// Simple effect.
function watchEffect(effect, options) {
    return doWatch(effect, null, options);
}
function watchPostEffect(effect, options) {
    return doWatch(effect, null, ( false
        ? 0 : { flush: 'post' }));
}
function watchSyncEffect(effect, options) {
    return doWatch(effect, null, ( false
        ? 0 : { flush: 'sync' }));
}
// initial value for watchers to trigger on undefined initial values
var INITIAL_WATCHER_VALUE = {};
// implementation
function watch(source, cb, options) {
    if (false) {}
    return doWatch(source, cb, options);
}
function doWatch(source, cb, _a) {
    var _b = _a === void 0 ? emptyObject : _a, immediate = _b.immediate, deep = _b.deep, _c = _b.flush, flush = _c === void 0 ? 'pre' : _c, onTrack = _b.onTrack, onTrigger = _b.onTrigger;
    if (false) {}
    var warnInvalidSource = function (s) {
        warn("Invalid watch source: ".concat(s, ". A watch source can only be a getter/effect ") +
            "function, a ref, a reactive object, or an array of these types.");
    };
    var instance = currentInstance;
    var call = function (fn, type, args) {
        if (args === void 0) { args = null; }
        var res = invokeWithErrorHandling(fn, null, args, instance, type);
        if (deep && res && res.__ob__)
            res.__ob__.dep.depend();
        return res;
    };
    var getter;
    var forceTrigger = false;
    var isMultiSource = false;
    if (isRef(source)) {
        getter = function () { return source.value; };
        forceTrigger = isShallow(source);
    }
    else if (isReactive(source)) {
        getter = function () {
            source.__ob__.dep.depend();
            return source;
        };
        deep = true;
    }
    else if (isArray(source)) {
        isMultiSource = true;
        forceTrigger = source.some(function (s) { return isReactive(s) || isShallow(s); });
        getter = function () {
            return source.map(function (s) {
                if (isRef(s)) {
                    return s.value;
                }
                else if (isReactive(s)) {
                    s.__ob__.dep.depend();
                    return traverse(s);
                }
                else if (isFunction(s)) {
                    return call(s, WATCHER_GETTER);
                }
                else {
                     false && 0;
                }
            });
        };
    }
    else if (isFunction(source)) {
        if (cb) {
            // getter with cb
            getter = function () { return call(source, WATCHER_GETTER); };
        }
        else {
            // no cb -> simple effect
            getter = function () {
                if (instance && instance._isDestroyed) {
                    return;
                }
                if (cleanup) {
                    cleanup();
                }
                return call(source, WATCHER, [onCleanup]);
            };
        }
    }
    else {
        getter = noop;
         false && 0;
    }
    if (cb && deep) {
        var baseGetter_1 = getter;
        getter = function () { return traverse(baseGetter_1()); };
    }
    var cleanup;
    var onCleanup = function (fn) {
        cleanup = watcher.onStop = function () {
            call(fn, WATCHER_CLEANUP);
        };
    };
    // in SSR there is no need to setup an actual effect, and it should be noop
    // unless it's eager
    if (isServerRendering()) {
        // we will also not call the invalidate callback (+ runner is not set up)
        onCleanup = noop;
        if (!cb) {
            getter();
        }
        else if (immediate) {
            call(cb, WATCHER_CB, [
                getter(),
                isMultiSource ? [] : undefined,
                onCleanup
            ]);
        }
        return noop;
    }
    var watcher = new Watcher(currentInstance, getter, noop, {
        lazy: true
    });
    watcher.noRecurse = !cb;
    var oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;
    // overwrite default run
    watcher.run = function () {
        if (!watcher.active) {
            return;
        }
        if (cb) {
            // watch(source, cb)
            var newValue = watcher.get();
            if (deep ||
                forceTrigger ||
                (isMultiSource
                    ? newValue.some(function (v, i) {
                        return hasChanged(v, oldValue[i]);
                    })
                    : hasChanged(newValue, oldValue))) {
                // cleanup before running cb again
                if (cleanup) {
                    cleanup();
                }
                call(cb, WATCHER_CB, [
                    newValue,
                    // pass undefined as the old value when it's changed for the first time
                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,
                    onCleanup
                ]);
                oldValue = newValue;
            }
        }
        else {
            // watchEffect
            watcher.get();
        }
    };
    if (flush === 'sync') {
        watcher.update = watcher.run;
    }
    else if (flush === 'post') {
        watcher.post = true;
        watcher.update = function () { return queueWatcher(watcher); };
    }
    else {
        // pre
        watcher.update = function () {
            if (instance && instance === currentInstance && !instance._isMounted) {
                // pre-watcher triggered before
                var buffer = instance._preWatchers || (instance._preWatchers = []);
                if (buffer.indexOf(watcher) < 0)
                    buffer.push(watcher);
            }
            else {
                queueWatcher(watcher);
            }
        };
    }
    if (false) {}
    // initial run
    if (cb) {
        if (immediate) {
            watcher.run();
        }
        else {
            oldValue = watcher.get();
        }
    }
    else if (flush === 'post' && instance) {
        instance.$once('hook:mounted', function () { return watcher.get(); });
    }
    else {
        watcher.get();
    }
    return function () {
        watcher.teardown();
    };
}

var activeEffectScope;
var EffectScope = /** @class */ (function () {
    function EffectScope(detached) {
        if (detached === void 0) { detached = false; }
        this.detached = detached;
        /**
         * @internal
         */
        this.active = true;
        /**
         * @internal
         */
        this.effects = [];
        /**
         * @internal
         */
        this.cleanups = [];
        this.parent = activeEffectScope;
        if (!detached && activeEffectScope) {
            this.index =
                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;
        }
    }
    EffectScope.prototype.run = function (fn) {
        if (this.active) {
            var currentEffectScope = activeEffectScope;
            try {
                activeEffectScope = this;
                return fn();
            }
            finally {
                activeEffectScope = currentEffectScope;
            }
        }
        else if (false) {}
    };
    /**
     * This should only be called on non-detached scopes
     * @internal
     */
    EffectScope.prototype.on = function () {
        activeEffectScope = this;
    };
    /**
     * This should only be called on non-detached scopes
     * @internal
     */
    EffectScope.prototype.off = function () {
        activeEffectScope = this.parent;
    };
    EffectScope.prototype.stop = function (fromParent) {
        if (this.active) {
            var i = void 0, l = void 0;
            for (i = 0, l = this.effects.length; i < l; i++) {
                this.effects[i].teardown();
            }
            for (i = 0, l = this.cleanups.length; i < l; i++) {
                this.cleanups[i]();
            }
            if (this.scopes) {
                for (i = 0, l = this.scopes.length; i < l; i++) {
                    this.scopes[i].stop(true);
                }
            }
            // nested scope, dereference from parent to avoid memory leaks
            if (!this.detached && this.parent && !fromParent) {
                // optimized O(1) removal
                var last = this.parent.scopes.pop();
                if (last && last !== this) {
                    this.parent.scopes[this.index] = last;
                    last.index = this.index;
                }
            }
            this.parent = undefined;
            this.active = false;
        }
    };
    return EffectScope;
}());
function effectScope(detached) {
    return new EffectScope(detached);
}
/**
 * @internal
 */
function recordEffectScope(effect, scope) {
    if (scope === void 0) { scope = activeEffectScope; }
    if (scope && scope.active) {
        scope.effects.push(effect);
    }
}
function getCurrentScope() {
    return activeEffectScope;
}
function onScopeDispose(fn) {
    if (activeEffectScope) {
        activeEffectScope.cleanups.push(fn);
    }
    else if (false) {}
}

function provide(key, value) {
    if (!currentInstance) {
        if (false) {}
    }
    else {
        // TS doesn't allow symbol as index type
        resolveProvided(currentInstance)[key] = value;
    }
}
function resolveProvided(vm) {
    // by default an instance inherits its parent's provides object
    // but when it needs to provide values of its own, it creates its
    // own provides object using parent provides object as prototype.
    // this way in `inject` we can simply look up injections from direct
    // parent and let the prototype chain do the work.
    var existing = vm._provided;
    var parentProvides = vm.$parent && vm.$parent._provided;
    if (parentProvides === existing) {
        return (vm._provided = Object.create(parentProvides));
    }
    else {
        return existing;
    }
}
function inject(key, defaultValue, treatDefaultAsFactory) {
    if (treatDefaultAsFactory === void 0) { treatDefaultAsFactory = false; }
    // fallback to `currentRenderingInstance` so that this can be called in
    // a functional component
    var instance = currentInstance;
    if (instance) {
        // #2400
        // to support `app.use` plugins,
        // fallback to appContext's `provides` if the instance is at root
        var provides = instance.$parent && instance.$parent._provided;
        if (provides && key in provides) {
            // TS doesn't allow symbol as index type
            return provides[key];
        }
        else if (arguments.length > 1) {
            return treatDefaultAsFactory && isFunction(defaultValue)
                ? defaultValue.call(instance)
                : defaultValue;
        }
        else if (false) {}
    }
    else if (false) {}
}

var normalizeEvent = cached(function (name) {
    var passive = name.charAt(0) === '&';
    name = passive ? name.slice(1) : name;
    var once = name.charAt(0) === '~'; // Prefixed last, checked first
    name = once ? name.slice(1) : name;
    var capture = name.charAt(0) === '!';
    name = capture ? name.slice(1) : name;
    return {
        name: name,
        once: once,
        capture: capture,
        passive: passive
    };
});
function createFnInvoker(fns, vm) {
    function invoker() {
        var fns = invoker.fns;
        if (isArray(fns)) {
            var cloned = fns.slice();
            for (var i = 0; i < cloned.length; i++) {
                invokeWithErrorHandling(cloned[i], null, arguments, vm, "v-on handler");
            }
        }
        else {
            // return handler return value for single handlers
            return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler");
        }
    }
    invoker.fns = fns;
    return invoker;
}
function updateListeners(on, oldOn, add, remove, createOnceHandler, vm) {
    var name, cur, old, event;
    for (name in on) {
        cur = on[name];
        old = oldOn[name];
        event = normalizeEvent(name);
        if (isUndef(cur)) {
             false &&
                0;
        }
        else if (isUndef(old)) {
            if (isUndef(cur.fns)) {
                cur = on[name] = createFnInvoker(cur, vm);
            }
            if (isTrue(event.once)) {
                cur = on[name] = createOnceHandler(event.name, cur, event.capture);
            }
            add(event.name, cur, event.capture, event.passive, event.params);
        }
        else if (cur !== old) {
            old.fns = cur;
            on[name] = old;
        }
    }
    for (name in oldOn) {
        if (isUndef(on[name])) {
            event = normalizeEvent(name);
            remove(event.name, oldOn[name], event.capture);
        }
    }
}

function mergeVNodeHook(def, hookKey, hook) {
    if (def instanceof VNode) {
        def = def.data.hook || (def.data.hook = {});
    }
    var invoker;
    var oldHook = def[hookKey];
    function wrappedHook() {
        hook.apply(this, arguments);
        // important: remove merged hook to ensure it's called only once
        // and prevent memory leak
        remove$2(invoker.fns, wrappedHook);
    }
    if (isUndef(oldHook)) {
        // no existing hook
        invoker = createFnInvoker([wrappedHook]);
    }
    else {
        /* istanbul ignore if */
        if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
            // already a merged invoker
            invoker = oldHook;
            invoker.fns.push(wrappedHook);
        }
        else {
            // existing plain hook
            invoker = createFnInvoker([oldHook, wrappedHook]);
        }
    }
    invoker.merged = true;
    def[hookKey] = invoker;
}

function extractPropsFromVNodeData(data, Ctor, tag) {
    // we are only extracting raw values here.
    // validation and default values are handled in the child
    // component itself.
    var propOptions = Ctor.options.props;
    if (isUndef(propOptions)) {
        return;
    }
    var res = {};
    var attrs = data.attrs, props = data.props;
    if (isDef(attrs) || isDef(props)) {
        for (var key in propOptions) {
            var altKey = hyphenate(key);
            if (false) { var keyInLowerCase; }
            checkProp(res, props, key, altKey, true) ||
                checkProp(res, attrs, key, altKey, false);
        }
    }
    return res;
}
function checkProp(res, hash, key, altKey, preserve) {
    if (isDef(hash)) {
        if (hasOwn(hash, key)) {
            res[key] = hash[key];
            if (!preserve) {
                delete hash[key];
            }
            return true;
        }
        else if (hasOwn(hash, altKey)) {
            res[key] = hash[altKey];
            if (!preserve) {
                delete hash[altKey];
            }
            return true;
        }
    }
    return false;
}

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:
// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren(children) {
    for (var i = 0; i < children.length; i++) {
        if (isArray(children[i])) {
            return Array.prototype.concat.apply([], children);
        }
    }
    return children;
}
// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren(children) {
    return isPrimitive(children)
        ? [createTextVNode(children)]
        : isArray(children)
            ? normalizeArrayChildren(children)
            : undefined;
}
function isTextNode(node) {
    return isDef(node) && isDef(node.text) && isFalse(node.isComment);
}
function normalizeArrayChildren(children, nestedIndex) {
    var res = [];
    var i, c, lastIndex, last;
    for (i = 0; i < children.length; i++) {
        c = children[i];
        if (isUndef(c) || typeof c === 'boolean')
            continue;
        lastIndex = res.length - 1;
        last = res[lastIndex];
        //  nested
        if (isArray(c)) {
            if (c.length > 0) {
                c = normalizeArrayChildren(c, "".concat(nestedIndex || '', "_").concat(i));
                // merge adjacent text nodes
                if (isTextNode(c[0]) && isTextNode(last)) {
                    res[lastIndex] = createTextVNode(last.text + c[0].text);
                    c.shift();
                }
                res.push.apply(res, c);
            }
        }
        else if (isPrimitive(c)) {
            if (isTextNode(last)) {
                // merge adjacent text nodes
                // this is necessary for SSR hydration because text nodes are
                // essentially merged when rendered to HTML strings
                res[lastIndex] = createTextVNode(last.text + c);
            }
            else if (c !== '') {
                // convert primitive to vnode
                res.push(createTextVNode(c));
            }
        }
        else {
            if (isTextNode(c) && isTextNode(last)) {
                // merge adjacent text nodes
                res[lastIndex] = createTextVNode(last.text + c.text);
            }
            else {
                // default key for nested array children (likely generated by v-for)
                if (isTrue(children._isVList) &&
                    isDef(c.tag) &&
                    isUndef(c.key) &&
                    isDef(nestedIndex)) {
                    c.key = "__vlist".concat(nestedIndex, "_").concat(i, "__");
                }
                res.push(c);
            }
        }
    }
    return res;
}

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList(val, render) {
    var ret = null, i, l, keys, key;
    if (isArray(val) || typeof val === 'string') {
        ret = new Array(val.length);
        for (i = 0, l = val.length; i < l; i++) {
            ret[i] = render(val[i], i);
        }
    }
    else if (typeof val === 'number') {
        ret = new Array(val);
        for (i = 0; i < val; i++) {
            ret[i] = render(i + 1, i);
        }
    }
    else if (isObject(val)) {
        if (hasSymbol && val[Symbol.iterator]) {
            ret = [];
            var iterator = val[Symbol.iterator]();
            var result = iterator.next();
            while (!result.done) {
                ret.push(render(result.value, ret.length));
                result = iterator.next();
            }
        }
        else {
            keys = Object.keys(val);
            ret = new Array(keys.length);
            for (i = 0, l = keys.length; i < l; i++) {
                key = keys[i];
                ret[i] = render(val[key], key, i);
            }
        }
    }
    if (!isDef(ret)) {
        ret = [];
    }
    ret._isVList = true;
    return ret;
}

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot(name, fallbackRender, props, bindObject) {
    var scopedSlotFn = this.$scopedSlots[name];
    var nodes;
    if (scopedSlotFn) {
        // scoped slot
        props = props || {};
        if (bindObject) {
            if (false) {}
            props = extend(extend({}, bindObject), props);
        }
        nodes =
            scopedSlotFn(props) ||
                (isFunction(fallbackRender) ? fallbackRender() : fallbackRender);
    }
    else {
        nodes =
            this.$slots[name] ||
                (isFunction(fallbackRender) ? fallbackRender() : fallbackRender);
    }
    var target = props && props.slot;
    if (target) {
        return this.$createElement('template', { slot: target }, nodes);
    }
    else {
        return nodes;
    }
}

/**
 * Runtime helper for resolving filters
 */
function resolveFilter(id) {
    return resolveAsset(this.$options, 'filters', id, true) || identity;
}

function isKeyNotMatch(expect, actual) {
    if (isArray(expect)) {
        return expect.indexOf(actual) === -1;
    }
    else {
        return expect !== actual;
    }
}
/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {
    var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
    if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
        return isKeyNotMatch(builtInKeyName, eventKeyName);
    }
    else if (mappedKeyCode) {
        return isKeyNotMatch(mappedKeyCode, eventKeyCode);
    }
    else if (eventKeyName) {
        return hyphenate(eventKeyName) !== key;
    }
    return eventKeyCode === undefined;
}

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps(data, tag, value, asProp, isSync) {
    if (value) {
        if (!isObject(value)) {
             false &&
                0;
        }
        else {
            if (isArray(value)) {
                value = toObject(value);
            }
            var hash = void 0;
            var _loop_1 = function (key) {
                if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
                    hash = data;
                }
                else {
                    var type = data.attrs && data.attrs.type;
                    hash =
                        asProp || config.mustUseProp(tag, type, key)
                            ? data.domProps || (data.domProps = {})
                            : data.attrs || (data.attrs = {});
                }
                var camelizedKey = camelize(key);
                var hyphenatedKey = hyphenate(key);
                if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
                    hash[key] = value[key];
                    if (isSync) {
                        var on = data.on || (data.on = {});
                        on["update:".concat(key)] = function ($event) {
                            value[key] = $event;
                        };
                    }
                }
            };
            for (var key in value) {
                _loop_1(key);
            }
        }
    }
    return data;
}

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic(index, isInFor) {
    var cached = this._staticTrees || (this._staticTrees = []);
    var tree = cached[index];
    // if has already-rendered static tree and not inside v-for,
    // we can reuse the same tree.
    if (tree && !isInFor) {
        return tree;
    }
    // otherwise, render a fresh tree.
    tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, this._c, this // for render fns generated for functional component templates
    );
    markStatic(tree, "__static__".concat(index), false);
    return tree;
}
/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce(tree, index, key) {
    markStatic(tree, "__once__".concat(index).concat(key ? "_".concat(key) : ""), true);
    return tree;
}
function markStatic(tree, key, isOnce) {
    if (isArray(tree)) {
        for (var i = 0; i < tree.length; i++) {
            if (tree[i] && typeof tree[i] !== 'string') {
                markStaticNode(tree[i], "".concat(key, "_").concat(i), isOnce);
            }
        }
    }
    else {
        markStaticNode(tree, key, isOnce);
    }
}
function markStaticNode(node, key, isOnce) {
    node.isStatic = true;
    node.key = key;
    node.isOnce = isOnce;
}

function bindObjectListeners(data, value) {
    if (value) {
        if (!isPlainObject(value)) {
             false && 0;
        }
        else {
            var on = (data.on = data.on ? extend({}, data.on) : {});
            for (var key in value) {
                var existing = on[key];
                var ours = value[key];
                on[key] = existing ? [].concat(existing, ours) : ours;
            }
        }
    }
    return data;
}

function resolveScopedSlots(fns, res, 
// the following are added in 2.6
hasDynamicKeys, contentHashKey) {
    res = res || { $stable: !hasDynamicKeys };
    for (var i = 0; i < fns.length; i++) {
        var slot = fns[i];
        if (isArray(slot)) {
            resolveScopedSlots(slot, res, hasDynamicKeys);
        }
        else if (slot) {
            // marker for reverse proxying v-slot without scope on this.$slots
            // @ts-expect-error
            if (slot.proxy) {
                // @ts-expect-error
                slot.fn.proxy = true;
            }
            res[slot.key] = slot.fn;
        }
    }
    if (contentHashKey) {
        res.$key = contentHashKey;
    }
    return res;
}

// helper to process dynamic keys for dynamic arguments in v-bind and v-on.
function bindDynamicKeys(baseObj, values) {
    for (var i = 0; i < values.length; i += 2) {
        var key = values[i];
        if (typeof key === 'string' && key) {
            baseObj[values[i]] = values[i + 1];
        }
        else if (false) {}
    }
    return baseObj;
}
// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier(value, symbol) {
    return typeof value === 'string' ? symbol + value : value;
}

function installRenderHelpers(target) {
    target._o = markOnce;
    target._n = toNumber;
    target._s = toString;
    target._l = renderList;
    target._t = renderSlot;
    target._q = looseEqual;
    target._i = looseIndexOf;
    target._m = renderStatic;
    target._f = resolveFilter;
    target._k = checkKeyCodes;
    target._b = bindObjectProps;
    target._v = createTextVNode;
    target._e = createEmptyVNode;
    target._u = resolveScopedSlots;
    target._g = bindObjectListeners;
    target._d = bindDynamicKeys;
    target._p = prependModifier;
}

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots(children, context) {
    if (!children || !children.length) {
        return {};
    }
    var slots = {};
    for (var i = 0, l = children.length; i < l; i++) {
        var child = children[i];
        var data = child.data;
        // remove slot attribute if the node is resolved as a Vue slot node
        if (data && data.attrs && data.attrs.slot) {
            delete data.attrs.slot;
        }
        // named slots should only be respected if the vnode was rendered in the
        // same context.
        if ((child.context === context || child.fnContext === context) &&
            data &&
            data.slot != null) {
            var name_1 = data.slot;
            var slot = slots[name_1] || (slots[name_1] = []);
            if (child.tag === 'template') {
                slot.push.apply(slot, child.children || []);
            }
            else {
                slot.push(child);
            }
        }
        else {
            (slots.default || (slots.default = [])).push(child);
        }
    }
    // ignore slots that contains only whitespace
    for (var name_2 in slots) {
        if (slots[name_2].every(isWhitespace)) {
            delete slots[name_2];
        }
    }
    return slots;
}
function isWhitespace(node) {
    return (node.isComment && !node.asyncFactory) || node.text === ' ';
}

function isAsyncPlaceholder(node) {
    // @ts-expect-error not really boolean type
    return node.isComment && node.asyncFactory;
}

function normalizeScopedSlots(ownerVm, scopedSlots, normalSlots, prevScopedSlots) {
    var res;
    var hasNormalSlots = Object.keys(normalSlots).length > 0;
    var isStable = scopedSlots ? !!scopedSlots.$stable : !hasNormalSlots;
    var key = scopedSlots && scopedSlots.$key;
    if (!scopedSlots) {
        res = {};
    }
    else if (scopedSlots._normalized) {
        // fast path 1: child component re-render only, parent did not change
        return scopedSlots._normalized;
    }
    else if (isStable &&
        prevScopedSlots &&
        prevScopedSlots !== emptyObject &&
        key === prevScopedSlots.$key &&
        !hasNormalSlots &&
        !prevScopedSlots.$hasNormal) {
        // fast path 2: stable scoped slots w/ no normal slots to proxy,
        // only need to normalize once
        return prevScopedSlots;
    }
    else {
        res = {};
        for (var key_1 in scopedSlots) {
            if (scopedSlots[key_1] && key_1[0] !== '$') {
                res[key_1] = normalizeScopedSlot(ownerVm, normalSlots, key_1, scopedSlots[key_1]);
            }
        }
    }
    // expose normal slots on scopedSlots
    for (var key_2 in normalSlots) {
        if (!(key_2 in res)) {
            res[key_2] = proxyNormalSlot(normalSlots, key_2);
        }
    }
    // avoriaz seems to mock a non-extensible $scopedSlots object
    // and when that is passed down this would cause an error
    if (scopedSlots && Object.isExtensible(scopedSlots)) {
        scopedSlots._normalized = res;
    }
    def(res, '$stable', isStable);
    def(res, '$key', key);
    def(res, '$hasNormal', hasNormalSlots);
    return res;
}
function normalizeScopedSlot(vm, normalSlots, key, fn) {
    var normalized = function () {
        var cur = currentInstance;
        setCurrentInstance(vm);
        var res = arguments.length ? fn.apply(null, arguments) : fn({});
        res =
            res && typeof res === 'object' && !isArray(res)
                ? [res] // single vnode
                : normalizeChildren(res);
        var vnode = res && res[0];
        setCurrentInstance(cur);
        return res &&
            (!vnode ||
                (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode))) // #9658, #10391
            ? undefined
            : res;
    };
    // this is a slot using the new v-slot syntax without scope. although it is
    // compiled as a scoped slot, render fn users would expect it to be present
    // on this.$slots because the usage is semantically a normal slot.
    if (fn.proxy) {
        Object.defineProperty(normalSlots, key, {
            get: normalized,
            enumerable: true,
            configurable: true
        });
    }
    return normalized;
}
function proxyNormalSlot(slots, key) {
    return function () { return slots[key]; };
}

function initSetup(vm) {
    var options = vm.$options;
    var setup = options.setup;
    if (setup) {
        var ctx = (vm._setupContext = createSetupContext(vm));
        setCurrentInstance(vm);
        pushTarget();
        var setupResult = invokeWithErrorHandling(setup, null, [vm._props || shallowReactive({}), ctx], vm, "setup");
        popTarget();
        setCurrentInstance();
        if (isFunction(setupResult)) {
            // render function
            // @ts-ignore
            options.render = setupResult;
        }
        else if (isObject(setupResult)) {
            // bindings
            if (false) {}
            vm._setupState = setupResult;
            // __sfc indicates compiled bindings from <script setup>
            if (!setupResult.__sfc) {
                for (var key in setupResult) {
                    if (!isReserved(key)) {
                        proxyWithRefUnwrap(vm, setupResult, key);
                    }
                    else if (false) {}
                }
            }
            else {
                // exposed for compiled render fn
                var proxy = (vm._setupProxy = {});
                for (var key in setupResult) {
                    if (key !== '__sfc') {
                        proxyWithRefUnwrap(proxy, setupResult, key);
                    }
                }
            }
        }
        else if (false) {}
    }
}
function createSetupContext(vm) {
    var exposeCalled = false;
    return {
        get attrs() {
            if (!vm._attrsProxy) {
                var proxy = (vm._attrsProxy = {});
                def(proxy, '_v_attr_proxy', true);
                syncSetupProxy(proxy, vm.$attrs, emptyObject, vm, '$attrs');
            }
            return vm._attrsProxy;
        },
        get listeners() {
            if (!vm._listenersProxy) {
                var proxy = (vm._listenersProxy = {});
                syncSetupProxy(proxy, vm.$listeners, emptyObject, vm, '$listeners');
            }
            return vm._listenersProxy;
        },
        get slots() {
            return initSlotsProxy(vm);
        },
        emit: bind(vm.$emit, vm),
        expose: function (exposed) {
            if (false) {}
            if (exposed) {
                Object.keys(exposed).forEach(function (key) {
                    return proxyWithRefUnwrap(vm, exposed, key);
                });
            }
        }
    };
}
function syncSetupProxy(to, from, prev, instance, type) {
    var changed = false;
    for (var key in from) {
        if (!(key in to)) {
            changed = true;
            defineProxyAttr(to, key, instance, type);
        }
        else if (from[key] !== prev[key]) {
            changed = true;
        }
    }
    for (var key in to) {
        if (!(key in from)) {
            changed = true;
            delete to[key];
        }
    }
    return changed;
}
function defineProxyAttr(proxy, key, instance, type) {
    Object.defineProperty(proxy, key, {
        enumerable: true,
        configurable: true,
        get: function () {
            return instance[type][key];
        }
    });
}
function initSlotsProxy(vm) {
    if (!vm._slotsProxy) {
        syncSetupSlots((vm._slotsProxy = {}), vm.$scopedSlots);
    }
    return vm._slotsProxy;
}
function syncSetupSlots(to, from) {
    for (var key in from) {
        to[key] = from[key];
    }
    for (var key in to) {
        if (!(key in from)) {
            delete to[key];
        }
    }
}
/**
 * @internal use manual type def because public setup context type relies on
 * legacy VNode types
 */
function useSlots() {
    return getContext().slots;
}
/**
 * @internal use manual type def because public setup context type relies on
 * legacy VNode types
 */
function useAttrs() {
    return getContext().attrs;
}
/**
 * Vue 2 only
 * @internal use manual type def because public setup context type relies on
 * legacy VNode types
 */
function useListeners() {
    return getContext().listeners;
}
function getContext() {
    if (false) {}
    var vm = currentInstance;
    return vm._setupContext || (vm._setupContext = createSetupContext(vm));
}
/**
 * Runtime helper for merging default declarations. Imported by compiled code
 * only.
 * @internal
 */
function mergeDefaults(raw, defaults) {
    var props = isArray(raw)
        ? raw.reduce(function (normalized, p) { return ((normalized[p] = {}), normalized); }, {})
        : raw;
    for (var key in defaults) {
        var opt = props[key];
        if (opt) {
            if (isArray(opt) || isFunction(opt)) {
                props[key] = { type: opt, default: defaults[key] };
            }
            else {
                opt.default = defaults[key];
            }
        }
        else if (opt === null) {
            props[key] = { default: defaults[key] };
        }
        else if (false) {}
    }
    return props;
}

function initRender(vm) {
    vm._vnode = null; // the root of the child tree
    vm._staticTrees = null; // v-once cached trees
    var options = vm.$options;
    var parentVnode = (vm.$vnode = options._parentVnode); // the placeholder node in parent tree
    var renderContext = parentVnode && parentVnode.context;
    vm.$slots = resolveSlots(options._renderChildren, renderContext);
    vm.$scopedSlots = parentVnode
        ? normalizeScopedSlots(vm.$parent, parentVnode.data.scopedSlots, vm.$slots)
        : emptyObject;
    // bind the createElement fn to this instance
    // so that we get proper render context inside it.
    // args order: tag, data, children, normalizationType, alwaysNormalize
    // internal version is used by render functions compiled from templates
    // @ts-expect-error
    vm._c = function (a, b, c, d) { return createElement$1(vm, a, b, c, d, false); };
    // normalization is always applied for the public version, used in
    // user-written render functions.
    // @ts-expect-error
    vm.$createElement = function (a, b, c, d) { return createElement$1(vm, a, b, c, d, true); };
    // $attrs & $listeners are exposed for easier HOC creation.
    // they need to be reactive so that HOCs using them are always updated
    var parentData = parentVnode && parentVnode.data;
    /* istanbul ignore else */
    if (false) {}
    else {
        defineReactive(vm, '$attrs', (parentData && parentData.attrs) || emptyObject, null, true);
        defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);
    }
}
var currentRenderingInstance = null;
function renderMixin(Vue) {
    // install runtime convenience helpers
    installRenderHelpers(Vue.prototype);
    Vue.prototype.$nextTick = function (fn) {
        return nextTick(fn, this);
    };
    Vue.prototype._render = function () {
        var vm = this;
        var _a = vm.$options, render = _a.render, _parentVnode = _a._parentVnode;
        if (_parentVnode && vm._isMounted) {
            vm.$scopedSlots = normalizeScopedSlots(vm.$parent, _parentVnode.data.scopedSlots, vm.$slots, vm.$scopedSlots);
            if (vm._slotsProxy) {
                syncSetupSlots(vm._slotsProxy, vm.$scopedSlots);
            }
        }
        // set parent vnode. this allows render functions to have access
        // to the data on the placeholder node.
        vm.$vnode = _parentVnode;
        // render self
        var prevInst = currentInstance;
        var prevRenderInst = currentRenderingInstance;
        var vnode;
        try {
            setCurrentInstance(vm);
            currentRenderingInstance = vm;
            vnode = render.call(vm._renderProxy, vm.$createElement);
        }
        catch (e) {
            handleError(e, vm, "render");
            // return error render result,
            // or previous vnode to prevent render error causing blank component
            /* istanbul ignore else */
            if (false) {}
            else {
                vnode = vm._vnode;
            }
        }
        finally {
            currentRenderingInstance = prevRenderInst;
            setCurrentInstance(prevInst);
        }
        // if the returned array contains only a single node, allow it
        if (isArray(vnode) && vnode.length === 1) {
            vnode = vnode[0];
        }
        // return empty vnode in case the render function errored out
        if (!(vnode instanceof VNode)) {
            if (false) {}
            vnode = createEmptyVNode();
        }
        // set parent
        vnode.parent = _parentVnode;
        return vnode;
    };
}

function ensureCtor(comp, base) {
    if (comp.__esModule || (hasSymbol && comp[Symbol.toStringTag] === 'Module')) {
        comp = comp.default;
    }
    return isObject(comp) ? base.extend(comp) : comp;
}
function createAsyncPlaceholder(factory, data, context, children, tag) {
    var node = createEmptyVNode();
    node.asyncFactory = factory;
    node.asyncMeta = { data: data, context: context, children: children, tag: tag };
    return node;
}
function resolveAsyncComponent(factory, baseCtor) {
    if (isTrue(factory.error) && isDef(factory.errorComp)) {
        return factory.errorComp;
    }
    if (isDef(factory.resolved)) {
        return factory.resolved;
    }
    var owner = currentRenderingInstance;
    if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
        // already pending
        factory.owners.push(owner);
    }
    if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
        return factory.loadingComp;
    }
    if (owner && !isDef(factory.owners)) {
        var owners_1 = (factory.owners = [owner]);
        var sync_1 = true;
        var timerLoading_1 = null;
        var timerTimeout_1 = null;
        owner.$on('hook:destroyed', function () { return remove$2(owners_1, owner); });
        var forceRender_1 = function (renderCompleted) {
            for (var i = 0, l = owners_1.length; i < l; i++) {
                owners_1[i].$forceUpdate();
            }
            if (renderCompleted) {
                owners_1.length = 0;
                if (timerLoading_1 !== null) {
                    clearTimeout(timerLoading_1);
                    timerLoading_1 = null;
                }
                if (timerTimeout_1 !== null) {
                    clearTimeout(timerTimeout_1);
                    timerTimeout_1 = null;
                }
            }
        };
        var resolve = once(function (res) {
            // cache resolved
            factory.resolved = ensureCtor(res, baseCtor);
            // invoke callbacks only if this is not a synchronous resolve
            // (async resolves are shimmed as synchronous during SSR)
            if (!sync_1) {
                forceRender_1(true);
            }
            else {
                owners_1.length = 0;
            }
        });
        var reject_1 = once(function (reason) {
             false &&
                0;
            if (isDef(factory.errorComp)) {
                factory.error = true;
                forceRender_1(true);
            }
        });
        var res_1 = factory(resolve, reject_1);
        if (isObject(res_1)) {
            if (isPromise(res_1)) {
                // () => Promise
                if (isUndef(factory.resolved)) {
                    res_1.then(resolve, reject_1);
                }
            }
            else if (isPromise(res_1.component)) {
                res_1.component.then(resolve, reject_1);
                if (isDef(res_1.error)) {
                    factory.errorComp = ensureCtor(res_1.error, baseCtor);
                }
                if (isDef(res_1.loading)) {
                    factory.loadingComp = ensureCtor(res_1.loading, baseCtor);
                    if (res_1.delay === 0) {
                        factory.loading = true;
                    }
                    else {
                        // @ts-expect-error NodeJS timeout type
                        timerLoading_1 = setTimeout(function () {
                            timerLoading_1 = null;
                            if (isUndef(factory.resolved) && isUndef(factory.error)) {
                                factory.loading = true;
                                forceRender_1(false);
                            }
                        }, res_1.delay || 200);
                    }
                }
                if (isDef(res_1.timeout)) {
                    // @ts-expect-error NodeJS timeout type
                    timerTimeout_1 = setTimeout(function () {
                        timerTimeout_1 = null;
                        if (isUndef(factory.resolved)) {
                            reject_1( false ? 0 : null);
                        }
                    }, res_1.timeout);
                }
            }
        }
        sync_1 = false;
        // return in case resolved synchronously
        return factory.loading ? factory.loadingComp : factory.resolved;
    }
}

function getFirstComponentChild(children) {
    if (isArray(children)) {
        for (var i = 0; i < children.length; i++) {
            var c = children[i];
            if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
                return c;
            }
        }
    }
}

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;
// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement$1(context, tag, data, children, normalizationType, alwaysNormalize) {
    if (isArray(data) || isPrimitive(data)) {
        normalizationType = children;
        children = data;
        data = undefined;
    }
    if (isTrue(alwaysNormalize)) {
        normalizationType = ALWAYS_NORMALIZE;
    }
    return _createElement(context, tag, data, children, normalizationType);
}
function _createElement(context, tag, data, children, normalizationType) {
    if (isDef(data) && isDef(data.__ob__)) {
         false &&
            0;
        return createEmptyVNode();
    }
    // object syntax in v-bind
    if (isDef(data) && isDef(data.is)) {
        tag = data.is;
    }
    if (!tag) {
        // in case of component :is set to falsy value
        return createEmptyVNode();
    }
    // warn against non-primitive key
    if (false) {}
    // support single function children as default scoped slot
    if (isArray(children) && isFunction(children[0])) {
        data = data || {};
        data.scopedSlots = { default: children[0] };
        children.length = 0;
    }
    if (normalizationType === ALWAYS_NORMALIZE) {
        children = normalizeChildren(children);
    }
    else if (normalizationType === SIMPLE_NORMALIZE) {
        children = simpleNormalizeChildren(children);
    }
    var vnode, ns;
    if (typeof tag === 'string') {
        var Ctor = void 0;
        ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
        if (config.isReservedTag(tag)) {
            // platform built-in elements
            if (false) {}
            vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
        }
        else if ((!data || !data.pre) &&
            isDef((Ctor = resolveAsset(context.$options, 'components', tag)))) {
            // component
            vnode = createComponent(Ctor, data, context, children, tag);
        }
        else {
            // unknown or unlisted namespaced elements
            // check at runtime because it may get assigned a namespace when its
            // parent normalizes children
            vnode = new VNode(tag, data, children, undefined, undefined, context);
        }
    }
    else {
        // direct component options / constructor
        vnode = createComponent(tag, data, context, children);
    }
    if (isArray(vnode)) {
        return vnode;
    }
    else if (isDef(vnode)) {
        if (isDef(ns))
            applyNS(vnode, ns);
        if (isDef(data))
            registerDeepBindings(data);
        return vnode;
    }
    else {
        return createEmptyVNode();
    }
}
function applyNS(vnode, ns, force) {
    vnode.ns = ns;
    if (vnode.tag === 'foreignObject') {
        // use default namespace inside foreignObject
        ns = undefined;
        force = true;
    }
    if (isDef(vnode.children)) {
        for (var i = 0, l = vnode.children.length; i < l; i++) {
            var child = vnode.children[i];
            if (isDef(child.tag) &&
                (isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
                applyNS(child, ns, force);
            }
        }
    }
}
// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings(data) {
    if (isObject(data.style)) {
        traverse(data.style);
    }
    if (isObject(data.class)) {
        traverse(data.class);
    }
}

/**
 * @internal this function needs manual public type declaration because it relies
 * on previously manually authored types from Vue 2
 */
function h(type, props, children) {
    if (!currentInstance) {
         false &&
            0;
    }
    return createElement$1(currentInstance, type, props, children, 2, true);
}

function handleError(err, vm, info) {
    // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
    // See: https://github.com/vuejs/vuex/issues/1505
    pushTarget();
    try {
        if (vm) {
            var cur = vm;
            while ((cur = cur.$parent)) {
                var hooks = cur.$options.errorCaptured;
                if (hooks) {
                    for (var i = 0; i < hooks.length; i++) {
                        try {
                            var capture = hooks[i].call(cur, err, vm, info) === false;
                            if (capture)
                                return;
                        }
                        catch (e) {
                            globalHandleError(e, cur, 'errorCaptured hook');
                        }
                    }
                }
            }
        }
        globalHandleError(err, vm, info);
    }
    finally {
        popTarget();
    }
}
function invokeWithErrorHandling(handler, context, args, vm, info) {
    var res;
    try {
        res = args ? handler.apply(context, args) : handler.call(context);
        if (res && !res._isVue && isPromise(res) && !res._handled) {
            res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
            res._handled = true;
        }
    }
    catch (e) {
        handleError(e, vm, info);
    }
    return res;
}
function globalHandleError(err, vm, info) {
    if (config.errorHandler) {
        try {
            return config.errorHandler.call(null, err, vm, info);
        }
        catch (e) {
            // if the user intentionally throws the original error in the handler,
            // do not log it twice
            if (e !== err) {
                logError(e, null, 'config.errorHandler');
            }
        }
    }
    logError(err, vm, info);
}
function logError(err, vm, info) {
    if (false) {}
    /* istanbul ignore else */
    if (inBrowser && typeof console !== 'undefined') {
        console.error(err);
    }
    else {
        throw err;
    }
}

/* globals MutationObserver */
var isUsingMicroTask = false;
var callbacks = [];
var pending = false;
function flushCallbacks() {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
        copies[i]();
    }
}
// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;
// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p_1 = Promise.resolve();
    timerFunc = function () {
        p_1.then(flushCallbacks);
        // In problematic UIWebViews, Promise.then doesn't completely break, but
        // it can get stuck in a weird state where callbacks are pushed into the
        // microtask queue but the queue isn't being flushed, until the browser
        // needs to do some other work, e.g. handle a timer. Therefore we can
        // "force" the microtask queue to be flushed by adding an empty timer.
        if (isIOS)
            setTimeout(noop);
    };
    isUsingMicroTask = true;
}
else if (!isIE &&
    typeof MutationObserver !== 'undefined' &&
    (isNative(MutationObserver) ||
        // PhantomJS and iOS 7.x
        MutationObserver.toString() === '[object MutationObserverConstructor]')) {
    // Use MutationObserver where native Promise is not available,
    // e.g. PhantomJS, iOS7, Android 4.4
    // (#6466 MutationObserver is unreliable in IE11)
    var counter_1 = 1;
    var observer = new MutationObserver(flushCallbacks);
    var textNode_1 = document.createTextNode(String(counter_1));
    observer.observe(textNode_1, {
        characterData: true
    });
    timerFunc = function () {
        counter_1 = (counter_1 + 1) % 2;
        textNode_1.data = String(counter_1);
    };
    isUsingMicroTask = true;
}
else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
    // Fallback to setImmediate.
    // Technically it leverages the (macro) task queue,
    // but it is still a better choice than setTimeout.
    timerFunc = function () {
        setImmediate(flushCallbacks);
    };
}
else {
    // Fallback to setTimeout.
    timerFunc = function () {
        setTimeout(flushCallbacks, 0);
    };
}
/**
 * @internal
 */
function nextTick(cb, ctx) {
    var _resolve;
    callbacks.push(function () {
        if (cb) {
            try {
                cb.call(ctx);
            }
            catch (e) {
                handleError(e, ctx, 'nextTick');
            }
        }
        else if (_resolve) {
            _resolve(ctx);
        }
    });
    if (!pending) {
        pending = true;
        timerFunc();
    }
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        });
    }
}

function useCssModule(name) {
    if (name === void 0) { name = '$style'; }
    /* istanbul ignore else */
    {
        if (!currentInstance) {
             false && 0;
            return emptyObject;
        }
        var mod = currentInstance[name];
        if (!mod) {
             false &&
                0;
            return emptyObject;
        }
        return mod;
    }
}

/**
 * Runtime helper for SFC's CSS variable injection feature.
 * @private
 */
function useCssVars(getter) {
    if (!inBrowser && !false)
        return;
    var instance = currentInstance;
    if (!instance) {
         false &&
            0;
        return;
    }
    watchPostEffect(function () {
        var el = instance.$el;
        var vars = getter(instance, instance._setupProxy);
        if (el && el.nodeType === 1) {
            var style = el.style;
            for (var key in vars) {
                style.setProperty("--".concat(key), vars[key]);
            }
        }
    });
}

/**
 * v3-compatible async component API.
 * @internal the type is manually declared in <root>/types/v3-define-async-component.d.ts
 * because it relies on existing manual types
 */
function defineAsyncComponent(source) {
    if (isFunction(source)) {
        source = { loader: source };
    }
    var loader = source.loader, loadingComponent = source.loadingComponent, errorComponent = source.errorComponent, _a = source.delay, delay = _a === void 0 ? 200 : _a, timeout = source.timeout, // undefined = never times out
    _b = source.suspensible, // undefined = never times out
    suspensible = _b === void 0 ? false : _b, // in Vue 3 default is true
    userOnError = source.onError;
    if (false) {}
    var pendingRequest = null;
    var retries = 0;
    var retry = function () {
        retries++;
        pendingRequest = null;
        return load();
    };
    var load = function () {
        var thisRequest;
        return (pendingRequest ||
            (thisRequest = pendingRequest =
                loader()
                    .catch(function (err) {
                    err = err instanceof Error ? err : new Error(String(err));
                    if (userOnError) {
                        return new Promise(function (resolve, reject) {
                            var userRetry = function () { return resolve(retry()); };
                            var userFail = function () { return reject(err); };
                            userOnError(err, userRetry, userFail, retries + 1);
                        });
                    }
                    else {
                        throw err;
                    }
                })
                    .then(function (comp) {
                    if (thisRequest !== pendingRequest && pendingRequest) {
                        return pendingRequest;
                    }
                    if (false) {}
                    // interop module default
                    if (comp &&
                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {
                        comp = comp.default;
                    }
                    if (false) {}
                    return comp;
                })));
    };
    return function () {
        var component = load();
        return {
            component: component,
            delay: delay,
            timeout: timeout,
            error: errorComponent,
            loading: loadingComponent
        };
    };
}

function createLifeCycle(hookName) {
    return function (fn, target) {
        if (target === void 0) { target = currentInstance; }
        if (!target) {
             false &&
                0;
            return;
        }
        return injectHook(target, hookName, fn);
    };
}
function formatName(name) {
    if (name === 'beforeDestroy') {
        name = 'beforeUnmount';
    }
    else if (name === 'destroyed') {
        name = 'unmounted';
    }
    return "on".concat(name[0].toUpperCase() + name.slice(1));
}
function injectHook(instance, hookName, fn) {
    var options = instance.$options;
    options[hookName] = mergeLifecycleHook(options[hookName], fn);
}
var onBeforeMount = createLifeCycle('beforeMount');
var onMounted = createLifeCycle('mounted');
var onBeforeUpdate = createLifeCycle('beforeUpdate');
var onUpdated = createLifeCycle('updated');
var onBeforeUnmount = createLifeCycle('beforeDestroy');
var onUnmounted = createLifeCycle('destroyed');
var onActivated = createLifeCycle('activated');
var onDeactivated = createLifeCycle('deactivated');
var onServerPrefetch = createLifeCycle('serverPrefetch');
var onRenderTracked = createLifeCycle('renderTracked');
var onRenderTriggered = createLifeCycle('renderTriggered');
var injectErrorCapturedHook = createLifeCycle('errorCaptured');
function onErrorCaptured(hook, target) {
    if (target === void 0) { target = currentInstance; }
    injectErrorCapturedHook(hook, target);
}

/**
 * Note: also update dist/vue.runtime.mjs when adding new exports to this file.
 */
var version = '2.7.16';
/**
 * @internal type is manually declared in <root>/types/v3-define-component.d.ts
 */
function defineComponent(options) {
    return options;
}

var seenObjects = new _Set();
/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse(val) {
    _traverse(val, seenObjects);
    seenObjects.clear();
    return val;
}
function _traverse(val, seen) {
    var i, keys;
    var isA = isArray(val);
    if ((!isA && !isObject(val)) ||
        val.__v_skip /* ReactiveFlags.SKIP */ ||
        Object.isFrozen(val) ||
        val instanceof VNode) {
        return;
    }
    if (val.__ob__) {
        var depId = val.__ob__.dep.id;
        if (seen.has(depId)) {
            return;
        }
        seen.add(depId);
    }
    if (isA) {
        i = val.length;
        while (i--)
            _traverse(val[i], seen);
    }
    else if (isRef(val)) {
        _traverse(val.value, seen);
    }
    else {
        keys = Object.keys(val);
        i = keys.length;
        while (i--)
            _traverse(val[keys[i]], seen);
    }
}

var uid$1 = 0;
/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 * @internal
 */
var Watcher = /** @class */ (function () {
    function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {
        recordEffectScope(this, 
        // if the active effect scope is manually created (not a component scope),
        // prioritize it
        activeEffectScope && !activeEffectScope._vm
            ? activeEffectScope
            : vm
                ? vm._scope
                : undefined);
        if ((this.vm = vm) && isRenderWatcher) {
            vm._watcher = this;
        }
        // options
        if (options) {
            this.deep = !!options.deep;
            this.user = !!options.user;
            this.lazy = !!options.lazy;
            this.sync = !!options.sync;
            this.before = options.before;
            if (false) {}
        }
        else {
            this.deep = this.user = this.lazy = this.sync = false;
        }
        this.cb = cb;
        this.id = ++uid$1; // uid for batching
        this.active = true;
        this.post = false;
        this.dirty = this.lazy; // for lazy watchers
        this.deps = [];
        this.newDeps = [];
        this.depIds = new _Set();
        this.newDepIds = new _Set();
        this.expression =  false ? 0 : '';
        // parse expression for getter
        if (isFunction(expOrFn)) {
            this.getter = expOrFn;
        }
        else {
            this.getter = parsePath(expOrFn);
            if (!this.getter) {
                this.getter = noop;
                 false &&
                    0;
            }
        }
        this.value = this.lazy ? undefined : this.get();
    }
    /**
     * Evaluate the getter, and re-collect dependencies.
     */
    Watcher.prototype.get = function () {
        pushTarget(this);
        var value;
        var vm = this.vm;
        try {
            value = this.getter.call(vm, vm);
        }
        catch (e) {
            if (this.user) {
                handleError(e, vm, "getter for watcher \"".concat(this.expression, "\""));
            }
            else {
                throw e;
            }
        }
        finally {
            // "touch" every property so they are all tracked as
            // dependencies for deep watching
            if (this.deep) {
                traverse(value);
            }
            popTarget();
            this.cleanupDeps();
        }
        return value;
    };
    /**
     * Add a dependency to this directive.
     */
    Watcher.prototype.addDep = function (dep) {
        var id = dep.id;
        if (!this.newDepIds.has(id)) {
            this.newDepIds.add(id);
            this.newDeps.push(dep);
            if (!this.depIds.has(id)) {
                dep.addSub(this);
            }
        }
    };
    /**
     * Clean up for dependency collection.
     */
    Watcher.prototype.cleanupDeps = function () {
        var i = this.deps.length;
        while (i--) {
            var dep = this.deps[i];
            if (!this.newDepIds.has(dep.id)) {
                dep.removeSub(this);
            }
        }
        var tmp = this.depIds;
        this.depIds = this.newDepIds;
        this.newDepIds = tmp;
        this.newDepIds.clear();
        tmp = this.deps;
        this.deps = this.newDeps;
        this.newDeps = tmp;
        this.newDeps.length = 0;
    };
    /**
     * Subscriber interface.
     * Will be called when a dependency changes.
     */
    Watcher.prototype.update = function () {
        /* istanbul ignore else */
        if (this.lazy) {
            this.dirty = true;
        }
        else if (this.sync) {
            this.run();
        }
        else {
            queueWatcher(this);
        }
    };
    /**
     * Scheduler job interface.
     * Will be called by the scheduler.
     */
    Watcher.prototype.run = function () {
        if (this.active) {
            var value = this.get();
            if (value !== this.value ||
                // Deep watchers and watchers on Object/Arrays should fire even
                // when the value is the same, because the value may
                // have mutated.
                isObject(value) ||
                this.deep) {
                // set new value
                var oldValue = this.value;
                this.value = value;
                if (this.user) {
                    var info = "callback for watcher \"".concat(this.expression, "\"");
                    invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);
                }
                else {
                    this.cb.call(this.vm, value, oldValue);
                }
            }
        }
    };
    /**
     * Evaluate the value of the watcher.
     * This only gets called for lazy watchers.
     */
    Watcher.prototype.evaluate = function () {
        this.value = this.get();
        this.dirty = false;
    };
    /**
     * Depend on all deps collected by this watcher.
     */
    Watcher.prototype.depend = function () {
        var i = this.deps.length;
        while (i--) {
            this.deps[i].depend();
        }
    };
    /**
     * Remove self from all dependencies' subscriber list.
     */
    Watcher.prototype.teardown = function () {
        if (this.vm && !this.vm._isBeingDestroyed) {
            remove$2(this.vm._scope.effects, this);
        }
        if (this.active) {
            var i = this.deps.length;
            while (i--) {
                this.deps[i].removeSub(this);
            }
            this.active = false;
            if (this.onStop) {
                this.onStop();
            }
        }
    };
    return Watcher;
}());

var mark;
var measure;
if (false) { var perf_1; }

function initEvents(vm) {
    vm._events = Object.create(null);
    vm._hasHookEvent = false;
    // init parent attached events
    var listeners = vm.$options._parentListeners;
    if (listeners) {
        updateComponentListeners(vm, listeners);
    }
}
var target$1;
function add$1(event, fn) {
    target$1.$on(event, fn);
}
function remove$1(event, fn) {
    target$1.$off(event, fn);
}
function createOnceHandler$1(event, fn) {
    var _target = target$1;
    return function onceHandler() {
        var res = fn.apply(null, arguments);
        if (res !== null) {
            _target.$off(event, onceHandler);
        }
    };
}
function updateComponentListeners(vm, listeners, oldListeners) {
    target$1 = vm;
    updateListeners(listeners, oldListeners || {}, add$1, remove$1, createOnceHandler$1, vm);
    target$1 = undefined;
}
function eventsMixin(Vue) {
    var hookRE = /^hook:/;
    Vue.prototype.$on = function (event, fn) {
        var vm = this;
        if (isArray(event)) {
            for (var i = 0, l = event.length; i < l; i++) {
                vm.$on(event[i], fn);
            }
        }
        else {
            (vm._events[event] || (vm._events[event] = [])).push(fn);
            // optimize hook:event cost by using a boolean flag marked at registration
            // instead of a hash lookup
            if (hookRE.test(event)) {
                vm._hasHookEvent = true;
            }
        }
        return vm;
    };
    Vue.prototype.$once = function (event, fn) {
        var vm = this;
        function on() {
            vm.$off(event, on);
            fn.apply(vm, arguments);
        }
        on.fn = fn;
        vm.$on(event, on);
        return vm;
    };
    Vue.prototype.$off = function (event, fn) {
        var vm = this;
        // all
        if (!arguments.length) {
            vm._events = Object.create(null);
            return vm;
        }
        // array of events
        if (isArray(event)) {
            for (var i_1 = 0, l = event.length; i_1 < l; i_1++) {
                vm.$off(event[i_1], fn);
            }
            return vm;
        }
        // specific event
        var cbs = vm._events[event];
        if (!cbs) {
            return vm;
        }
        if (!fn) {
            vm._events[event] = null;
            return vm;
        }
        // specific handler
        var cb;
        var i = cbs.length;
        while (i--) {
            cb = cbs[i];
            if (cb === fn || cb.fn === fn) {
                cbs.splice(i, 1);
                break;
            }
        }
        return vm;
    };
    Vue.prototype.$emit = function (event) {
        var vm = this;
        if (false) { var lowerCaseEvent; }
        var cbs = vm._events[event];
        if (cbs) {
            cbs = cbs.length > 1 ? toArray(cbs) : cbs;
            var args = toArray(arguments, 1);
            var info = "event handler for \"".concat(event, "\"");
            for (var i = 0, l = cbs.length; i < l; i++) {
                invokeWithErrorHandling(cbs[i], vm, args, vm, info);
            }
        }
        return vm;
    };
}

var activeInstance = null;
var isUpdatingChildComponent = false;
function setActiveInstance(vm) {
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    return function () {
        activeInstance = prevActiveInstance;
    };
}
function initLifecycle(vm) {
    var options = vm.$options;
    // locate first non-abstract parent
    var parent = options.parent;
    if (parent && !options.abstract) {
        while (parent.$options.abstract && parent.$parent) {
            parent = parent.$parent;
        }
        parent.$children.push(vm);
    }
    vm.$parent = parent;
    vm.$root = parent ? parent.$root : vm;
    vm.$children = [];
    vm.$refs = {};
    vm._provided = parent ? parent._provided : Object.create(null);
    vm._watcher = null;
    vm._inactive = null;
    vm._directInactive = false;
    vm._isMounted = false;
    vm._isDestroyed = false;
    vm._isBeingDestroyed = false;
}
function lifecycleMixin(Vue) {
    Vue.prototype._update = function (vnode, hydrating) {
        var vm = this;
        var prevEl = vm.$el;
        var prevVnode = vm._vnode;
        var restoreActiveInstance = setActiveInstance(vm);
        vm._vnode = vnode;
        // Vue.prototype.__patch__ is injected in entry points
        // based on the rendering backend used.
        if (!prevVnode) {
            // initial render
            vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
        }
        else {
            // updates
            vm.$el = vm.__patch__(prevVnode, vnode);
        }
        restoreActiveInstance();
        // update __vue__ reference
        if (prevEl) {
            prevEl.__vue__ = null;
        }
        if (vm.$el) {
            vm.$el.__vue__ = vm;
        }
        // if parent is an HOC, update its $el as well
        var wrapper = vm;
        while (wrapper &&
            wrapper.$vnode &&
            wrapper.$parent &&
            wrapper.$vnode === wrapper.$parent._vnode) {
            wrapper.$parent.$el = wrapper.$el;
            wrapper = wrapper.$parent;
        }
        // updated hook is called by the scheduler to ensure that children are
        // updated in a parent's updated hook.
    };
    Vue.prototype.$forceUpdate = function () {
        var vm = this;
        if (vm._watcher) {
            vm._watcher.update();
        }
    };
    Vue.prototype.$destroy = function () {
        var vm = this;
        if (vm._isBeingDestroyed) {
            return;
        }
        callHook$1(vm, 'beforeDestroy');
        vm._isBeingDestroyed = true;
        // remove self from parent
        var parent = vm.$parent;
        if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
            remove$2(parent.$children, vm);
        }
        // teardown scope. this includes both the render watcher and other
        // watchers created
        vm._scope.stop();
        // remove reference from data ob
        // frozen object may not have observer.
        if (vm._data.__ob__) {
            vm._data.__ob__.vmCount--;
        }
        // call the last hook...
        vm._isDestroyed = true;
        // invoke destroy hooks on current rendered tree
        vm.__patch__(vm._vnode, null);
        // fire destroyed hook
        callHook$1(vm, 'destroyed');
        // turn off all instance listeners.
        vm.$off();
        // remove __vue__ reference
        if (vm.$el) {
            vm.$el.__vue__ = null;
        }
        // release circular reference (#6759)
        if (vm.$vnode) {
            vm.$vnode.parent = null;
        }
    };
}
function mountComponent(vm, el, hydrating) {
    vm.$el = el;
    if (!vm.$options.render) {
        // @ts-expect-error invalid type
        vm.$options.render = createEmptyVNode;
        if (false) {}
    }
    callHook$1(vm, 'beforeMount');
    var updateComponent;
    /* istanbul ignore if */
    if (false) {}
    else {
        updateComponent = function () {
            vm._update(vm._render(), hydrating);
        };
    }
    var watcherOptions = {
        before: function () {
            if (vm._isMounted && !vm._isDestroyed) {
                callHook$1(vm, 'beforeUpdate');
            }
        }
    };
    if (false) {}
    // we set this to vm._watcher inside the watcher's constructor
    // since the watcher's initial patch may call $forceUpdate (e.g. inside child
    // component's mounted hook), which relies on vm._watcher being already defined
    new Watcher(vm, updateComponent, noop, watcherOptions, true /* isRenderWatcher */);
    hydrating = false;
    // flush buffer for flush: "pre" watchers queued in setup()
    var preWatchers = vm._preWatchers;
    if (preWatchers) {
        for (var i = 0; i < preWatchers.length; i++) {
            preWatchers[i].run();
        }
    }
    // manually mounted instance, call mounted on self
    // mounted is called for render-created child components in its inserted hook
    if (vm.$vnode == null) {
        vm._isMounted = true;
        callHook$1(vm, 'mounted');
    }
    return vm;
}
function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
    if (false) {}
    // determine whether component has slot children
    // we need to do this before overwriting $options._renderChildren.
    // check if there are dynamic scopedSlots (hand-written or compiled but with
    // dynamic slot names). Static scoped slots compiled from template has the
    // "$stable" marker.
    var newScopedSlots = parentVnode.data.scopedSlots;
    var oldScopedSlots = vm.$scopedSlots;
    var hasDynamicScopedSlot = !!((newScopedSlots && !newScopedSlots.$stable) ||
        (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
        (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||
        (!newScopedSlots && vm.$scopedSlots.$key));
    // Any static slot children from the parent may have changed during parent's
    // update. Dynamic scoped slots may also have changed. In such cases, a forced
    // update is necessary to ensure correctness.
    var needsForceUpdate = !!(renderChildren || // has new static slots
        vm.$options._renderChildren || // has old static slots
        hasDynamicScopedSlot);
    var prevVNode = vm.$vnode;
    vm.$options._parentVnode = parentVnode;
    vm.$vnode = parentVnode; // update vm's placeholder node without re-render
    if (vm._vnode) {
        // update child tree's parent
        vm._vnode.parent = parentVnode;
    }
    vm.$options._renderChildren = renderChildren;
    // update $attrs and $listeners hash
    // these are also reactive so they may trigger child update if the child
    // used them during render
    var attrs = parentVnode.data.attrs || emptyObject;
    if (vm._attrsProxy) {
        // force update if attrs are accessed and has changed since it may be
        // passed to a child component.
        if (syncSetupProxy(vm._attrsProxy, attrs, (prevVNode.data && prevVNode.data.attrs) || emptyObject, vm, '$attrs')) {
            needsForceUpdate = true;
        }
    }
    vm.$attrs = attrs;
    // update listeners
    listeners = listeners || emptyObject;
    var prevListeners = vm.$options._parentListeners;
    if (vm._listenersProxy) {
        syncSetupProxy(vm._listenersProxy, listeners, prevListeners || emptyObject, vm, '$listeners');
    }
    vm.$listeners = vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, prevListeners);
    // update props
    if (propsData && vm.$options.props) {
        toggleObserving(false);
        var props = vm._props;
        var propKeys = vm.$options._propKeys || [];
        for (var i = 0; i < propKeys.length; i++) {
            var key = propKeys[i];
            var propOptions = vm.$options.props; // wtf flow?
            props[key] = validateProp(key, propOptions, propsData, vm);
        }
        toggleObserving(true);
        // keep a copy of raw propsData
        vm.$options.propsData = propsData;
    }
    // resolve slots + force update if has children
    if (needsForceUpdate) {
        vm.$slots = resolveSlots(renderChildren, parentVnode.context);
        vm.$forceUpdate();
    }
    if (false) {}
}
function isInInactiveTree(vm) {
    while (vm && (vm = vm.$parent)) {
        if (vm._inactive)
            return true;
    }
    return false;
}
function activateChildComponent(vm, direct) {
    if (direct) {
        vm._directInactive = false;
        if (isInInactiveTree(vm)) {
            return;
        }
    }
    else if (vm._directInactive) {
        return;
    }
    if (vm._inactive || vm._inactive === null) {
        vm._inactive = false;
        for (var i = 0; i < vm.$children.length; i++) {
            activateChildComponent(vm.$children[i]);
        }
        callHook$1(vm, 'activated');
    }
}
function deactivateChildComponent(vm, direct) {
    if (direct) {
        vm._directInactive = true;
        if (isInInactiveTree(vm)) {
            return;
        }
    }
    if (!vm._inactive) {
        vm._inactive = true;
        for (var i = 0; i < vm.$children.length; i++) {
            deactivateChildComponent(vm.$children[i]);
        }
        callHook$1(vm, 'deactivated');
    }
}
function callHook$1(vm, hook, args, setContext) {
    if (setContext === void 0) { setContext = true; }
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var prevInst = currentInstance;
    var prevScope = getCurrentScope();
    setContext && setCurrentInstance(vm);
    var handlers = vm.$options[hook];
    var info = "".concat(hook, " hook");
    if (handlers) {
        for (var i = 0, j = handlers.length; i < j; i++) {
            invokeWithErrorHandling(handlers[i], vm, args || null, vm, info);
        }
    }
    if (vm._hasHookEvent) {
        vm.$emit('hook:' + hook);
    }
    if (setContext) {
        setCurrentInstance(prevInst);
        prevScope && prevScope.on();
    }
    popTarget();
}

var MAX_UPDATE_COUNT = 100;
var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;
/**
 * Reset the scheduler's state.
 */
function resetSchedulerState() {
    index = queue.length = activatedChildren.length = 0;
    has = {};
    if (false) {}
    waiting = flushing = false;
}
// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;
// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;
// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
    var performance_1 = window.performance;
    if (performance_1 &&
        typeof performance_1.now === 'function' &&
        getNow() > document.createEvent('Event').timeStamp) {
        // if the event timestamp, although evaluated AFTER the Date.now(), is
        // smaller than it, it means the event is using a hi-res timestamp,
        // and we need to use the hi-res version for event listener timestamps as
        // well.
        getNow = function () { return performance_1.now(); };
    }
}
var sortCompareFn = function (a, b) {
    if (a.post) {
        if (!b.post)
            return 1;
    }
    else if (b.post) {
        return -1;
    }
    return a.id - b.id;
};
/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue() {
    currentFlushTimestamp = getNow();
    flushing = true;
    var watcher, id;
    // Sort queue before flush.
    // This ensures that:
    // 1. Components are updated from parent to child. (because parent is always
    //    created before the child)
    // 2. A component's user watchers are run before its render watcher (because
    //    user watchers are created before the render watcher)
    // 3. If a component is destroyed during a parent component's watcher run,
    //    its watchers can be skipped.
    queue.sort(sortCompareFn);
    // do not cache length because more watchers might be pushed
    // as we run existing watchers
    for (index = 0; index < queue.length; index++) {
        watcher = queue[index];
        if (watcher.before) {
            watcher.before();
        }
        id = watcher.id;
        has[id] = null;
        watcher.run();
        // in dev build, check and stop circular updates.
        if (false) {}
    }
    // keep copies of post queues before resetting state
    var activatedQueue = activatedChildren.slice();
    var updatedQueue = queue.slice();
    resetSchedulerState();
    // call component updated and activated hooks
    callActivatedHooks(activatedQueue);
    callUpdatedHooks(updatedQueue);
    cleanupDeps();
    // devtool hook
    /* istanbul ignore if */
    if (devtools && config.devtools) {
        devtools.emit('flush');
    }
}
function callUpdatedHooks(queue) {
    var i = queue.length;
    while (i--) {
        var watcher = queue[i];
        var vm = watcher.vm;
        if (vm && vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
            callHook$1(vm, 'updated');
        }
    }
}
/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent(vm) {
    // setting _inactive to false here so that a render function can
    // rely on checking whether it's in an inactive tree (e.g. router-view)
    vm._inactive = false;
    activatedChildren.push(vm);
}
function callActivatedHooks(queue) {
    for (var i = 0; i < queue.length; i++) {
        queue[i]._inactive = true;
        activateChildComponent(queue[i], true /* true */);
    }
}
/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher(watcher) {
    var id = watcher.id;
    if (has[id] != null) {
        return;
    }
    if (watcher === Dep.target && watcher.noRecurse) {
        return;
    }
    has[id] = true;
    if (!flushing) {
        queue.push(watcher);
    }
    else {
        // if already flushing, splice the watcher based on its id
        // if already past its id, it will be run next immediately.
        var i = queue.length - 1;
        while (i > index && queue[i].id > watcher.id) {
            i--;
        }
        queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
        waiting = true;
        if (false) {}
        nextTick(flushSchedulerQueue);
    }
}

function initProvide(vm) {
    var provideOption = vm.$options.provide;
    if (provideOption) {
        var provided = isFunction(provideOption)
            ? provideOption.call(vm)
            : provideOption;
        if (!isObject(provided)) {
            return;
        }
        var source = resolveProvided(vm);
        // IE9 doesn't support Object.getOwnPropertyDescriptors so we have to
        // iterate the keys ourselves.
        var keys = hasSymbol ? Reflect.ownKeys(provided) : Object.keys(provided);
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            Object.defineProperty(source, key, Object.getOwnPropertyDescriptor(provided, key));
        }
    }
}
function initInjections(vm) {
    var result = resolveInject(vm.$options.inject, vm);
    if (result) {
        toggleObserving(false);
        Object.keys(result).forEach(function (key) {
            /* istanbul ignore else */
            if (false) {}
            else {
                defineReactive(vm, key, result[key]);
            }
        });
        toggleObserving(true);
    }
}
function resolveInject(inject, vm) {
    if (inject) {
        // inject is :any because flow is not smart enough to figure out cached
        var result = Object.create(null);
        var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            // #6574 in case the inject object is observed...
            if (key === '__ob__')
                continue;
            var provideKey = inject[key].from;
            if (provideKey in vm._provided) {
                result[key] = vm._provided[provideKey];
            }
            else if ('default' in inject[key]) {
                var provideDefault = inject[key].default;
                result[key] = isFunction(provideDefault)
                    ? provideDefault.call(vm)
                    : provideDefault;
            }
            else if (false) {}
        }
        return result;
    }
}

function FunctionalRenderContext(data, props, children, parent, Ctor) {
    var _this = this;
    var options = Ctor.options;
    // ensure the createElement function in functional components
    // gets a unique context - this is necessary for correct named slot check
    var contextVm;
    if (hasOwn(parent, '_uid')) {
        contextVm = Object.create(parent);
        contextVm._original = parent;
    }
    else {
        // the context vm passed in is a functional context as well.
        // in this case we want to make sure we are able to get a hold to the
        // real context instance.
        contextVm = parent;
        // @ts-ignore
        parent = parent._original;
    }
    var isCompiled = isTrue(options._compiled);
    var needNormalization = !isCompiled;
    this.data = data;
    this.props = props;
    this.children = children;
    this.parent = parent;
    this.listeners = data.on || emptyObject;
    this.injections = resolveInject(options.inject, parent);
    this.slots = function () {
        if (!_this.$slots) {
            normalizeScopedSlots(parent, data.scopedSlots, (_this.$slots = resolveSlots(children, parent)));
        }
        return _this.$slots;
    };
    Object.defineProperty(this, 'scopedSlots', {
        enumerable: true,
        get: function () {
            return normalizeScopedSlots(parent, data.scopedSlots, this.slots());
        }
    });
    // support for compiled functional template
    if (isCompiled) {
        // exposing $options for renderStatic()
        this.$options = options;
        // pre-resolve slots for renderSlot()
        this.$slots = this.slots();
        this.$scopedSlots = normalizeScopedSlots(parent, data.scopedSlots, this.$slots);
    }
    if (options._scopeId) {
        this._c = function (a, b, c, d) {
            var vnode = createElement$1(contextVm, a, b, c, d, needNormalization);
            if (vnode && !isArray(vnode)) {
                vnode.fnScopeId = options._scopeId;
                vnode.fnContext = parent;
            }
            return vnode;
        };
    }
    else {
        this._c = function (a, b, c, d) {
            return createElement$1(contextVm, a, b, c, d, needNormalization);
        };
    }
}
installRenderHelpers(FunctionalRenderContext.prototype);
function createFunctionalComponent(Ctor, propsData, data, contextVm, children) {
    var options = Ctor.options;
    var props = {};
    var propOptions = options.props;
    if (isDef(propOptions)) {
        for (var key in propOptions) {
            props[key] = validateProp(key, propOptions, propsData || emptyObject);
        }
    }
    else {
        if (isDef(data.attrs))
            mergeProps(props, data.attrs);
        if (isDef(data.props))
            mergeProps(props, data.props);
    }
    var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);
    var vnode = options.render.call(null, renderContext._c, renderContext);
    if (vnode instanceof VNode) {
        return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext);
    }
    else if (isArray(vnode)) {
        var vnodes = normalizeChildren(vnode) || [];
        var res = new Array(vnodes.length);
        for (var i = 0; i < vnodes.length; i++) {
            res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
        }
        return res;
    }
}
function cloneAndMarkFunctionalResult(vnode, data, contextVm, options, renderContext) {
    // #7817 clone node before setting fnContext, otherwise if the node is reused
    // (e.g. it was from a cached normal slot) the fnContext causes named slots
    // that should not be matched to match.
    var clone = cloneVNode(vnode);
    clone.fnContext = contextVm;
    clone.fnOptions = options;
    if (false) {}
    if (data.slot) {
        (clone.data || (clone.data = {})).slot = data.slot;
    }
    return clone;
}
function mergeProps(to, from) {
    for (var key in from) {
        to[camelize(key)] = from[key];
    }
}

function getComponentName(options) {
    return options.name || options.__name || options._componentTag;
}
// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
    init: function (vnode, hydrating) {
        if (vnode.componentInstance &&
            !vnode.componentInstance._isDestroyed &&
            vnode.data.keepAlive) {
            // kept-alive components, treat as a patch
            var mountedNode = vnode; // work around flow
            componentVNodeHooks.prepatch(mountedNode, mountedNode);
        }
        else {
            var child = (vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance));
            child.$mount(hydrating ? vnode.elm : undefined, hydrating);
        }
    },
    prepatch: function (oldVnode, vnode) {
        var options = vnode.componentOptions;
        var child = (vnode.componentInstance = oldVnode.componentInstance);
        updateChildComponent(child, options.propsData, // updated props
        options.listeners, // updated listeners
        vnode, // new parent vnode
        options.children // new children
        );
    },
    insert: function (vnode) {
        var context = vnode.context, componentInstance = vnode.componentInstance;
        if (!componentInstance._isMounted) {
            componentInstance._isMounted = true;
            callHook$1(componentInstance, 'mounted');
        }
        if (vnode.data.keepAlive) {
            if (context._isMounted) {
                // vue-router#1212
                // During updates, a kept-alive component's child components may
                // change, so directly walking the tree here may call activated hooks
                // on incorrect children. Instead we push them into a queue which will
                // be processed after the whole patch process ended.
                queueActivatedComponent(componentInstance);
            }
            else {
                activateChildComponent(componentInstance, true /* direct */);
            }
        }
    },
    destroy: function (vnode) {
        var componentInstance = vnode.componentInstance;
        if (!componentInstance._isDestroyed) {
            if (!vnode.data.keepAlive) {
                componentInstance.$destroy();
            }
            else {
                deactivateChildComponent(componentInstance, true /* direct */);
            }
        }
    }
};
var hooksToMerge = Object.keys(componentVNodeHooks);
function createComponent(Ctor, data, context, children, tag) {
    if (isUndef(Ctor)) {
        return;
    }
    var baseCtor = context.$options._base;
    // plain options object: turn it into a constructor
    if (isObject(Ctor)) {
        Ctor = baseCtor.extend(Ctor);
    }
    // if at this stage it's not a constructor or an async component factory,
    // reject.
    if (typeof Ctor !== 'function') {
        if (false) {}
        return;
    }
    // async component
    var asyncFactory;
    // @ts-expect-error
    if (isUndef(Ctor.cid)) {
        asyncFactory = Ctor;
        Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
        if (Ctor === undefined) {
            // return a placeholder node for async component, which is rendered
            // as a comment node but preserves all the raw information for the node.
            // the information will be used for async server-rendering and hydration.
            return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
        }
    }
    data = data || {};
    // resolve constructor options in case global mixins are applied after
    // component constructor creation
    resolveConstructorOptions(Ctor);
    // transform component v-model data into props & events
    if (isDef(data.model)) {
        // @ts-expect-error
        transformModel(Ctor.options, data);
    }
    // extract props
    // @ts-expect-error
    var propsData = extractPropsFromVNodeData(data, Ctor, tag);
    // functional component
    // @ts-expect-error
    if (isTrue(Ctor.options.functional)) {
        return createFunctionalComponent(Ctor, propsData, data, context, children);
    }
    // extract listeners, since these needs to be treated as
    // child component listeners instead of DOM listeners
    var listeners = data.on;
    // replace with listeners with .native modifier
    // so it gets processed during parent component patch.
    data.on = data.nativeOn;
    // @ts-expect-error
    if (isTrue(Ctor.options.abstract)) {
        // abstract components do not keep anything
        // other than props & listeners & slot
        // work around flow
        var slot = data.slot;
        data = {};
        if (slot) {
            data.slot = slot;
        }
    }
    // install component management hooks onto the placeholder node
    installComponentHooks(data);
    // return a placeholder vnode
    // @ts-expect-error
    var name = getComponentName(Ctor.options) || tag;
    var vnode = new VNode(
    // @ts-expect-error
    "vue-component-".concat(Ctor.cid).concat(name ? "-".concat(name) : ''), data, undefined, undefined, undefined, context, 
    // @ts-expect-error
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }, asyncFactory);
    return vnode;
}
function createComponentInstanceForVnode(
// we know it's MountedComponentVNode but flow doesn't
vnode, 
// activeInstance in lifecycle state
parent) {
    var options = {
        _isComponent: true,
        _parentVnode: vnode,
        parent: parent
    };
    // check inline-template render functions
    var inlineTemplate = vnode.data.inlineTemplate;
    if (isDef(inlineTemplate)) {
        options.render = inlineTemplate.render;
        options.staticRenderFns = inlineTemplate.staticRenderFns;
    }
    return new vnode.componentOptions.Ctor(options);
}
function installComponentHooks(data) {
    var hooks = data.hook || (data.hook = {});
    for (var i = 0; i < hooksToMerge.length; i++) {
        var key = hooksToMerge[i];
        var existing = hooks[key];
        var toMerge = componentVNodeHooks[key];
        // @ts-expect-error
        if (existing !== toMerge && !(existing && existing._merged)) {
            hooks[key] = existing ? mergeHook(toMerge, existing) : toMerge;
        }
    }
}
function mergeHook(f1, f2) {
    var merged = function (a, b) {
        // flow complains about extra args which is why we use any
        f1(a, b);
        f2(a, b);
    };
    merged._merged = true;
    return merged;
}
// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel(options, data) {
    var prop = (options.model && options.model.prop) || 'value';
    var event = (options.model && options.model.event) || 'input';
    (data.attrs || (data.attrs = {}))[prop] = data.model.value;
    var on = data.on || (data.on = {});
    var existing = on[event];
    var callback = data.model.callback;
    if (isDef(existing)) {
        if (isArray(existing)
            ? existing.indexOf(callback) === -1
            : existing !== callback) {
            on[event] = [callback].concat(existing);
        }
    }
    else {
        on[event] = callback;
    }
}

var warn = noop;
var tip = (/* unused pure expression or super */ null && (noop));
var generateComponentTrace; // work around flow check
var formatComponentName;
if (false) { var repeat_1, classify_1, classifyRE_1, hasConsole_1; }

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;
/**
 * Options with restrictions
 */
if (false) {}
/**
 * Helper that recursively merges two data objects together.
 */
function mergeData(to, from, recursive) {
    if (recursive === void 0) { recursive = true; }
    if (!from)
        return to;
    var key, toVal, fromVal;
    var keys = hasSymbol
        ? Reflect.ownKeys(from)
        : Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
        key = keys[i];
        // in case the object is already observed...
        if (key === '__ob__')
            continue;
        toVal = to[key];
        fromVal = from[key];
        if (!recursive || !hasOwn(to, key)) {
            set(to, key, fromVal);
        }
        else if (toVal !== fromVal &&
            isPlainObject(toVal) &&
            isPlainObject(fromVal)) {
            mergeData(toVal, fromVal);
        }
    }
    return to;
}
/**
 * Data
 */
function mergeDataOrFn(parentVal, childVal, vm) {
    if (!vm) {
        // in a Vue.extend merge, both should be functions
        if (!childVal) {
            return parentVal;
        }
        if (!parentVal) {
            return childVal;
        }
        // when parentVal & childVal are both present,
        // we need to return a function that returns the
        // merged result of both functions... no need to
        // check if parentVal is a function here because
        // it has to be a function to pass previous merges.
        return function mergedDataFn() {
            return mergeData(isFunction(childVal) ? childVal.call(this, this) : childVal, isFunction(parentVal) ? parentVal.call(this, this) : parentVal);
        };
    }
    else {
        return function mergedInstanceDataFn() {
            // instance merge
            var instanceData = isFunction(childVal)
                ? childVal.call(vm, vm)
                : childVal;
            var defaultData = isFunction(parentVal)
                ? parentVal.call(vm, vm)
                : parentVal;
            if (instanceData) {
                return mergeData(instanceData, defaultData);
            }
            else {
                return defaultData;
            }
        };
    }
}
strats.data = function (parentVal, childVal, vm) {
    if (!vm) {
        if (childVal && typeof childVal !== 'function') {
             false &&
                0;
            return parentVal;
        }
        return mergeDataOrFn(parentVal, childVal);
    }
    return mergeDataOrFn(parentVal, childVal, vm);
};
/**
 * Hooks and props are merged as arrays.
 */
function mergeLifecycleHook(parentVal, childVal) {
    var res = childVal
        ? parentVal
            ? parentVal.concat(childVal)
            : isArray(childVal)
                ? childVal
                : [childVal]
        : parentVal;
    return res ? dedupeHooks(res) : res;
}
function dedupeHooks(hooks) {
    var res = [];
    for (var i = 0; i < hooks.length; i++) {
        if (res.indexOf(hooks[i]) === -1) {
            res.push(hooks[i]);
        }
    }
    return res;
}
LIFECYCLE_HOOKS.forEach(function (hook) {
    strats[hook] = mergeLifecycleHook;
});
/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets(parentVal, childVal, vm, key) {
    var res = Object.create(parentVal || null);
    if (childVal) {
         false && 0;
        return extend(res, childVal);
    }
    else {
        return res;
    }
}
ASSET_TYPES.forEach(function (type) {
    strats[type + 's'] = mergeAssets;
});
/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal, vm, key) {
    // work around Firefox's Object.prototype.watch...
    //@ts-expect-error work around
    if (parentVal === nativeWatch)
        parentVal = undefined;
    //@ts-expect-error work around
    if (childVal === nativeWatch)
        childVal = undefined;
    /* istanbul ignore if */
    if (!childVal)
        return Object.create(parentVal || null);
    if (false) {}
    if (!parentVal)
        return childVal;
    var ret = {};
    extend(ret, parentVal);
    for (var key_1 in childVal) {
        var parent_1 = ret[key_1];
        var child = childVal[key_1];
        if (parent_1 && !isArray(parent_1)) {
            parent_1 = [parent_1];
        }
        ret[key_1] = parent_1 ? parent_1.concat(child) : isArray(child) ? child : [child];
    }
    return ret;
};
/**
 * Other object hashes.
 */
strats.props =
    strats.methods =
        strats.inject =
            strats.computed =
                function (parentVal, childVal, vm, key) {
                    if (childVal && "production" !== 'production') {}
                    if (!parentVal)
                        return childVal;
                    var ret = Object.create(null);
                    extend(ret, parentVal);
                    if (childVal)
                        extend(ret, childVal);
                    return ret;
                };
strats.provide = function (parentVal, childVal) {
    if (!parentVal)
        return childVal;
    return function () {
        var ret = Object.create(null);
        mergeData(ret, isFunction(parentVal) ? parentVal.call(this) : parentVal);
        if (childVal) {
            mergeData(ret, isFunction(childVal) ? childVal.call(this) : childVal, false // non-recursive
            );
        }
        return ret;
    };
};
/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
    return childVal === undefined ? parentVal : childVal;
};
/**
 * Validate component names
 */
function checkComponents(options) {
    for (var key in options.components) {
        validateComponentName(key);
    }
}
function validateComponentName(name) {
    if (!new RegExp("^[a-zA-Z][\\-\\.0-9_".concat(unicodeRegExp.source, "]*$")).test(name)) {
        warn('Invalid component name: "' +
            name +
            '". Component names ' +
            'should conform to valid custom element name in html5 specification.');
    }
    if (isBuiltInTag(name) || config.isReservedTag(name)) {
        warn('Do not use built-in or reserved HTML elements as component ' +
            'id: ' +
            name);
    }
}
/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps(options, vm) {
    var props = options.props;
    if (!props)
        return;
    var res = {};
    var i, val, name;
    if (isArray(props)) {
        i = props.length;
        while (i--) {
            val = props[i];
            if (typeof val === 'string') {
                name = camelize(val);
                res[name] = { type: null };
            }
            else if (false) {}
        }
    }
    else if (isPlainObject(props)) {
        for (var key in props) {
            val = props[key];
            name = camelize(key);
            res[name] = isPlainObject(val) ? val : { type: val };
        }
    }
    else if (false) {}
    options.props = res;
}
/**
 * Normalize all injections into Object-based format
 */
function normalizeInject(options, vm) {
    var inject = options.inject;
    if (!inject)
        return;
    var normalized = (options.inject = {});
    if (isArray(inject)) {
        for (var i = 0; i < inject.length; i++) {
            normalized[inject[i]] = { from: inject[i] };
        }
    }
    else if (isPlainObject(inject)) {
        for (var key in inject) {
            var val = inject[key];
            normalized[key] = isPlainObject(val)
                ? extend({ from: key }, val)
                : { from: val };
        }
    }
    else if (false) {}
}
/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives$1(options) {
    var dirs = options.directives;
    if (dirs) {
        for (var key in dirs) {
            var def = dirs[key];
            if (isFunction(def)) {
                dirs[key] = { bind: def, update: def };
            }
        }
    }
}
function assertObjectType(name, value, vm) {
    if (!isPlainObject(value)) {
        warn("Invalid value for option \"".concat(name, "\": expected an Object, ") +
            "but got ".concat(toRawType(value), "."), vm);
    }
}
/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions(parent, child, vm) {
    if (false) {}
    if (isFunction(child)) {
        // @ts-expect-error
        child = child.options;
    }
    normalizeProps(child, vm);
    normalizeInject(child, vm);
    normalizeDirectives$1(child);
    // Apply extends and mixins on the child options,
    // but only if it is a raw options object that isn't
    // the result of another mergeOptions call.
    // Only merged options has the _base property.
    if (!child._base) {
        if (child.extends) {
            parent = mergeOptions(parent, child.extends, vm);
        }
        if (child.mixins) {
            for (var i = 0, l = child.mixins.length; i < l; i++) {
                parent = mergeOptions(parent, child.mixins[i], vm);
            }
        }
    }
    var options = {};
    var key;
    for (key in parent) {
        mergeField(key);
    }
    for (key in child) {
        if (!hasOwn(parent, key)) {
            mergeField(key);
        }
    }
    function mergeField(key) {
        var strat = strats[key] || defaultStrat;
        options[key] = strat(parent[key], child[key], vm, key);
    }
    return options;
}
/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset(options, type, id, warnMissing) {
    /* istanbul ignore if */
    if (typeof id !== 'string') {
        return;
    }
    var assets = options[type];
    // check local registration variations first
    if (hasOwn(assets, id))
        return assets[id];
    var camelizedId = camelize(id);
    if (hasOwn(assets, camelizedId))
        return assets[camelizedId];
    var PascalCaseId = capitalize(camelizedId);
    if (hasOwn(assets, PascalCaseId))
        return assets[PascalCaseId];
    // fallback to prototype chain
    var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
    if (false) {}
    return res;
}

function validateProp(key, propOptions, propsData, vm) {
    var prop = propOptions[key];
    var absent = !hasOwn(propsData, key);
    var value = propsData[key];
    // boolean casting
    var booleanIndex = getTypeIndex(Boolean, prop.type);
    if (booleanIndex > -1) {
        if (absent && !hasOwn(prop, 'default')) {
            value = false;
        }
        else if (value === '' || value === hyphenate(key)) {
            // only cast empty string / same name to boolean if
            // boolean has higher priority
            var stringIndex = getTypeIndex(String, prop.type);
            if (stringIndex < 0 || booleanIndex < stringIndex) {
                value = true;
            }
        }
    }
    // check default value
    if (value === undefined) {
        value = getPropDefaultValue(vm, prop, key);
        // since the default value is a fresh copy,
        // make sure to observe it.
        var prevShouldObserve = shouldObserve;
        toggleObserving(true);
        observe(value);
        toggleObserving(prevShouldObserve);
    }
    if (false) {}
    return value;
}
/**
 * Get the default value of a prop.
 */
function getPropDefaultValue(vm, prop, key) {
    // no default, return undefined
    if (!hasOwn(prop, 'default')) {
        return undefined;
    }
    var def = prop.default;
    // warn against non-factory defaults for Object & Array
    if (false) {}
    // the raw prop value was also undefined from previous render,
    // return previous default value to avoid unnecessary watcher trigger
    if (vm &&
        vm.$options.propsData &&
        vm.$options.propsData[key] === undefined &&
        vm._props[key] !== undefined) {
        return vm._props[key];
    }
    // call factory function for non-Function types
    // a value is Function if its prototype is function even across different execution context
    return isFunction(def) && getType(prop.type) !== 'Function'
        ? def.call(vm)
        : def;
}
/**
 * Assert whether a prop is valid.
 */
function assertProp(prop, name, value, vm, absent) {
    if (prop.required && absent) {
        warn('Missing required prop: "' + name + '"', vm);
        return;
    }
    if (value == null && !prop.required) {
        return;
    }
    var type = prop.type;
    var valid = !type || type === true;
    var expectedTypes = [];
    if (type) {
        if (!isArray(type)) {
            type = [type];
        }
        for (var i = 0; i < type.length && !valid; i++) {
            var assertedType = assertType(value, type[i], vm);
            expectedTypes.push(assertedType.expectedType || '');
            valid = assertedType.valid;
        }
    }
    var haveExpectedTypes = expectedTypes.some(function (t) { return t; });
    if (!valid && haveExpectedTypes) {
        warn(getInvalidTypeMessage(name, value, expectedTypes), vm);
        return;
    }
    var validator = prop.validator;
    if (validator) {
        if (!validator(value)) {
            warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
        }
    }
}
var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;
function assertType(value, type, vm) {
    var valid;
    var expectedType = getType(type);
    if (simpleCheckRE.test(expectedType)) {
        var t = typeof value;
        valid = t === expectedType.toLowerCase();
        // for primitive wrapper objects
        if (!valid && t === 'object') {
            valid = value instanceof type;
        }
    }
    else if (expectedType === 'Object') {
        valid = isPlainObject(value);
    }
    else if (expectedType === 'Array') {
        valid = isArray(value);
    }
    else {
        try {
            valid = value instanceof type;
        }
        catch (e) {
            warn('Invalid prop type: "' + String(type) + '" is not a constructor', vm);
            valid = false;
        }
    }
    return {
        valid: valid,
        expectedType: expectedType
    };
}
var functionTypeCheckRE = /^\s*function (\w+)/;
/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType(fn) {
    var match = fn && fn.toString().match(functionTypeCheckRE);
    return match ? match[1] : '';
}
function isSameType(a, b) {
    return getType(a) === getType(b);
}
function getTypeIndex(type, expectedTypes) {
    if (!isArray(expectedTypes)) {
        return isSameType(expectedTypes, type) ? 0 : -1;
    }
    for (var i = 0, len = expectedTypes.length; i < len; i++) {
        if (isSameType(expectedTypes[i], type)) {
            return i;
        }
    }
    return -1;
}
function getInvalidTypeMessage(name, value, expectedTypes) {
    var message = "Invalid prop: type check failed for prop \"".concat(name, "\".") +
        " Expected ".concat(expectedTypes.map(capitalize).join(', '));
    var expectedType = expectedTypes[0];
    var receivedType = toRawType(value);
    // check if we need to specify expected value
    if (expectedTypes.length === 1 &&
        isExplicable(expectedType) &&
        isExplicable(typeof value) &&
        !isBoolean(expectedType, receivedType)) {
        message += " with value ".concat(styleValue(value, expectedType));
    }
    message += ", got ".concat(receivedType, " ");
    // check if we need to specify received value
    if (isExplicable(receivedType)) {
        message += "with value ".concat(styleValue(value, receivedType), ".");
    }
    return message;
}
function styleValue(value, type) {
    if (type === 'String') {
        return "\"".concat(value, "\"");
    }
    else if (type === 'Number') {
        return "".concat(Number(value));
    }
    else {
        return "".concat(value);
    }
}
var EXPLICABLE_TYPES = (/* unused pure expression or super */ null && (['string', 'number', 'boolean']));
function isExplicable(value) {
    return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; });
}
function isBoolean() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; });
}

/* not type checking this file because flow doesn't play well with Proxy */
var initProxy;
if (false) { var getHandler_1, hasHandler_1, isBuiltInModifier_1, hasProxy_1, warnReservedPrefix_1, warnNonPresent_1, allowedGlobals_1; }

var sharedPropertyDefinition = {
    enumerable: true,
    configurable: true,
    get: noop,
    set: noop
};
function proxy(target, sourceKey, key) {
    sharedPropertyDefinition.get = function proxyGetter() {
        return this[sourceKey][key];
    };
    sharedPropertyDefinition.set = function proxySetter(val) {
        this[sourceKey][key] = val;
    };
    Object.defineProperty(target, key, sharedPropertyDefinition);
}
function initState(vm) {
    var opts = vm.$options;
    if (opts.props)
        initProps$1(vm, opts.props);
    // Composition API
    initSetup(vm);
    if (opts.methods)
        initMethods(vm, opts.methods);
    if (opts.data) {
        initData(vm);
    }
    else {
        var ob = observe((vm._data = {}));
        ob && ob.vmCount++;
    }
    if (opts.computed)
        initComputed$1(vm, opts.computed);
    if (opts.watch && opts.watch !== nativeWatch) {
        initWatch(vm, opts.watch);
    }
}
function initProps$1(vm, propsOptions) {
    var propsData = vm.$options.propsData || {};
    var props = (vm._props = shallowReactive({}));
    // cache prop keys so that future props updates can iterate using Array
    // instead of dynamic object key enumeration.
    var keys = (vm.$options._propKeys = []);
    var isRoot = !vm.$parent;
    // root instance props should be converted
    if (!isRoot) {
        toggleObserving(false);
    }
    var _loop_1 = function (key) {
        keys.push(key);
        var value = validateProp(key, propsOptions, propsData, vm);
        /* istanbul ignore else */
        if (false) { var hyphenatedKey; }
        else {
            defineReactive(props, key, value, undefined, true /* shallow */);
        }
        // static props are already proxied on the component's prototype
        // during Vue.extend(). We only need to proxy props defined at
        // instantiation here.
        if (!(key in vm)) {
            proxy(vm, "_props", key);
        }
    };
    for (var key in propsOptions) {
        _loop_1(key);
    }
    toggleObserving(true);
}
function initData(vm) {
    var data = vm.$options.data;
    data = vm._data = isFunction(data) ? getData(data, vm) : data || {};
    if (!isPlainObject(data)) {
        data = {};
         false &&
            0;
    }
    // proxy data on instance
    var keys = Object.keys(data);
    var props = vm.$options.props;
    var methods = vm.$options.methods;
    var i = keys.length;
    while (i--) {
        var key = keys[i];
        if (false) {}
        if (props && hasOwn(props, key)) {
             false &&
                0;
        }
        else if (!isReserved(key)) {
            proxy(vm, "_data", key);
        }
    }
    // observe data
    var ob = observe(data);
    ob && ob.vmCount++;
}
function getData(data, vm) {
    // #7573 disable dep collection when invoking data getters
    pushTarget();
    try {
        return data.call(vm, vm);
    }
    catch (e) {
        handleError(e, vm, "data()");
        return {};
    }
    finally {
        popTarget();
    }
}
var computedWatcherOptions = { lazy: true };
function initComputed$1(vm, computed) {
    // $flow-disable-line
    var watchers = (vm._computedWatchers = Object.create(null));
    // computed properties are just getters during SSR
    var isSSR = isServerRendering();
    for (var key in computed) {
        var userDef = computed[key];
        var getter = isFunction(userDef) ? userDef : userDef.get;
        if (false) {}
        if (!isSSR) {
            // create internal watcher for the computed property.
            watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);
        }
        // component-defined computed properties are already defined on the
        // component prototype. We only need to define computed properties defined
        // at instantiation here.
        if (!(key in vm)) {
            defineComputed(vm, key, userDef);
        }
        else if (false) {}
    }
}
function defineComputed(target, key, userDef) {
    var shouldCache = !isServerRendering();
    if (isFunction(userDef)) {
        sharedPropertyDefinition.get = shouldCache
            ? createComputedGetter(key)
            : createGetterInvoker(userDef);
        sharedPropertyDefinition.set = noop;
    }
    else {
        sharedPropertyDefinition.get = userDef.get
            ? shouldCache && userDef.cache !== false
                ? createComputedGetter(key)
                : createGetterInvoker(userDef.get)
            : noop;
        sharedPropertyDefinition.set = userDef.set || noop;
    }
    if (false) {}
    Object.defineProperty(target, key, sharedPropertyDefinition);
}
function createComputedGetter(key) {
    return function computedGetter() {
        var watcher = this._computedWatchers && this._computedWatchers[key];
        if (watcher) {
            if (watcher.dirty) {
                watcher.evaluate();
            }
            if (Dep.target) {
                if (false) {}
                watcher.depend();
            }
            return watcher.value;
        }
    };
}
function createGetterInvoker(fn) {
    return function computedGetter() {
        return fn.call(this, this);
    };
}
function initMethods(vm, methods) {
    var props = vm.$options.props;
    for (var key in methods) {
        if (false) {}
        vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
    }
}
function initWatch(vm, watch) {
    for (var key in watch) {
        var handler = watch[key];
        if (isArray(handler)) {
            for (var i = 0; i < handler.length; i++) {
                createWatcher(vm, key, handler[i]);
            }
        }
        else {
            createWatcher(vm, key, handler);
        }
    }
}
function createWatcher(vm, expOrFn, handler, options) {
    if (isPlainObject(handler)) {
        options = handler;
        handler = handler.handler;
    }
    if (typeof handler === 'string') {
        handler = vm[handler];
    }
    return vm.$watch(expOrFn, handler, options);
}
function stateMixin(Vue) {
    // flow somehow has problems with directly declared definition object
    // when using Object.defineProperty, so we have to procedurally build up
    // the object here.
    var dataDef = {};
    dataDef.get = function () {
        return this._data;
    };
    var propsDef = {};
    propsDef.get = function () {
        return this._props;
    };
    if (false) {}
    Object.defineProperty(Vue.prototype, '$data', dataDef);
    Object.defineProperty(Vue.prototype, '$props', propsDef);
    Vue.prototype.$set = set;
    Vue.prototype.$delete = del;
    Vue.prototype.$watch = function (expOrFn, cb, options) {
        var vm = this;
        if (isPlainObject(cb)) {
            return createWatcher(vm, expOrFn, cb, options);
        }
        options = options || {};
        options.user = true;
        var watcher = new Watcher(vm, expOrFn, cb, options);
        if (options.immediate) {
            var info = "callback for immediate watcher \"".concat(watcher.expression, "\"");
            pushTarget();
            invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);
            popTarget();
        }
        return function unwatchFn() {
            watcher.teardown();
        };
    };
}

var uid = 0;
function initMixin$1(Vue) {
    Vue.prototype._init = function (options) {
        var vm = this;
        // a uid
        vm._uid = uid++;
        var startTag, endTag;
        /* istanbul ignore if */
        if (false) {}
        // a flag to mark this as a Vue instance without having to do instanceof
        // check
        vm._isVue = true;
        // avoid instances from being observed
        vm.__v_skip = true;
        // effect scope
        vm._scope = new EffectScope(true /* detached */);
        // #13134 edge case where a child component is manually created during the
        // render of a parent component
        vm._scope.parent = undefined;
        vm._scope._vm = true;
        // merge options
        if (options && options._isComponent) {
            // optimize internal component instantiation
            // since dynamic options merging is pretty slow, and none of the
            // internal component options needs special treatment.
            initInternalComponent(vm, options);
        }
        else {
            vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
        }
        /* istanbul ignore else */
        if (false) {}
        else {
            vm._renderProxy = vm;
        }
        // expose real self
        vm._self = vm;
        initLifecycle(vm);
        initEvents(vm);
        initRender(vm);
        callHook$1(vm, 'beforeCreate', undefined, false /* setContext */);
        initInjections(vm); // resolve injections before data/props
        initState(vm);
        initProvide(vm); // resolve provide after data/props
        callHook$1(vm, 'created');
        /* istanbul ignore if */
        if (false) {}
        if (vm.$options.el) {
            vm.$mount(vm.$options.el);
        }
    };
}
function initInternalComponent(vm, options) {
    var opts = (vm.$options = Object.create(vm.constructor.options));
    // doing this because it's faster than dynamic enumeration.
    var parentVnode = options._parentVnode;
    opts.parent = options.parent;
    opts._parentVnode = parentVnode;
    var vnodeComponentOptions = parentVnode.componentOptions;
    opts.propsData = vnodeComponentOptions.propsData;
    opts._parentListeners = vnodeComponentOptions.listeners;
    opts._renderChildren = vnodeComponentOptions.children;
    opts._componentTag = vnodeComponentOptions.tag;
    if (options.render) {
        opts.render = options.render;
        opts.staticRenderFns = options.staticRenderFns;
    }
}
function resolveConstructorOptions(Ctor) {
    var options = Ctor.options;
    if (Ctor.super) {
        var superOptions = resolveConstructorOptions(Ctor.super);
        var cachedSuperOptions = Ctor.superOptions;
        if (superOptions !== cachedSuperOptions) {
            // super option changed,
            // need to resolve new options.
            Ctor.superOptions = superOptions;
            // check if there are any late-modified/attached options (#4976)
            var modifiedOptions = resolveModifiedOptions(Ctor);
            // update base extend options
            if (modifiedOptions) {
                extend(Ctor.extendOptions, modifiedOptions);
            }
            options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
            if (options.name) {
                options.components[options.name] = Ctor;
            }
        }
    }
    return options;
}
function resolveModifiedOptions(Ctor) {
    var modified;
    var latest = Ctor.options;
    var sealed = Ctor.sealedOptions;
    for (var key in latest) {
        if (latest[key] !== sealed[key]) {
            if (!modified)
                modified = {};
            modified[key] = latest[key];
        }
    }
    return modified;
}

function Vue(options) {
    if (false) {}
    this._init(options);
}
//@ts-expect-error Vue has function type
initMixin$1(Vue);
//@ts-expect-error Vue has function type
stateMixin(Vue);
//@ts-expect-error Vue has function type
eventsMixin(Vue);
//@ts-expect-error Vue has function type
lifecycleMixin(Vue);
//@ts-expect-error Vue has function type
renderMixin(Vue);

function initUse(Vue) {
    Vue.use = function (plugin) {
        var installedPlugins = this._installedPlugins || (this._installedPlugins = []);
        if (installedPlugins.indexOf(plugin) > -1) {
            return this;
        }
        // additional parameters
        var args = toArray(arguments, 1);
        args.unshift(this);
        if (isFunction(plugin.install)) {
            plugin.install.apply(plugin, args);
        }
        else if (isFunction(plugin)) {
            plugin.apply(null, args);
        }
        installedPlugins.push(plugin);
        return this;
    };
}

function initMixin(Vue) {
    Vue.mixin = function (mixin) {
        this.options = mergeOptions(this.options, mixin);
        return this;
    };
}

function initExtend(Vue) {
    /**
     * Each instance constructor, including Vue, has a unique
     * cid. This enables us to create wrapped "child
     * constructors" for prototypal inheritance and cache them.
     */
    Vue.cid = 0;
    var cid = 1;
    /**
     * Class inheritance
     */
    Vue.extend = function (extendOptions) {
        extendOptions = extendOptions || {};
        var Super = this;
        var SuperId = Super.cid;
        var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
        if (cachedCtors[SuperId]) {
            return cachedCtors[SuperId];
        }
        var name = getComponentName(extendOptions) || getComponentName(Super.options);
        if (false) {}
        var Sub = function VueComponent(options) {
            this._init(options);
        };
        Sub.prototype = Object.create(Super.prototype);
        Sub.prototype.constructor = Sub;
        Sub.cid = cid++;
        Sub.options = mergeOptions(Super.options, extendOptions);
        Sub['super'] = Super;
        // For props and computed properties, we define the proxy getters on
        // the Vue instances at extension time, on the extended prototype. This
        // avoids Object.defineProperty calls for each instance created.
        if (Sub.options.props) {
            initProps(Sub);
        }
        if (Sub.options.computed) {
            initComputed(Sub);
        }
        // allow further extension/mixin/plugin usage
        Sub.extend = Super.extend;
        Sub.mixin = Super.mixin;
        Sub.use = Super.use;
        // create asset registers, so extended classes
        // can have their private assets too.
        ASSET_TYPES.forEach(function (type) {
            Sub[type] = Super[type];
        });
        // enable recursive self-lookup
        if (name) {
            Sub.options.components[name] = Sub;
        }
        // keep a reference to the super options at extension time.
        // later at instantiation we can check if Super's options have
        // been updated.
        Sub.superOptions = Super.options;
        Sub.extendOptions = extendOptions;
        Sub.sealedOptions = extend({}, Sub.options);
        // cache constructor
        cachedCtors[SuperId] = Sub;
        return Sub;
    };
}
function initProps(Comp) {
    var props = Comp.options.props;
    for (var key in props) {
        proxy(Comp.prototype, "_props", key);
    }
}
function initComputed(Comp) {
    var computed = Comp.options.computed;
    for (var key in computed) {
        defineComputed(Comp.prototype, key, computed[key]);
    }
}

function initAssetRegisters(Vue) {
    /**
     * Create asset registration methods.
     */
    ASSET_TYPES.forEach(function (type) {
        // @ts-expect-error function is not exact same type
        Vue[type] = function (id, definition) {
            if (!definition) {
                return this.options[type + 's'][id];
            }
            else {
                /* istanbul ignore if */
                if (false) {}
                if (type === 'component' && isPlainObject(definition)) {
                    // @ts-expect-error
                    definition.name = definition.name || id;
                    definition = this.options._base.extend(definition);
                }
                if (type === 'directive' && isFunction(definition)) {
                    definition = { bind: definition, update: definition };
                }
                this.options[type + 's'][id] = definition;
                return definition;
            }
        };
    });
}

function _getComponentName(opts) {
    return opts && (getComponentName(opts.Ctor.options) || opts.tag);
}
function matches(pattern, name) {
    if (isArray(pattern)) {
        return pattern.indexOf(name) > -1;
    }
    else if (typeof pattern === 'string') {
        return pattern.split(',').indexOf(name) > -1;
    }
    else if (isRegExp(pattern)) {
        return pattern.test(name);
    }
    /* istanbul ignore next */
    return false;
}
function pruneCache(keepAliveInstance, filter) {
    var cache = keepAliveInstance.cache, keys = keepAliveInstance.keys, _vnode = keepAliveInstance._vnode, $vnode = keepAliveInstance.$vnode;
    for (var key in cache) {
        var entry = cache[key];
        if (entry) {
            var name_1 = entry.name;
            if (name_1 && !filter(name_1)) {
                pruneCacheEntry(cache, key, keys, _vnode);
            }
        }
    }
    $vnode.componentOptions.children = undefined;
}
function pruneCacheEntry(cache, key, keys, current) {
    var entry = cache[key];
    if (entry && (!current || entry.tag !== current.tag)) {
        // @ts-expect-error can be undefined
        entry.componentInstance.$destroy();
    }
    cache[key] = null;
    remove$2(keys, key);
}
var patternTypes = [String, RegExp, Array];
// TODO defineComponent
var KeepAlive = {
    name: 'keep-alive',
    abstract: true,
    props: {
        include: patternTypes,
        exclude: patternTypes,
        max: [String, Number]
    },
    methods: {
        cacheVNode: function () {
            var _a = this, cache = _a.cache, keys = _a.keys, vnodeToCache = _a.vnodeToCache, keyToCache = _a.keyToCache;
            if (vnodeToCache) {
                var tag = vnodeToCache.tag, componentInstance = vnodeToCache.componentInstance, componentOptions = vnodeToCache.componentOptions;
                cache[keyToCache] = {
                    name: _getComponentName(componentOptions),
                    tag: tag,
                    componentInstance: componentInstance
                };
                keys.push(keyToCache);
                // prune oldest entry
                if (this.max && keys.length > parseInt(this.max)) {
                    pruneCacheEntry(cache, keys[0], keys, this._vnode);
                }
                this.vnodeToCache = null;
            }
        }
    },
    created: function () {
        this.cache = Object.create(null);
        this.keys = [];
    },
    destroyed: function () {
        for (var key in this.cache) {
            pruneCacheEntry(this.cache, key, this.keys);
        }
    },
    mounted: function () {
        var _this = this;
        this.cacheVNode();
        this.$watch('include', function (val) {
            pruneCache(_this, function (name) { return matches(val, name); });
        });
        this.$watch('exclude', function (val) {
            pruneCache(_this, function (name) { return !matches(val, name); });
        });
    },
    updated: function () {
        this.cacheVNode();
    },
    render: function () {
        var slot = this.$slots.default;
        var vnode = getFirstComponentChild(slot);
        var componentOptions = vnode && vnode.componentOptions;
        if (componentOptions) {
            // check pattern
            var name_2 = _getComponentName(componentOptions);
            var _a = this, include = _a.include, exclude = _a.exclude;
            if (
            // not included
            (include && (!name_2 || !matches(include, name_2))) ||
                // excluded
                (exclude && name_2 && matches(exclude, name_2))) {
                return vnode;
            }
            var _b = this, cache = _b.cache, keys = _b.keys;
            var key = vnode.key == null
                ? // same constructor may get registered as different local components
                    // so cid alone is not enough (#3269)
                    componentOptions.Ctor.cid +
                        (componentOptions.tag ? "::".concat(componentOptions.tag) : '')
                : vnode.key;
            if (cache[key]) {
                vnode.componentInstance = cache[key].componentInstance;
                // make current key freshest
                remove$2(keys, key);
                keys.push(key);
            }
            else {
                // delay setting the cache until update
                this.vnodeToCache = vnode;
                this.keyToCache = key;
            }
            // @ts-expect-error can vnode.data can be undefined
            vnode.data.keepAlive = true;
        }
        return vnode || (slot && slot[0]);
    }
};

var builtInComponents = {
    KeepAlive: KeepAlive
};

function initGlobalAPI(Vue) {
    // config
    var configDef = {};
    configDef.get = function () { return config; };
    if (false) {}
    Object.defineProperty(Vue, 'config', configDef);
    // exposed util methods.
    // NOTE: these are not considered part of the public API - avoid relying on
    // them unless you are aware of the risk.
    Vue.util = {
        warn: warn,
        extend: extend,
        mergeOptions: mergeOptions,
        defineReactive: defineReactive
    };
    Vue.set = set;
    Vue.delete = del;
    Vue.nextTick = nextTick;
    // 2.6 explicit observable API
    Vue.observable = function (obj) {
        observe(obj);
        return obj;
    };
    Vue.options = Object.create(null);
    ASSET_TYPES.forEach(function (type) {
        Vue.options[type + 's'] = Object.create(null);
    });
    // this is used to identify the "base" constructor to extend all plain-object
    // components with in Weex's multi-instance scenarios.
    Vue.options._base = Vue;
    extend(Vue.options.components, builtInComponents);
    initUse(Vue);
    initMixin(Vue);
    initExtend(Vue);
    initAssetRegisters(Vue);
}

initGlobalAPI(Vue);
Object.defineProperty(Vue.prototype, '$isServer', {
    get: isServerRendering
});
Object.defineProperty(Vue.prototype, '$ssrContext', {
    get: function () {
        /* istanbul ignore next */
        return this.$vnode && this.$vnode.ssrContext;
    }
});
// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
    value: FunctionalRenderContext
});
Vue.version = version;

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');
// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
    return ((attr === 'value' && acceptValue(tag) && type !== 'button') ||
        (attr === 'selected' && tag === 'option') ||
        (attr === 'checked' && tag === 'input') ||
        (attr === 'muted' && tag === 'video'));
};
var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');
var convertEnumeratedValue = function (key, value) {
    return isFalsyAttrValue(value) || value === 'false'
        ? 'false'
        : // allow arbitrary string value for contenteditable
            key === 'contenteditable' && isValidContentEditableValue(value)
                ? value
                : 'true';
};
var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
    'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
    'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
    'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
    'required,reversed,scoped,seamless,selected,sortable,' +
    'truespeed,typemustmatch,visible');
var xlinkNS = 'http://www.w3.org/1999/xlink';
var isXlink = function (name) {
    return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
};
var getXlinkProp = function (name) {
    return isXlink(name) ? name.slice(6, name.length) : '';
};
var isFalsyAttrValue = function (val) {
    return val == null || val === false;
};

function genClassForVnode(vnode) {
    var data = vnode.data;
    var parentNode = vnode;
    var childNode = vnode;
    while (isDef(childNode.componentInstance)) {
        childNode = childNode.componentInstance._vnode;
        if (childNode && childNode.data) {
            data = mergeClassData(childNode.data, data);
        }
    }
    // @ts-expect-error parentNode.parent not VNodeWithData
    while (isDef((parentNode = parentNode.parent))) {
        if (parentNode && parentNode.data) {
            data = mergeClassData(data, parentNode.data);
        }
    }
    return renderClass(data.staticClass, data.class);
}
function mergeClassData(child, parent) {
    return {
        staticClass: concat(child.staticClass, parent.staticClass),
        class: isDef(child.class) ? [child.class, parent.class] : parent.class
    };
}
function renderClass(staticClass, dynamicClass) {
    if (isDef(staticClass) || isDef(dynamicClass)) {
        return concat(staticClass, stringifyClass(dynamicClass));
    }
    /* istanbul ignore next */
    return '';
}
function concat(a, b) {
    return a ? (b ? a + ' ' + b : a) : b || '';
}
function stringifyClass(value) {
    if (Array.isArray(value)) {
        return stringifyArray(value);
    }
    if (isObject(value)) {
        return stringifyObject(value);
    }
    if (typeof value === 'string') {
        return value;
    }
    /* istanbul ignore next */
    return '';
}
function stringifyArray(value) {
    var res = '';
    var stringified;
    for (var i = 0, l = value.length; i < l; i++) {
        if (isDef((stringified = stringifyClass(value[i]))) && stringified !== '') {
            if (res)
                res += ' ';
            res += stringified;
        }
    }
    return res;
}
function stringifyObject(value) {
    var res = '';
    for (var key in value) {
        if (value[key]) {
            if (res)
                res += ' ';
            res += key;
        }
    }
    return res;
}

var namespaceMap = {
    svg: 'http://www.w3.org/2000/svg',
    math: 'http://www.w3.org/1998/Math/MathML'
};
var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' +
    'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
    'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
    'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
    's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
    'embed,object,param,source,canvas,script,noscript,del,ins,' +
    'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
    'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
    'output,progress,select,textarea,' +
    'details,dialog,menu,menuitem,summary,' +
    'content,element,shadow,template,blockquote,iframe,tfoot');
// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
    'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
    'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);
var isReservedTag = function (tag) {
    return isHTMLTag(tag) || isSVG(tag);
};
function getTagNamespace(tag) {
    if (isSVG(tag)) {
        return 'svg';
    }
    // basic support for MathML
    // note it doesn't support other MathML elements being component roots
    if (tag === 'math') {
        return 'math';
    }
}
var unknownElementCache = Object.create(null);
function isUnknownElement(tag) {
    /* istanbul ignore if */
    if (!inBrowser) {
        return true;
    }
    if (isReservedTag(tag)) {
        return false;
    }
    tag = tag.toLowerCase();
    /* istanbul ignore if */
    if (unknownElementCache[tag] != null) {
        return unknownElementCache[tag];
    }
    var el = document.createElement(tag);
    if (tag.indexOf('-') > -1) {
        // https://stackoverflow.com/a/28210364/1070244
        return (unknownElementCache[tag] =
            el.constructor === window.HTMLUnknownElement ||
                el.constructor === window.HTMLElement);
    }
    else {
        return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()));
    }
}
var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/**
 * Query an element selector if it's not an element already.
 */
function query(el) {
    if (typeof el === 'string') {
        var selected = document.querySelector(el);
        if (!selected) {
             false && 0;
            return document.createElement('div');
        }
        return selected;
    }
    else {
        return el;
    }
}

function createElement(tagName, vnode) {
    var elm = document.createElement(tagName);
    if (tagName !== 'select') {
        return elm;
    }
    // false or null will remove the attribute but undefined will not
    if (vnode.data &&
        vnode.data.attrs &&
        vnode.data.attrs.multiple !== undefined) {
        elm.setAttribute('multiple', 'multiple');
    }
    return elm;
}
function createElementNS(namespace, tagName) {
    return document.createElementNS(namespaceMap[namespace], tagName);
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    node.appendChild(child);
}
function parentNode(node) {
    return node.parentNode;
}
function nextSibling(node) {
    return node.nextSibling;
}
function tagName(node) {
    return node.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function setStyleScope(node, scopeId) {
    node.setAttribute(scopeId, '');
}

var nodeOps = /*#__PURE__*/Object.freeze({
  __proto__: null,
  createElement: createElement,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});

var ref = {
    create: function (_, vnode) {
        registerRef(vnode);
    },
    update: function (oldVnode, vnode) {
        if (oldVnode.data.ref !== vnode.data.ref) {
            registerRef(oldVnode, true);
            registerRef(vnode);
        }
    },
    destroy: function (vnode) {
        registerRef(vnode, true);
    }
};
function registerRef(vnode, isRemoval) {
    var ref = vnode.data.ref;
    if (!isDef(ref))
        return;
    var vm = vnode.context;
    var refValue = vnode.componentInstance || vnode.elm;
    var value = isRemoval ? null : refValue;
    var $refsValue = isRemoval ? undefined : refValue;
    if (isFunction(ref)) {
        invokeWithErrorHandling(ref, vm, [value], vm, "template ref function");
        return;
    }
    var isFor = vnode.data.refInFor;
    var _isString = typeof ref === 'string' || typeof ref === 'number';
    var _isRef = isRef(ref);
    var refs = vm.$refs;
    if (_isString || _isRef) {
        if (isFor) {
            var existing = _isString ? refs[ref] : ref.value;
            if (isRemoval) {
                isArray(existing) && remove$2(existing, refValue);
            }
            else {
                if (!isArray(existing)) {
                    if (_isString) {
                        refs[ref] = [refValue];
                        setSetupRef(vm, ref, refs[ref]);
                    }
                    else {
                        ref.value = [refValue];
                    }
                }
                else if (!existing.includes(refValue)) {
                    existing.push(refValue);
                }
            }
        }
        else if (_isString) {
            if (isRemoval && refs[ref] !== refValue) {
                return;
            }
            refs[ref] = $refsValue;
            setSetupRef(vm, ref, value);
        }
        else if (_isRef) {
            if (isRemoval && ref.value !== refValue) {
                return;
            }
            ref.value = value;
        }
        else if (false) {}
    }
}
function setSetupRef(_a, key, val) {
    var _setupState = _a._setupState;
    if (_setupState && hasOwn(_setupState, key)) {
        if (isRef(_setupState[key])) {
            _setupState[key].value = val;
        }
        else {
            _setupState[key] = val;
        }
    }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */
var emptyNode = new VNode('', {}, []);
var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];
function sameVnode(a, b) {
    return (a.key === b.key &&
        a.asyncFactory === b.asyncFactory &&
        ((a.tag === b.tag &&
            a.isComment === b.isComment &&
            isDef(a.data) === isDef(b.data) &&
            sameInputType(a, b)) ||
            (isTrue(a.isAsyncPlaceholder) && isUndef(b.asyncFactory.error))));
}
function sameInputType(a, b) {
    if (a.tag !== 'input')
        return true;
    var i;
    var typeA = isDef((i = a.data)) && isDef((i = i.attrs)) && i.type;
    var typeB = isDef((i = b.data)) && isDef((i = i.attrs)) && i.type;
    return typeA === typeB || (isTextInputType(typeA) && isTextInputType(typeB));
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var i, key;
    var map = {};
    for (i = beginIdx; i <= endIdx; ++i) {
        key = children[i].key;
        if (isDef(key))
            map[key] = i;
    }
    return map;
}
function createPatchFunction(backend) {
    var i, j;
    var cbs = {};
    var modules = backend.modules, nodeOps = backend.nodeOps;
    for (i = 0; i < hooks.length; ++i) {
        cbs[hooks[i]] = [];
        for (j = 0; j < modules.length; ++j) {
            if (isDef(modules[j][hooks[i]])) {
                cbs[hooks[i]].push(modules[j][hooks[i]]);
            }
        }
    }
    function emptyNodeAt(elm) {
        return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
    }
    function createRmCb(childElm, listeners) {
        function remove() {
            if (--remove.listeners === 0) {
                removeNode(childElm);
            }
        }
        remove.listeners = listeners;
        return remove;
    }
    function removeNode(el) {
        var parent = nodeOps.parentNode(el);
        // element may have already been removed due to v-html / v-text
        if (isDef(parent)) {
            nodeOps.removeChild(parent, el);
        }
    }
    function isUnknownElement(vnode, inVPre) {
        return (!inVPre &&
            !vnode.ns &&
            !(config.ignoredElements.length &&
                config.ignoredElements.some(function (ignore) {
                    return isRegExp(ignore)
                        ? ignore.test(vnode.tag)
                        : ignore === vnode.tag;
                })) &&
            config.isUnknownElement(vnode.tag));
    }
    var creatingElmInVPre = 0;
    function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {
        if (isDef(vnode.elm) && isDef(ownerArray)) {
            // This vnode was used in a previous render!
            // now it's used as a new node, overwriting its elm would cause
            // potential patch errors down the road when it's used as an insertion
            // reference node. Instead, we clone the node on-demand before creating
            // associated DOM element for it.
            vnode = ownerArray[index] = cloneVNode(vnode);
        }
        vnode.isRootInsert = !nested; // for transition enter check
        if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
            return;
        }
        var data = vnode.data;
        var children = vnode.children;
        var tag = vnode.tag;
        if (isDef(tag)) {
            if (false) {}
            vnode.elm = vnode.ns
                ? nodeOps.createElementNS(vnode.ns, tag)
                : nodeOps.createElement(tag, vnode);
            setScope(vnode);
            createChildren(vnode, children, insertedVnodeQueue);
            if (isDef(data)) {
                invokeCreateHooks(vnode, insertedVnodeQueue);
            }
            insert(parentElm, vnode.elm, refElm);
            if (false) {}
        }
        else if (isTrue(vnode.isComment)) {
            vnode.elm = nodeOps.createComment(vnode.text);
            insert(parentElm, vnode.elm, refElm);
        }
        else {
            vnode.elm = nodeOps.createTextNode(vnode.text);
            insert(parentElm, vnode.elm, refElm);
        }
    }
    function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
        var i = vnode.data;
        if (isDef(i)) {
            var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
            if (isDef((i = i.hook)) && isDef((i = i.init))) {
                i(vnode, false /* hydrating */);
            }
            // after calling the init hook, if the vnode is a child component
            // it should've created a child instance and mounted it. the child
            // component also has set the placeholder vnode's elm.
            // in that case we can just return the element and be done.
            if (isDef(vnode.componentInstance)) {
                initComponent(vnode, insertedVnodeQueue);
                insert(parentElm, vnode.elm, refElm);
                if (isTrue(isReactivated)) {
                    reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
                }
                return true;
            }
        }
    }
    function initComponent(vnode, insertedVnodeQueue) {
        if (isDef(vnode.data.pendingInsert)) {
            insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
            vnode.data.pendingInsert = null;
        }
        vnode.elm = vnode.componentInstance.$el;
        if (isPatchable(vnode)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
            setScope(vnode);
        }
        else {
            // empty component root.
            // skip all element-related modules except for ref (#3455)
            registerRef(vnode);
            // make sure to invoke the insert hook
            insertedVnodeQueue.push(vnode);
        }
    }
    function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
        var i;
        // hack for #4339: a reactivated component with inner transition
        // does not trigger because the inner node's created hooks are not called
        // again. It's not ideal to involve module-specific logic in here but
        // there doesn't seem to be a better way to do it.
        var innerNode = vnode;
        while (innerNode.componentInstance) {
            innerNode = innerNode.componentInstance._vnode;
            if (isDef((i = innerNode.data)) && isDef((i = i.transition))) {
                for (i = 0; i < cbs.activate.length; ++i) {
                    cbs.activate[i](emptyNode, innerNode);
                }
                insertedVnodeQueue.push(innerNode);
                break;
            }
        }
        // unlike a newly created component,
        // a reactivated keep-alive component doesn't insert itself
        insert(parentElm, vnode.elm, refElm);
    }
    function insert(parent, elm, ref) {
        if (isDef(parent)) {
            if (isDef(ref)) {
                if (nodeOps.parentNode(ref) === parent) {
                    nodeOps.insertBefore(parent, elm, ref);
                }
            }
            else {
                nodeOps.appendChild(parent, elm);
            }
        }
    }
    function createChildren(vnode, children, insertedVnodeQueue) {
        if (isArray(children)) {
            if (false) {}
            for (var i_1 = 0; i_1 < children.length; ++i_1) {
                createElm(children[i_1], insertedVnodeQueue, vnode.elm, null, true, children, i_1);
            }
        }
        else if (isPrimitive(vnode.text)) {
            nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
        }
    }
    function isPatchable(vnode) {
        while (vnode.componentInstance) {
            vnode = vnode.componentInstance._vnode;
        }
        return isDef(vnode.tag);
    }
    function invokeCreateHooks(vnode, insertedVnodeQueue) {
        for (var i_2 = 0; i_2 < cbs.create.length; ++i_2) {
            cbs.create[i_2](emptyNode, vnode);
        }
        i = vnode.data.hook; // Reuse variable
        if (isDef(i)) {
            if (isDef(i.create))
                i.create(emptyNode, vnode);
            if (isDef(i.insert))
                insertedVnodeQueue.push(vnode);
        }
    }
    // set scope id attribute for scoped CSS.
    // this is implemented as a special case to avoid the overhead
    // of going through the normal attribute patching process.
    function setScope(vnode) {
        var i;
        if (isDef((i = vnode.fnScopeId))) {
            nodeOps.setStyleScope(vnode.elm, i);
        }
        else {
            var ancestor = vnode;
            while (ancestor) {
                if (isDef((i = ancestor.context)) && isDef((i = i.$options._scopeId))) {
                    nodeOps.setStyleScope(vnode.elm, i);
                }
                ancestor = ancestor.parent;
            }
        }
        // for slot content they should also get the scopeId from the host instance.
        if (isDef((i = activeInstance)) &&
            i !== vnode.context &&
            i !== vnode.fnContext &&
            isDef((i = i.$options._scopeId))) {
            nodeOps.setStyleScope(vnode.elm, i);
        }
    }
    function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
        }
    }
    function invokeDestroyHook(vnode) {
        var i, j;
        var data = vnode.data;
        if (isDef(data)) {
            if (isDef((i = data.hook)) && isDef((i = i.destroy)))
                i(vnode);
            for (i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
        }
        if (isDef((i = vnode.children))) {
            for (j = 0; j < vnode.children.length; ++j) {
                invokeDestroyHook(vnode.children[j]);
            }
        }
    }
    function removeVnodes(vnodes, startIdx, endIdx) {
        for (; startIdx <= endIdx; ++startIdx) {
            var ch = vnodes[startIdx];
            if (isDef(ch)) {
                if (isDef(ch.tag)) {
                    removeAndInvokeRemoveHook(ch);
                    invokeDestroyHook(ch);
                }
                else {
                    // Text node
                    removeNode(ch.elm);
                }
            }
        }
    }
    function removeAndInvokeRemoveHook(vnode, rm) {
        if (isDef(rm) || isDef(vnode.data)) {
            var i_3;
            var listeners = cbs.remove.length + 1;
            if (isDef(rm)) {
                // we have a recursively passed down rm callback
                // increase the listeners count
                rm.listeners += listeners;
            }
            else {
                // directly removing
                rm = createRmCb(vnode.elm, listeners);
            }
            // recursively invoke hooks on child component root node
            if (isDef((i_3 = vnode.componentInstance)) &&
                isDef((i_3 = i_3._vnode)) &&
                isDef(i_3.data)) {
                removeAndInvokeRemoveHook(i_3, rm);
            }
            for (i_3 = 0; i_3 < cbs.remove.length; ++i_3) {
                cbs.remove[i_3](vnode, rm);
            }
            if (isDef((i_3 = vnode.data.hook)) && isDef((i_3 = i_3.remove))) {
                i_3(vnode, rm);
            }
            else {
                rm();
            }
        }
        else {
            removeNode(vnode.elm);
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
        var oldStartIdx = 0;
        var newStartIdx = 0;
        var oldEndIdx = oldCh.length - 1;
        var oldStartVnode = oldCh[0];
        var oldEndVnode = oldCh[oldEndIdx];
        var newEndIdx = newCh.length - 1;
        var newStartVnode = newCh[0];
        var newEndVnode = newCh[newEndIdx];
        var oldKeyToIdx, idxInOld, vnodeToMove, refElm;
        // removeOnly is a special flag used only by <transition-group>
        // to ensure removed elements stay in correct relative positions
        // during leaving transitions
        var canMove = !removeOnly;
        if (false) {}
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (isUndef(oldStartVnode)) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
            }
            else if (isUndef(oldEndVnode)) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                // Vnode moved right
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
                canMove &&
                    nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                // Vnode moved left
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                canMove &&
                    nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (isUndef(oldKeyToIdx))
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                idxInOld = isDef(newStartVnode.key)
                    ? oldKeyToIdx[newStartVnode.key]
                    : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
                if (isUndef(idxInOld)) {
                    // New element
                    createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                }
                else {
                    vnodeToMove = oldCh[idxInOld];
                    if (sameVnode(vnodeToMove, newStartVnode)) {
                        patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                        oldCh[idxInOld] = undefined;
                        canMove &&
                            nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
                    }
                    else {
                        // same key but different element. treat as new element
                        createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                    }
                }
                newStartVnode = newCh[++newStartIdx];
            }
        }
        if (oldStartIdx > oldEndIdx) {
            refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
            addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
        }
        else if (newStartIdx > newEndIdx) {
            removeVnodes(oldCh, oldStartIdx, oldEndIdx);
        }
    }
    function checkDuplicateKeys(children) {
        var seenKeys = {};
        for (var i_4 = 0; i_4 < children.length; i_4++) {
            var vnode = children[i_4];
            var key = vnode.key;
            if (isDef(key)) {
                if (seenKeys[key]) {
                    warn("Duplicate keys detected: '".concat(key, "'. This may cause an update error."), vnode.context);
                }
                else {
                    seenKeys[key] = true;
                }
            }
        }
    }
    function findIdxInOld(node, oldCh, start, end) {
        for (var i_5 = start; i_5 < end; i_5++) {
            var c = oldCh[i_5];
            if (isDef(c) && sameVnode(node, c))
                return i_5;
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue, ownerArray, index, removeOnly) {
        if (oldVnode === vnode) {
            return;
        }
        if (isDef(vnode.elm) && isDef(ownerArray)) {
            // clone reused vnode
            vnode = ownerArray[index] = cloneVNode(vnode);
        }
        var elm = (vnode.elm = oldVnode.elm);
        if (isTrue(oldVnode.isAsyncPlaceholder)) {
            if (isDef(vnode.asyncFactory.resolved)) {
                hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
            }
            else {
                vnode.isAsyncPlaceholder = true;
            }
            return;
        }
        // reuse element for static trees.
        // note we only do this if the vnode is cloned -
        // if the new node is not cloned it means the render functions have been
        // reset by the hot-reload-api and we need to do a proper re-render.
        if (isTrue(vnode.isStatic) &&
            isTrue(oldVnode.isStatic) &&
            vnode.key === oldVnode.key &&
            (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
            vnode.componentInstance = oldVnode.componentInstance;
            return;
        }
        var i;
        var data = vnode.data;
        if (isDef(data) && isDef((i = data.hook)) && isDef((i = i.prepatch))) {
            i(oldVnode, vnode);
        }
        var oldCh = oldVnode.children;
        var ch = vnode.children;
        if (isDef(data) && isPatchable(vnode)) {
            for (i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            if (isDef((i = data.hook)) && isDef((i = i.update)))
                i(oldVnode, vnode);
        }
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
            }
            else if (isDef(ch)) {
                if (false) {}
                if (isDef(oldVnode.text))
                    nodeOps.setTextContent(elm, '');
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                nodeOps.setTextContent(elm, '');
            }
        }
        else if (oldVnode.text !== vnode.text) {
            nodeOps.setTextContent(elm, vnode.text);
        }
        if (isDef(data)) {
            if (isDef((i = data.hook)) && isDef((i = i.postpatch)))
                i(oldVnode, vnode);
        }
    }
    function invokeInsertHook(vnode, queue, initial) {
        // delay insert hooks for component root nodes, invoke them after the
        // element is really inserted
        if (isTrue(initial) && isDef(vnode.parent)) {
            vnode.parent.data.pendingInsert = queue;
        }
        else {
            for (var i_6 = 0; i_6 < queue.length; ++i_6) {
                queue[i_6].data.hook.insert(queue[i_6]);
            }
        }
    }
    var hydrationBailed = false;
    // list of modules that can skip create hook during hydration because they
    // are already rendered on the client or has no need for initialization
    // Note: style is excluded because it relies on initial clone for future
    // deep updates (#7063).
    var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');
    // Note: this is a browser-only function so we can assume elms are DOM nodes.
    function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
        var i;
        var tag = vnode.tag, data = vnode.data, children = vnode.children;
        inVPre = inVPre || (data && data.pre);
        vnode.elm = elm;
        if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
            vnode.isAsyncPlaceholder = true;
            return true;
        }
        // assert node match
        if (false) {}
        if (isDef(data)) {
            if (isDef((i = data.hook)) && isDef((i = i.init)))
                i(vnode, true /* hydrating */);
            if (isDef((i = vnode.componentInstance))) {
                // child component. it should have hydrated its own tree.
                initComponent(vnode, insertedVnodeQueue);
                return true;
            }
        }
        if (isDef(tag)) {
            if (isDef(children)) {
                // empty element, allow client to pick up and populate children
                if (!elm.hasChildNodes()) {
                    createChildren(vnode, children, insertedVnodeQueue);
                }
                else {
                    // v-html and domProps: innerHTML
                    if (isDef((i = data)) &&
                        isDef((i = i.domProps)) &&
                        isDef((i = i.innerHTML))) {
                        if (i !== elm.innerHTML) {
                            /* istanbul ignore if */
                            if (false) {}
                            return false;
                        }
                    }
                    else {
                        // iterate and compare children lists
                        var childrenMatch = true;
                        var childNode = elm.firstChild;
                        for (var i_7 = 0; i_7 < children.length; i_7++) {
                            if (!childNode ||
                                !hydrate(childNode, children[i_7], insertedVnodeQueue, inVPre)) {
                                childrenMatch = false;
                                break;
                            }
                            childNode = childNode.nextSibling;
                        }
                        // if childNode is not null, it means the actual childNodes list is
                        // longer than the virtual children list.
                        if (!childrenMatch || childNode) {
                            /* istanbul ignore if */
                            if (false) {}
                            return false;
                        }
                    }
                }
            }
            if (isDef(data)) {
                var fullInvoke = false;
                for (var key in data) {
                    if (!isRenderedModule(key)) {
                        fullInvoke = true;
                        invokeCreateHooks(vnode, insertedVnodeQueue);
                        break;
                    }
                }
                if (!fullInvoke && data['class']) {
                    // ensure collecting deps for deep class bindings for future updates
                    traverse(data['class']);
                }
            }
        }
        else if (elm.data !== vnode.text) {
            elm.data = vnode.text;
        }
        return true;
    }
    function assertNodeMatch(node, vnode, inVPre) {
        if (isDef(vnode.tag)) {
            return (vnode.tag.indexOf('vue-component') === 0 ||
                (!isUnknownElement(vnode, inVPre) &&
                    vnode.tag.toLowerCase() ===
                        (node.tagName && node.tagName.toLowerCase())));
        }
        else {
            return node.nodeType === (vnode.isComment ? 8 : 3);
        }
    }
    return function patch(oldVnode, vnode, hydrating, removeOnly) {
        if (isUndef(vnode)) {
            if (isDef(oldVnode))
                invokeDestroyHook(oldVnode);
            return;
        }
        var isInitialPatch = false;
        var insertedVnodeQueue = [];
        if (isUndef(oldVnode)) {
            // empty mount (likely as component), create new root element
            isInitialPatch = true;
            createElm(vnode, insertedVnodeQueue);
        }
        else {
            var isRealElement = isDef(oldVnode.nodeType);
            if (!isRealElement && sameVnode(oldVnode, vnode)) {
                // patch existing root node
                patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
            }
            else {
                if (isRealElement) {
                    // mounting to a real element
                    // check if this is server-rendered content and if we can perform
                    // a successful hydration.
                    if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
                        oldVnode.removeAttribute(SSR_ATTR);
                        hydrating = true;
                    }
                    if (isTrue(hydrating)) {
                        if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                            invokeInsertHook(vnode, insertedVnodeQueue, true);
                            return oldVnode;
                        }
                        else if (false) {}
                    }
                    // either not server-rendered, or hydration failed.
                    // create an empty node and replace it
                    oldVnode = emptyNodeAt(oldVnode);
                }
                // replacing existing element
                var oldElm = oldVnode.elm;
                var parentElm = nodeOps.parentNode(oldElm);
                // create new node
                createElm(vnode, insertedVnodeQueue, 
                // extremely rare edge case: do not insert if old element is in a
                // leaving transition. Only happens when combining transition +
                // keep-alive + HOCs. (#4590)
                oldElm._leaveCb ? null : parentElm, nodeOps.nextSibling(oldElm));
                // update parent placeholder node element, recursively
                if (isDef(vnode.parent)) {
                    var ancestor = vnode.parent;
                    var patchable = isPatchable(vnode);
                    while (ancestor) {
                        for (var i_8 = 0; i_8 < cbs.destroy.length; ++i_8) {
                            cbs.destroy[i_8](ancestor);
                        }
                        ancestor.elm = vnode.elm;
                        if (patchable) {
                            for (var i_9 = 0; i_9 < cbs.create.length; ++i_9) {
                                cbs.create[i_9](emptyNode, ancestor);
                            }
                            // #6513
                            // invoke insert hooks that may have been merged by create hooks.
                            // e.g. for directives that uses the "inserted" hook.
                            var insert_1 = ancestor.data.hook.insert;
                            if (insert_1.merged) {
                                // start at index 1 to avoid re-invoking component mounted hook
                                // clone insert hooks to avoid being mutated during iteration.
                                // e.g. for customed directives under transition group.
                                var cloned = insert_1.fns.slice(1);
                                for (var i_10 = 0; i_10 < cloned.length; i_10++) {
                                    cloned[i_10]();
                                }
                            }
                        }
                        else {
                            registerRef(ancestor);
                        }
                        ancestor = ancestor.parent;
                    }
                }
                // destroy old node
                if (isDef(parentElm)) {
                    removeVnodes([oldVnode], 0, 0);
                }
                else if (isDef(oldVnode.tag)) {
                    invokeDestroyHook(oldVnode);
                }
            }
        }
        invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
        return vnode.elm;
    };
}

var directives = {
    create: updateDirectives,
    update: updateDirectives,
    destroy: function unbindDirectives(vnode) {
        // @ts-expect-error emptyNode is not VNodeWithData
        updateDirectives(vnode, emptyNode);
    }
};
function updateDirectives(oldVnode, vnode) {
    if (oldVnode.data.directives || vnode.data.directives) {
        _update(oldVnode, vnode);
    }
}
function _update(oldVnode, vnode) {
    var isCreate = oldVnode === emptyNode;
    var isDestroy = vnode === emptyNode;
    var oldDirs = normalizeDirectives(oldVnode.data.directives, oldVnode.context);
    var newDirs = normalizeDirectives(vnode.data.directives, vnode.context);
    var dirsWithInsert = [];
    var dirsWithPostpatch = [];
    var key, oldDir, dir;
    for (key in newDirs) {
        oldDir = oldDirs[key];
        dir = newDirs[key];
        if (!oldDir) {
            // new directive, bind
            callHook(dir, 'bind', vnode, oldVnode);
            if (dir.def && dir.def.inserted) {
                dirsWithInsert.push(dir);
            }
        }
        else {
            // existing directive, update
            dir.oldValue = oldDir.value;
            dir.oldArg = oldDir.arg;
            callHook(dir, 'update', vnode, oldVnode);
            if (dir.def && dir.def.componentUpdated) {
                dirsWithPostpatch.push(dir);
            }
        }
    }
    if (dirsWithInsert.length) {
        var callInsert = function () {
            for (var i = 0; i < dirsWithInsert.length; i++) {
                callHook(dirsWithInsert[i], 'inserted', vnode, oldVnode);
            }
        };
        if (isCreate) {
            mergeVNodeHook(vnode, 'insert', callInsert);
        }
        else {
            callInsert();
        }
    }
    if (dirsWithPostpatch.length) {
        mergeVNodeHook(vnode, 'postpatch', function () {
            for (var i = 0; i < dirsWithPostpatch.length; i++) {
                callHook(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
            }
        });
    }
    if (!isCreate) {
        for (key in oldDirs) {
            if (!newDirs[key]) {
                // no longer present, unbind
                callHook(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
            }
        }
    }
}
var emptyModifiers = Object.create(null);
function normalizeDirectives(dirs, vm) {
    var res = Object.create(null);
    if (!dirs) {
        // $flow-disable-line
        return res;
    }
    var i, dir;
    for (i = 0; i < dirs.length; i++) {
        dir = dirs[i];
        if (!dir.modifiers) {
            // $flow-disable-line
            dir.modifiers = emptyModifiers;
        }
        res[getRawDirName(dir)] = dir;
        if (vm._setupState && vm._setupState.__sfc) {
            var setupDef = dir.def || resolveAsset(vm, '_setupState', 'v-' + dir.name);
            if (typeof setupDef === 'function') {
                dir.def = {
                    bind: setupDef,
                    update: setupDef,
                };
            }
            else {
                dir.def = setupDef;
            }
        }
        dir.def = dir.def || resolveAsset(vm.$options, 'directives', dir.name, true);
    }
    // $flow-disable-line
    return res;
}
function getRawDirName(dir) {
    return (dir.rawName || "".concat(dir.name, ".").concat(Object.keys(dir.modifiers || {}).join('.')));
}
function callHook(dir, hook, vnode, oldVnode, isDestroy) {
    var fn = dir.def && dir.def[hook];
    if (fn) {
        try {
            fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
        }
        catch (e) {
            handleError(e, vnode.context, "directive ".concat(dir.name, " ").concat(hook, " hook"));
        }
    }
}

var baseModules = [ref, directives];

function updateAttrs(oldVnode, vnode) {
    var opts = vnode.componentOptions;
    if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
        return;
    }
    if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
        return;
    }
    var key, cur, old;
    var elm = vnode.elm;
    var oldAttrs = oldVnode.data.attrs || {};
    var attrs = vnode.data.attrs || {};
    // clone observed objects, as the user probably wants to mutate it
    if (isDef(attrs.__ob__) || isTrue(attrs._v_attr_proxy)) {
        attrs = vnode.data.attrs = extend({}, attrs);
    }
    for (key in attrs) {
        cur = attrs[key];
        old = oldAttrs[key];
        if (old !== cur) {
            setAttr(elm, key, cur, vnode.data.pre);
        }
    }
    // #4391: in IE9, setting type can reset value for input[type=radio]
    // #6666: IE/Edge forces progress value down to 1 before setting a max
    /* istanbul ignore if */
    if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
        setAttr(elm, 'value', attrs.value);
    }
    for (key in oldAttrs) {
        if (isUndef(attrs[key])) {
            if (isXlink(key)) {
                elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
            }
            else if (!isEnumeratedAttr(key)) {
                elm.removeAttribute(key);
            }
        }
    }
}
function setAttr(el, key, value, isInPre) {
    if (isInPre || el.tagName.indexOf('-') > -1) {
        baseSetAttr(el, key, value);
    }
    else if (isBooleanAttr(key)) {
        // set attribute for blank value
        // e.g. <option disabled>Select one</option>
        if (isFalsyAttrValue(value)) {
            el.removeAttribute(key);
        }
        else {
            // technically allowfullscreen is a boolean attribute for <iframe>,
            // but Flash expects a value of "true" when used on <embed> tag
            value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;
            el.setAttribute(key, value);
        }
    }
    else if (isEnumeratedAttr(key)) {
        el.setAttribute(key, convertEnumeratedValue(key, value));
    }
    else if (isXlink(key)) {
        if (isFalsyAttrValue(value)) {
            el.removeAttributeNS(xlinkNS, getXlinkProp(key));
        }
        else {
            el.setAttributeNS(xlinkNS, key, value);
        }
    }
    else {
        baseSetAttr(el, key, value);
    }
}
function baseSetAttr(el, key, value) {
    if (isFalsyAttrValue(value)) {
        el.removeAttribute(key);
    }
    else {
        // #7138: IE10 & 11 fires input event when setting placeholder on
        // <textarea>... block the first input event and remove the blocker
        // immediately.
        /* istanbul ignore if */
        if (isIE &&
            !isIE9 &&
            el.tagName === 'TEXTAREA' &&
            key === 'placeholder' &&
            value !== '' &&
            !el.__ieph) {
            var blocker_1 = function (e) {
                e.stopImmediatePropagation();
                el.removeEventListener('input', blocker_1);
            };
            el.addEventListener('input', blocker_1);
            // $flow-disable-line
            el.__ieph = true; /* IE placeholder patched */
        }
        el.setAttribute(key, value);
    }
}
var attrs = {
    create: updateAttrs,
    update: updateAttrs
};

function updateClass(oldVnode, vnode) {
    var el = vnode.elm;
    var data = vnode.data;
    var oldData = oldVnode.data;
    if (isUndef(data.staticClass) &&
        isUndef(data.class) &&
        (isUndef(oldData) ||
            (isUndef(oldData.staticClass) && isUndef(oldData.class)))) {
        return;
    }
    var cls = genClassForVnode(vnode);
    // handle transition classes
    var transitionClass = el._transitionClasses;
    if (isDef(transitionClass)) {
        cls = concat(cls, stringifyClass(transitionClass));
    }
    // set the class
    if (cls !== el._prevClass) {
        el.setAttribute('class', cls);
        el._prevClass = cls;
    }
}
var klass = {
    create: updateClass,
    update: updateClass
};

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents(on) {
    /* istanbul ignore if */
    if (isDef(on[RANGE_TOKEN])) {
        // IE input[type=range] only supports `change` event
        var event_1 = isIE ? 'change' : 'input';
        on[event_1] = [].concat(on[RANGE_TOKEN], on[event_1] || []);
        delete on[RANGE_TOKEN];
    }
    // This was originally intended to fix #4521 but no longer necessary
    // after 2.5. Keeping it for backwards compat with generated code from < 2.4
    /* istanbul ignore if */
    if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
        on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
        delete on[CHECKBOX_RADIO_TOKEN];
    }
}
var target;
function createOnceHandler(event, handler, capture) {
    var _target = target; // save current target element in closure
    return function onceHandler() {
        var res = handler.apply(null, arguments);
        if (res !== null) {
            remove(event, onceHandler, capture, _target);
        }
    };
}
// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.
var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);
function add(name, handler, capture, passive) {
    // async edge case #6566: inner click event triggers patch, event handler
    // attached to outer element during patch, and triggered again. This
    // happens because browsers fire microtask ticks between event propagation.
    // the solution is simple: we save the timestamp when a handler is attached,
    // and the handler would only fire if the event passed to it was fired
    // AFTER it was attached.
    if (useMicrotaskFix) {
        var attachedTimestamp_1 = currentFlushTimestamp;
        var original_1 = handler;
        //@ts-expect-error
        handler = original_1._wrapper = function (e) {
            if (
            // no bubbling, should always fire.
            // this is just a safety net in case event.timeStamp is unreliable in
            // certain weird environments...
            e.target === e.currentTarget ||
                // event is fired after handler attachment
                e.timeStamp >= attachedTimestamp_1 ||
                // bail for environments that have buggy event.timeStamp implementations
                // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
                // #9681 QtWebEngine event.timeStamp is negative value
                e.timeStamp <= 0 ||
                // #9448 bail if event is fired in another document in a multi-page
                // electron/nw.js app, since event.timeStamp will be using a different
                // starting reference
                e.target.ownerDocument !== document) {
                return original_1.apply(this, arguments);
            }
        };
    }
    target.addEventListener(name, handler, supportsPassive ? { capture: capture, passive: passive } : capture);
}
function remove(name, handler, capture, _target) {
    (_target || target).removeEventListener(name, 
    //@ts-expect-error
    handler._wrapper || handler, capture);
}
function updateDOMListeners(oldVnode, vnode) {
    if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
        return;
    }
    var on = vnode.data.on || {};
    var oldOn = oldVnode.data.on || {};
    // vnode is empty when removing all listeners,
    // and use old vnode dom element
    target = vnode.elm || oldVnode.elm;
    normalizeEvents(on);
    updateListeners(on, oldOn, add, remove, createOnceHandler, vnode.context);
    target = undefined;
}
var events = {
    create: updateDOMListeners,
    update: updateDOMListeners,
    // @ts-expect-error emptyNode has actually data
    destroy: function (vnode) { return updateDOMListeners(vnode, emptyNode); }
};

var svgContainer;
function updateDOMProps(oldVnode, vnode) {
    if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
        return;
    }
    var key, cur;
    var elm = vnode.elm;
    var oldProps = oldVnode.data.domProps || {};
    var props = vnode.data.domProps || {};
    // clone observed objects, as the user probably wants to mutate it
    if (isDef(props.__ob__) || isTrue(props._v_attr_proxy)) {
        props = vnode.data.domProps = extend({}, props);
    }
    for (key in oldProps) {
        if (!(key in props)) {
            elm[key] = '';
        }
    }
    for (key in props) {
        cur = props[key];
        // ignore children if the node has textContent or innerHTML,
        // as these will throw away existing DOM nodes and cause removal errors
        // on subsequent patches (#3360)
        if (key === 'textContent' || key === 'innerHTML') {
            if (vnode.children)
                vnode.children.length = 0;
            if (cur === oldProps[key])
                continue;
            // #6601 work around Chrome version <= 55 bug where single textNode
            // replaced by innerHTML/textContent retains its parentNode property
            if (elm.childNodes.length === 1) {
                elm.removeChild(elm.childNodes[0]);
            }
        }
        if (key === 'value' && elm.tagName !== 'PROGRESS') {
            // store value as _value as well since
            // non-string values will be stringified
            elm._value = cur;
            // avoid resetting cursor position when value is the same
            var strCur = isUndef(cur) ? '' : String(cur);
            if (shouldUpdateValue(elm, strCur)) {
                elm.value = strCur;
            }
        }
        else if (key === 'innerHTML' &&
            isSVG(elm.tagName) &&
            isUndef(elm.innerHTML)) {
            // IE doesn't support innerHTML for SVG elements
            svgContainer = svgContainer || document.createElement('div');
            svgContainer.innerHTML = "<svg>".concat(cur, "</svg>");
            var svg = svgContainer.firstChild;
            while (elm.firstChild) {
                elm.removeChild(elm.firstChild);
            }
            while (svg.firstChild) {
                elm.appendChild(svg.firstChild);
            }
        }
        else if (
        // skip the update if old and new VDOM state is the same.
        // `value` is handled separately because the DOM value may be temporarily
        // out of sync with VDOM state due to focus, composition and modifiers.
        // This  #4521 by skipping the unnecessary `checked` update.
        cur !== oldProps[key]) {
            // some property updates can throw
            // e.g. `value` on <progress> w/ non-finite value
            try {
                elm[key] = cur;
            }
            catch (e) { }
        }
    }
}
function shouldUpdateValue(elm, checkVal) {
    return (
    //@ts-expect-error
    !elm.composing &&
        (elm.tagName === 'OPTION' ||
            isNotInFocusAndDirty(elm, checkVal) ||
            isDirtyWithModifiers(elm, checkVal)));
}
function isNotInFocusAndDirty(elm, checkVal) {
    // return true when textbox (.number and .trim) loses focus and its value is
    // not equal to the updated value
    var notInFocus = true;
    // #6157
    // work around IE bug when accessing document.activeElement in an iframe
    try {
        notInFocus = document.activeElement !== elm;
    }
    catch (e) { }
    return notInFocus && elm.value !== checkVal;
}
function isDirtyWithModifiers(elm, newVal) {
    var value = elm.value;
    var modifiers = elm._vModifiers; // injected by v-model runtime
    if (isDef(modifiers)) {
        if (modifiers.number) {
            return toNumber(value) !== toNumber(newVal);
        }
        if (modifiers.trim) {
            return value.trim() !== newVal.trim();
        }
    }
    return value !== newVal;
}
var domProps = {
    create: updateDOMProps,
    update: updateDOMProps
};

var parseStyleText = cached(function (cssText) {
    var res = {};
    var listDelimiter = /;(?![^(]*\))/g;
    var propertyDelimiter = /:(.+)/;
    cssText.split(listDelimiter).forEach(function (item) {
        if (item) {
            var tmp = item.split(propertyDelimiter);
            tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
        }
    });
    return res;
});
// merge static and dynamic style data on the same vnode
function normalizeStyleData(data) {
    var style = normalizeStyleBinding(data.style);
    // static style is pre-processed into an object during compilation
    // and is always a fresh object, so it's safe to merge into it
    return data.staticStyle ? extend(data.staticStyle, style) : style;
}
// normalize possible array / string values into Object
function normalizeStyleBinding(bindingStyle) {
    if (Array.isArray(bindingStyle)) {
        return toObject(bindingStyle);
    }
    if (typeof bindingStyle === 'string') {
        return parseStyleText(bindingStyle);
    }
    return bindingStyle;
}
/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle(vnode, checkChild) {
    var res = {};
    var styleData;
    if (checkChild) {
        var childNode = vnode;
        while (childNode.componentInstance) {
            childNode = childNode.componentInstance._vnode;
            if (childNode &&
                childNode.data &&
                (styleData = normalizeStyleData(childNode.data))) {
                extend(res, styleData);
            }
        }
    }
    if ((styleData = normalizeStyleData(vnode.data))) {
        extend(res, styleData);
    }
    var parentNode = vnode;
    // @ts-expect-error parentNode.parent not VNodeWithData
    while ((parentNode = parentNode.parent)) {
        if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
            extend(res, styleData);
        }
    }
    return res;
}

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
    /* istanbul ignore if */
    if (cssVarRE.test(name)) {
        el.style.setProperty(name, val);
    }
    else if (importantRE.test(val)) {
        el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
    }
    else {
        var normalizedName = normalize(name);
        if (Array.isArray(val)) {
            // Support values array created by autoprefixer, e.g.
            // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
            // Set them one by one, and the browser will only set those it can recognize
            for (var i = 0, len = val.length; i < len; i++) {
                el.style[normalizedName] = val[i];
            }
        }
        else {
            el.style[normalizedName] = val;
        }
    }
};
var vendorNames = ['Webkit', 'Moz', 'ms'];
var emptyStyle;
var normalize = cached(function (prop) {
    emptyStyle = emptyStyle || document.createElement('div').style;
    prop = camelize(prop);
    if (prop !== 'filter' && prop in emptyStyle) {
        return prop;
    }
    var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
    for (var i = 0; i < vendorNames.length; i++) {
        var name_1 = vendorNames[i] + capName;
        if (name_1 in emptyStyle) {
            return name_1;
        }
    }
});
function updateStyle(oldVnode, vnode) {
    var data = vnode.data;
    var oldData = oldVnode.data;
    if (isUndef(data.staticStyle) &&
        isUndef(data.style) &&
        isUndef(oldData.staticStyle) &&
        isUndef(oldData.style)) {
        return;
    }
    var cur, name;
    var el = vnode.elm;
    var oldStaticStyle = oldData.staticStyle;
    var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};
    // if static style exists, stylebinding already merged into it when doing normalizeStyleData
    var oldStyle = oldStaticStyle || oldStyleBinding;
    var style = normalizeStyleBinding(vnode.data.style) || {};
    // store normalized style under a different key for next diff
    // make sure to clone it if it's reactive, since the user likely wants
    // to mutate it.
    vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;
    var newStyle = getStyle(vnode, true);
    for (name in oldStyle) {
        if (isUndef(newStyle[name])) {
            setProp(el, name, '');
        }
    }
    for (name in newStyle) {
        cur = newStyle[name];
        // ie9 setting to null has no effect, must use empty string
        setProp(el, name, cur == null ? '' : cur);
    }
}
var style = {
    create: updateStyle,
    update: updateStyle
};

var whitespaceRE = /\s+/;
/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass(el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
        return;
    }
    /* istanbul ignore else */
    if (el.classList) {
        if (cls.indexOf(' ') > -1) {
            cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
        }
        else {
            el.classList.add(cls);
        }
    }
    else {
        var cur = " ".concat(el.getAttribute('class') || '', " ");
        if (cur.indexOf(' ' + cls + ' ') < 0) {
            el.setAttribute('class', (cur + cls).trim());
        }
    }
}
/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass(el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
        return;
    }
    /* istanbul ignore else */
    if (el.classList) {
        if (cls.indexOf(' ') > -1) {
            cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
        }
        else {
            el.classList.remove(cls);
        }
        if (!el.classList.length) {
            el.removeAttribute('class');
        }
    }
    else {
        var cur = " ".concat(el.getAttribute('class') || '', " ");
        var tar = ' ' + cls + ' ';
        while (cur.indexOf(tar) >= 0) {
            cur = cur.replace(tar, ' ');
        }
        cur = cur.trim();
        if (cur) {
            el.setAttribute('class', cur);
        }
        else {
            el.removeAttribute('class');
        }
    }
}

function resolveTransition(def) {
    if (!def) {
        return;
    }
    /* istanbul ignore else */
    if (typeof def === 'object') {
        var res = {};
        if (def.css !== false) {
            extend(res, autoCssTransition(def.name || 'v'));
        }
        extend(res, def);
        return res;
    }
    else if (typeof def === 'string') {
        return autoCssTransition(def);
    }
}
var autoCssTransition = cached(function (name) {
    return {
        enterClass: "".concat(name, "-enter"),
        enterToClass: "".concat(name, "-enter-to"),
        enterActiveClass: "".concat(name, "-enter-active"),
        leaveClass: "".concat(name, "-leave"),
        leaveToClass: "".concat(name, "-leave-to"),
        leaveActiveClass: "".concat(name, "-leave-active")
    };
});
var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';
// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
    /* istanbul ignore if */
    if (window.ontransitionend === undefined &&
        window.onwebkittransitionend !== undefined) {
        transitionProp = 'WebkitTransition';
        transitionEndEvent = 'webkitTransitionEnd';
    }
    if (window.onanimationend === undefined &&
        window.onwebkitanimationend !== undefined) {
        animationProp = 'WebkitAnimation';
        animationEndEvent = 'webkitAnimationEnd';
    }
}
// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
    ? window.requestAnimationFrame
        ? window.requestAnimationFrame.bind(window)
        : setTimeout
    : /* istanbul ignore next */ function (/* istanbul ignore next */ fn) { return fn(); };
function nextFrame(fn) {
    raf(function () {
        // @ts-expect-error
        raf(fn);
    });
}
function addTransitionClass(el, cls) {
    var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
    if (transitionClasses.indexOf(cls) < 0) {
        transitionClasses.push(cls);
        addClass(el, cls);
    }
}
function removeTransitionClass(el, cls) {
    if (el._transitionClasses) {
        remove$2(el._transitionClasses, cls);
    }
    removeClass(el, cls);
}
function whenTransitionEnds(el, expectedType, cb) {
    var _a = getTransitionInfo(el, expectedType), type = _a.type, timeout = _a.timeout, propCount = _a.propCount;
    if (!type)
        return cb();
    var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
    var ended = 0;
    var end = function () {
        el.removeEventListener(event, onEnd);
        cb();
    };
    var onEnd = function (e) {
        if (e.target === el) {
            if (++ended >= propCount) {
                end();
            }
        }
    };
    setTimeout(function () {
        if (ended < propCount) {
            end();
        }
    }, timeout + 1);
    el.addEventListener(event, onEnd);
}
var transformRE = /\b(transform|all)(,|$)/;
function getTransitionInfo(el, expectedType) {
    var styles = window.getComputedStyle(el);
    // JSDOM may return undefined for transition properties
    var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
    var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
    var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
    var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
    var animationTimeout = getTimeout(animationDelays, animationDurations);
    var type;
    var timeout = 0;
    var propCount = 0;
    /* istanbul ignore if */
    if (expectedType === TRANSITION) {
        if (transitionTimeout > 0) {
            type = TRANSITION;
            timeout = transitionTimeout;
            propCount = transitionDurations.length;
        }
    }
    else if (expectedType === ANIMATION) {
        if (animationTimeout > 0) {
            type = ANIMATION;
            timeout = animationTimeout;
            propCount = animationDurations.length;
        }
    }
    else {
        timeout = Math.max(transitionTimeout, animationTimeout);
        type =
            timeout > 0
                ? transitionTimeout > animationTimeout
                    ? TRANSITION
                    : ANIMATION
                : null;
        propCount = type
            ? type === TRANSITION
                ? transitionDurations.length
                : animationDurations.length
            : 0;
    }
    var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
    return {
        type: type,
        timeout: timeout,
        propCount: propCount,
        hasTransform: hasTransform
    };
}
function getTimeout(delays, durations) {
    /* istanbul ignore next */
    while (delays.length < durations.length) {
        delays = delays.concat(delays);
    }
    return Math.max.apply(null, durations.map(function (d, i) {
        return toMs(d) + toMs(delays[i]);
    }));
}
// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors
function toMs(s) {
    return Number(s.slice(0, -1).replace(',', '.')) * 1000;
}

function enter(vnode, toggleDisplay) {
    var el = vnode.elm;
    // call leave callback now
    if (isDef(el._leaveCb)) {
        el._leaveCb.cancelled = true;
        el._leaveCb();
    }
    var data = resolveTransition(vnode.data.transition);
    if (isUndef(data)) {
        return;
    }
    /* istanbul ignore if */
    if (isDef(el._enterCb) || el.nodeType !== 1) {
        return;
    }
    var css = data.css, type = data.type, enterClass = data.enterClass, enterToClass = data.enterToClass, enterActiveClass = data.enterActiveClass, appearClass = data.appearClass, appearToClass = data.appearToClass, appearActiveClass = data.appearActiveClass, beforeEnter = data.beforeEnter, enter = data.enter, afterEnter = data.afterEnter, enterCancelled = data.enterCancelled, beforeAppear = data.beforeAppear, appear = data.appear, afterAppear = data.afterAppear, appearCancelled = data.appearCancelled, duration = data.duration;
    // activeInstance will always be the <transition> component managing this
    // transition. One edge case to check is when the <transition> is placed
    // as the root node of a child component. In that case we need to check
    // <transition>'s parent for appear check.
    var context = activeInstance;
    var transitionNode = activeInstance.$vnode;
    while (transitionNode && transitionNode.parent) {
        context = transitionNode.context;
        transitionNode = transitionNode.parent;
    }
    var isAppear = !context._isMounted || !vnode.isRootInsert;
    if (isAppear && !appear && appear !== '') {
        return;
    }
    var startClass = isAppear && appearClass ? appearClass : enterClass;
    var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
    var toClass = isAppear && appearToClass ? appearToClass : enterToClass;
    var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
    var enterHook = isAppear ? (isFunction(appear) ? appear : enter) : enter;
    var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
    var enterCancelledHook = isAppear
        ? appearCancelled || enterCancelled
        : enterCancelled;
    var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);
    if (false) {}
    var expectsCSS = css !== false && !isIE9;
    var userWantsControl = getHookArgumentsLength(enterHook);
    var cb = (el._enterCb = once(function () {
        if (expectsCSS) {
            removeTransitionClass(el, toClass);
            removeTransitionClass(el, activeClass);
        }
        // @ts-expect-error
        if (cb.cancelled) {
            if (expectsCSS) {
                removeTransitionClass(el, startClass);
            }
            enterCancelledHook && enterCancelledHook(el);
        }
        else {
            afterEnterHook && afterEnterHook(el);
        }
        el._enterCb = null;
    }));
    if (!vnode.data.show) {
        // remove pending leave element on enter by injecting an insert hook
        mergeVNodeHook(vnode, 'insert', function () {
            var parent = el.parentNode;
            var pendingNode = parent && parent._pending && parent._pending[vnode.key];
            if (pendingNode &&
                pendingNode.tag === vnode.tag &&
                pendingNode.elm._leaveCb) {
                pendingNode.elm._leaveCb();
            }
            enterHook && enterHook(el, cb);
        });
    }
    // start enter transition
    beforeEnterHook && beforeEnterHook(el);
    if (expectsCSS) {
        addTransitionClass(el, startClass);
        addTransitionClass(el, activeClass);
        nextFrame(function () {
            removeTransitionClass(el, startClass);
            // @ts-expect-error
            if (!cb.cancelled) {
                addTransitionClass(el, toClass);
                if (!userWantsControl) {
                    if (isValidDuration(explicitEnterDuration)) {
                        setTimeout(cb, explicitEnterDuration);
                    }
                    else {
                        whenTransitionEnds(el, type, cb);
                    }
                }
            }
        });
    }
    if (vnode.data.show) {
        toggleDisplay && toggleDisplay();
        enterHook && enterHook(el, cb);
    }
    if (!expectsCSS && !userWantsControl) {
        cb();
    }
}
function leave(vnode, rm) {
    var el = vnode.elm;
    // call enter callback now
    if (isDef(el._enterCb)) {
        el._enterCb.cancelled = true;
        el._enterCb();
    }
    var data = resolveTransition(vnode.data.transition);
    if (isUndef(data) || el.nodeType !== 1) {
        return rm();
    }
    /* istanbul ignore if */
    if (isDef(el._leaveCb)) {
        return;
    }
    var css = data.css, type = data.type, leaveClass = data.leaveClass, leaveToClass = data.leaveToClass, leaveActiveClass = data.leaveActiveClass, beforeLeave = data.beforeLeave, leave = data.leave, afterLeave = data.afterLeave, leaveCancelled = data.leaveCancelled, delayLeave = data.delayLeave, duration = data.duration;
    var expectsCSS = css !== false && !isIE9;
    var userWantsControl = getHookArgumentsLength(leave);
    var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);
    if (false) {}
    var cb = (el._leaveCb = once(function () {
        if (el.parentNode && el.parentNode._pending) {
            el.parentNode._pending[vnode.key] = null;
        }
        if (expectsCSS) {
            removeTransitionClass(el, leaveToClass);
            removeTransitionClass(el, leaveActiveClass);
        }
        // @ts-expect-error
        if (cb.cancelled) {
            if (expectsCSS) {
                removeTransitionClass(el, leaveClass);
            }
            leaveCancelled && leaveCancelled(el);
        }
        else {
            rm();
            afterLeave && afterLeave(el);
        }
        el._leaveCb = null;
    }));
    if (delayLeave) {
        delayLeave(performLeave);
    }
    else {
        performLeave();
    }
    function performLeave() {
        // the delayed leave may have already been cancelled
        // @ts-expect-error
        if (cb.cancelled) {
            return;
        }
        // record leaving element
        if (!vnode.data.show && el.parentNode) {
            (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] =
                vnode;
        }
        beforeLeave && beforeLeave(el);
        if (expectsCSS) {
            addTransitionClass(el, leaveClass);
            addTransitionClass(el, leaveActiveClass);
            nextFrame(function () {
                removeTransitionClass(el, leaveClass);
                // @ts-expect-error
                if (!cb.cancelled) {
                    addTransitionClass(el, leaveToClass);
                    if (!userWantsControl) {
                        if (isValidDuration(explicitLeaveDuration)) {
                            setTimeout(cb, explicitLeaveDuration);
                        }
                        else {
                            whenTransitionEnds(el, type, cb);
                        }
                    }
                }
            });
        }
        leave && leave(el, cb);
        if (!expectsCSS && !userWantsControl) {
            cb();
        }
    }
}
// only used in dev mode
function checkDuration(val, name, vnode) {
    if (typeof val !== 'number') {
        warn("<transition> explicit ".concat(name, " duration is not a valid number - ") +
            "got ".concat(JSON.stringify(val), "."), vnode.context);
    }
    else if (isNaN(val)) {
        warn("<transition> explicit ".concat(name, " duration is NaN - ") +
            'the duration expression might be incorrect.', vnode.context);
    }
}
function isValidDuration(val) {
    return typeof val === 'number' && !isNaN(val);
}
/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength(fn) {
    if (isUndef(fn)) {
        return false;
    }
    // @ts-expect-error
    var invokerFns = fn.fns;
    if (isDef(invokerFns)) {
        // invoker
        return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
    }
    else {
        // @ts-expect-error
        return (fn._length || fn.length) > 1;
    }
}
function _enter(_, vnode) {
    if (vnode.data.show !== true) {
        enter(vnode);
    }
}
var transition = inBrowser
    ? {
        create: _enter,
        activate: _enter,
        remove: function (vnode, rm) {
            /* istanbul ignore else */
            if (vnode.data.show !== true) {
                // @ts-expect-error
                leave(vnode, rm);
            }
            else {
                rm();
            }
        }
    }
    : {};

var platformModules = [attrs, klass, events, domProps, style, transition];

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);
var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */
/* istanbul ignore if */
if (isIE9) {
    // http://www.matts411.com/post/internet-explorer-9-oninput/
    document.addEventListener('selectionchange', function () {
        var el = document.activeElement;
        // @ts-expect-error
        if (el && el.vmodel) {
            trigger(el, 'input');
        }
    });
}
var directive = {
    inserted: function (el, binding, vnode, oldVnode) {
        if (vnode.tag === 'select') {
            // #6903
            if (oldVnode.elm && !oldVnode.elm._vOptions) {
                mergeVNodeHook(vnode, 'postpatch', function () {
                    directive.componentUpdated(el, binding, vnode);
                });
            }
            else {
                setSelected(el, binding, vnode.context);
            }
            el._vOptions = [].map.call(el.options, getValue);
        }
        else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
            el._vModifiers = binding.modifiers;
            if (!binding.modifiers.lazy) {
                el.addEventListener('compositionstart', onCompositionStart);
                el.addEventListener('compositionend', onCompositionEnd);
                // Safari < 10.2 & UIWebView doesn't fire compositionend when
                // switching focus before confirming composition choice
                // this also fixes the issue where some browsers e.g. iOS Chrome
                // fires "change" instead of "input" on autocomplete.
                el.addEventListener('change', onCompositionEnd);
                /* istanbul ignore if */
                if (isIE9) {
                    el.vmodel = true;
                }
            }
        }
    },
    componentUpdated: function (el, binding, vnode) {
        if (vnode.tag === 'select') {
            setSelected(el, binding, vnode.context);
            // in case the options rendered by v-for have changed,
            // it's possible that the value is out-of-sync with the rendered options.
            // detect such cases and filter out values that no longer has a matching
            // option in the DOM.
            var prevOptions_1 = el._vOptions;
            var curOptions_1 = (el._vOptions = [].map.call(el.options, getValue));
            if (curOptions_1.some(function (o, i) { return !looseEqual(o, prevOptions_1[i]); })) {
                // trigger change event if
                // no matching option found for at least one value
                var needReset = el.multiple
                    ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions_1); })
                    : binding.value !== binding.oldValue &&
                        hasNoMatchingOption(binding.value, curOptions_1);
                if (needReset) {
                    trigger(el, 'change');
                }
            }
        }
    }
};
function setSelected(el, binding, vm) {
    actuallySetSelected(el, binding, vm);
    /* istanbul ignore if */
    if (isIE || isEdge) {
        setTimeout(function () {
            actuallySetSelected(el, binding, vm);
        }, 0);
    }
}
function actuallySetSelected(el, binding, vm) {
    var value = binding.value;
    var isMultiple = el.multiple;
    if (isMultiple && !Array.isArray(value)) {
         false &&
            0;
        return;
    }
    var selected, option;
    for (var i = 0, l = el.options.length; i < l; i++) {
        option = el.options[i];
        if (isMultiple) {
            selected = looseIndexOf(value, getValue(option)) > -1;
            if (option.selected !== selected) {
                option.selected = selected;
            }
        }
        else {
            if (looseEqual(getValue(option), value)) {
                if (el.selectedIndex !== i) {
                    el.selectedIndex = i;
                }
                return;
            }
        }
    }
    if (!isMultiple) {
        el.selectedIndex = -1;
    }
}
function hasNoMatchingOption(value, options) {
    return options.every(function (o) { return !looseEqual(o, value); });
}
function getValue(option) {
    return '_value' in option ? option._value : option.value;
}
function onCompositionStart(e) {
    e.target.composing = true;
}
function onCompositionEnd(e) {
    // prevent triggering an input event for no reason
    if (!e.target.composing)
        return;
    e.target.composing = false;
    trigger(e.target, 'input');
}
function trigger(el, type) {
    var e = document.createEvent('HTMLEvents');
    e.initEvent(type, true, true);
    el.dispatchEvent(e);
}

// recursively search for possible transition defined inside the component root
function locateNode(vnode) {
    // @ts-expect-error
    return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
        ? locateNode(vnode.componentInstance._vnode)
        : vnode;
}
var show = {
    bind: function (el, _a, vnode) {
        var value = _a.value;
        vnode = locateNode(vnode);
        var transition = vnode.data && vnode.data.transition;
        var originalDisplay = (el.__vOriginalDisplay =
            el.style.display === 'none' ? '' : el.style.display);
        if (value && transition) {
            vnode.data.show = true;
            enter(vnode, function () {
                el.style.display = originalDisplay;
            });
        }
        else {
            el.style.display = value ? originalDisplay : 'none';
        }
    },
    update: function (el, _a, vnode) {
        var value = _a.value, oldValue = _a.oldValue;
        /* istanbul ignore if */
        if (!value === !oldValue)
            return;
        vnode = locateNode(vnode);
        var transition = vnode.data && vnode.data.transition;
        if (transition) {
            vnode.data.show = true;
            if (value) {
                enter(vnode, function () {
                    el.style.display = el.__vOriginalDisplay;
                });
            }
            else {
                leave(vnode, function () {
                    el.style.display = 'none';
                });
            }
        }
        else {
            el.style.display = value ? el.__vOriginalDisplay : 'none';
        }
    },
    unbind: function (el, binding, vnode, oldVnode, isDestroy) {
        if (!isDestroy) {
            el.style.display = el.__vOriginalDisplay;
        }
    }
};

var platformDirectives = {
    model: directive,
    show: show
};

// Provides transition support for a single element/component.
var transitionProps = {
    name: String,
    appear: Boolean,
    css: Boolean,
    mode: String,
    type: String,
    enterClass: String,
    leaveClass: String,
    enterToClass: String,
    leaveToClass: String,
    enterActiveClass: String,
    leaveActiveClass: String,
    appearClass: String,
    appearActiveClass: String,
    appearToClass: String,
    duration: [Number, String, Object]
};
// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild(vnode) {
    var compOptions = vnode && vnode.componentOptions;
    if (compOptions && compOptions.Ctor.options.abstract) {
        return getRealChild(getFirstComponentChild(compOptions.children));
    }
    else {
        return vnode;
    }
}
function extractTransitionData(comp) {
    var data = {};
    var options = comp.$options;
    // props
    for (var key in options.propsData) {
        data[key] = comp[key];
    }
    // events.
    // extract listeners and pass them directly to the transition methods
    var listeners = options._parentListeners;
    for (var key in listeners) {
        data[camelize(key)] = listeners[key];
    }
    return data;
}
function placeholder(h, rawChild) {
    // @ts-expect-error
    if (/\d-keep-alive$/.test(rawChild.tag)) {
        return h('keep-alive', {
            props: rawChild.componentOptions.propsData
        });
    }
}
function hasParentTransition(vnode) {
    while ((vnode = vnode.parent)) {
        if (vnode.data.transition) {
            return true;
        }
    }
}
function isSameChild(child, oldChild) {
    return oldChild.key === child.key && oldChild.tag === child.tag;
}
var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };
var isVShowDirective = function (d) { return d.name === 'show'; };
var Transition = {
    name: 'transition',
    props: transitionProps,
    abstract: true,
    render: function (h) {
        var _this = this;
        var children = this.$slots.default;
        if (!children) {
            return;
        }
        // filter out text nodes (possible whitespaces)
        children = children.filter(isNotTextNode);
        /* istanbul ignore if */
        if (!children.length) {
            return;
        }
        // warn multiple elements
        if (false) {}
        var mode = this.mode;
        // warn invalid mode
        if (false) {}
        var rawChild = children[0];
        // if this is a component root node and the component's
        // parent container node also has transition, skip.
        if (hasParentTransition(this.$vnode)) {
            return rawChild;
        }
        // apply transition data to child
        // use getRealChild() to ignore abstract components e.g. keep-alive
        var child = getRealChild(rawChild);
        /* istanbul ignore if */
        if (!child) {
            return rawChild;
        }
        if (this._leaving) {
            return placeholder(h, rawChild);
        }
        // ensure a key that is unique to the vnode type and to this transition
        // component instance. This key will be used to remove pending leaving nodes
        // during entering.
        var id = "__transition-".concat(this._uid, "-");
        child.key =
            child.key == null
                ? child.isComment
                    ? id + 'comment'
                    : id + child.tag
                : isPrimitive(child.key)
                    ? String(child.key).indexOf(id) === 0
                        ? child.key
                        : id + child.key
                    : child.key;
        var data = ((child.data || (child.data = {})).transition =
            extractTransitionData(this));
        var oldRawChild = this._vnode;
        var oldChild = getRealChild(oldRawChild);
        // mark v-show
        // so that the transition module can hand over the control to the directive
        if (child.data.directives && child.data.directives.some(isVShowDirective)) {
            child.data.show = true;
        }
        if (oldChild &&
            oldChild.data &&
            !isSameChild(child, oldChild) &&
            !isAsyncPlaceholder(oldChild) &&
            // #6687 component root is a comment node
            !(oldChild.componentInstance &&
                oldChild.componentInstance._vnode.isComment)) {
            // replace old child transition data with fresh one
            // important for dynamic transitions!
            var oldData = (oldChild.data.transition = extend({}, data));
            // handle transition mode
            if (mode === 'out-in') {
                // return placeholder node and queue update when leave finishes
                this._leaving = true;
                mergeVNodeHook(oldData, 'afterLeave', function () {
                    _this._leaving = false;
                    _this.$forceUpdate();
                });
                return placeholder(h, rawChild);
            }
            else if (mode === 'in-out') {
                if (isAsyncPlaceholder(child)) {
                    return oldRawChild;
                }
                var delayedLeave_1;
                var performLeave = function () {
                    delayedLeave_1();
                };
                mergeVNodeHook(data, 'afterEnter', performLeave);
                mergeVNodeHook(data, 'enterCancelled', performLeave);
                mergeVNodeHook(oldData, 'delayLeave', function (leave) {
                    delayedLeave_1 = leave;
                });
            }
        }
        return rawChild;
    }
};

// Provides transition support for list items.
var props = extend({
    tag: String,
    moveClass: String
}, transitionProps);
delete props.mode;
var TransitionGroup = {
    props: props,
    beforeMount: function () {
        var _this = this;
        var update = this._update;
        this._update = function (vnode, hydrating) {
            var restoreActiveInstance = setActiveInstance(_this);
            // force removing pass
            _this.__patch__(_this._vnode, _this.kept, false, // hydrating
            true // removeOnly (!important, avoids unnecessary moves)
            );
            _this._vnode = _this.kept;
            restoreActiveInstance();
            update.call(_this, vnode, hydrating);
        };
    },
    render: function (h) {
        var tag = this.tag || this.$vnode.data.tag || 'span';
        var map = Object.create(null);
        var prevChildren = (this.prevChildren = this.children);
        var rawChildren = this.$slots.default || [];
        var children = (this.children = []);
        var transitionData = extractTransitionData(this);
        for (var i = 0; i < rawChildren.length; i++) {
            var c = rawChildren[i];
            if (c.tag) {
                if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
                    children.push(c);
                    map[c.key] = c;
                    (c.data || (c.data = {})).transition = transitionData;
                }
                else if (false) { var name_1, opts; }
            }
        }
        if (prevChildren) {
            var kept = [];
            var removed = [];
            for (var i = 0; i < prevChildren.length; i++) {
                var c = prevChildren[i];
                c.data.transition = transitionData;
                // @ts-expect-error .getBoundingClientRect is not typed in Node
                c.data.pos = c.elm.getBoundingClientRect();
                if (map[c.key]) {
                    kept.push(c);
                }
                else {
                    removed.push(c);
                }
            }
            this.kept = h(tag, null, kept);
            this.removed = removed;
        }
        return h(tag, null, children);
    },
    updated: function () {
        var children = this.prevChildren;
        var moveClass = this.moveClass || (this.name || 'v') + '-move';
        if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
            return;
        }
        // we divide the work into three loops to avoid mixing DOM reads and writes
        // in each iteration - which helps prevent layout thrashing.
        children.forEach(callPendingCbs);
        children.forEach(recordPosition);
        children.forEach(applyTranslation);
        // force reflow to put everything in position
        // assign to this to avoid being removed in tree-shaking
        // $flow-disable-line
        this._reflow = document.body.offsetHeight;
        children.forEach(function (c) {
            if (c.data.moved) {
                var el_1 = c.elm;
                var s = el_1.style;
                addTransitionClass(el_1, moveClass);
                s.transform = s.WebkitTransform = s.transitionDuration = '';
                el_1.addEventListener(transitionEndEvent, (el_1._moveCb = function cb(e) {
                    if (e && e.target !== el_1) {
                        return;
                    }
                    if (!e || /transform$/.test(e.propertyName)) {
                        el_1.removeEventListener(transitionEndEvent, cb);
                        el_1._moveCb = null;
                        removeTransitionClass(el_1, moveClass);
                    }
                }));
            }
        });
    },
    methods: {
        hasMove: function (el, moveClass) {
            /* istanbul ignore if */
            if (!hasTransition) {
                return false;
            }
            /* istanbul ignore if */
            if (this._hasMove) {
                return this._hasMove;
            }
            // Detect whether an element with the move class applied has
            // CSS transitions. Since the element may be inside an entering
            // transition at this very moment, we make a clone of it and remove
            // all other transition classes applied to ensure only the move class
            // is applied.
            var clone = el.cloneNode();
            if (el._transitionClasses) {
                el._transitionClasses.forEach(function (cls) {
                    removeClass(clone, cls);
                });
            }
            addClass(clone, moveClass);
            clone.style.display = 'none';
            this.$el.appendChild(clone);
            var info = getTransitionInfo(clone);
            this.$el.removeChild(clone);
            return (this._hasMove = info.hasTransform);
        }
    }
};
function callPendingCbs(c) {
    /* istanbul ignore if */
    if (c.elm._moveCb) {
        c.elm._moveCb();
    }
    /* istanbul ignore if */
    if (c.elm._enterCb) {
        c.elm._enterCb();
    }
}
function recordPosition(c) {
    c.data.newPos = c.elm.getBoundingClientRect();
}
function applyTranslation(c) {
    var oldPos = c.data.pos;
    var newPos = c.data.newPos;
    var dx = oldPos.left - newPos.left;
    var dy = oldPos.top - newPos.top;
    if (dx || dy) {
        c.data.moved = true;
        var s = c.elm.style;
        s.transform = s.WebkitTransform = "translate(".concat(dx, "px,").concat(dy, "px)");
        s.transitionDuration = '0s';
    }
}

var platformComponents = {
    Transition: Transition,
    TransitionGroup: TransitionGroup
};

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;
// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);
// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;
// public mount method
Vue.prototype.$mount = function (el, hydrating) {
    el = el && inBrowser ? query(el) : undefined;
    return mountComponent(this, el, hydrating);
};
// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
    setTimeout(function () {
        if (config.devtools) {
            if (devtools) {
                devtools.emit('init', Vue);
            }
            else if (false) {}
        }
        if (false) {}
    }, 0);
}




/***/ }),

/***/ 3385:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e";

/***/ }),

/***/ 5782:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e";

/***/ }),

/***/ 4718:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e";

/***/ }),

/***/ 7154:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e";

/***/ }),

/***/ 8734:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%28255, 255, 255, 0.25%29%27/%3e%3c/svg%3e";

/***/ }),

/***/ 5372:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e";

/***/ }),

/***/ 7249:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z%27/%3e%3c/svg%3e";

/***/ }),

/***/ 6690:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%236ea8fe%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e";

/***/ }),

/***/ 5932:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e";

/***/ }),

/***/ 1144:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e";

/***/ }),

/***/ 7210:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23052c65%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e";

/***/ }),

/***/ 7326:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23212529%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e";

/***/ }),

/***/ 5531:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e";

/***/ }),

/***/ 7115:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23dee2e6%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e";

/***/ }),

/***/ 4274:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e";

/***/ }),

/***/ 5419:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27m6 10 3 3 6-6%27/%3e%3c/svg%3e";

/***/ }),

/***/ 6366:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e";

/***/ }),

/***/ 2247:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%2833, 37, 41, 0.75%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e";

/***/ }),

/***/ 8487:
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e";

/***/ }),

/***/ 9306:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var isCallable = __webpack_require__(4901);
var tryToString = __webpack_require__(6823);

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw new $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ 7829:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var charAt = (__webpack_require__(8183).charAt);

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ 8551:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var isObject = __webpack_require__(34);

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw new $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ 9617:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toIndexedObject = __webpack_require__(5397);
var toAbsoluteIndex = __webpack_require__(5610);
var lengthOfArrayLike = __webpack_require__(6198);

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    if (length === 0) return !IS_INCLUDES && -1;
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ 4576:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ 6955:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(2140);
var isCallable = __webpack_require__(4901);
var classofRaw = __webpack_require__(4576);
var wellKnownSymbol = __webpack_require__(8227);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ 7740:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var hasOwn = __webpack_require__(9297);
var ownKeys = __webpack_require__(5031);
var getOwnPropertyDescriptorModule = __webpack_require__(7347);
var definePropertyModule = __webpack_require__(4913);

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ 6699:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var definePropertyModule = __webpack_require__(4913);
var createPropertyDescriptor = __webpack_require__(6980);

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ 6980:
/***/ ((module) => {

"use strict";

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ 6840:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var isCallable = __webpack_require__(4901);
var definePropertyModule = __webpack_require__(4913);
var makeBuiltIn = __webpack_require__(283);
var defineGlobalProperty = __webpack_require__(9433);

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ 9433:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ 3724:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(9039);

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});


/***/ }),

/***/ 4055:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);
var isObject = __webpack_require__(34);

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ 9392:
/***/ ((module) => {

"use strict";

module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ 7388:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);
var userAgent = __webpack_require__(9392);

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ 8727:
/***/ ((module) => {

"use strict";

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ 6518:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);
var getOwnPropertyDescriptor = (__webpack_require__(7347).f);
var createNonEnumerableProperty = __webpack_require__(6699);
var defineBuiltIn = __webpack_require__(6840);
var defineGlobalProperty = __webpack_require__(9433);
var copyConstructorProperties = __webpack_require__(7740);
var isForced = __webpack_require__(2796);

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = global[TARGET] && global[TARGET].prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ 9039:
/***/ ((module) => {

"use strict";

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ 9228:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(7495);
var call = __webpack_require__(9565);
var defineBuiltIn = __webpack_require__(6840);
var regexpExec = __webpack_require__(7323);
var fails = __webpack_require__(9039);
var wellKnownSymbol = __webpack_require__(8227);
var createNonEnumerableProperty = __webpack_require__(6699);

var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;

module.exports = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegExp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) !== 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () {
      execCalled = true;
      return null;
    };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var $exec = regexp.exec;
      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: call(nativeRegExpMethod, regexp, str, arg2) };
        }
        return { done: true, value: call(nativeMethod, str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn(String.prototype, KEY, methods[0]);
    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ 8745:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var NATIVE_BIND = __webpack_require__(616);

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});


/***/ }),

/***/ 616:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(9039);

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ 9565:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var NATIVE_BIND = __webpack_require__(616);

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ 350:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var hasOwn = __webpack_require__(9297);

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ 9504:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var NATIVE_BIND = __webpack_require__(616);

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ 7751:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);
var isCallable = __webpack_require__(4901);

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ 5966:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var aCallable = __webpack_require__(9306);
var isNullOrUndefined = __webpack_require__(4117);

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ 2478:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var toObject = __webpack_require__(8981);

var floor = Math.floor;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
// eslint-disable-next-line redos/no-vulnerable -- safe
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice(str, 0, position);
      case "'": return stringSlice(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};


/***/ }),

/***/ 4475:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  check(typeof this == 'object' && this) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ 9297:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var toObject = __webpack_require__(8981);

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ 421:
/***/ ((module) => {

"use strict";

module.exports = {};


/***/ }),

/***/ 397:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var getBuiltIn = __webpack_require__(7751);

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ 5917:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var fails = __webpack_require__(9039);
var createElement = __webpack_require__(4055);

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});


/***/ }),

/***/ 7055:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var fails = __webpack_require__(9039);
var classof = __webpack_require__(4576);

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ 3706:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var isCallable = __webpack_require__(4901);
var store = __webpack_require__(7629);

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ 1181:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var NATIVE_WEAK_MAP = __webpack_require__(8622);
var global = __webpack_require__(4475);
var isObject = __webpack_require__(34);
var createNonEnumerableProperty = __webpack_require__(6699);
var hasOwn = __webpack_require__(9297);
var shared = __webpack_require__(7629);
var sharedKey = __webpack_require__(6119);
var hiddenKeys = __webpack_require__(421);

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ 4901:
/***/ ((module) => {

"use strict";

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var documentAll = typeof document == 'object' && document.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
module.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ 2796:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(9039);
var isCallable = __webpack_require__(4901);

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ 4117:
/***/ ((module) => {

"use strict";

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ 34:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var isCallable = __webpack_require__(4901);

module.exports = function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ 6395:
/***/ ((module) => {

"use strict";

module.exports = false;


/***/ }),

/***/ 757:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var getBuiltIn = __webpack_require__(7751);
var isCallable = __webpack_require__(4901);
var isPrototypeOf = __webpack_require__(1625);
var USE_SYMBOL_AS_UID = __webpack_require__(7040);

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ 6198:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toLength = __webpack_require__(8014);

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ 283:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var fails = __webpack_require__(9039);
var isCallable = __webpack_require__(4901);
var hasOwn = __webpack_require__(9297);
var DESCRIPTORS = __webpack_require__(3724);
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(350).CONFIGURABLE);
var inspectSource = __webpack_require__(3706);
var InternalStateModule = __webpack_require__(1181);

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\).*$/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ 741:
/***/ ((module) => {

"use strict";

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ 2360:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(8551);
var definePropertiesModule = __webpack_require__(6801);
var enumBugKeys = __webpack_require__(8727);
var hiddenKeys = __webpack_require__(421);
var html = __webpack_require__(397);
var documentCreateElement = __webpack_require__(4055);
var sharedKey = __webpack_require__(6119);

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ 6801:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(8686);
var definePropertyModule = __webpack_require__(4913);
var anObject = __webpack_require__(8551);
var toIndexedObject = __webpack_require__(5397);
var objectKeys = __webpack_require__(1072);

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ 4913:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var IE8_DOM_DEFINE = __webpack_require__(5917);
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(8686);
var anObject = __webpack_require__(8551);
var toPropertyKey = __webpack_require__(6969);

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ 7347:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var call = __webpack_require__(9565);
var propertyIsEnumerableModule = __webpack_require__(8773);
var createPropertyDescriptor = __webpack_require__(6980);
var toIndexedObject = __webpack_require__(5397);
var toPropertyKey = __webpack_require__(6969);
var hasOwn = __webpack_require__(9297);
var IE8_DOM_DEFINE = __webpack_require__(5917);

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ 8480:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var internalObjectKeys = __webpack_require__(1828);
var enumBugKeys = __webpack_require__(8727);

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ 3717:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ 1625:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ 1828:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var hasOwn = __webpack_require__(9297);
var toIndexedObject = __webpack_require__(5397);
var indexOf = (__webpack_require__(9617).indexOf);
var hiddenKeys = __webpack_require__(421);

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ 1072:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var internalObjectKeys = __webpack_require__(1828);
var enumBugKeys = __webpack_require__(8727);

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ 8773:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ 4270:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var call = __webpack_require__(9565);
var isCallable = __webpack_require__(4901);
var isObject = __webpack_require__(34);

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw new $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ 5031:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var getBuiltIn = __webpack_require__(7751);
var uncurryThis = __webpack_require__(9504);
var getOwnPropertyNamesModule = __webpack_require__(8480);
var getOwnPropertySymbolsModule = __webpack_require__(3717);
var anObject = __webpack_require__(8551);

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ 6682:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var call = __webpack_require__(9565);
var anObject = __webpack_require__(8551);
var isCallable = __webpack_require__(4901);
var classof = __webpack_require__(4576);
var regexpExec = __webpack_require__(7323);

var $TypeError = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (isCallable(exec)) {
    var result = call(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }
  if (classof(R) === 'RegExp') return call(regexpExec, R, S);
  throw new $TypeError('RegExp#exec called on incompatible receiver');
};


/***/ }),

/***/ 7323:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call = __webpack_require__(9565);
var uncurryThis = __webpack_require__(9504);
var toString = __webpack_require__(655);
var regexpFlags = __webpack_require__(7979);
var stickyHelpers = __webpack_require__(8429);
var shared = __webpack_require__(5745);
var create = __webpack_require__(2360);
var getInternalState = (__webpack_require__(1181).get);
var UNSUPPORTED_DOT_ALL = __webpack_require__(3635);
var UNSUPPORTED_NCG = __webpack_require__(8814);

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call(nativeExec, re1, 'a');
  call(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = call(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace(flags, 'y', '');
      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice(match.input, charsAdded);
        match[0] = stringSlice(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      call(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ 7979:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var anObject = __webpack_require__(8551);

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ 8429:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(9039);
var global = __webpack_require__(4475);

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global.RegExp;

var UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') !== null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
  return !$RegExp('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') !== null;
});

module.exports = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};


/***/ }),

/***/ 3635:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(9039);
var global = __webpack_require__(4475);

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.test('\n') && re.flags === 's');
});


/***/ }),

/***/ 8814:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(9039);
var global = __webpack_require__(4475);

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});


/***/ }),

/***/ 7750:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var isNullOrUndefined = __webpack_require__(4117);

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw new $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ 6119:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var shared = __webpack_require__(5745);
var uid = __webpack_require__(3392);

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ 7629:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var IS_PURE = __webpack_require__(6395);
var globalThis = __webpack_require__(4475);
var defineGlobalProperty = __webpack_require__(9433);

var SHARED = '__core-js_shared__';
var store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});

(store.versions || (store.versions = [])).push({
  version: '3.37.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.37.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ 5745:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var store = __webpack_require__(7629);

module.exports = function (key, value) {
  return store[key] || (store[key] = value || {});
};


/***/ }),

/***/ 8183:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);
var toIntegerOrInfinity = __webpack_require__(1291);
var toString = __webpack_require__(655);
var requireObjectCoercible = __webpack_require__(7750);

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ 4495:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(7388);
var fails = __webpack_require__(9039);
var global = __webpack_require__(4475);

var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ 5610:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toIntegerOrInfinity = __webpack_require__(1291);

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ 5397:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(7055);
var requireObjectCoercible = __webpack_require__(7750);

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ 1291:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var trunc = __webpack_require__(741);

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ 8014:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toIntegerOrInfinity = __webpack_require__(1291);

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  var len = toIntegerOrInfinity(argument);
  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ 8981:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var requireObjectCoercible = __webpack_require__(7750);

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ 2777:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var call = __webpack_require__(9565);
var isObject = __webpack_require__(34);
var isSymbol = __webpack_require__(757);
var getMethod = __webpack_require__(5966);
var ordinaryToPrimitive = __webpack_require__(4270);
var wellKnownSymbol = __webpack_require__(8227);

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw new $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ 6969:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toPrimitive = __webpack_require__(2777);
var isSymbol = __webpack_require__(757);

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ 2140:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var wellKnownSymbol = __webpack_require__(8227);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ 655:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var classof = __webpack_require__(6955);

var $String = String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');
  return $String(argument);
};


/***/ }),

/***/ 6823:
/***/ ((module) => {

"use strict";

var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ 3392:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(9504);

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ 7040:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(4495);

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ 8686:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(3724);
var fails = __webpack_require__(9039);

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});


/***/ }),

/***/ 8622:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);
var isCallable = __webpack_require__(4901);

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ 8227:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(4475);
var shared = __webpack_require__(5745);
var hasOwn = __webpack_require__(9297);
var uid = __webpack_require__(3392);
var NATIVE_SYMBOL = __webpack_require__(4495);
var USE_SYMBOL_AS_UID = __webpack_require__(7040);

var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
      ? Symbol[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ 7495:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(6518);
var exec = __webpack_require__(7323);

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ 5440:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var apply = __webpack_require__(8745);
var call = __webpack_require__(9565);
var uncurryThis = __webpack_require__(9504);
var fixRegExpWellKnownSymbolLogic = __webpack_require__(9228);
var fails = __webpack_require__(9039);
var anObject = __webpack_require__(8551);
var isCallable = __webpack_require__(4901);
var isNullOrUndefined = __webpack_require__(4117);
var toIntegerOrInfinity = __webpack_require__(1291);
var toLength = __webpack_require__(8014);
var toString = __webpack_require__(655);
var requireObjectCoercible = __webpack_require__(7750);
var advanceStringIndex = __webpack_require__(7829);
var getMethod = __webpack_require__(5966);
var getSubstitution = __webpack_require__(2478);
var regExpExec = __webpack_require__(6682);
var wellKnownSymbol = __webpack_require__(8227);

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE);
      return replacer
        ? call(replacer, searchValue, O, replaceValue)
        : call(nativeReplace, toString(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString(replaceValue);

      var global = rx.global;
      var fullUnicode;
      if (global) {
        fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }

      var results = [];
      var result;
      while (true) {
        result = regExpExec(rx, S);
        if (result === null) break;

        push(results, result);
        if (!global) break;

        var matchStr = toString(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString(result[0]);
        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        var replacement;
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat([matched], captures, position, S);
          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
          replacement = toString(apply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }

      return accumulatedResult + stringSlice(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);


/***/ }),

/***/ 2094:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ R),
/* harmony export */   i: () => (/* binding */ B),
/* harmony export */   l: () => (/* binding */ z),
/* harmony export */   n: () => (/* binding */ P),
/* harmony export */   s: () => (/* binding */ d),
/* harmony export */   t: () => (/* binding */ C)
/* harmony export */ });
/* unused harmony exports T, b, c, d, e, f, g, h, j, k, m */
/* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7736);
/* harmony import */ var _nextcloud_l10n_gettext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1195);


/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const f = (0,_nextcloud_l10n_gettext__WEBPACK_IMPORTED_MODULE_1__/* .getGettextBuilder */ .$)().detectLocale();
[{ locale: "af", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Afrikaans (https://app.transifex.com/nextcloud/teams/64236/af/)", "Content-Type": "text/plain; charset=UTF-8", Language: "af", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Afrikaans (https://app.transifex.com/nextcloud/teams/64236/af/)
Content-Type: text/plain; charset=UTF-8
Language: af
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "ar", json: { charset: "utf-8", headers: { "Last-Translator": "Ali <alimahwer@yahoo.com>, 2024", "Language-Team": "Arabic (https://app.transifex.com/nextcloud/teams/64236/ar/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ar", "Plural-Forms": "nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Ali <alimahwer@yahoo.com>, 2024
` }, msgstr: [`Last-Translator: Ali <alimahwer@yahoo.com>, 2024
Language-Team: Arabic (https://app.transifex.com/nextcloud/teams/64236/ar/)
Content-Type: text/plain; charset=UTF-8
Language: ar
Plural-Forms: nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" لا يصلح كاسم مجلد.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" غير مسموح به كاسم مجلد'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" غير مسموح به داخل اسم مجلد.'] }, "All files": { msgid: "All files", msgstr: ["كل الملفات"] }, Choose: { msgid: "Choose", msgstr: ["إختَر"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["إختَر {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["إختَر %n ملف", "إختَر %n ملف", "إختَر %n ملف", "إختَر %n ملفات", "إختَر %n ملف", "إختَر %n ملف"] }, Copy: { msgid: "Copy", msgstr: ["نسخ"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["نسخٌ إلى {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["تعذّر إنشاء المجلد الجديد"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["يتعذّر تحميل إعدادات الملفات"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["يتعذّر تحميل مناظير views الملفات"] }, "Create directory": { msgid: "Create directory", msgstr: ["أنشِيءْ مجلّداً"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["مُنتقِي المنظور الحالي"] }, Favorites: { msgid: "Favorites", msgstr: ["المُفضَّلة"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["الملفات و المجلدات التي تُميِّزُها كمٌفضَّلة ستظهر هنا."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["الملفات و المجلدات التي قمت مؤخراً بتعديلها سوف تظهر هنا."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["فلترة قائمة الملفات"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["اسم المجلد لا يمكن أن يكون فارغاً."] }, Home: { msgid: "Home", msgstr: ["البداية"] }, Modified: { msgid: "Modified", msgstr: ["مُعدَّل"] }, Move: { msgid: "Move", msgstr: ["أُنقُل"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["أُنقُل إلى {target}"] }, Name: { msgid: "Name", msgstr: ["الاسم"] }, New: { msgid: "New", msgstr: ["جديد"] }, "New folder": { msgid: "New folder", msgstr: ["مٌجلّد جديد"] }, "New folder name": { msgid: "New folder name", msgstr: ["اسم المجلد الجديد"] }, "No files in here": { msgid: "No files in here", msgstr: ["لا توجد ملفات هنا"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["لا توجد ملفات تتطابق مع الفلتر الذي وضعته"] }, "No matching files": { msgid: "No matching files", msgstr: ["لا توجد ملفات مُطابِقة"] }, Recent: { msgid: "Recent", msgstr: ["الحالي"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["حدِّد كل المداخل"] }, "Select entry": { msgid: "Select entry", msgstr: ["إختَر المدخل"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["إختر سطر الـ {nodename}"] }, Size: { msgid: "Size", msgstr: ["الحجم"] }, Undo: { msgid: "Undo", msgstr: ["تراجع"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["قُم برفع محتوىً أو قُم بمزامنة أجهزتك!"] } } } } }, { locale: "ast", json: { charset: "utf-8", headers: { "Last-Translator": "enolp <enolp@softastur.org>, 2024", "Language-Team": "Asturian (https://app.transifex.com/nextcloud/teams/64236/ast/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ast", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
enolp <enolp@softastur.org>, 2024
` }, msgstr: [`Last-Translator: enolp <enolp@softastur.org>, 2024
Language-Team: Asturian (https://app.transifex.com/nextcloud/teams/64236/ast/)
Content-Type: text/plain; charset=UTF-8
Language: ast
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["«{name}» ye un nome de carpeta inválidu."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["«{name}» ye un nome de carpeta inválidu"] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["Nun se permite'l caráuter «/» dientro'l nome de les carpetes."] }, "All files": { msgid: "All files", msgstr: ["Tolos ficheros"] }, Choose: { msgid: "Choose", msgstr: ["Escoyer"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Escoyer «{ficheru}»"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Escoyer %n ficheru", "Escoyer %n ficheros"] }, Copy: { msgid: "Copy", msgstr: ["Copiar"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copiar en: {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Nun se pudo crear la carpeta"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Nun se pudo cargar la configuración de los ficheros"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Nun se pudieron cargar les vistes de los ficheros"] }, "Create directory": { msgid: "Create directory", msgstr: ["Crear un direutoriu"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Selector de la vista actual"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritos"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Equí apaecen los ficheros y les carpetes que metas en Favoritos."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Equí apaecen los fichero y les carpetes que modificares apocayá."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Peñerar la llista de ficheros"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["El nome de la carpeta nun pue tar baleru."] }, Home: { msgid: "Home", msgstr: ["Aniciu"] }, Modified: { msgid: "Modified", msgstr: ["Modificóse"] }, Move: { msgid: "Move", msgstr: ["Mover"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Mover a {target}"] }, Name: { msgid: "Name", msgstr: ["Nome"] }, New: { msgid: "New", msgstr: ["Nuevu"] }, "New folder": { msgid: "New folder", msgstr: ["Carpeta nueva"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nome de carpeta nuevu"] }, "No files in here": { msgid: "No files in here", msgstr: ["Equí nun hai nengún ficheru"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nun s'atopó nengún ficheru que concasare cola peñera."] }, "No matching files": { msgid: "No matching files", msgstr: ["Nun hai nengún ficheru que concase"] }, Recent: { msgid: "Recent", msgstr: ["De recién"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Seleicionar toles entraes"] }, "Select entry": { msgid: "Select entry", msgstr: ["Seleicionar la entrada"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Seleicionar la filera de: {nodename}"] }, Size: { msgid: "Size", msgstr: ["Tamañu"] }, Undo: { msgid: "Undo", msgstr: ["Desfacer"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["¡Xubi dalgún elementu o sincroniza colos tos preseos!"] } } } } }, { locale: "az", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Azerbaijani (https://app.transifex.com/nextcloud/teams/64236/az/)", "Content-Type": "text/plain; charset=UTF-8", Language: "az", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Azerbaijani (https://app.transifex.com/nextcloud/teams/64236/az/)
Content-Type: text/plain; charset=UTF-8
Language: az
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "be", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Belarusian (https://app.transifex.com/nextcloud/teams/64236/be/)", "Content-Type": "text/plain; charset=UTF-8", Language: "be", "Plural-Forms": "nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Belarusian (https://app.transifex.com/nextcloud/teams/64236/be/)
Content-Type: text/plain; charset=UTF-8
Language: be
Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "bg_BG", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Bulgarian (Bulgaria) (https://app.transifex.com/nextcloud/teams/64236/bg_BG/)", "Content-Type": "text/plain; charset=UTF-8", Language: "bg_BG", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Bulgarian (Bulgaria) (https://app.transifex.com/nextcloud/teams/64236/bg_BG/)
Content-Type: text/plain; charset=UTF-8
Language: bg_BG
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "bn_BD", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Bengali (Bangladesh) (https://app.transifex.com/nextcloud/teams/64236/bn_BD/)", "Content-Type": "text/plain; charset=UTF-8", Language: "bn_BD", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Bengali (Bangladesh) (https://app.transifex.com/nextcloud/teams/64236/bn_BD/)
Content-Type: text/plain; charset=UTF-8
Language: bn_BD
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "br", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Breton (https://app.transifex.com/nextcloud/teams/64236/br/)", "Content-Type": "text/plain; charset=UTF-8", Language: "br", "Plural-Forms": "nplurals=5; plural=((n%10 == 1) && (n%100 != 11) && (n%100 !=71) && (n%100 !=91) ? 0 :(n%10 == 2) && (n%100 != 12) && (n%100 !=72) && (n%100 !=92) ? 1 :(n%10 ==3 || n%10==4 || n%10==9) && (n%100 < 10 || n% 100 > 19) && (n%100 < 70 || n%100 > 79) && (n%100 < 90 || n%100 > 99) ? 2 :(n != 0 && n % 1000000 == 0) ? 3 : 4);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Breton (https://app.transifex.com/nextcloud/teams/64236/br/)
Content-Type: text/plain; charset=UTF-8
Language: br
Plural-Forms: nplurals=5; plural=((n%10 == 1) && (n%100 != 11) && (n%100 !=71) && (n%100 !=91) ? 0 :(n%10 == 2) && (n%100 != 12) && (n%100 !=72) && (n%100 !=92) ? 1 :(n%10 ==3 || n%10==4 || n%10==9) && (n%100 < 10 || n% 100 > 19) && (n%100 < 70 || n%100 > 79) && (n%100 < 90 || n%100 > 99) ? 2 :(n != 0 && n % 1000000 == 0) ? 3 : 4);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Disober"] } } } } }, { locale: "bs", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Bosnian (https://app.transifex.com/nextcloud/teams/64236/bs/)", "Content-Type": "text/plain; charset=UTF-8", Language: "bs", "Plural-Forms": "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Bosnian (https://app.transifex.com/nextcloud/teams/64236/bs/)
Content-Type: text/plain; charset=UTF-8
Language: bs
Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "ca", json: { charset: "utf-8", headers: { "Last-Translator": "v v <e670006006@gmail.com>, 2024", "Language-Team": "Catalan (https://app.transifex.com/nextcloud/teams/64236/ca/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ca", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
v v <e670006006@gmail.com>, 2024
` }, msgstr: [`Last-Translator: v v <e670006006@gmail.com>, 2024
Language-Team: Catalan (https://app.transifex.com/nextcloud/teams/64236/ca/)
Content-Type: text/plain; charset=UTF-8
Language: ca
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" és un nom de carpeta no vàlid.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" no és permès en el nom de carpeta'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" no és permès en el nom de carpeta.'] }, "All files": { msgid: "All files", msgstr: ["Tots els arxius"] }, Choose: { msgid: "Choose", msgstr: ["Triar"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Triar {file}"] }, Copy: { msgid: "Copy", msgstr: ["Copiar"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copiar a {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["No es pot crear la nova carpeta"] }, "Create directory": { msgid: "Create directory", msgstr: ["Crear directori"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Selector de visualització actual"] }, Favorites: { msgid: "Favorites", msgstr: ["Favorits"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Els fitxers i les carpetes que marqueu com a favorits es mostraran aquí."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Els fitxers i les carpetes recentment modificats es mostraran aquí."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrar llistat de fitxers"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["El nom de la carpeta no pot estar buit."] }, Home: { msgid: "Home", msgstr: ["Inici"] }, Modified: { msgid: "Modified", msgstr: ["Modificat"] }, Move: { msgid: "Move", msgstr: ["Moure"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["More a {target}"] }, Name: { msgid: "Name", msgstr: ["Nom"] }, New: { msgid: "New", msgstr: ["Nou"] }, "New folder": { msgid: "New folder", msgstr: ["Nova carpeta"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nom de nova carpeta"] }, "No files in here": { msgid: "No files in here", msgstr: ["No hi ha arxius"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["No s'han trobat fitxers coincidents amb el vostre filtre."] }, "No matching files": { msgid: "No matching files", msgstr: ["Sense arxius coincidents"] }, Recent: { msgid: "Recent", msgstr: ["Recent"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Seleccioneu totes les entrades"] }, "Select entry": { msgid: "Select entry", msgstr: ["Seleccionar entrada"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Seleccioneu la fila per a {nodename}"] }, Size: { msgid: "Size", msgstr: ["Mida"] }, Undo: { msgid: "Undo", msgstr: ["Desfés"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Pengeu contingut o sincronitzeu-vos amb els vostres dispositius!"] } } } } }, { locale: "cs", json: { charset: "utf-8", headers: { "Last-Translator": "Pavel Borecki <pavel.borecki@gmail.com>, 2020", "Language-Team": "Czech (https://www.transifex.com/nextcloud/teams/64236/cs/)", "Content-Type": "text/plain; charset=UTF-8", Language: "cs", "Plural-Forms": "nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n <= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Pavel Borecki <pavel.borecki@gmail.com>, 2020
` }, msgstr: [`Last-Translator: Pavel Borecki <pavel.borecki@gmail.com>, 2020
Language-Team: Czech (https://www.transifex.com/nextcloud/teams/64236/cs/)
Content-Type: text/plain; charset=UTF-8
Language: cs
Plural-Forms: nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n <= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:187" }, msgstr: ["Zpět"] } } } } }, { locale: "cs_CZ", json: { charset: "utf-8", headers: { "Last-Translator": "Pavel Borecki <pavel.borecki@gmail.com>, 2024", "Language-Team": "Czech (Czech Republic) (https://app.transifex.com/nextcloud/teams/64236/cs_CZ/)", "Content-Type": "text/plain; charset=UTF-8", Language: "cs_CZ", "Plural-Forms": "nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n <= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Pavel Borecki <pavel.borecki@gmail.com>, 2024
` }, msgstr: [`Last-Translator: Pavel Borecki <pavel.borecki@gmail.com>, 2024
Language-Team: Czech (Czech Republic) (https://app.transifex.com/nextcloud/teams/64236/cs_CZ/)
Content-Type: text/plain; charset=UTF-8
Language: cs_CZ
Plural-Forms: nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n <= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["„{name}“ není platný název složky."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["„{name}“ není povolený název složky."] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["znak „/“ (dopředné lomítko) není možné použít v názvu složky."] }, "All files": { msgid: "All files", msgstr: ["Veškeré soubory"] }, Choose: { msgid: "Choose", msgstr: ["Zvolit"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Zvolit {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Zvolte %n soubor", "Zvolte %n soubory", "Zvolte %n souborů", "Zvolte %n soubory"] }, Copy: { msgid: "Copy", msgstr: ["Zkopírovat"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Zkopírovat do {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Novou složku se nepodařilo vytvořit"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Nepodařilo se načíst nastavení pro soubory"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Nepodařilo se načíst pohledy souborů"] }, "Create directory": { msgid: "Create directory", msgstr: ["Vytvořit složku"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Výběr stávajícího zobrazení"] }, Favorites: { msgid: "Favorites", msgstr: ["Oblíbené"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Zde se zobrazí soubory a složky, které označíte jako oblíbené."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Zde se zobrazí soubory a složky, které jste nedávno pozměnili."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrovat seznam souborů"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Složku je třeba nějak nazvat."] }, Home: { msgid: "Home", msgstr: ["Domů"] }, Modified: { msgid: "Modified", msgstr: ["Změněno"] }, Move: { msgid: "Move", msgstr: ["Přesounout"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Přesunout do {target}"] }, Name: { msgid: "Name", msgstr: ["Název"] }, New: { msgid: "New", msgstr: ["Nové"] }, "New folder": { msgid: "New folder", msgstr: ["Nová složka"] }, "New folder name": { msgid: "New folder name", msgstr: ["Název pro novou složku"] }, "No files in here": { msgid: "No files in here", msgstr: ["Nejsou zde žádné soubory"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nenalezeny žádné soubory odpovídající vašemu filtru"] }, "No matching files": { msgid: "No matching files", msgstr: ["Žádné odpovídající soubory"] }, Recent: { msgid: "Recent", msgstr: ["Nedávné"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Vybrat všechny položky"] }, "Select entry": { msgid: "Select entry", msgstr: ["Vybrat položku"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Vybrat řádek pro {nodename}"] }, Size: { msgid: "Size", msgstr: ["Velikost"] }, Undo: { msgid: "Undo", msgstr: ["Zpět"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Nahrajte nějaký obsah nebo proveďte synchronizaci se svými zařízeními!"] } } } } }, { locale: "cy_GB", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Welsh (United Kingdom) (https://app.transifex.com/nextcloud/teams/64236/cy_GB/)", "Content-Type": "text/plain; charset=UTF-8", Language: "cy_GB", "Plural-Forms": "nplurals=4; plural=(n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Welsh (United Kingdom) (https://app.transifex.com/nextcloud/teams/64236/cy_GB/)
Content-Type: text/plain; charset=UTF-8
Language: cy_GB
Plural-Forms: nplurals=4; plural=(n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "da", json: { charset: "utf-8", headers: { "Last-Translator": "Martin Bonde <Martin@maboni.dk>, 2024", "Language-Team": "Danish (https://app.transifex.com/nextcloud/teams/64236/da/)", "Content-Type": "text/plain; charset=UTF-8", Language: "da", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Martin Bonde <Martin@maboni.dk>, 2024
` }, msgstr: [`Last-Translator: Martin Bonde <Martin@maboni.dk>, 2024
Language-Team: Danish (https://app.transifex.com/nextcloud/teams/64236/da/)
Content-Type: text/plain; charset=UTF-8
Language: da
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" er et ugyldigt mappenavn.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" er ikke et tilladt mappenavn'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" er ikke tilladt i et mappenavn.'] }, "All files": { msgid: "All files", msgstr: ["Alle filer"] }, Choose: { msgid: "Choose", msgstr: ["Vælg"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Vælg {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Vælg %n fil", "Vælg %n filer"] }, Copy: { msgid: "Copy", msgstr: ["Kopier"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopier til {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Kunne ikke oprette den nye mappe"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Filindstillingerne kunne ikke indlæses"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Kunne ikke indlæse filvisninger"] }, "Create directory": { msgid: "Create directory", msgstr: ["Opret mappe"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Aktuel visningsvælger"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritter"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Filer og mapper, du markerer som foretrukne, vises her."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Filer og mapper, du for nylig har ændret, vises her."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrer fil liste"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Mappenavnet må ikke være tomt."] }, Home: { msgid: "Home", msgstr: ["Hjem"] }, Modified: { msgid: "Modified", msgstr: ["Ændret"] }, Move: { msgid: "Move", msgstr: ["Flyt"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Flyt til {target}"] }, Name: { msgid: "Name", msgstr: ["Navn"] }, New: { msgid: "New", msgstr: ["Ny"] }, "New folder": { msgid: "New folder", msgstr: ["Ny mappe"] }, "New folder name": { msgid: "New folder name", msgstr: ["Ny mappe navn"] }, "No files in here": { msgid: "No files in here", msgstr: ["Ingen filer here"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Der blev ikke fundet nogen filer, der matcher dit filter."] }, "No matching files": { msgid: "No matching files", msgstr: ["Ingen matchende filer"] }, Recent: { msgid: "Recent", msgstr: ["Seneste"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Vælg alle poster"] }, "Select entry": { msgid: "Select entry", msgstr: ["Vælg post"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Vælg rækken for {nodenavn}"] }, Size: { msgid: "Size", msgstr: ["Størelse"] }, Undo: { msgid: "Undo", msgstr: ["Fortryd"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Upload noget indhold eller synkroniser med dine enheder!"] } } } } }, { locale: "de", json: { charset: "utf-8", headers: { "Last-Translator": "Ettore Atalan <atalanttore@googlemail.com>, 2024", "Language-Team": "German (https://app.transifex.com/nextcloud/teams/64236/de/)", "Content-Type": "text/plain; charset=UTF-8", Language: "de", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Mario Siegmann <mario_siegmann@web.de>, 2023
Markus Eckstein, 2023
Andy Scherzinger <info@andy-scherzinger.de>, 2023
Joachim Sokolowski, 2023
Ettore Atalan <atalanttore@googlemail.com>, 2024
` }, msgstr: [`Last-Translator: Ettore Atalan <atalanttore@googlemail.com>, 2024
Language-Team: German (https://app.transifex.com/nextcloud/teams/64236/de/)
Content-Type: text/plain; charset=UTF-8
Language: de
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" ist ein ungültiger Ordnername.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" ist kein zulässiger Ordnername'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" ist innerhalb eines Ordnernamens nicht zulässig.'] }, "All files": { msgid: "All files", msgstr: ["Alle Dateien"] }, Choose: { msgid: "Choose", msgstr: ["Auswählen"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["{file} auswählen"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["%n Datei auswählen", "%n Dateien auswählen"] }, Copy: { msgid: "Copy", msgstr: ["Kopieren"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Nach {target} kopieren"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Der neue Ordner konnte nicht erstellt werden."] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Dateieinstellungen konnten nicht geladen werden"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Dateiansichten konnten nicht geladen werden"] }, "Create directory": { msgid: "Create directory", msgstr: ["Verzeichnis erstellen"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Aktuelle Ansichtsauswahl"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoriten"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Dateien und Ordner, die du als Favorit markierst, werden hier angezeigt."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Dateien und Ordner, die du kürzlich geändert hast, werden hier angezeigt."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Dateiliste filtern"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Der Ordnername darf nicht leer sein."] }, Home: { msgid: "Home", msgstr: ["Startseite"] }, Modified: { msgid: "Modified", msgstr: ["Geändert"] }, Move: { msgid: "Move", msgstr: ["Verschieben"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Nach {target} verschieben"] }, Name: { msgid: "Name", msgstr: ["Name"] }, New: { msgid: "New", msgstr: ["Neu"] }, "New folder": { msgid: "New folder", msgstr: ["Neuer Ordner"] }, "New folder name": { msgid: "New folder name", msgstr: ["Neuer Ordnername"] }, "No files in here": { msgid: "No files in here", msgstr: ["Keine Dateien vorhanden"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Es wurden keine Dateien gefunden, die deinem Filter entsprechen."] }, "No matching files": { msgid: "No matching files", msgstr: ["Keine passenden Dateien"] }, Recent: { msgid: "Recent", msgstr: ["Jüngste"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Alle Einträge auswählen"] }, "Select entry": { msgid: "Select entry", msgstr: ["Eintrag auswählen"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Die Zeile für {nodename} auswählen."] }, Size: { msgid: "Size", msgstr: ["Größe"] }, Undo: { msgid: "Undo", msgstr: ["Rückgängig"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Lade Inhalte hoch oder synchronisieren diese mit deinen Geräten!"] } } } } }, { locale: "de_DE", json: { charset: "utf-8", headers: { "Last-Translator": "Mario Siegmann <mario_siegmann@web.de>, 2024", "Language-Team": "German (Germany) (https://app.transifex.com/nextcloud/teams/64236/de_DE/)", "Content-Type": "text/plain; charset=UTF-8", Language: "de_DE", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Mark Ziegler <mark.ziegler@rakekniven.de>, 2023
Mario Siegmann <mario_siegmann@web.de>, 2024
` }, msgstr: [`Last-Translator: Mario Siegmann <mario_siegmann@web.de>, 2024
Language-Team: German (Germany) (https://app.transifex.com/nextcloud/teams/64236/de_DE/)
Content-Type: text/plain; charset=UTF-8
Language: de_DE
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" ist ein ungültiger Ordnername.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" ist kein zulässiger Ordnername'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" ist innerhalb eines Ordnernamens nicht zulässig.'] }, "All files": { msgid: "All files", msgstr: ["Alle Dateien"] }, Choose: { msgid: "Choose", msgstr: ["Auswählen"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["{file} auswählen"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["%n Datei auswählen", "%n Dateien auswählen"] }, Copy: { msgid: "Copy", msgstr: ["Kopieren"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Nach {target} kopieren"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Der neue Ordner konnte nicht erstellt werden"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Dateieinstellungen konnten nicht geladen werden"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Dateiansichten konnten nicht geladen werden"] }, "Create directory": { msgid: "Create directory", msgstr: ["Verzeichnis erstellen"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Aktuelle Ansichtsauswahl"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoriten"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Dateien und Ordner, die Sie als Favorit markieren, werden hier angezeigt."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Dateien und Ordner, die Sie kürzlich geändert haben, werden hier angezeigt."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Dateiliste filtern"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Der Ordnername darf nicht leer sein."] }, Home: { msgid: "Home", msgstr: ["Home"] }, Modified: { msgid: "Modified", msgstr: ["Geändert"] }, Move: { msgid: "Move", msgstr: ["Verschieben"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Nach {target} verschieben"] }, Name: { msgid: "Name", msgstr: ["Name"] }, New: { msgid: "New", msgstr: ["Neu"] }, "New folder": { msgid: "New folder", msgstr: ["Neuer Ordner"] }, "New folder name": { msgid: "New folder name", msgstr: ["Neuer Ordnername"] }, "No files in here": { msgid: "No files in here", msgstr: ["Hier sind keine Dateien"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Es wurden keine Dateien gefunden, die Ihrem Filter entsprechen."] }, "No matching files": { msgid: "No matching files", msgstr: ["Keine passenden Dateien"] }, Recent: { msgid: "Recent", msgstr: ["Neueste"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Alle Einträge auswählen"] }, "Select entry": { msgid: "Select entry", msgstr: ["Eintrag auswählen"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Die Zeile für {nodename} auswählen."] }, Size: { msgid: "Size", msgstr: ["Größe"] }, Undo: { msgid: "Undo", msgstr: ["Rückgängig machen"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Laden Sie Inhalte hoch oder synchronisieren Sie diese mit Ihren Geräten!"] } } } } }, { locale: "el", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Greek (https://app.transifex.com/nextcloud/teams/64236/el/)", "Content-Type": "text/plain; charset=UTF-8", Language: "el", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Greek (https://app.transifex.com/nextcloud/teams/64236/el/)
Content-Type: text/plain; charset=UTF-8
Language: el
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Αναίρεση"] } } } } }, { locale: "en_GB", json: { charset: "utf-8", headers: { "Last-Translator": "Andi Chandler <andi@gowling.com>, 2024", "Language-Team": "English (United Kingdom) (https://app.transifex.com/nextcloud/teams/64236/en_GB/)", "Content-Type": "text/plain; charset=UTF-8", Language: "en_GB", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Café Tango, 2023
Andi Chandler <andi@gowling.com>, 2024
` }, msgstr: [`Last-Translator: Andi Chandler <andi@gowling.com>, 2024
Language-Team: English (United Kingdom) (https://app.transifex.com/nextcloud/teams/64236/en_GB/)
Content-Type: text/plain; charset=UTF-8
Language: en_GB
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" is an invalid folder name.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" is not an allowed folder name'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" is not allowed inside a folder name.'] }, "All files": { msgid: "All files", msgstr: ["All files"] }, Choose: { msgid: "Choose", msgstr: ["Choose"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Choose {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Choose %n file", "Choose %n files"] }, Copy: { msgid: "Copy", msgstr: ["Copy"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copy to {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Could not create the new folder"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Could not load files settings"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Could not load files views"] }, "Create directory": { msgid: "Create directory", msgstr: ["Create directory"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Current view selector"] }, Favorites: { msgid: "Favorites", msgstr: ["Favourites"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Files and folders you mark as favourite will show up here."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Files and folders you recently modified will show up here."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filter file list"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Folder name cannot be empty."] }, Home: { msgid: "Home", msgstr: ["Home"] }, Modified: { msgid: "Modified", msgstr: ["Modified"] }, Move: { msgid: "Move", msgstr: ["Move"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Move to {target}"] }, Name: { msgid: "Name", msgstr: ["Name"] }, New: { msgid: "New", msgstr: ["New"] }, "New folder": { msgid: "New folder", msgstr: ["New folder"] }, "New folder name": { msgid: "New folder name", msgstr: ["New folder name"] }, "No files in here": { msgid: "No files in here", msgstr: ["No files in here"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["No files matching your filter were found."] }, "No matching files": { msgid: "No matching files", msgstr: ["No matching files"] }, Recent: { msgid: "Recent", msgstr: ["Recent"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Select all entries"] }, "Select entry": { msgid: "Select entry", msgstr: ["Select entry"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Select the row for {nodename}"] }, Size: { msgid: "Size", msgstr: ["Size"] }, Undo: { msgid: "Undo", msgstr: ["Undo"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Upload some content or sync with your devices!"] } } } } }, { locale: "eo", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Esperanto (https://app.transifex.com/nextcloud/teams/64236/eo/)", "Content-Type": "text/plain; charset=UTF-8", Language: "eo", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Esperanto (https://app.transifex.com/nextcloud/teams/64236/eo/)
Content-Type: text/plain; charset=UTF-8
Language: eo
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Malfari"] } } } } }, { locale: "es", json: { charset: "utf-8", headers: { "Last-Translator": "Julio C. Ortega, 2024", "Language-Team": "Spanish (https://app.transifex.com/nextcloud/teams/64236/es/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
FranciscoFJ <dev-ooo@satel-sa.com>, 2023
Frenzel Alejandro Avalos Montes de Oca, 2024
Mark Ziegler <mark.ziegler@rakekniven.de>, 2024
Julio C. Ortega, 2024
` }, msgstr: [`Last-Translator: Julio C. Ortega, 2024
Language-Team: Spanish (https://app.transifex.com/nextcloud/teams/64236/es/)
Content-Type: text/plain; charset=UTF-8
Language: es
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" es un nombre de carpeta no válido.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" no es un nombre de carpeta permitido'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" no está permitido dentro del nombre de una carpeta.'] }, "All files": { msgid: "All files", msgstr: ["Todos los archivos"] }, Choose: { msgid: "Choose", msgstr: ["Seleccionar"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Seleccionar {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Elige %n archivo", "Elige %n archivos", "Seleccione %n archivos"] }, Copy: { msgid: "Copy", msgstr: ["Copiar"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copiar a {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["No se pudo crear la nueva carpeta"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["No se pudieron cargar las preferencias de archivos"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["No se pudieron cargar las vistas previas de los archivos"] }, "Create directory": { msgid: "Create directory", msgstr: ["Crear directorio"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Selector de vista actual"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritos"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Los archivos y carpetas que marque como favoritos aparecerán aquí."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Los archivos y carpetas que modificó recientemente aparecerán aquí."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrar lista de archivos"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["El nombre de la carpeta no puede estar vacío."] }, Home: { msgid: "Home", msgstr: ["Inicio"] }, Modified: { msgid: "Modified", msgstr: ["Modificado"] }, Move: { msgid: "Move", msgstr: ["Mover"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Mover a {target}"] }, Name: { msgid: "Name", msgstr: ["Nombre"] }, New: { msgid: "New", msgstr: ["Nuevo"] }, "New folder": { msgid: "New folder", msgstr: [" Nueva carpeta"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nuevo nombre de carpeta"] }, "No files in here": { msgid: "No files in here", msgstr: ["No hay archivos aquí"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["No se encontraron archivos que coincidiesen con su filtro."] }, "No matching files": { msgid: "No matching files", msgstr: ["No hay archivos coincidentes"] }, Recent: { msgid: "Recent", msgstr: ["Reciente"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Seleccionar todas las entradas"] }, "Select entry": { msgid: "Select entry", msgstr: ["Seleccionar entrada"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Seleccione la fila para {nodename}"] }, Size: { msgid: "Size", msgstr: ["Tamaño"] }, Undo: { msgid: "Undo", msgstr: ["Deshacer"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["¡Cargue algún contenido o sincronice con sus dispositivos!"] } } } } }, { locale: "es_419", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Latin America) (https://app.transifex.com/nextcloud/teams/64236/es_419/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_419", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Latin America) (https://app.transifex.com/nextcloud/teams/64236/es_419/)
Content-Type: text/plain; charset=UTF-8
Language: es_419
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_AR", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Spanish (Argentina) (https://app.transifex.com/nextcloud/teams/64236/es_AR/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_AR", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Spanish (Argentina) (https://app.transifex.com/nextcloud/teams/64236/es_AR/)
Content-Type: text/plain; charset=UTF-8
Language: es_AR
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Deshacer"] } } } } }, { locale: "es_CL", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Chile) (https://app.transifex.com/nextcloud/teams/64236/es_CL/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_CL", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Chile) (https://app.transifex.com/nextcloud/teams/64236/es_CL/)
Content-Type: text/plain; charset=UTF-8
Language: es_CL
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_CO", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Colombia) (https://app.transifex.com/nextcloud/teams/64236/es_CO/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_CO", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Colombia) (https://app.transifex.com/nextcloud/teams/64236/es_CO/)
Content-Type: text/plain; charset=UTF-8
Language: es_CO
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_CR", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Costa Rica) (https://app.transifex.com/nextcloud/teams/64236/es_CR/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_CR", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Costa Rica) (https://app.transifex.com/nextcloud/teams/64236/es_CR/)
Content-Type: text/plain; charset=UTF-8
Language: es_CR
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_DO", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Dominican Republic) (https://app.transifex.com/nextcloud/teams/64236/es_DO/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_DO", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Dominican Republic) (https://app.transifex.com/nextcloud/teams/64236/es_DO/)
Content-Type: text/plain; charset=UTF-8
Language: es_DO
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_EC", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Ecuador) (https://app.transifex.com/nextcloud/teams/64236/es_EC/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_EC", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Ecuador) (https://app.transifex.com/nextcloud/teams/64236/es_EC/)
Content-Type: text/plain; charset=UTF-8
Language: es_EC
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_GT", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Guatemala) (https://app.transifex.com/nextcloud/teams/64236/es_GT/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_GT", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Guatemala) (https://app.transifex.com/nextcloud/teams/64236/es_GT/)
Content-Type: text/plain; charset=UTF-8
Language: es_GT
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_HN", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Honduras) (https://app.transifex.com/nextcloud/teams/64236/es_HN/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_HN", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Honduras) (https://app.transifex.com/nextcloud/teams/64236/es_HN/)
Content-Type: text/plain; charset=UTF-8
Language: es_HN
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_MX", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Spanish (Mexico) (https://app.transifex.com/nextcloud/teams/64236/es_MX/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_MX", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Spanish (Mexico) (https://app.transifex.com/nextcloud/teams/64236/es_MX/)
Content-Type: text/plain; charset=UTF-8
Language: es_MX
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Deshacer"] } } } } }, { locale: "es_NI", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Nicaragua) (https://app.transifex.com/nextcloud/teams/64236/es_NI/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_NI", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Nicaragua) (https://app.transifex.com/nextcloud/teams/64236/es_NI/)
Content-Type: text/plain; charset=UTF-8
Language: es_NI
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_PA", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Panama) (https://app.transifex.com/nextcloud/teams/64236/es_PA/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_PA", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Panama) (https://app.transifex.com/nextcloud/teams/64236/es_PA/)
Content-Type: text/plain; charset=UTF-8
Language: es_PA
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_PE", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Peru) (https://app.transifex.com/nextcloud/teams/64236/es_PE/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_PE", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Peru) (https://app.transifex.com/nextcloud/teams/64236/es_PE/)
Content-Type: text/plain; charset=UTF-8
Language: es_PE
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_PR", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Puerto Rico) (https://app.transifex.com/nextcloud/teams/64236/es_PR/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_PR", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Puerto Rico) (https://app.transifex.com/nextcloud/teams/64236/es_PR/)
Content-Type: text/plain; charset=UTF-8
Language: es_PR
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_PY", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Paraguay) (https://app.transifex.com/nextcloud/teams/64236/es_PY/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_PY", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Paraguay) (https://app.transifex.com/nextcloud/teams/64236/es_PY/)
Content-Type: text/plain; charset=UTF-8
Language: es_PY
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_SV", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (El Salvador) (https://app.transifex.com/nextcloud/teams/64236/es_SV/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_SV", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (El Salvador) (https://app.transifex.com/nextcloud/teams/64236/es_SV/)
Content-Type: text/plain; charset=UTF-8
Language: es_SV
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "es_UY", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Spanish (Uruguay) (https://app.transifex.com/nextcloud/teams/64236/es_UY/)", "Content-Type": "text/plain; charset=UTF-8", Language: "es_UY", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Spanish (Uruguay) (https://app.transifex.com/nextcloud/teams/64236/es_UY/)
Content-Type: text/plain; charset=UTF-8
Language: es_UY
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "et_EE", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Estonian (Estonia) (https://app.transifex.com/nextcloud/teams/64236/et_EE/)", "Content-Type": "text/plain; charset=UTF-8", Language: "et_EE", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Estonian (Estonia) (https://app.transifex.com/nextcloud/teams/64236/et_EE/)
Content-Type: text/plain; charset=UTF-8
Language: et_EE
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "eu", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Basque (https://app.transifex.com/nextcloud/teams/64236/eu/)", "Content-Type": "text/plain; charset=UTF-8", Language: "eu", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Basque (https://app.transifex.com/nextcloud/teams/64236/eu/)
Content-Type: text/plain; charset=UTF-8
Language: eu
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Desegin"] } } } } }, { locale: "fa", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Persian (https://app.transifex.com/nextcloud/teams/64236/fa/)", "Content-Type": "text/plain; charset=UTF-8", Language: "fa", "Plural-Forms": "nplurals=2; plural=(n > 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Persian (https://app.transifex.com/nextcloud/teams/64236/fa/)
Content-Type: text/plain; charset=UTF-8
Language: fa
Plural-Forms: nplurals=2; plural=(n > 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["بازگردانی"] } } } } }, { locale: "fi_FI", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Finnish (Finland) (https://app.transifex.com/nextcloud/teams/64236/fi_FI/)", "Content-Type": "text/plain; charset=UTF-8", Language: "fi_FI", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Finnish (Finland) (https://app.transifex.com/nextcloud/teams/64236/fi_FI/)
Content-Type: text/plain; charset=UTF-8
Language: fi_FI
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Kumoa"] } } } } }, { locale: "fo", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Faroese (https://app.transifex.com/nextcloud/teams/64236/fo/)", "Content-Type": "text/plain; charset=UTF-8", Language: "fo", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Faroese (https://app.transifex.com/nextcloud/teams/64236/fo/)
Content-Type: text/plain; charset=UTF-8
Language: fo
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "fr", json: { charset: "utf-8", headers: { "Last-Translator": "fleopaul thp, 2023", "Language-Team": "French (https://app.transifex.com/nextcloud/teams/64236/fr/)", "Content-Type": "text/plain; charset=UTF-8", Language: "fr", "Plural-Forms": "nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Rémi LEBLOND, 2023
Mordecai, 2023
fleopaul thp, 2023
` }, msgstr: [`Last-Translator: fleopaul thp, 2023
Language-Team: French (https://app.transifex.com/nextcloud/teams/64236/fr/)
Content-Type: text/plain; charset=UTF-8
Language: fr
Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["« {name} » n'est pas un nom de dossier valide."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["« {name} » n'est pas un nom de dossier autorisé."] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["Le caractère « / » n'est pas autorisé dans un nom de dossier."] }, "All files": { msgid: "All files", msgstr: ["Tous les fichiers"] }, Choose: { msgid: "Choose", msgstr: ["Choisir"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Choisir {file}"] }, Copy: { msgid: "Copy", msgstr: ["Copier"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copier vers {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Impossible de créer le nouveau dossier"] }, "Create directory": { msgid: "Create directory", msgstr: ["Créer un répertoire"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Sélecteur de vue courante"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoris"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Les fichiers et répertoires marqués en favoris apparaîtront ici."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Les fichiers et répertoires modifiés récemment apparaîtront ici."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Liste de filtre de fichiers"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Le nom du dossier ne peut pas être vide."] }, Home: { msgid: "Home", msgstr: ["Accueil"] }, Modified: { msgid: "Modified", msgstr: ["Modifié"] }, Move: { msgid: "Move", msgstr: ["Déplacer"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Déplacer vers {target}"] }, Name: { msgid: "Name", msgstr: ["Nom"] }, New: { msgid: "New", msgstr: ["Nouveau"] }, "New folder": { msgid: "New folder", msgstr: ["Nouveau répertoire"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nom du nouveau répertoire"] }, "No files in here": { msgid: "No files in here", msgstr: ["Aucun fichier ici"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Aucun fichier trouvé correspondant à votre filtre."] }, "No matching files": { msgid: "No matching files", msgstr: ["Aucun fichier trouvé"] }, Recent: { msgid: "Recent", msgstr: ["Récents"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Tous sélectionner"] }, "Select entry": { msgid: "Select entry", msgstr: ["Sélectionner une entrée"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Sélectionner l'enregistrement pour {nodename}"] }, Size: { msgid: "Size", msgstr: ["Taille"] }, Undo: { msgid: "Undo", msgstr: ["Rétablir"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Charger du contenu ou synchroniser avec vos équipements !"] } } } } }, { locale: "gd", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Gaelic, Scottish (https://app.transifex.com/nextcloud/teams/64236/gd/)", "Content-Type": "text/plain; charset=UTF-8", Language: "gd", "Plural-Forms": "nplurals=4; plural=(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Gaelic, Scottish (https://app.transifex.com/nextcloud/teams/64236/gd/)
Content-Type: text/plain; charset=UTF-8
Language: gd
Plural-Forms: nplurals=4; plural=(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "gl", json: { charset: "utf-8", headers: { "Last-Translator": "Miguel Anxo Bouzada <mbouzada@gmail.com>, 2024", "Language-Team": "Galician (https://app.transifex.com/nextcloud/teams/64236/gl/)", "Content-Type": "text/plain; charset=UTF-8", Language: "gl", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Miguel Anxo Bouzada <mbouzada@gmail.com>, 2024
` }, msgstr: [`Last-Translator: Miguel Anxo Bouzada <mbouzada@gmail.com>, 2024
Language-Team: Galician (https://app.transifex.com/nextcloud/teams/64236/gl/)
Content-Type: text/plain; charset=UTF-8
Language: gl
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["«{name}» non é un nome de cartafol válido."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["«{name}» non é un nome de cartafol permitido"] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["A «/» non está permitida no nome dun cartafol."] }, "All files": { msgid: "All files", msgstr: ["Todos os ficheiros"] }, Choose: { msgid: "Choose", msgstr: ["Escoller"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Escoller {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Escoller %n ficheiro", "Escoller %n ficheiros"] }, Copy: { msgid: "Copy", msgstr: ["Copiar"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copiar en  {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Non foi posíbel crear o novo cartafol"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Non foi posíbel cargar os axustes dos ficheiros"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Non foi posíbel cargar as vistas dos ficheiros"] }, "Create directory": { msgid: "Create directory", msgstr: ["Crear un directorio"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Selector de vista actual"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritos"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Os ficheiros e cartafoles que marque como favoritos aparecerán aquí."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Os ficheiros e cartafoles que modificou recentemente aparecerán aquí."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrar a lista de ficheiros"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["O nome do cartafol non pode estar baleiro."] }, Home: { msgid: "Home", msgstr: ["Inicio"] }, Modified: { msgid: "Modified", msgstr: ["Modificado"] }, Move: { msgid: "Move", msgstr: ["Mover"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Mover cara a {target}"] }, Name: { msgid: "Name", msgstr: ["Nome"] }, New: { msgid: "New", msgstr: ["Novo"] }, "New folder": { msgid: "New folder", msgstr: ["Novo cartafol"] }, "New folder name": { msgid: "New folder name", msgstr: ["Novo nome do cartafol"] }, "No files in here": { msgid: "No files in here", msgstr: ["Aquí non hai ficheiros"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Non se atopou ningún ficheiro que coincida co filtro."] }, "No matching files": { msgid: "No matching files", msgstr: ["Non hai ficheiros coincidentes"] }, Recent: { msgid: "Recent", msgstr: ["Recente"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Seleccionar todas as entradas"] }, "Select entry": { msgid: "Select entry", msgstr: ["Seleccionar a entrada"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Seleccionar a fila para {nodename}"] }, Size: { msgid: "Size", msgstr: ["Tamaño"] }, Undo: { msgid: "Undo", msgstr: ["Desfacer"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Enviar algún contido ou sincronizalo cos seus dispositivos!"] } } } } }, { locale: "he", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Hebrew (https://app.transifex.com/nextcloud/teams/64236/he/)", "Content-Type": "text/plain; charset=UTF-8", Language: "he", "Plural-Forms": "nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n == 2 && n % 1 == 0) ? 1: (n % 10 == 0 && n % 1 == 0 && n > 10) ? 2 : 3;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Hebrew (https://app.transifex.com/nextcloud/teams/64236/he/)
Content-Type: text/plain; charset=UTF-8
Language: he
Plural-Forms: nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n == 2 && n % 1 == 0) ? 1: (n % 10 == 0 && n % 1 == 0 && n > 10) ? 2 : 3;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["ביטול"] } } } } }, { locale: "hi_IN", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Hindi (India) (https://app.transifex.com/nextcloud/teams/64236/hi_IN/)", "Content-Type": "text/plain; charset=UTF-8", Language: "hi_IN", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Hindi (India) (https://app.transifex.com/nextcloud/teams/64236/hi_IN/)
Content-Type: text/plain; charset=UTF-8
Language: hi_IN
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "hr", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Croatian (https://app.transifex.com/nextcloud/teams/64236/hr/)", "Content-Type": "text/plain; charset=UTF-8", Language: "hr", "Plural-Forms": "nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Croatian (https://app.transifex.com/nextcloud/teams/64236/hr/)
Content-Type: text/plain; charset=UTF-8
Language: hr
Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "hsb", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Upper Sorbian (https://app.transifex.com/nextcloud/teams/64236/hsb/)", "Content-Type": "text/plain; charset=UTF-8", Language: "hsb", "Plural-Forms": "nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Upper Sorbian (https://app.transifex.com/nextcloud/teams/64236/hsb/)
Content-Type: text/plain; charset=UTF-8
Language: hsb
Plural-Forms: nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "hu_HU", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Hungarian (Hungary) (https://app.transifex.com/nextcloud/teams/64236/hu_HU/)", "Content-Type": "text/plain; charset=UTF-8", Language: "hu_HU", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Hungarian (Hungary) (https://app.transifex.com/nextcloud/teams/64236/hu_HU/)
Content-Type: text/plain; charset=UTF-8
Language: hu_HU
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Visszavonás"] } } } } }, { locale: "hy", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Armenian (https://app.transifex.com/nextcloud/teams/64236/hy/)", "Content-Type": "text/plain; charset=UTF-8", Language: "hy", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Armenian (https://app.transifex.com/nextcloud/teams/64236/hy/)
Content-Type: text/plain; charset=UTF-8
Language: hy
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "ia", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Interlingua (https://app.transifex.com/nextcloud/teams/64236/ia/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ia", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Interlingua (https://app.transifex.com/nextcloud/teams/64236/ia/)
Content-Type: text/plain; charset=UTF-8
Language: ia
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "id", json: { charset: "utf-8", headers: { "Last-Translator": "Lun May, 2024", "Language-Team": "Indonesian (https://app.transifex.com/nextcloud/teams/64236/id/)", "Content-Type": "text/plain; charset=UTF-8", Language: "id", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Linerly <linerly@proton.me>, 2023
Lun May, 2024
` }, msgstr: [`Last-Translator: Lun May, 2024
Language-Team: Indonesian (https://app.transifex.com/nextcloud/teams/64236/id/)
Content-Type: text/plain; charset=UTF-8
Language: id
Plural-Forms: nplurals=1; plural=0;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" bukan nama folder yang valid.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" merupakan nama folder yang tidak diperbolehkan'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" tidak diperbolehkan di dalam nama folder.'] }, "All files": { msgid: "All files", msgstr: ["Semua berkas"] }, Choose: { msgid: "Choose", msgstr: ["Pilih"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Pilih {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Pilih %n file"] }, Copy: { msgid: "Copy", msgstr: ["Salin"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Salin ke {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Tidak dapat membuat folder baru"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Tidak dapat memuat pengaturan file"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Tidak dapat memuat tampilan file"] }, "Create directory": { msgid: "Create directory", msgstr: ["Buat direktori"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Pemilih tampilan saat ini"] }, Favorites: { msgid: "Favorites", msgstr: ["Favorit"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Berkas dan folder yang Anda tandai sebagai favorit akan muncul di sini."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Berkas dan folder yang Anda ubah baru-baru ini akan muncul di sini."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Saring daftar berkas"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Name berkas tidak boleh kosong."] }, Home: { msgid: "Home", msgstr: ["Beranda"] }, Modified: { msgid: "Modified", msgstr: ["Diubah"] }, Move: { msgid: "Move", msgstr: ["Pindahkan"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Pindahkan ke {target}"] }, Name: { msgid: "Name", msgstr: ["Nama"] }, New: { msgid: "New", msgstr: ["Baru"] }, "New folder": { msgid: "New folder", msgstr: ["Folder baru"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nama folder baru"] }, "No files in here": { msgid: "No files in here", msgstr: ["Tidak ada berkas di sini"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Tidak ada berkas yang cocok dengan penyaringan Anda."] }, "No matching files": { msgid: "No matching files", msgstr: ["Tidak ada berkas yang cocok"] }, Recent: { msgid: "Recent", msgstr: ["Terkini"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Pilih semua entri"] }, "Select entry": { msgid: "Select entry", msgstr: ["Pilih entri"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Pilih baris untuk {nodename}"] }, Size: { msgid: "Size", msgstr: ["Ukuran"] }, Undo: { msgid: "Undo", msgstr: ["Tidak jadi"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Unggah beberapa konten atau sinkronkan dengan perangkat Anda!"] } } } } }, { locale: "ig", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Igbo (https://app.transifex.com/nextcloud/teams/64236/ig/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ig", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Igbo (https://app.transifex.com/nextcloud/teams/64236/ig/)
Content-Type: text/plain; charset=UTF-8
Language: ig
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "is", json: { charset: "utf-8", headers: { "Last-Translator": "Sveinn í Felli <sv1@fellsnet.is>, 2023", "Language-Team": "Icelandic (https://app.transifex.com/nextcloud/teams/64236/is/)", "Content-Type": "text/plain; charset=UTF-8", Language: "is", "Plural-Forms": "nplurals=2; plural=(n % 10 != 1 || n % 100 == 11);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Sveinn í Felli <sv1@fellsnet.is>, 2023
` }, msgstr: [`Last-Translator: Sveinn í Felli <sv1@fellsnet.is>, 2023
Language-Team: Icelandic (https://app.transifex.com/nextcloud/teams/64236/is/)
Content-Type: text/plain; charset=UTF-8
Language: is
Plural-Forms: nplurals=2; plural=(n % 10 != 1 || n % 100 == 11);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" er ógilt möppuheiti.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" er ekki leyfilegt möppuheiti'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" er er ekki leyfilegt innan í skráarheiti.'] }, "All files": { msgid: "All files", msgstr: ["Allar skrár"] }, Choose: { msgid: "Choose", msgstr: ["Veldu"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Veldu {file}"] }, Copy: { msgid: "Copy", msgstr: ["Afrita"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Afrita í {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Get ekki búið til nýju möppuna"] }, "Create directory": { msgid: "Create directory", msgstr: ["Búa til möppu"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Núverandi val sýnar"] }, Favorites: { msgid: "Favorites", msgstr: ["Eftirlæti"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Skrár og möppur sem þú merkir sem eftirlæti birtast hér."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Skrár og möppur sem þú breyttir nýlega birtast hér."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Sía skráalista"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Möppuheiti má ekki vera tómt."] }, Home: { msgid: "Home", msgstr: ["Heim"] }, Modified: { msgid: "Modified", msgstr: ["Breytt"] }, Move: { msgid: "Move", msgstr: ["Færa"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Færa í {target}"] }, Name: { msgid: "Name", msgstr: ["Heiti"] }, New: { msgid: "New", msgstr: ["Nýtt"] }, "New folder": { msgid: "New folder", msgstr: ["Ný mappa"] }, "New folder name": { msgid: "New folder name", msgstr: ["Heiti nýrrar möppu"] }, "No files in here": { msgid: "No files in here", msgstr: ["Engar skrár hér"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Engar skrár fundust sem passa við síuna."] }, "No matching files": { msgid: "No matching files", msgstr: ["Engar samsvarandi skrár"] }, Recent: { msgid: "Recent", msgstr: ["Nýlegt"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Velja allar færslur"] }, "Select entry": { msgid: "Select entry", msgstr: ["Velja færslu"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Veldu röðina fyrir {nodename}"] }, Size: { msgid: "Size", msgstr: ["Stærð"] }, Undo: { msgid: "Undo", msgstr: ["Afturkalla"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Sendu inn eitthvað efni eða samstilltu við tækin þín!"] } } } } }, { locale: "it", json: { charset: "utf-8", headers: { "Last-Translator": "Raffaele Silano <raffaelone@gmail.com>, 2024", "Language-Team": "Italian (https://app.transifex.com/nextcloud/teams/64236/it/)", "Content-Type": "text/plain; charset=UTF-8", Language: "it", "Plural-Forms": "nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Claudio Scandella, 2023
Raffaele Silano <raffaelone@gmail.com>, 2024
` }, msgstr: [`Last-Translator: Raffaele Silano <raffaelone@gmail.com>, 2024
Language-Team: Italian (https://app.transifex.com/nextcloud/teams/64236/it/)
Content-Type: text/plain; charset=UTF-8
Language: it
Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" non è un nome di cartella valido.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}"  non è un nome di cartella ammesso'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: [`"/" non è ammesso all'interno del nome di una cartella.`] }, "All files": { msgid: "All files", msgstr: ["Tutti i file"] }, Choose: { msgid: "Choose", msgstr: ["Scegli"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Scegli {file}"] }, Copy: { msgid: "Copy", msgstr: ["Copia"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copia in {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Impossibile creare la nuova cartella"] }, "Create directory": { msgid: "Create directory", msgstr: ["Crea directory"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Selettore della vista corrente"] }, Favorites: { msgid: "Favorites", msgstr: ["Preferiti"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["I file e le cartelle contrassegnate come preferite saranno mostrate qui."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["I file e le cartelle che hai modificato di recente saranno mostrate qui."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtra elenco file"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Il nome della cartella non può essere vuoto."] }, Home: { msgid: "Home", msgstr: ["Home"] }, Modified: { msgid: "Modified", msgstr: ["Modificato"] }, Move: { msgid: "Move", msgstr: ["Sposta"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Sposta in {target}"] }, Name: { msgid: "Name", msgstr: ["Nome"] }, New: { msgid: "New", msgstr: ["Nuovo"] }, "New folder": { msgid: "New folder", msgstr: ["Nuova cartella"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nuovo nome cartella"] }, "No files in here": { msgid: "No files in here", msgstr: ["Nessun file qui"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nessun file che corrisponde al tuo filtro è stato trovato."] }, "No matching files": { msgid: "No matching files", msgstr: ["Nessun file corrispondente"] }, Recent: { msgid: "Recent", msgstr: ["Recente"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Scegli tutte le voci"] }, "Select entry": { msgid: "Select entry", msgstr: ["Seleziona la voce"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Seleziona la riga per {nodename}"] }, Size: { msgid: "Size", msgstr: ["Taglia/dimensioni"] }, Undo: { msgid: "Undo", msgstr: ["Annulla"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Carica qualche contenuto o sincronizza con i tuoi dispositivi!"] } } } } }, { locale: "ja_JP", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Japanese (Japan) (https://app.transifex.com/nextcloud/teams/64236/ja_JP/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ja_JP", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Japanese (Japan) (https://app.transifex.com/nextcloud/teams/64236/ja_JP/)
Content-Type: text/plain; charset=UTF-8
Language: ja_JP
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["元に戻す"] } } } } }, { locale: "ka", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Georgian (https://app.transifex.com/nextcloud/teams/64236/ka/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ka", "Plural-Forms": "nplurals=2; plural=(n!=1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Georgian (https://app.transifex.com/nextcloud/teams/64236/ka/)
Content-Type: text/plain; charset=UTF-8
Language: ka
Plural-Forms: nplurals=2; plural=(n!=1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "ka_GE", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Georgian (Georgia) (https://app.transifex.com/nextcloud/teams/64236/ka_GE/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ka_GE", "Plural-Forms": "nplurals=2; plural=(n!=1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Georgian (Georgia) (https://app.transifex.com/nextcloud/teams/64236/ka_GE/)
Content-Type: text/plain; charset=UTF-8
Language: ka_GE
Plural-Forms: nplurals=2; plural=(n!=1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "kab", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Kabyle (https://app.transifex.com/nextcloud/teams/64236/kab/)", "Content-Type": "text/plain; charset=UTF-8", Language: "kab", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Kabyle (https://app.transifex.com/nextcloud/teams/64236/kab/)
Content-Type: text/plain; charset=UTF-8
Language: kab
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Sefsex"] } } } } }, { locale: "kk", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Kazakh (https://app.transifex.com/nextcloud/teams/64236/kk/)", "Content-Type": "text/plain; charset=UTF-8", Language: "kk", "Plural-Forms": "nplurals=2; plural=(n!=1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Kazakh (https://app.transifex.com/nextcloud/teams/64236/kk/)
Content-Type: text/plain; charset=UTF-8
Language: kk
Plural-Forms: nplurals=2; plural=(n!=1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "km", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Khmer (https://app.transifex.com/nextcloud/teams/64236/km/)", "Content-Type": "text/plain; charset=UTF-8", Language: "km", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Khmer (https://app.transifex.com/nextcloud/teams/64236/km/)
Content-Type: text/plain; charset=UTF-8
Language: km
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "kn", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Kannada (https://app.transifex.com/nextcloud/teams/64236/kn/)", "Content-Type": "text/plain; charset=UTF-8", Language: "kn", "Plural-Forms": "nplurals=2; plural=(n > 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Kannada (https://app.transifex.com/nextcloud/teams/64236/kn/)
Content-Type: text/plain; charset=UTF-8
Language: kn
Plural-Forms: nplurals=2; plural=(n > 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "ko", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Korean (https://app.transifex.com/nextcloud/teams/64236/ko/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ko", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Korean (https://app.transifex.com/nextcloud/teams/64236/ko/)
Content-Type: text/plain; charset=UTF-8
Language: ko
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["되돌리기"] } } } } }, { locale: "la", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Latin (https://app.transifex.com/nextcloud/teams/64236/la/)", "Content-Type": "text/plain; charset=UTF-8", Language: "la", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Latin (https://app.transifex.com/nextcloud/teams/64236/la/)
Content-Type: text/plain; charset=UTF-8
Language: la
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "lb", json: { charset: "utf-8", headers: { "Last-Translator": "VoXaN24ch, 2024", "Language-Team": "Luxembourgish (https://app.transifex.com/nextcloud/teams/64236/lb/)", "Content-Type": "text/plain; charset=UTF-8", Language: "lb", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
VoXaN24ch, 2024
` }, msgstr: [`Last-Translator: VoXaN24ch, 2024
Language-Team: Luxembourgish (https://app.transifex.com/nextcloud/teams/64236/lb/)
Content-Type: text/plain; charset=UTF-8
Language: lb
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["{name} ass en ongëlteg Dossier"] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["{name} ass net en erlaabten Dossiernumm"] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" ass net an engem Dossier Numm erlaabt'] }, "All files": { msgid: "All files", msgstr: ["All Dateien"] }, Choose: { msgid: "Choose", msgstr: ["Wielt"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Wielt {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Wielt %n Fichieren", "Wielt %n Fichier"] }, Copy: { msgid: "Copy", msgstr: ["Kopie"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopie op {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Konnt den neien Dossier net erstellen"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Konnt d'Dateienastellungen net lueden"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Konnt d'Dateien net lueden"] }, "Create directory": { msgid: "Create directory", msgstr: ["Erstellt Verzeechnes"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Aktuell Vue selector"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritten"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Dateien an Ordner, déi Dir als Favorit markéiert, ginn hei gewisen"] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Dateien an Ordner déi Dir viru kuerzem geännert hutt ginn hei op"] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filter Datei Lëscht"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Dossier Numm kann net eidel sinn"] }, Home: { msgid: "Home", msgstr: ["Wëllkomm"] }, Modified: { msgid: "Modified", msgstr: ["Geännert"] }, Move: { msgid: "Move", msgstr: ["Plënne"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Plënneren {target}"] }, Name: { msgid: "Name", msgstr: ["Numm"] }, New: { msgid: "New", msgstr: ["Nei"] }, "New folder": { msgid: "New folder", msgstr: ["Neien dossier"] }, "New folder name": { msgid: "New folder name", msgstr: ["Neien dossier numm"] }, "No files in here": { msgid: "No files in here", msgstr: ["Kee fichier hei"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Kee fichier deen äre filter passt gouf fonnt"] }, "No matching files": { msgid: "No matching files", msgstr: ["Keng passende dateien"] }, Recent: { msgid: "Recent", msgstr: ["Rezent"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Wielt all entréen"] }, "Select entry": { msgid: "Select entry", msgstr: ["Wielt entrée"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Wielt d'zeil fir {nodename}"] }, Size: { msgid: "Size", msgstr: ["Gréisst"] }, Undo: { msgid: "Undo", msgstr: ["Undoen"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Luet en inhalt erop oder synchroniséiert mat ären apparater"] } } } } }, { locale: "lo", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Lao (https://app.transifex.com/nextcloud/teams/64236/lo/)", "Content-Type": "text/plain; charset=UTF-8", Language: "lo", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Lao (https://app.transifex.com/nextcloud/teams/64236/lo/)
Content-Type: text/plain; charset=UTF-8
Language: lo
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "lt_LT", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Lithuanian (Lithuania) (https://app.transifex.com/nextcloud/teams/64236/lt_LT/)", "Content-Type": "text/plain; charset=UTF-8", Language: "lt_LT", "Plural-Forms": "nplurals=4; plural=(n % 10 == 1 && (n % 100 > 19 || n % 100 < 11) ? 0 : (n % 10 >= 2 && n % 10 <=9) && (n % 100 > 19 || n % 100 < 11) ? 1 : n % 1 != 0 ? 2: 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Lithuanian (Lithuania) (https://app.transifex.com/nextcloud/teams/64236/lt_LT/)
Content-Type: text/plain; charset=UTF-8
Language: lt_LT
Plural-Forms: nplurals=4; plural=(n % 10 == 1 && (n % 100 > 19 || n % 100 < 11) ? 0 : (n % 10 >= 2 && n % 10 <=9) && (n % 100 > 19 || n % 100 < 11) ? 1 : n % 1 != 0 ? 2: 3);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Atšaukti"] } } } } }, { locale: "lv", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Latvian (https://app.transifex.com/nextcloud/teams/64236/lv/)", "Content-Type": "text/plain; charset=UTF-8", Language: "lv", "Plural-Forms": "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Latvian (https://app.transifex.com/nextcloud/teams/64236/lv/)
Content-Type: text/plain; charset=UTF-8
Language: lv
Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "mk", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Macedonian (https://app.transifex.com/nextcloud/teams/64236/mk/)", "Content-Type": "text/plain; charset=UTF-8", Language: "mk", "Plural-Forms": "nplurals=2; plural=(n % 10 == 1 && n % 100 != 11) ? 0 : 1;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Macedonian (https://app.transifex.com/nextcloud/teams/64236/mk/)
Content-Type: text/plain; charset=UTF-8
Language: mk
Plural-Forms: nplurals=2; plural=(n % 10 == 1 && n % 100 != 11) ? 0 : 1;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Врати"] } } } } }, { locale: "mn", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Mongolian (https://app.transifex.com/nextcloud/teams/64236/mn/)", "Content-Type": "text/plain; charset=UTF-8", Language: "mn", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Mongolian (https://app.transifex.com/nextcloud/teams/64236/mn/)
Content-Type: text/plain; charset=UTF-8
Language: mn
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Буцаах"] } } } } }, { locale: "mr", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Marathi (https://app.transifex.com/nextcloud/teams/64236/mr/)", "Content-Type": "text/plain; charset=UTF-8", Language: "mr", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Marathi (https://app.transifex.com/nextcloud/teams/64236/mr/)
Content-Type: text/plain; charset=UTF-8
Language: mr
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["पूर्ववत करा"] } } } } }, { locale: "ms_MY", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Malay (Malaysia) (https://app.transifex.com/nextcloud/teams/64236/ms_MY/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ms_MY", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Malay (Malaysia) (https://app.transifex.com/nextcloud/teams/64236/ms_MY/)
Content-Type: text/plain; charset=UTF-8
Language: ms_MY
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "my", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Burmese (https://app.transifex.com/nextcloud/teams/64236/my/)", "Content-Type": "text/plain; charset=UTF-8", Language: "my", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Burmese (https://app.transifex.com/nextcloud/teams/64236/my/)
Content-Type: text/plain; charset=UTF-8
Language: my
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["နဂိုအတိုင်းပြန်ထားရန်"] } } } } }, { locale: "nb_NO", json: { charset: "utf-8", headers: { "Last-Translator": "armandg <geirawsm@pm.me>, 2024", "Language-Team": "Norwegian Bokmål (Norway) (https://app.transifex.com/nextcloud/teams/64236/nb_NO/)", "Content-Type": "text/plain; charset=UTF-8", Language: "nb_NO", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
D PE, 2023
Syvert Fossdal, 2024
armandg <geirawsm@pm.me>, 2024
` }, msgstr: [`Last-Translator: armandg <geirawsm@pm.me>, 2024
Language-Team: Norwegian Bokmål (Norway) (https://app.transifex.com/nextcloud/teams/64236/nb_NO/)
Content-Type: text/plain; charset=UTF-8
Language: nb_NO
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" er et ugyldig mappenavn.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" er ikke et tillatt mappenavn.'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" er ikke tillatt inne i et mappenavn.'] }, "All files": { msgid: "All files", msgstr: ["Alle filer"] }, Choose: { msgid: "Choose", msgstr: ["Velg"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Velg {fil}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Velg %n fil", "Velg %n filer"] }, Copy: { msgid: "Copy", msgstr: ["Kopier"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopier til {destinasjon}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Kunne ikke opprette den nye mappen"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Kunne ikke laste filinnstillinger"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Kunne ikke laste filvisninger"] }, "Create directory": { msgid: "Create directory", msgstr: ["Opprett mappe"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Nåværende visningsvelger"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritter"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Filer og mapper du markerer som favoritter vil vises her."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Filer og mapper du nylig har endret, vil vises her."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrer filliste"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Mappenavn kan ikke være tomt."] }, Home: { msgid: "Home", msgstr: ["Hjem"] }, Modified: { msgid: "Modified", msgstr: ["Modifisert"] }, Move: { msgid: "Move", msgstr: ["Flytt"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Flytt til {destinasjon}"] }, Name: { msgid: "Name", msgstr: ["Navn"] }, New: { msgid: "New", msgstr: ["Ny"] }, "New folder": { msgid: "New folder", msgstr: ["Ny mappe"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nytt mappenavn"] }, "No files in here": { msgid: "No files in here", msgstr: ["Ingen filer her"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Ingen filer funnet med ditt filter."] }, "No matching files": { msgid: "No matching files", msgstr: ["Ingen treffende filer"] }, Recent: { msgid: "Recent", msgstr: ["Nylig"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Velg alle oppføringer"] }, "Select entry": { msgid: "Select entry", msgstr: ["Velg oppføring"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Velg raden for {nodenavn}"] }, Size: { msgid: "Size", msgstr: ["Størrelse"] }, Undo: { msgid: "Undo", msgstr: ["Angre"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Last opp innhold eller synkroniser med enhetene dine!"] } } } } }, { locale: "ne", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Nepali (https://app.transifex.com/nextcloud/teams/64236/ne/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ne", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Nepali (https://app.transifex.com/nextcloud/teams/64236/ne/)
Content-Type: text/plain; charset=UTF-8
Language: ne
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "nl", json: { charset: "utf-8", headers: { "Last-Translator": "Casper <casper@vrije-mens.org>, 2024", "Language-Team": "Dutch (https://app.transifex.com/nextcloud/teams/64236/nl/)", "Content-Type": "text/plain; charset=UTF-8", Language: "nl", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Joost <joho500@hotmail.com>, 2023
Jeroen Gui, 2023
Casper <casper@vrije-mens.org>, 2024
` }, msgstr: [`Last-Translator: Casper <casper@vrije-mens.org>, 2024
Language-Team: Dutch (https://app.transifex.com/nextcloud/teams/64236/nl/)
Content-Type: text/plain; charset=UTF-8
Language: nl
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" is een ongeldige mapnaam.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" is geen toegestane mapnaam'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" is niet toegestaan binnen een bestandsnaam'] }, "All files": { msgid: "All files", msgstr: ["Alle bestanden"] }, Choose: { msgid: "Choose", msgstr: ["Kies"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Kies {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Kies %n bestand", "Kies %n bestanden"] }, Copy: { msgid: "Copy", msgstr: ["Kopieer"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopieer naar {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Kon de nieuwe map niet maken"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Kon de bestandsinstellingen niet laden"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Kon de bestandsweergaves niet laden"] }, "Create directory": { msgid: "Create directory", msgstr: ["Maak map"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Huidige weergave keuze"] }, Favorites: { msgid: "Favorites", msgstr: ["Favorieten"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Bestanden en mappen die je favoriet maakt, worden hier getoond."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Bestanden en mappen die je recent hebt gewijzigd, worden hier getoond."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filter bestandslijst"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Mapnaam mag niet leeg zijn."] }, Home: { msgid: "Home", msgstr: ["Home"] }, Modified: { msgid: "Modified", msgstr: ["Gewijzigd"] }, Move: { msgid: "Move", msgstr: ["Verplaatsen"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Verplaats naar {target}"] }, Name: { msgid: "Name", msgstr: ["Naam"] }, New: { msgid: "New", msgstr: ["Nieuw"] }, "New folder": { msgid: "New folder", msgstr: ["Nieuwe map"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nieuwe mapnaam"] }, "No files in here": { msgid: "No files in here", msgstr: ["Geen bestanden hier"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Geen bestanden gevonden die voldoen aan je filter."] }, "No matching files": { msgid: "No matching files", msgstr: ["Geen gevonden bestanden"] }, Recent: { msgid: "Recent", msgstr: ["Recent"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Selecteer alle invoer"] }, "Select entry": { msgid: "Select entry", msgstr: ["Selecteer invoer"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Selecteer de rij voor {nodename}"] }, Size: { msgid: "Size", msgstr: ["Grootte"] }, Undo: { msgid: "Undo", msgstr: ["Ongedaan maken"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Upload inhoud of synchroniseer met je apparaten!"] } } } } }, { locale: "nn_NO", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Norwegian Nynorsk (Norway) (https://app.transifex.com/nextcloud/teams/64236/nn_NO/)", "Content-Type": "text/plain; charset=UTF-8", Language: "nn_NO", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Norwegian Nynorsk (Norway) (https://app.transifex.com/nextcloud/teams/64236/nn_NO/)
Content-Type: text/plain; charset=UTF-8
Language: nn_NO
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "oc", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Occitan (post 1500) (https://app.transifex.com/nextcloud/teams/64236/oc/)", "Content-Type": "text/plain; charset=UTF-8", Language: "oc", "Plural-Forms": "nplurals=2; plural=(n > 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Occitan (post 1500) (https://app.transifex.com/nextcloud/teams/64236/oc/)
Content-Type: text/plain; charset=UTF-8
Language: oc
Plural-Forms: nplurals=2; plural=(n > 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Anullar"] } } } } }, { locale: "pl", json: { charset: "utf-8", headers: { "Last-Translator": "Valdnet, 2024", "Language-Team": "Polish (https://app.transifex.com/nextcloud/teams/64236/pl/)", "Content-Type": "text/plain; charset=UTF-8", Language: "pl", "Plural-Forms": "nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
JUJER wtf, 2023
M H <haincu@o2.pl>, 2023
Valdnet, 2024
` }, msgstr: [`Last-Translator: Valdnet, 2024
Language-Team: Polish (https://app.transifex.com/nextcloud/teams/64236/pl/)
Content-Type: text/plain; charset=UTF-8
Language: pl
Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" jest nieprawidłową nazwą folderu'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" nie jest dozwoloną nazwą folderu'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['Znak "/" nie jest dozwolony w nazwie folderu'] }, "All files": { msgid: "All files", msgstr: ["Wszystkie pliki"] }, Choose: { msgid: "Choose", msgstr: ["Wybierz"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Wybierz {file}"] }, Copy: { msgid: "Copy", msgstr: ["Kopiuj"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Skopiuj do {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Nie można utworzyć nowego folderu"] }, "Create directory": { msgid: "Create directory", msgstr: ["Utwórz katalog"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Bieżący selektor widoku"] }, Favorites: { msgid: "Favorites", msgstr: ["Ulubione"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Pliki i foldery które oznaczysz jako ulubione będą wyświetlały się tutaj"] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Pliki i foldery które ostatnio modyfikowałeś będą wyświetlały się tutaj"] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtruj listę plików"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Nazwa folderu nie może być pusta"] }, Home: { msgid: "Home", msgstr: ["Strona główna"] }, Modified: { msgid: "Modified", msgstr: ["Zmodyfikowano"] }, Move: { msgid: "Move", msgstr: ["Przenieś"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Przejdź do {target}"] }, Name: { msgid: "Name", msgstr: ["Nazwa"] }, New: { msgid: "New", msgstr: ["Nowy"] }, "New folder": { msgid: "New folder", msgstr: ["Nowy folder"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nowa nazwa folderu"] }, "No files in here": { msgid: "No files in here", msgstr: ["Brak plików"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nie znaleziono plików spełniających warunki filtru"] }, "No matching files": { msgid: "No matching files", msgstr: ["Brak pasujących plików"] }, Recent: { msgid: "Recent", msgstr: ["Ostatni"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Wybierz wszystkie wpisy"] }, "Select entry": { msgid: "Select entry", msgstr: ["Wybierz wpis"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Wybierz wiersz dla {nodename}"] }, Size: { msgid: "Size", msgstr: ["Rozmiar"] }, Undo: { msgid: "Undo", msgstr: ["Cofnij"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Wyślij zawartość lub zsynchronizuj ze swoimi urządzeniami!"] } } } } }, { locale: "ps", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Pashto (https://app.transifex.com/nextcloud/teams/64236/ps/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ps", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Pashto (https://app.transifex.com/nextcloud/teams/64236/ps/)
Content-Type: text/plain; charset=UTF-8
Language: ps
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "pt_BR", json: { charset: "utf-8", headers: { "Last-Translator": "Cauan Henrique Zorzenon <cauanzorzenon@gmail.com>, 2024", "Language-Team": "Portuguese (Brazil) (https://app.transifex.com/nextcloud/teams/64236/pt_BR/)", "Content-Type": "text/plain; charset=UTF-8", Language: "pt_BR", "Plural-Forms": "nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Flávio Veras <flaviove@gmail.com>, 2023
Cauan Henrique Zorzenon <cauanzorzenon@gmail.com>, 2024
` }, msgstr: [`Last-Translator: Cauan Henrique Zorzenon <cauanzorzenon@gmail.com>, 2024
Language-Team: Portuguese (Brazil) (https://app.transifex.com/nextcloud/teams/64236/pt_BR/)
Content-Type: text/plain; charset=UTF-8
Language: pt_BR
Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" é um nome de pasta inválido.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" não é um nome de pasta permitido'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" não é permitido dentro de um nome de pasta.'] }, "All files": { msgid: "All files", msgstr: ["Todos os arquivos"] }, Choose: { msgid: "Choose", msgstr: ["Escolher"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Escolher arquivo}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Escolher %n arquivo", "Escolher %n arquivos", "Escolher %n arquivos"] }, Copy: { msgid: "Copy", msgstr: ["Copiar"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copiar para {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Não foi possível criar a nova pasta"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Não foi possível carregar configurações de arquivos"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Não foi possível carregar exibições de arquivos"] }, "Create directory": { msgid: "Create directory", msgstr: ["Criar diretório"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Seletor de visualização atual"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoritos"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Os arquivos e pastas marcados como favoritos aparecerão aqui."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Arquivos e pastas que você modificou recentemente aparecerão aqui."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrar lista de arquivos"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["O nome da pasta não pode ficar vazio."] }, Home: { msgid: "Home", msgstr: ["Home"] }, Modified: { msgid: "Modified", msgstr: ["Modificado"] }, Move: { msgid: "Move", msgstr: ["Mover"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Mover para {target}"] }, Name: { msgid: "Name", msgstr: ["Nome"] }, New: { msgid: "New", msgstr: ["Novo"] }, "New folder": { msgid: "New folder", msgstr: ["Nova pasta"] }, "New folder name": { msgid: "New folder name", msgstr: ["Novo nome de pasta"] }, "No files in here": { msgid: "No files in here", msgstr: ["Nenhum arquivo aqui"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nenhum arquivo correspondente ao seu filtro foi encontrado."] }, "No matching files": { msgid: "No matching files", msgstr: ["Nenhum arquivo correspondente"] }, Recent: { msgid: "Recent", msgstr: ["Recente"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Selecione todas as entradas"] }, "Select entry": { msgid: "Select entry", msgstr: ["Selecione a entrada"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Selecione a linha para {nodename}"] }, Size: { msgid: "Size", msgstr: ["Tamanho"] }, Undo: { msgid: "Undo", msgstr: ["Desfazer"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Carregue algum conteúdo ou sincronize com seus dispositivos!"] } } } } }, { locale: "pt_PT", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Portuguese (Portugal) (https://app.transifex.com/nextcloud/teams/64236/pt_PT/)", "Content-Type": "text/plain; charset=UTF-8", Language: "pt_PT", "Plural-Forms": "nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Portuguese (Portugal) (https://app.transifex.com/nextcloud/teams/64236/pt_PT/)
Content-Type: text/plain; charset=UTF-8
Language: pt_PT
Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Anular"] } } } } }, { locale: "ro", json: { charset: "utf-8", headers: { "Last-Translator": "Daniel MD <dmihaidumitru@gmail.com>, 2023", "Language-Team": "Romanian (https://app.transifex.com/nextcloud/teams/64236/ro/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ro", "Plural-Forms": "nplurals=3; plural=(n==1?0:(((n%100>19)||((n%100==0)&&(n!=0)))?2:1));" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Daniel MD <dmihaidumitru@gmail.com>, 2023
` }, msgstr: [`Last-Translator: Daniel MD <dmihaidumitru@gmail.com>, 2023
Language-Team: Romanian (https://app.transifex.com/nextcloud/teams/64236/ro/)
Content-Type: text/plain; charset=UTF-8
Language: ro
Plural-Forms: nplurals=3; plural=(n==1?0:(((n%100>19)||((n%100==0)&&(n!=0)))?2:1));
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" este un nume de director invalid.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" nu este un nume de director permis'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" nu este permis în numele unui director.'] }, "All files": { msgid: "All files", msgstr: ["Toate fișierele"] }, Choose: { msgid: "Choose", msgstr: ["Alege"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Alege {file}"] }, Copy: { msgid: "Copy", msgstr: ["Copiază"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Copiază în {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Nu s-a putut crea noul director"] }, "Create directory": { msgid: "Create directory", msgstr: ["Creează director"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Selectorul curent al vizualizării"] }, Favorites: { msgid: "Favorites", msgstr: ["Favorite"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Fișiere și directoare pe care le marcați ca favorite vor apărea aici."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Fișiere și directoare pe care le-ați modificat recent vor apărea aici."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrează lista de fișiere"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Numele de director nu poate fi necompletat."] }, Home: { msgid: "Home", msgstr: ["Acasă"] }, Modified: { msgid: "Modified", msgstr: ["Modificat"] }, Move: { msgid: "Move", msgstr: ["Mută"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Mută către {target}"] }, Name: { msgid: "Name", msgstr: ["Nume"] }, New: { msgid: "New", msgstr: ["Nou"] }, "New folder": { msgid: "New folder", msgstr: ["Director nou"] }, "New folder name": { msgid: "New folder name", msgstr: ["Numele noului director"] }, "No files in here": { msgid: "No files in here", msgstr: ["Nu există fișiere"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nu există fișiere potrivite pentru filtrul selectat"] }, "No matching files": { msgid: "No matching files", msgstr: ["Nu există fișiere potrivite"] }, Recent: { msgid: "Recent", msgstr: ["Recente"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Selectează toate înregistrările"] }, "Select entry": { msgid: "Select entry", msgstr: ["Selectează înregistrarea"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Selectează rândul pentru {nodename}"] }, Size: { msgid: "Size", msgstr: ["Mărime"] }, Undo: { msgid: "Undo", msgstr: ["Anulează"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Încărcați conținut sau sincronizați cu dispozitivele dumneavoastră!"] } } } } }, { locale: "ru", json: { charset: "utf-8", headers: { "Last-Translator": "R4SAS, 2024", "Language-Team": "Russian (https://app.transifex.com/nextcloud/teams/64236/ru/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ru", "Plural-Forms": "nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Max Smith <sevinfolds@gmail.com>, 2023
ashed <craysy@gmail.com>, 2023
Alex <kekcuha@gmail.com>, 2024
R4SAS, 2024
` }, msgstr: [`Last-Translator: R4SAS, 2024
Language-Team: Russian (https://app.transifex.com/nextcloud/teams/64236/ru/)
Content-Type: text/plain; charset=UTF-8
Language: ru
Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["«{name}» — недопустимое имя папки."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["«{name}» не является разрешенным именем папки"] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["Символ «/» не допускается внутри имени папки."] }, "All files": { msgid: "All files", msgstr: ["Все файлы"] }, Choose: { msgid: "Choose", msgstr: ["Выбрать"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Выбрать {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Выбрать %n файл", "Выбрать %n файла", "Выбрать %n файлов", "Выбрать %n файлов"] }, Copy: { msgid: "Copy", msgstr: ["Копировать"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Копировать в «{target}»"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Не удалось создать новую папку"] }, "Create directory": { msgid: "Create directory", msgstr: ["Создать папку"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Переключатель текущего вида"] }, Favorites: { msgid: "Favorites", msgstr: ["Избранное"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Здесь появятся файлы и папки, которые вы пометили как избранные."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Здесь будут отображаться файлы и папки, которые вы недавно изменили."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Фильтровать список файлов"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Имя папки не может быть пустым."] }, Home: { msgid: "Home", msgstr: ["Home"] }, Modified: { msgid: "Modified", msgstr: ["Модифицированный"] }, Move: { msgid: "Move", msgstr: ["Переместить"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Перейти к {target}"] }, Name: { msgid: "Name", msgstr: ["Имя"] }, New: { msgid: "New", msgstr: ["Новый"] }, "New folder": { msgid: "New folder", msgstr: ["Новая папка"] }, "New folder name": { msgid: "New folder name", msgstr: ["Новое имя папки"] }, "No files in here": { msgid: "No files in here", msgstr: ["Здесь нет файлов"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Файлы, соответствующие вашему фильтру, не найдены."] }, "No matching files": { msgid: "No matching files", msgstr: ["Нет подходящих файлов"] }, Recent: { msgid: "Recent", msgstr: ["Недавний"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Выбрать все записи"] }, "Select entry": { msgid: "Select entry", msgstr: ["Выберите запись"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Выберите строку для {nodename}"] }, Size: { msgid: "Size", msgstr: ["Размер"] }, Undo: { msgid: "Undo", msgstr: ["Отменить"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Загрузите контент или синхронизируйте его со своими устройствами!"] } } } } }, { locale: "sc", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Sardinian (https://app.transifex.com/nextcloud/teams/64236/sc/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sc", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Sardinian (https://app.transifex.com/nextcloud/teams/64236/sc/)
Content-Type: text/plain; charset=UTF-8
Language: sc
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "si", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Sinhala (https://app.transifex.com/nextcloud/teams/64236/si/)", "Content-Type": "text/plain; charset=UTF-8", Language: "si", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Sinhala (https://app.transifex.com/nextcloud/teams/64236/si/)
Content-Type: text/plain; charset=UTF-8
Language: si
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["පෙරසේ"] } } } } }, { locale: "sk_SK", json: { charset: "utf-8", headers: { "Last-Translator": "Tomas Rusnak <linkermail@gmail.com>, 2024", "Language-Team": "Slovak (Slovakia) (https://app.transifex.com/nextcloud/teams/64236/sk_SK/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sk_SK", "Plural-Forms": "nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n >= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Stanislav Prekop <prekop3@gmail.com>, 2024
Tomas Rusnak <linkermail@gmail.com>, 2024
` }, msgstr: [`Last-Translator: Tomas Rusnak <linkermail@gmail.com>, 2024
Language-Team: Slovak (Slovakia) (https://app.transifex.com/nextcloud/teams/64236/sk_SK/)
Content-Type: text/plain; charset=UTF-8
Language: sk_SK
Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n >= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" je neplatný názov pričinka.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" nie je povolený názov priečinka.'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" nie je povolené v názve priečinka.'] }, "All files": { msgid: "All files", msgstr: ["Všetky súbory"] }, Choose: { msgid: "Choose", msgstr: ["Vybrať"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Vybrať {súbor}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Vybraný %n súbor", "Vybrané %n súbory", "Vybraných %n súborov", "Vybraných %n súborov"] }, Copy: { msgid: "Copy", msgstr: ["Kopírovať"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopírovať do {umiestnenia}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Nepodarilo sa vytvoriť nový priečinok"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Nepodarilo sa načítať nastavenia súborov"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Nepodarilo sa načítať pohľady súborov"] }, "Create directory": { msgid: "Create directory", msgstr: ["Vytvoriť adresár"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Výber aktuálneho zobrazenia"] }, Favorites: { msgid: "Favorites", msgstr: ["Obľúbené"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Tu sa zobrazia súbory a priečinky, ktoré označíte ako obľúbené."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Tu sa zobrazia súbory a priečinky, ktoré ste nedávno upravili."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrovať zoznam súborov"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Názov priečinka nemôže byť prázdny."] }, Home: { msgid: "Home", msgstr: ["Domov"] }, Modified: { msgid: "Modified", msgstr: ["Upravené"] }, Move: { msgid: "Move", msgstr: ["Prejsť"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Prejsť na {umiestnenie}"] }, Name: { msgid: "Name", msgstr: ["Názov"] }, New: { msgid: "New", msgstr: ["Pridať"] }, "New folder": { msgid: "New folder", msgstr: ["Pridať priečinok"] }, "New folder name": { msgid: "New folder name", msgstr: ["Pridať názov priečinka"] }, "No files in here": { msgid: "No files in here", msgstr: ["Nie sú tu žiadne súbory"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nenašli sa žiadne súbory zodpovedajúce vášmu filtru."] }, "No matching files": { msgid: "No matching files", msgstr: ["Žiadne zodpovedajúce súbory"] }, Recent: { msgid: "Recent", msgstr: ["Nedávne"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Vybrať všetky položky"] }, "Select entry": { msgid: "Select entry", msgstr: ["Vybrať položku"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Vyberte riadok pre {názov uzla}"] }, Size: { msgid: "Size", msgstr: ["Veľkosť"] }, Undo: { msgid: "Undo", msgstr: ["Späť"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Nahrajte nejaký obsah alebo synchronizujte so svojimi zariadeniami!"] } } } } }, { locale: "sl", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Slovenian (https://app.transifex.com/nextcloud/teams/64236/sl/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sl", "Plural-Forms": "nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Slovenian (https://app.transifex.com/nextcloud/teams/64236/sl/)
Content-Type: text/plain; charset=UTF-8
Language: sl
Plural-Forms: nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Razveljavi"] } } } } }, { locale: "sq", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Albanian (https://app.transifex.com/nextcloud/teams/64236/sq/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sq", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Albanian (https://app.transifex.com/nextcloud/teams/64236/sq/)
Content-Type: text/plain; charset=UTF-8
Language: sq
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "sr", json: { charset: "utf-8", headers: { "Last-Translator": "Иван Пешић, 2024", "Language-Team": "Serbian (https://app.transifex.com/nextcloud/teams/64236/sr/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sr", "Plural-Forms": "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Иван Пешић, 2024
` }, msgstr: [`Last-Translator: Иван Пешић, 2024
Language-Team: Serbian (https://app.transifex.com/nextcloud/teams/64236/sr/)
Content-Type: text/plain; charset=UTF-8
Language: sr
Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["„{name}” није исправно име фолдера."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["„{name}” није дозвољено име за фолдер."] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["„/” није дозвољено унутар имена фолдера."] }, "All files": { msgid: "All files", msgstr: ["Сви фајлови"] }, Choose: { msgid: "Choose", msgstr: ["Изаберите"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Изаберите {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Изаберите %n фајл", "Изаберите %n фајла", "Изаберите %n фајлова"] }, Copy: { msgid: "Copy", msgstr: ["Копирај"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Копирај у {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Није могао да се креира нови фолдер"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Не могу да се учитају подешавања фајлова"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Не могу да се учитају прикази фајлова"] }, "Create directory": { msgid: "Create directory", msgstr: ["Креирај директоријум"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Бирач тренутног приказа"] }, Favorites: { msgid: "Favorites", msgstr: ["Омиљено"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Овде ће се појавити фајлови и фолдери које сте означили као омиљене."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Овде ће се појавити фајлови и фолдери који се се недавно изменили."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Фитрирање листе фајлова"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Име фолдера не може бити празно."] }, Home: { msgid: "Home", msgstr: ["Почетак"] }, Modified: { msgid: "Modified", msgstr: ["Измењено"] }, Move: { msgid: "Move", msgstr: ["Премести"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Премести у {target}"] }, Name: { msgid: "Name", msgstr: ["Име"] }, New: { msgid: "New", msgstr: ["Ново"] }, "New folder": { msgid: "New folder", msgstr: ["Нови фолдер"] }, "New folder name": { msgid: "New folder name", msgstr: ["Име новог фолдера"] }, "No files in here": { msgid: "No files in here", msgstr: ["Овде нема фајлова"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Није пронађен ниједан фајл који задовољава ваш филтер."] }, "No matching files": { msgid: "No matching files", msgstr: ["Нема таквих фајлова"] }, Recent: { msgid: "Recent", msgstr: ["Скорашње"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Изаберите све ставке"] }, "Select entry": { msgid: "Select entry", msgstr: ["Изаберите ставку"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Изаберите ред за {nodename}"] }, Size: { msgid: "Size", msgstr: ["Величина"] }, Undo: { msgid: "Undo", msgstr: ["Поништи"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Отпремите нешто или синхронизујте са својим уређајима!"] } } } } }, { locale: "sr@latin", json: { charset: "utf-8", headers: { "Last-Translator": "Bogdan Vuković, 2024", "Language-Team": "Serbian (Latin) (https://app.transifex.com/nextcloud/teams/64236/sr@latin/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sr@latin", "Plural-Forms": "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Bogdan Vuković, 2024
` }, msgstr: [`Last-Translator: Bogdan Vuković, 2024
Language-Team: Serbian (Latin) (https://app.transifex.com/nextcloud/teams/64236/sr@latin/)
Content-Type: text/plain; charset=UTF-8
Language: sr@latin
Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["„{name}” je neispravan naziv foldera."] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["„{name}” je nedozvoljen naziv foldera."] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["„/” se ne može koristiti unutar naziva foldera."] }, "All files": { msgid: "All files", msgstr: ["Svi fajlovi"] }, Choose: { msgid: "Choose", msgstr: ["Izaberite"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Izaberite {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Izaberite %n fajl", "Izaberite %n fajla", "Izaberite %n fajlova"] }, Copy: { msgid: "Copy", msgstr: ["Kopiraj"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopiraj u {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Neuspešno kreiranje novog foldera"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Neuspešno učitavanje podešavanja fajlova"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Neuspešno učitavanje prikaza fajlova"] }, "Create directory": { msgid: "Create directory", msgstr: ["Kreiraj direktorijum"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Birač trenutnog prikaza"] }, Favorites: { msgid: "Favorites", msgstr: ["Omiljeno"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Lista omiljenih fajlova i foldera."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Lista fajlova i foldera sa skorašnjim izmenama."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Fitriranje liste fajlova"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Naziv foldera ne može biti prazan."] }, Home: { msgid: "Home", msgstr: ["Početak"] }, Modified: { msgid: "Modified", msgstr: ["Izmenjeno"] }, Move: { msgid: "Move", msgstr: ["Premesti"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Premesti u {target}"] }, Name: { msgid: "Name", msgstr: ["Naziv"] }, New: { msgid: "New", msgstr: ["Novo"] }, "New folder": { msgid: "New folder", msgstr: ["Novi folder"] }, "New folder name": { msgid: "New folder name", msgstr: ["Naziv novog foldera"] }, "No files in here": { msgid: "No files in here", msgstr: ["Bez fajlova"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Nema fajlova koji zadovoljavaju uslove filtera."] }, "No matching files": { msgid: "No matching files", msgstr: ["Nema takvih fajlova"] }, Recent: { msgid: "Recent", msgstr: ["Skorašnje"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Izaberite sve stavke"] }, "Select entry": { msgid: "Select entry", msgstr: ["Izaberite stavku"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Izaberite red za {nodename}"] }, Size: { msgid: "Size", msgstr: ["Veličina"] }, Undo: { msgid: "Undo", msgstr: ["Vrati"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Otpremite sadržaj ili sinhronizujte sa svojim uređajima!"] } } } } }, { locale: "sv", json: { charset: "utf-8", headers: { "Last-Translator": "Magnus Höglund, 2024", "Language-Team": "Swedish (https://app.transifex.com/nextcloud/teams/64236/sv/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sv", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Magnus Höglund, 2024
` }, msgstr: [`Last-Translator: Magnus Höglund, 2024
Language-Team: Swedish (https://app.transifex.com/nextcloud/teams/64236/sv/)
Content-Type: text/plain; charset=UTF-8
Language: sv
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" är ett ogiltigt mappnamn.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" är inte ett tillåtet mappnamn'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" är inte tillåtet i ett mappnamn.'] }, "All files": { msgid: "All files", msgstr: ["Alla filer"] }, Choose: { msgid: "Choose", msgstr: ["Välj"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Välj {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Välj %n fil", "Välj %n filer"] }, Copy: { msgid: "Copy", msgstr: ["Kopiera"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Kopiera till {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Kunde inte skapa den nya mappen"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Kunde inte ladda filinställningar"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Kunde inte ladda läsa in filvyer"] }, "Create directory": { msgid: "Create directory", msgstr: ["Skapa katalog"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Aktuell vyväljare"] }, Favorites: { msgid: "Favorites", msgstr: ["Favoriter"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Filer och mappar som du markerar som favorit kommer att visas här."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Filer och mappar som du nyligen ändrat kommer att visas här."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Filtrera fillistan"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Mappnamnet får inte vara tomt."] }, Home: { msgid: "Home", msgstr: ["Hem"] }, Modified: { msgid: "Modified", msgstr: ["Ändrad"] }, Move: { msgid: "Move", msgstr: ["Flytta"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Flytta till {target}"] }, Name: { msgid: "Name", msgstr: ["Namn"] }, New: { msgid: "New", msgstr: ["Ny"] }, "New folder": { msgid: "New folder", msgstr: ["Ny mapp"] }, "New folder name": { msgid: "New folder name", msgstr: ["Nytt mappnamn"] }, "No files in here": { msgid: "No files in here", msgstr: ["Inga filer här"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Inga filer som matchar ditt filter hittades."] }, "No matching files": { msgid: "No matching files", msgstr: ["Inga matchande filer"] }, Recent: { msgid: "Recent", msgstr: ["Nyligen"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Välj alla poster"] }, "Select entry": { msgid: "Select entry", msgstr: ["Välj post"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Välj raden för {nodename}"] }, Size: { msgid: "Size", msgstr: ["Storlek"] }, Undo: { msgid: "Undo", msgstr: ["Ångra"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Ladda upp lite innehåll eller synkronisera med dina enheter!"] } } } } }, { locale: "sw", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Swahili (https://app.transifex.com/nextcloud/teams/64236/sw/)", "Content-Type": "text/plain; charset=UTF-8", Language: "sw", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Swahili (https://app.transifex.com/nextcloud/teams/64236/sw/)
Content-Type: text/plain; charset=UTF-8
Language: sw
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "ta", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Tamil (https://app.transifex.com/nextcloud/teams/64236/ta/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ta", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Tamil (https://app.transifex.com/nextcloud/teams/64236/ta/)
Content-Type: text/plain; charset=UTF-8
Language: ta
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["செயல்தவிர்"] } } } } }, { locale: "th_TH", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Thai (Thailand) (https://app.transifex.com/nextcloud/teams/64236/th_TH/)", "Content-Type": "text/plain; charset=UTF-8", Language: "th_TH", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Thai (Thailand) (https://app.transifex.com/nextcloud/teams/64236/th_TH/)
Content-Type: text/plain; charset=UTF-8
Language: th_TH
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["เลิกทำ"] } } } } }, { locale: "tk", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Turkmen (https://app.transifex.com/nextcloud/teams/64236/tk/)", "Content-Type": "text/plain; charset=UTF-8", Language: "tk", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Turkmen (https://app.transifex.com/nextcloud/teams/64236/tk/)
Content-Type: text/plain; charset=UTF-8
Language: tk
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "tr", json: { charset: "utf-8", headers: { "Last-Translator": "Kaya Zeren <kayazeren@gmail.com>, 2024", "Language-Team": "Turkish (https://app.transifex.com/nextcloud/teams/64236/tr/)", "Content-Type": "text/plain; charset=UTF-8", Language: "tr", "Plural-Forms": "nplurals=2; plural=(n > 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Kaya Zeren <kayazeren@gmail.com>, 2024
` }, msgstr: [`Last-Translator: Kaya Zeren <kayazeren@gmail.com>, 2024
Language-Team: Turkish (https://app.transifex.com/nextcloud/teams/64236/tr/)
Content-Type: text/plain; charset=UTF-8
Language: tr
Plural-Forms: nplurals=2; plural=(n > 1);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" geçersiz bir klasör adı.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" izin verilen bir klasör adı değil'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" karakteri klasör adında kullanılamaz.'] }, "All files": { msgid: "All files", msgstr: ["Tüm dosyalar"] }, Choose: { msgid: "Choose", msgstr: ["Seçin"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["{file} seçin"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["%n dosya seçin", "%n dosya seçin"] }, Copy: { msgid: "Copy", msgstr: ["Kopyala"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["{target} üzerine kopyala"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Yeni klasör oluşturulamadı"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Dosyalar uygulamasının ayarları yüklenemedi"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Dosyalar uygulamasının görünümleri yüklenemedi"] }, "Create directory": { msgid: "Create directory", msgstr: ["Klasör oluştur"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Geçerli görünüm seçici"] }, Favorites: { msgid: "Favorites", msgstr: ["Sık kullanılanlar"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Sık kullanılan olarak seçtiğiniz dosyalar burada görüntülenir."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Son zamanlarda değiştirdiğiniz dosya ve klasörler burada görüntülenir."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Dosya listesini süz"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Klasör adı boş olamaz."] }, Home: { msgid: "Home", msgstr: ["Giriş"] }, Modified: { msgid: "Modified", msgstr: ["Değiştirilme"] }, Move: { msgid: "Move", msgstr: ["Taşı"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["{target} üzerine taşı"] }, Name: { msgid: "Name", msgstr: ["Ad"] }, New: { msgid: "New", msgstr: ["Yeni"] }, "New folder": { msgid: "New folder", msgstr: ["Yeni klasör"] }, "New folder name": { msgid: "New folder name", msgstr: ["Yeni klasör adı"] }, "No files in here": { msgid: "No files in here", msgstr: ["Burada herhangi bir dosya yok"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Süzgece uyan bir dosya bulunamadı."] }, "No matching files": { msgid: "No matching files", msgstr: ["Eşleşen bir dosya yok"] }, Recent: { msgid: "Recent", msgstr: ["Son kullanılanlar"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Tüm kayıtları seç"] }, "Select entry": { msgid: "Select entry", msgstr: ["Kaydı seç"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["{nodename} satırını seçin"] }, Size: { msgid: "Size", msgstr: ["Boyut"] }, Undo: { msgid: "Undo", msgstr: ["Geri al"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Bazı içerikler yükleyin ya da aygıtlarınızla eşitleyin!"] } } } } }, { locale: "ug", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Uyghur (https://app.transifex.com/nextcloud/teams/64236/ug/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ug", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Uyghur (https://app.transifex.com/nextcloud/teams/64236/ug/)
Content-Type: text/plain; charset=UTF-8
Language: ug
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "uk", json: { charset: "utf-8", headers: { "Last-Translator": "O St <oleksiy.stasevych@gmail.com>, 2024", "Language-Team": "Ukrainian (https://app.transifex.com/nextcloud/teams/64236/uk/)", "Content-Type": "text/plain; charset=UTF-8", Language: "uk", "Plural-Forms": "nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
O St <oleksiy.stasevych@gmail.com>, 2024
` }, msgstr: [`Last-Translator: O St <oleksiy.stasevych@gmail.com>, 2024
Language-Team: Ukrainian (https://app.transifex.com/nextcloud/teams/64236/uk/)
Content-Type: text/plain; charset=UTF-8
Language: uk
Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ['"{name}" є недійсною назвою для каталогу.'] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ['"{name}" не є дозволеною назвою для каталогу.'] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ['"/" не дозволено у назві каталогу.'] }, "All files": { msgid: "All files", msgstr: ["Всі файли"] }, Choose: { msgid: "Choose", msgstr: ["Вибрати"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["Вибрати {file}"] }, "Choose %n file": { msgid: "Choose %n file", msgid_plural: "Choose %n files", msgstr: ["Вибрати %n файл", "Вибрати %n файли", "Вибрати %n файлів", "Вибрати %n файлів"] }, Copy: { msgid: "Copy", msgstr: ["Копіювати"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["Копіювати до {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["Не вдалося створити новий каталог"] }, "Could not load files settings": { msgid: "Could not load files settings", msgstr: ["Не вдалося завантажити налаштування файлів"] }, "Could not load files views": { msgid: "Could not load files views", msgstr: ["Не вдалося завантажити подання файлів"] }, "Create directory": { msgid: "Create directory", msgstr: ["Створити каталог"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["Вибір подання"] }, Favorites: { msgid: "Favorites", msgstr: ["Із зірочкою"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["Тут показуватимуться файли та каталоги, які ви позначите зірочкою."] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["Тут показуватимуться файли та каталоги, які було нещодавно змінено."] }, "Filter file list": { msgid: "Filter file list", msgstr: ["Фільтрувати список файлів"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["Ім'я каталогу не може бути порожнім."] }, Home: { msgid: "Home", msgstr: ["Домівка"] }, Modified: { msgid: "Modified", msgstr: ["Змінено"] }, Move: { msgid: "Move", msgstr: ["Перемістити"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["Перемістити до {target}"] }, Name: { msgid: "Name", msgstr: ["Ім'я"] }, New: { msgid: "New", msgstr: ["Новий"] }, "New folder": { msgid: "New folder", msgstr: ["Новий каталог"] }, "New folder name": { msgid: "New folder name", msgstr: ["Ім'я нового каталогу"] }, "No files in here": { msgid: "No files in here", msgstr: ["Тут відсутні файли"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["Відсутні збіги за фільтром."] }, "No matching files": { msgid: "No matching files", msgstr: ["Відсутні збіги файлів."] }, Recent: { msgid: "Recent", msgstr: ["Останні"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["Вибрати всі записи"] }, "Select entry": { msgid: "Select entry", msgstr: ["Вибрати запис"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["Вибрати рядок для {nodename}"] }, Size: { msgid: "Size", msgstr: ["Розмір"] }, Undo: { msgid: "Undo", msgstr: ["Повернути"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["Завантажте вміст або синхронізуйте з вашим пристроєм!"] } } } } }, { locale: "ur_PK", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Urdu (Pakistan) (https://app.transifex.com/nextcloud/teams/64236/ur_PK/)", "Content-Type": "text/plain; charset=UTF-8", Language: "ur_PK", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Urdu (Pakistan) (https://app.transifex.com/nextcloud/teams/64236/ur_PK/)
Content-Type: text/plain; charset=UTF-8
Language: ur_PK
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "uz", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Uzbek (https://app.transifex.com/nextcloud/teams/64236/uz/)", "Content-Type": "text/plain; charset=UTF-8", Language: "uz", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Uzbek (https://app.transifex.com/nextcloud/teams/64236/uz/)
Content-Type: text/plain; charset=UTF-8
Language: uz
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }, { locale: "vi", json: { charset: "utf-8", headers: { "Last-Translator": "Joas Schilling, 2023", "Language-Team": "Vietnamese (https://app.transifex.com/nextcloud/teams/64236/vi/)", "Content-Type": "text/plain; charset=UTF-8", Language: "vi", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Joas Schilling, 2023
` }, msgstr: [`Last-Translator: Joas Schilling, 2023
Language-Team: Vietnamese (https://app.transifex.com/nextcloud/teams/64236/vi/)
Content-Type: text/plain; charset=UTF-8
Language: vi
Plural-Forms: nplurals=1; plural=0;
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: ["Hoàn tác"] } } } } }, { locale: "zh_CN", json: { charset: "utf-8", headers: { "Last-Translator": "Eric, 2023", "Language-Team": "Chinese (China) (https://app.transifex.com/nextcloud/teams/64236/zh_CN/)", "Content-Type": "text/plain; charset=UTF-8", Language: "zh_CN", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
ken, 2023
Eric, 2023
` }, msgstr: [`Last-Translator: Eric, 2023
Language-Team: Chinese (China) (https://app.transifex.com/nextcloud/teams/64236/zh_CN/)
Content-Type: text/plain; charset=UTF-8
Language: zh_CN
Plural-Forms: nplurals=1; plural=0;
`] }, '"{name}" is an invalid folder name.': { msgid: '"{name}" is an invalid folder name.', msgstr: ["“{name}”是无效的文件夹名称。"] }, '"{name}" is not an allowed folder name': { msgid: '"{name}" is not an allowed folder name', msgstr: ["“{name}”不是允许的文件夹名称"] }, '"/" is not allowed inside a folder name.': { msgid: '"/" is not allowed inside a folder name.', msgstr: ["文件夹名称中不允许包含“/”。"] }, "All files": { msgid: "All files", msgstr: ["所有文件"] }, Choose: { msgid: "Choose", msgstr: ["选择"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["选择 {file}"] }, Copy: { msgid: "Copy", msgstr: ["复制"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["复制到 {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["无法创建新文件夹"] }, "Create directory": { msgid: "Create directory", msgstr: ["创建目录"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["当前视图选择器"] }, Favorites: { msgid: "Favorites", msgstr: ["最爱"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["您标记为最爱的文件与文件夹会显示在这里"] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["您最近修改的文件与文件夹会显示在这里"] }, "Filter file list": { msgid: "Filter file list", msgstr: ["过滤文件列表"] }, "Folder name cannot be empty.": { msgid: "Folder name cannot be empty.", msgstr: ["文件夹名称不能为空。"] }, Home: { msgid: "Home", msgstr: ["主目录"] }, Modified: { msgid: "Modified", msgstr: ["已修改"] }, Move: { msgid: "Move", msgstr: ["移动"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["移动至 {target}"] }, Name: { msgid: "Name", msgstr: ["名称"] }, New: { msgid: "New", msgstr: ["新"] }, "New folder": { msgid: "New folder", msgstr: ["新文件夹"] }, "New folder name": { msgid: "New folder name", msgstr: ["新文件夹名称"] }, "No files in here": { msgid: "No files in here", msgstr: ["此处无文件"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["找不到符合您过滤条件的文件"] }, "No matching files": { msgid: "No matching files", msgstr: ["无符合的文件"] }, Recent: { msgid: "Recent", msgstr: ["最近"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["选择所有条目"] }, "Select entry": { msgid: "Select entry", msgstr: ["选择条目"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["选择 {nodename} 的列"] }, Size: { msgid: "Size", msgstr: ["大小"] }, Undo: { msgid: "Undo", msgstr: [" 撤消"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["上传一些项目或与您的设备同步！"] } } } } }, { locale: "zh_HK", json: { charset: "utf-8", headers: { "Last-Translator": "Café Tango, 2023", "Language-Team": "Chinese (Hong Kong) (https://app.transifex.com/nextcloud/teams/64236/zh_HK/)", "Content-Type": "text/plain; charset=UTF-8", Language: "zh_HK", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
Café Tango, 2023
` }, msgstr: [`Last-Translator: Café Tango, 2023
Language-Team: Chinese (Hong Kong) (https://app.transifex.com/nextcloud/teams/64236/zh_HK/)
Content-Type: text/plain; charset=UTF-8
Language: zh_HK
Plural-Forms: nplurals=1; plural=0;
`] }, '"{name}" is an invalid file name.': { msgid: '"{name}" is an invalid file name.', msgstr: ["「{name}」是無效的檔案名稱。"] }, '"{name}" is not an allowed filetype': { msgid: '"{name}" is not an allowed filetype', msgstr: ["「{name}」並非允許的檔案類型"] }, '"/" is not allowed inside a file name.': { msgid: '"/" is not allowed inside a file name.', msgstr: ['檔案名稱中不允許使用 "/"。'] }, "All files": { msgid: "All files", msgstr: ["所有檔案"] }, Choose: { msgid: "Choose", msgstr: ["選擇"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["選擇 {file}"] }, Copy: { msgid: "Copy", msgstr: ["複製"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["複製到 {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["無法建立新資料夾"] }, "Create directory": { msgid: "Create directory", msgstr: ["建立目錄"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["目前檢視選取器"] }, Favorites: { msgid: "Favorites", msgstr: ["最愛"] }, "File name cannot be empty.": { msgid: "File name cannot be empty.", msgstr: ["檔案名稱不能為空。"] }, "Filepicker sections": { msgid: "Filepicker sections", msgstr: ["檔案挑選器部分"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["您標記為最愛的檔案與資料夾將會顯示在此處。"] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["您最近修改的檔案與資料夾將會顯示在此處。"] }, "Filter file list": { msgid: "Filter file list", msgstr: ["過濾檔案清單"] }, Home: { msgid: "Home", msgstr: ["首頁"] }, "MIME type {mime}": { msgid: "MIME type {mime}", msgstr: ["MIME 類型 {mime}"] }, Modified: { msgid: "Modified", msgstr: ["已修改"] }, Move: { msgid: "Move", msgstr: ["移動"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["移動至 {target}"] }, Name: { msgid: "Name", msgstr: ["名稱"] }, New: { msgid: "New", msgstr: ["新"] }, "New folder": { msgid: "New folder", msgstr: ["新資料夾"] }, "New folder name": { msgid: "New folder name", msgstr: ["新資料夾名稱"] }, "No files in here": { msgid: "No files in here", msgstr: ["此處無檔案"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["找不到符合您過濾條件的檔案。"] }, "No matching files": { msgid: "No matching files", msgstr: ["無符合的檔案"] }, Recent: { msgid: "Recent", msgstr: ["最近"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["選取所有條目"] }, "Select entry": { msgid: "Select entry", msgstr: ["選取條目"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["選取 {nodename} 的列"] }, Size: { msgid: "Size", msgstr: ["大小"] }, Undo: { msgid: "Undo", msgstr: ["還原"] }, unknown: { msgid: "unknown", msgstr: ["不詳"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["上傳一些內容或與您的裝置同步"] } } } } }, { locale: "zh_TW", json: { charset: "utf-8", headers: { "Last-Translator": "黃柏諺 <s8321414@gmail.com>, 2023", "Language-Team": "Chinese (Taiwan) (https://app.transifex.com/nextcloud/teams/64236/zh_TW/)", "Content-Type": "text/plain; charset=UTF-8", Language: "zh_TW", "Plural-Forms": "nplurals=1; plural=0;" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
John Molakvoæ <skjnldsv@protonmail.com>, 2023
黃柏諺 <s8321414@gmail.com>, 2023
` }, msgstr: [`Last-Translator: 黃柏諺 <s8321414@gmail.com>, 2023
Language-Team: Chinese (Taiwan) (https://app.transifex.com/nextcloud/teams/64236/zh_TW/)
Content-Type: text/plain; charset=UTF-8
Language: zh_TW
Plural-Forms: nplurals=1; plural=0;
`] }, '"{name}" is an invalid file name.': { msgid: '"{name}" is an invalid file name.', msgstr: ["「{name}」是無效的檔案名稱。"] }, '"{name}" is not an allowed filetype': { msgid: '"{name}" is not an allowed filetype', msgstr: ["「{name}」並非允許的檔案類型"] }, '"/" is not allowed inside a file name.': { msgid: '"/" is not allowed inside a file name.', msgstr: ["檔案名稱中不允許使用「/」。"] }, "All files": { msgid: "All files", msgstr: ["所有檔案"] }, Choose: { msgid: "Choose", msgstr: ["選擇"] }, "Choose {file}": { msgid: "Choose {file}", msgstr: ["選擇 {file}"] }, Copy: { msgid: "Copy", msgstr: ["複製"] }, "Copy to {target}": { msgid: "Copy to {target}", msgstr: ["複製到 {target}"] }, "Could not create the new folder": { msgid: "Could not create the new folder", msgstr: ["無法建立新資料夾"] }, "Create directory": { msgid: "Create directory", msgstr: ["建立目錄"] }, "Current view selector": { msgid: "Current view selector", msgstr: ["目前檢視選取器"] }, Favorites: { msgid: "Favorites", msgstr: ["最愛"] }, "File name cannot be empty.": { msgid: "File name cannot be empty.", msgstr: ["檔案名稱不能為空。"] }, "Filepicker sections": { msgid: "Filepicker sections", msgstr: ["檔案挑選器選取"] }, "Files and folders you mark as favorite will show up here.": { msgid: "Files and folders you mark as favorite will show up here.", msgstr: ["您標記為最愛的檔案與資料夾將會顯示在此處。"] }, "Files and folders you recently modified will show up here.": { msgid: "Files and folders you recently modified will show up here.", msgstr: ["您最近修改的檔案與資料夾將會顯示在此處。"] }, "Filter file list": { msgid: "Filter file list", msgstr: ["過濾檔案清單"] }, Home: { msgid: "Home", msgstr: ["家"] }, "Mime type {mime}": { msgid: "Mime type {mime}", msgstr: ["Mime type {mime}"] }, Modified: { msgid: "Modified", msgstr: ["已修改"] }, Move: { msgid: "Move", msgstr: ["移動"] }, "Move to {target}": { msgid: "Move to {target}", msgstr: ["移動至 {target}"] }, Name: { msgid: "Name", msgstr: ["名稱"] }, New: { msgid: "New", msgstr: ["新"] }, "New folder": { msgid: "New folder", msgstr: ["新資料夾"] }, "New folder name": { msgid: "New folder name", msgstr: ["新資料夾名稱"] }, "No files in here": { msgid: "No files in here", msgstr: ["此處無檔案"] }, "No files matching your filter were found.": { msgid: "No files matching your filter were found.", msgstr: ["找不到符合您過濾條件的檔案。"] }, "No matching files": { msgid: "No matching files", msgstr: ["無符合的檔案"] }, Recent: { msgid: "Recent", msgstr: ["最近"] }, "Select all entries": { msgid: "Select all entries", msgstr: ["選取所有條目"] }, "Select entry": { msgid: "Select entry", msgstr: ["選取條目"] }, "Select the row for {nodename}": { msgid: "Select the row for {nodename}", msgstr: ["選取 {nodename} 的列"] }, Size: { msgid: "Size", msgstr: ["大小"] }, Undo: { msgid: "Undo", msgstr: ["復原"] }, unknown: { msgid: "unknown", msgstr: ["未知"] }, "Upload some content or sync with your devices!": { msgid: "Upload some content or sync with your devices!", msgstr: ["上傳一些內容或與您的裝置同步"] } } } } }, { locale: "zu_ZA", json: { charset: "utf-8", headers: { "Last-Translator": "Transifex Bot <>, 2023", "Language-Team": "Zulu (South Africa) (https://app.transifex.com/nextcloud/teams/64236/zu_ZA/)", "Content-Type": "text/plain; charset=UTF-8", Language: "zu_ZA", "Plural-Forms": "nplurals=2; plural=(n != 1);" }, translations: { "": { "": { msgid: "", comments: { translator: `
Translators:
Transifex Bot <>, 2023
` }, msgstr: [`Last-Translator: Transifex Bot <>, 2023
Language-Team: Zulu (South Africa) (https://app.transifex.com/nextcloud/teams/64236/zu_ZA/)
Content-Type: text/plain; charset=UTF-8
Language: zu_ZA
Plural-Forms: nplurals=2; plural=(n != 1);
`] }, Undo: { msgid: "Undo", comments: { reference: "lib/toast.ts:223" }, msgstr: [""] } } } } }].map((e) => f.addTranslation(e.locale, e.json));
const g = f.build(), P = g.ngettext.bind(g), C = g.gettext.bind(g);
/**
 * @copyright Copyright (c) 2019 Julius Härtl <jus@bitgrid.net>
 *
 * @author Julius Härtl <jus@bitgrid.net>
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license GNU AGPL version 3 or any later version
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
var F = /* @__PURE__ */ ((e) => (e.ERROR = "toast-error", e.WARNING = "toast-warning", e.INFO = "toast-info", e.SUCCESS = "toast-success", e.PERMANENT = "toast-error", e.UNDO = "toast-undo", e))(F || {});
const x = "off", L = "polite", N = "assertive";
var u = /* @__PURE__ */ ((e) => (e[e.OFF = x] = "OFF", e[e.POLITE = L] = "POLITE", e[e.ASSERTIVE = N] = "ASSERTIVE", e))(u || {});
const U = 1e4, S = 7e3, M = (/* unused pure expression or super */ null && (-1));
function d(e, s) {
  if (s = Object.assign({
    timeout: S,
    isHTML: !1,
    type: void 0,
    // An undefined selector defaults to the body element
    selector: void 0,
    onRemove: () => {
    },
    onClick: void 0,
    close: !0
  }, s), typeof e == "string" && !s.isHTML) {
    const i = document.createElement("div");
    i.innerHTML = e, e = i.innerText;
  }
  let o = s.type ?? "";
  typeof s.onClick == "function" && (o += " toast-with-click ");
  const l = e instanceof Node;
  let a = u.POLITE;
  s.ariaLive ? a = s.ariaLive : (s.type === "toast-error" || s.type === "toast-undo") && (a = u.ASSERTIVE);
  const t = toastify_js__WEBPACK_IMPORTED_MODULE_0__({
    [l ? "node" : "text"]: e,
    duration: s.timeout,
    callback: s.onRemove,
    onClick: s.onClick,
    close: s.close,
    gravity: "top",
    selector: s.selector,
    position: "right",
    backgroundColor: "",
    className: "dialogs " + o,
    escapeMarkup: !s.isHTML,
    ariaLive: a
  });
  return t.showToast(), t;
}
function z(e, s) {
  return d(e, {
    ...s,
    type: "toast-error"
    /* ERROR */
  });
}
function _(e, s) {
  return d(e, {
    ...s,
    type: "toast-warning"
    /* WARNING */
  });
}
function j(e, s) {
  return d(e, {
    ...s,
    type: "toast-info"
    /* INFO */
  });
}
function B(e, s) {
  return d(e, {
    ...s,
    type: "toast-success"
    /* SUCCESS */
  });
}
function A(e, s, o) {
  if (!(s instanceof Function))
    throw new Error("Please provide a valid onUndo method");
  let l;
  o = Object.assign(o || {}, {
    // force 10 seconds of timeout
    timeout: U,
    // remove close button
    close: !1
  });
  const a = document.createElement("span"), t = document.createElement("button");
  return a.classList.add("toast-undo-container"), t.classList.add("toast-undo-button"), t.innerText = C("Undo"), a.innerText = e, a.appendChild(t), t.addEventListener("click", function(i) {
    i.stopPropagation(), s(i), l?.hideToast instanceof Function && l.hideToast();
  }), l = d(a, {
    ...o,
    type: "toast-undo"
    /* UNDO */
  }), l;
}
function R(e, s, o, l, a, t, i, h) {
  var n = typeof e == "function" ? e.options : e;
  s && (n.render = s, n.staticRenderFns = o, n._compiled = !0), l && (n.functional = !0), t && (n._scopeId = "data-v-" + t);
  var m;
  if (i ? (m = function(r) {
    r = r || // cached call
    this.$vnode && this.$vnode.ssrContext || // stateful
    this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, !r && typeof __VUE_SSR_CONTEXT__ < "u" && (r = __VUE_SSR_CONTEXT__), a && a.call(this, r), r && r._registeredComponents && r._registeredComponents.add(i);
  }, n._ssrRegister = m) : a && (m = h ? function() {
    a.call(
      this,
      (n.functional ? this.parent : this).$root.$options.shadowRoot
    );
  } : a), m)
    if (n.functional) {
      n._injectStyles = m;
      var T = n.render;
      n.render = function(y, p) {
        return m.call(p), T(y, p);
      };
    } else {
      var c = n.beforeCreate;
      n.beforeCreate = c ? [].concat(c, m) : [m];
    }
  return {
    exports: e,
    options: n
  };
}



/***/ }),

/***/ 1195:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: () => (/* binding */ getGettextBuilder)
/* harmony export */ });
/* harmony import */ var node_gettext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2148);
/* harmony import */ var _nextcloud_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2778);
/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2838);
/* harmony import */ var escape_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(580);





/**
 * Returns the user's locale
 */
/**
 * Returns the user's language
 */
function getLanguage() {
    return document.documentElement.lang || 'en';
}

/**
 * This module provides functionality to translate applications independent from Nextcloud
 *
 * @packageDocumentation
 * @module @nextcloud/l10n/gettext
 * @example
 * ```js
import { getGettextBuilder } from '@nextcloud/l10n/gettext'
const gt = getGettextBuilder()
            .detectLocale() // or use setLanguage()
            .addTranslation(/* ... *\/)
            .build()
gt.gettext('some string to translate')
```
 */
/**
 * @notExported
 */
class GettextBuilder {
    constructor() {
        this.translations = {};
        this.debug = false;
    }
    setLanguage(language) {
        this.locale = language;
        return this;
    }
    /** Try to detect locale from context with `en` as fallback value */
    detectLocale() {
        return this.setLanguage(getLanguage().replace('-', '_'));
    }
    addTranslation(language, data) {
        this.translations[language] = data;
        return this;
    }
    enableDebugMode() {
        this.debug = true;
        return this;
    }
    build() {
        return new GettextWrapper(this.locale || 'en', this.translations, this.debug);
    }
}
/**
 * @notExported
 */
class GettextWrapper {
    constructor(locale, data, debug) {
        this.gt = new node_gettext__WEBPACK_IMPORTED_MODULE_0__({
            debug,
            sourceLocale: 'en',
        });
        for (const key in data) {
            this.gt.addTranslations(key, 'messages', data[key]);
        }
        this.gt.setLocale(locale);
    }
    subtitudePlaceholders(translated, vars) {
        return translated.replace(/{([^{}]*)}/g, (a, b) => {
            const r = vars[b];
            if (typeof r === 'string' || typeof r === 'number') {
                return r.toString();
            }
            else {
                return a;
            }
        });
    }
    /**
     * Get translated string (singular form), optionally with placeholders
     *
     * @param original original string to translate
     * @param placeholders map of placeholder key to value
     */
    gettext(original, placeholders = {}) {
        return this.subtitudePlaceholders(this.gt.gettext(original), placeholders);
    }
    /**
     * Get translated string with plural forms
     *
     * @param singular Singular text form
     * @param plural Plural text form to be used if `count` requires it
     * @param count The number to insert into the text
     * @param placeholders optional map of placeholder key to value
     */
    ngettext(singular, plural, count, placeholders = {}) {
        return this.subtitudePlaceholders(this.gt.ngettext(singular, plural, count).replace(/%n/g, count.toString()), placeholders);
    }
}
/**
 * Create a new GettextBuilder instance
 */
function getGettextBuilder() {
    return new GettextBuilder();
}




/***/ }),

/***/ 3334:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $X: () => (/* binding */ getDayNamesShort),
/* harmony export */   JN: () => (/* binding */ getFirstDay),
/* harmony export */   Pe: () => (/* binding */ getDayNamesMin),
/* harmony export */   Tl: () => (/* binding */ translate),
/* harmony export */   fL: () => (/* binding */ getMonthNames),
/* harmony export */   hY: () => (/* binding */ getDayNames),
/* harmony export */   lG: () => (/* binding */ getMonthNamesShort),
/* harmony export */   lO: () => (/* binding */ getCanonicalLocale)
/* harmony export */ });
/* unused harmony exports getLanguage, getLocale, getPlural, isRTL, loadTranslations, register, translatePlural, unregister */
/* harmony import */ var _nextcloud_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2778);
/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2838);
/* harmony import */ var escape_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(580);




/// <reference types="@nextcloud/typings" />
/**
 * Get the first day of the week
 *
 * @return {number}
 */
function getFirstDay() {
    if (typeof window.firstDay === 'undefined') {
        console.warn('No firstDay found');
        return 1;
    }
    return window.firstDay;
}
/**
 * Get a list of day names (full names)
 *
 * @return {string[]}
 */
function getDayNames() {
    if (typeof window.dayNames === 'undefined') {
        console.warn('No dayNames found');
        return [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday',
        ];
    }
    return window.dayNames;
}
/**
 * Get a list of day names (short names)
 *
 * @return {string[]}
 */
function getDayNamesShort() {
    if (typeof window.dayNamesShort === 'undefined') {
        console.warn('No dayNamesShort found');
        return ['Sun.', 'Mon.', 'Tue.', 'Wed.', 'Thu.', 'Fri.', 'Sat.'];
    }
    return window.dayNamesShort;
}
/**
 * Get a list of day names (minified names)
 *
 * @return {string[]}
 */
function getDayNamesMin() {
    if (typeof window.dayNamesMin === 'undefined') {
        console.warn('No dayNamesMin found');
        return ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
    }
    return window.dayNamesMin;
}
/**
 * Get a list of month names (full names)
 *
 * @return {string[]}
 */
function getMonthNames() {
    if (typeof window.monthNames === 'undefined') {
        console.warn('No monthNames found');
        return [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
        ];
    }
    return window.monthNames;
}
/**
 * Get a list of month names (short names)
 *
 * @return {string[]}
 */
function getMonthNamesShort() {
    if (typeof window.monthNamesShort === 'undefined') {
        console.warn('No monthNamesShort found');
        return [
            'Jan.',
            'Feb.',
            'Mar.',
            'Apr.',
            'May.',
            'Jun.',
            'Jul.',
            'Aug.',
            'Sep.',
            'Oct.',
            'Nov.',
            'Dec.',
        ];
    }
    return window.monthNamesShort;
}

/**
 * Returns the user's locale
 */
function getLocale() {
    return document.documentElement.dataset.locale || 'en';
}
/**
 * Returns user's locale in canonical form
 * E.g. `en-US` instead of `en_US`
 */
function getCanonicalLocale() {
    return getLocale().replace(/_/g, '-');
}
/**
 * Returns the user's language
 */
function getLanguage() {
    return document.documentElement.lang || 'en';
}
/**
 * Check whether the current, or a given, language is read right-to-left
 *
 * @param language Language code to check, defaults to current language
 */
function isRTL(language) {
    const languageCode = language || getLanguage();
    // Source: https://meta.wikimedia.org/wiki/Template:List_of_language_names_ordered_by_code
    const rtlLanguages = [
        /* eslint-disable no-multi-spaces */
        'ae',
        'ar',
        'arc',
        'arz',
        'bcc',
        'bqi',
        'ckb',
        'dv',
        'fa',
        'glk',
        'ha',
        'he',
        'khw',
        'ks',
        'ku',
        'mzn',
        'nqo',
        'pnb',
        'ps',
        'sd',
        'ug',
        'ur',
        'uzs',
        'yi', // 'ייִדיש', Yiddish
        /* eslint-enable no-multi-spaces */
    ];
    // special case for Uzbek Afghan
    if ((language || getCanonicalLocale()).startsWith('uz-AF')) {
        return true;
    }
    return rtlLanguages.includes(languageCode);
}

/// <reference types="@nextcloud/typings" />
/**
 * Check if translations and plural function are set for given app
 *
 * @param {string} appId the app id
 * @return {boolean}
 */
function hasAppTranslations(appId) {
    var _a, _b;
    return (((_a = window._oc_l10n_registry_translations) === null || _a === void 0 ? void 0 : _a[appId]) !== undefined
        && ((_b = window._oc_l10n_registry_plural_functions) === null || _b === void 0 ? void 0 : _b[appId]) !== undefined);
}
/**
 * Register new, or extend available, translations for an app
 *
 * @param {string} appId the app id
 * @param {object} translations the translations list
 * @param {Function} pluralFunction the plural function
 */
function registerAppTranslations(appId, translations, pluralFunction) {
    var _a;
    window._oc_l10n_registry_translations = Object.assign(window._oc_l10n_registry_translations || {}, {
        [appId]: Object.assign(((_a = window._oc_l10n_registry_translations) === null || _a === void 0 ? void 0 : _a[appId]) || {}, translations),
    });
    window._oc_l10n_registry_plural_functions = Object.assign(window._oc_l10n_registry_plural_functions || {}, {
        [appId]: pluralFunction,
    });
}
/**
 * Unregister all translations and plural function for given app
 *
 * @param {string} appId the app id
 */
function unregisterAppTranslations(appId) {
    var _a, _b;
    (_a = window._oc_l10n_registry_translations) === null || _a === void 0 ? true : delete _a[appId];
    (_b = window._oc_l10n_registry_plural_functions) === null || _b === void 0 ? true : delete _b[appId];
}
/**
 * Get translations bundle for given app and current locale
 *
 * @param {string} appId the app id
 * @return {object}
 */
function getAppTranslations(appId) {
    var _a, _b, _c, _d;
    return {
        translations: (_b = (_a = window._oc_l10n_registry_translations) === null || _a === void 0 ? void 0 : _a[appId]) !== null && _b !== void 0 ? _b : {},
        pluralFunction: (_d = (_c = window._oc_l10n_registry_plural_functions) === null || _c === void 0 ? void 0 : _c[appId]) !== null && _d !== void 0 ? _d : ((number) => number),
    };
}

/**
 * Translate a string
 *
 * @param {string} app the id of the app for which to translate the string
 * @param {string} text the string to translate
 * @param {object} vars map of placeholder key to value
 * @param {number} number to replace %n with
 * @param {object} [options] options object
 * @return {string}
 */
function translate(app, text, vars, number, options) {
    const defaultOptions = {
        escape: true,
        sanitize: true,
    };
    const allOptions = Object.assign({}, defaultOptions, options || {});
    const identity = (value) => value;
    const optSanitize = allOptions.sanitize ? dompurify__WEBPACK_IMPORTED_MODULE_1__.sanitize : identity;
    const optEscape = allOptions.escape ? escape_html__WEBPACK_IMPORTED_MODULE_2__ : identity;
    // TODO: cache this function to avoid inline recreation
    // of the same function over and over again in case
    // translate() is used in a loop
    const _build = (text, vars, number) => {
        return text.replace(/%n/g, '' + number).replace(/{([^{}]*)}/g, (match, key) => {
            if (vars === undefined || !(key in vars)) {
                return optSanitize(match);
            }
            const r = vars[key];
            if (typeof r === 'string' || typeof r === 'number') {
                return optSanitize(optEscape(r));
            }
            else {
                return optSanitize(match);
            }
        });
    };
    const bundle = getAppTranslations(app);
    let translation = bundle.translations[text] || text;
    translation = Array.isArray(translation) ? translation[0] : translation;
    if (typeof vars === 'object' || number !== undefined) {
        return optSanitize(_build(translation, vars, number));
    }
    else {
        return optSanitize(translation);
    }
}
/**
 * Translate a string containing an object which possibly requires a plural form
 *
 * @param {string} app the id of the app for which to translate the string
 * @param {string} textSingular the string to translate for exactly one object
 * @param {string} textPlural the string to translate for n objects
 * @param {number} number number to determine whether to use singular or plural
 * @param {object} vars of placeholder key to value
 * @param {object} options options object
 */
function translatePlural(app, textSingular, textPlural, number, vars, options) {
    const identifier = '_' + textSingular + '_::_' + textPlural + '_';
    const bundle = getAppTranslations(app);
    const value = bundle.translations[identifier];
    if (typeof value !== 'undefined') {
        const translation = value;
        if (Array.isArray(translation)) {
            const plural = bundle.pluralFunction(number);
            return translate(app, translation[plural], vars, number, options);
        }
    }
    if (number === 1) {
        return translate(app, textSingular, vars, number, options);
    }
    else {
        return translate(app, textPlural, vars, number, options);
    }
}
/**
 * Load an app's translation bundle if not loaded already.
 *
 * @param {string} appName name of the app
 * @param {Function} callback callback to be called when
 * the translations are loaded
 * @return {Promise} promise
 */
function loadTranslations(appName, callback) {
    if (hasAppTranslations(appName) || getLocale() === 'en') {
        return Promise.resolve().then(callback);
    }
    const url = generateFilePath(appName, 'l10n', getLocale() + '.json');
    const promise = new Promise((resolve, reject) => {
        const request = new XMLHttpRequest();
        request.open('GET', url, true);
        request.onerror = () => {
            reject(new Error(request.statusText || 'Network error'));
        };
        request.onload = () => {
            if (request.status >= 200 && request.status < 300) {
                try {
                    const bundle = JSON.parse(request.responseText);
                    if (typeof bundle.translations === 'object')
                        resolve(bundle);
                }
                catch (error) {
                    // error is probably a SyntaxError due to invalid response text, this is handled by next line
                }
                reject(new Error('Invalid content of translation bundle'));
            }
            else {
                reject(new Error(request.statusText));
            }
        };
        request.send();
    });
    // load JSON translation bundle per AJAX
    return promise
        .then((result) => {
        register(appName, result.translations);
        return result;
    })
        .then(callback);
}
/**
 * Register an app's translation bundle.
 *
 * @param {string} appName name of the app
 * @param {Object<string, string>} bundle translation bundle
 */
function register(appName, bundle) {
    registerAppTranslations(appName, bundle, getPlural);
}
/**
 * Unregister all translations of an app
 *
 * @param appName name of the app
 * @since 2.1.0
 */
function unregister(appName) {
    return unregisterAppTranslations(appName);
}
/**
 * Get array index of translations for a plural form
 *
 *
 * @param {number} number the number of elements
 * @return {number} 0 for the singular form(, 1 for the first plural form, ...)
 */
function getPlural(number) {
    let language = getLanguage();
    if (language === 'pt-BR') {
        // temporary set a locale for brazilian
        language = 'xbr';
    }
    if (language.length > 3) {
        language = language.substring(0, language.lastIndexOf('-'));
    }
    /*
     * The plural rules are derived from code of the Zend Framework (2010-09-25),
     * which is subject to the new BSD license (http://framework.zend.com/license/new-bsd).
     * Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
     */
    switch (language) {
        case 'az':
        case 'bo':
        case 'dz':
        case 'id':
        case 'ja':
        case 'jv':
        case 'ka':
        case 'km':
        case 'kn':
        case 'ko':
        case 'ms':
        case 'th':
        case 'tr':
        case 'vi':
        case 'zh':
            return 0;
        case 'af':
        case 'bn':
        case 'bg':
        case 'ca':
        case 'da':
        case 'de':
        case 'el':
        case 'en':
        case 'eo':
        case 'es':
        case 'et':
        case 'eu':
        case 'fa':
        case 'fi':
        case 'fo':
        case 'fur':
        case 'fy':
        case 'gl':
        case 'gu':
        case 'ha':
        case 'he':
        case 'hu':
        case 'is':
        case 'it':
        case 'ku':
        case 'lb':
        case 'ml':
        case 'mn':
        case 'mr':
        case 'nah':
        case 'nb':
        case 'ne':
        case 'nl':
        case 'nn':
        case 'no':
        case 'oc':
        case 'om':
        case 'or':
        case 'pa':
        case 'pap':
        case 'ps':
        case 'pt':
        case 'so':
        case 'sq':
        case 'sv':
        case 'sw':
        case 'ta':
        case 'te':
        case 'tk':
        case 'ur':
        case 'zu':
            return number === 1 ? 0 : 1;
        case 'am':
        case 'bh':
        case 'fil':
        case 'fr':
        case 'gun':
        case 'hi':
        case 'hy':
        case 'ln':
        case 'mg':
        case 'nso':
        case 'xbr':
        case 'ti':
        case 'wa':
            return number === 0 || number === 1 ? 0 : 1;
        case 'be':
        case 'bs':
        case 'hr':
        case 'ru':
        case 'sh':
        case 'sr':
        case 'uk':
            return number % 10 === 1 && number % 100 !== 11
                ? 0
                : number % 10 >= 2
                    && number % 10 <= 4
                    && (number % 100 < 10 || number % 100 >= 20)
                    ? 1
                    : 2;
        case 'cs':
        case 'sk':
            return number === 1 ? 0 : number >= 2 && number <= 4 ? 1 : 2;
        case 'ga':
            return number === 1 ? 0 : number === 2 ? 1 : 2;
        case 'lt':
            return number % 10 === 1 && number % 100 !== 11
                ? 0
                : number % 10 >= 2 && (number % 100 < 10 || number % 100 >= 20)
                    ? 1
                    : 2;
        case 'sl':
            return number % 100 === 1
                ? 0
                : number % 100 === 2
                    ? 1
                    : number % 100 === 3 || number % 100 === 4
                        ? 2
                        : 3;
        case 'mk':
            return number % 10 === 1 ? 0 : 1;
        case 'mt':
            return number === 1
                ? 0
                : number === 0 || (number % 100 > 1 && number % 100 < 11)
                    ? 1
                    : number % 100 > 10 && number % 100 < 20
                        ? 2
                        : 3;
        case 'lv':
            return number === 0
                ? 0
                : number % 10 === 1 && number % 100 !== 11
                    ? 1
                    : 2;
        case 'pl':
            return number === 1
                ? 0
                : number % 10 >= 2
                    && number % 10 <= 4
                    && (number % 100 < 12 || number % 100 > 14)
                    ? 1
                    : 2;
        case 'cy':
            return number === 1
                ? 0
                : number === 2
                    ? 1
                    : number === 8 || number === 11
                        ? 2
                        : 3;
        case 'ro':
            return number === 1
                ? 0
                : number === 0 || (number % 100 > 0 && number % 100 < 20)
                    ? 1
                    : 2;
        case 'ar':
            return number === 0
                ? 0
                : number === 1
                    ? 1
                    : number === 2
                        ? 2
                        : number % 100 >= 3 && number % 100 <= 10
                            ? 3
                            : number % 100 >= 11 && number % 100 <= 99
                                ? 4
                                : 5;
        default:
            return 0;
    }
}




/***/ }),

/***/ 3814:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $_: () => (/* binding */ w),
/* harmony export */   Jv: () => (/* binding */ _),
/* harmony export */   KT: () => (/* binding */ v),
/* harmony export */   aU: () => (/* binding */ f),
/* harmony export */   d0: () => (/* binding */ h),
/* harmony export */   dC: () => (/* binding */ U)
/* harmony export */ });
/* unused harmony exports generateFilePath, getAppRootUrl, linkTo */
const R = (n, e) => d(n, "", e), g = (n) => "/remote.php/" + n, U = (n, e) => {
  var o;
  return ((o = e == null ? void 0 : e.baseURL) != null ? o : w()) + g(n);
}, v = (n, e, o) => {
  var c;
  const i = Object.assign({
    ocsVersion: 2
  }, o || {}).ocsVersion === 1 ? 1 : 2;
  return ((c = o == null ? void 0 : o.baseURL) != null ? c : w()) + "/ocs/v" + i + ".php" + u(n, e, o);
}, u = (n, e, o) => {
  const c = Object.assign({
    escape: !0
  }, o || {}), r = function(i, s) {
    return s = s || {}, i.replace(
      /{([^{}]*)}/g,
      function(l, t) {
        const a = s[t];
        return c.escape ? encodeURIComponent(typeof a == "string" || typeof a == "number" ? a.toString() : l) : typeof a == "string" || typeof a == "number" ? a.toString() : l;
      }
    );
  };
  return n.charAt(0) !== "/" && (n = "/" + n), r(n, e || {});
}, _ = (n, e, o) => {
  var c, r, i;
  const s = Object.assign({
    noRewrite: !1
  }, o || {}), l = (c = o == null ? void 0 : o.baseURL) != null ? c : f();
  return ((i = (r = window == null ? void 0 : window.OC) == null ? void 0 : r.config) == null ? void 0 : i.modRewriteWorking) === !0 && !s.noRewrite ? l + u(n, e, o) : l + "/index.php" + u(n, e, o);
}, h = (n, e) => e.includes(".") ? d(n, "img", e) : d(n, "img", "".concat(e, ".svg")), d = (n, e, o) => {
  var c, r, i;
  const s = (i = (r = (c = window == null ? void 0 : window.OC) == null ? void 0 : c.coreApps) == null ? void 0 : r.includes(n)) != null ? i : !1, l = o.slice(-3) === "php";
  let t = f();
  return l && !s ? (t += "/index.php/apps/".concat(n), e && (t += "/".concat(encodeURI(e))), o !== "index.php" && (t += "/".concat(o))) : !l && !s ? (t = b(n), e && (t += "/".concat(e, "/")), t.at(-1) !== "/" && (t += "/"), t += o) : ((n === "settings" || n === "core" || n === "search") && e === "ajax" && (t += "/index.php"), n && (t += "/".concat(n)), e && (t += "/".concat(e)), t += "/".concat(o)), t;
}, w = () => window.location.protocol + "//" + window.location.host + f();
function f() {
  let n = window._oc_webroot;
  if (typeof n > "u") {
    n = location.pathname;
    const e = n.indexOf("/index.php/");
    if (e !== -1)
      n = n.slice(0, e);
    else {
      const o = n.indexOf("/", 1);
      n = n.slice(0, o > 0 ? o : void 0);
    }
  }
  return n;
}
function b(n) {
  var e, o;
  return (o = ((e = window._oc_appswebroots) != null ? e : {})[n]) != null ? o : "";
}



/***/ }),

/***/ 6573:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ x)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcButton-DhaPcomf.css
var NcButton_DhaPcomf = __webpack_require__(5696);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcButton-DhaPcomf.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcButton_DhaPcomf/* default */.A, options);




       /* harmony default export */ const assets_NcButton_DhaPcomf = (NcButton_DhaPcomf/* default */.A && NcButton_DhaPcomf/* default */.A.locals ? NcButton_DhaPcomf/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcButton.mjs


const y = {
  name: "NcButton",
  inject: {
    getNcPopoverTriggerAttrs: {
      from: "NcPopover:trigger:attrs",
      default: () => () => ({})
    }
  },
  props: {
    /**
     * Set the text and icon alignment
     *
     * @default 'center'
     */
    alignment: {
      type: String,
      default: "center",
      validator: (t) => ["start", "start-reverse", "center", "center-reverse", "end", "end-reverse"].includes(t)
    },
    /**
     * Toggles the disabled state of the button on and off.
     */
    disabled: {
      type: Boolean,
      default: !1
    },
    /**
     * Specifies the button type
     * Accepted values: primary, secondary, tertiary, tertiary-no-background, tertiary-on-primary, error, warning, success. If left empty,
     * the default button style will be applied.
     */
    type: {
      type: String,
      validator(t) {
        return ["primary", "secondary", "tertiary", "tertiary-no-background", "tertiary-on-primary", "error", "warning", "success"].indexOf(t) !== -1;
      },
      default: "secondary"
    },
    /**
     * Specifies the button native type
     * Accepted values: submit, reset, button. If left empty,
     * the default "button" type will be used.
     */
    nativeType: {
      type: String,
      validator(t) {
        return ["submit", "reset", "button"].indexOf(t) !== -1;
      },
      default: "button"
    },
    /**
     * Specifies whether the button should span all the available width.
     * By default, buttons span the whole width of the container.
     */
    wide: {
      type: Boolean,
      default: !1
    },
    /**
     * Always try to provide an aria-label to your button. Make it more
     * specific than the button's name by provide some more context. E.g. if
     * the name of the button is "send" in the Mail app, the aria label could
     * be "Send email".
     */
    ariaLabel: {
      type: String,
      default: null
    },
    /**
     * Providing the href attribute turns the button component into an `a`
     * element.
     */
    href: {
      type: String,
      default: null
    },
    /**
     * Providing the download attribute with href downloads file when clicking.
     */
    download: {
      type: String,
      default: null
    },
    /**
     * Providing the to attribute turns the button component into a `router-link`
     * element. Takes precedence over the href attribute.
     */
    to: {
      type: [String, Object],
      default: null
    },
    /**
     * Pass in `true` if you want the matching behaviour of `router-link` to
     * be non-inclusive: https://router.vuejs.org/api/#exact
     */
    exact: {
      type: Boolean,
      default: !1
    },
    /**
     * @deprecated To be removed in @nextcloud/vue 9. Migration guide: remove ariaHidden prop from NcAction* components.
     * @todo Add a check in @nextcloud/vue 9 that this prop is not provided,
     * otherwise root element will inherit incorrect aria-hidden.
     */
    ariaHidden: {
      type: Boolean,
      default: null
    },
    /**
     * The pressed state of the button if it has a checked state
     * This will add the `aria-pressed` attribute and for the button to have the primary style in checked state.
     *
     * Pressed state is not supported for links
     */
    pressed: {
      type: Boolean,
      default: null
    }
  },
  emits: ["update:pressed", "click"],
  computed: {
    /**
     * The real type to be used for the button, enforces `primary` for pressed state and, if stateful button, any other type for not pressed state
     * Otherwise the type property is used.
     */
    realType() {
      return this.pressed ? "primary" : this.pressed === !1 && this.type === "primary" ? "secondary" : this.type;
    },
    /**
     * The flexbox alignment of the button content
     */
    flexAlignment() {
      return this.alignment.split("-")[0];
    },
    /**
     * If the button content should be reversed (icon on the end)
     */
    isReverseAligned() {
      return this.alignment.includes("-");
    },
    ncPopoverTriggerAttrs() {
      return this.getNcPopoverTriggerAttrs();
    }
  },
  /**
   * The render function to display the component
   *
   * @param {Function} h The function to create VNodes
   * @return {object|undefined} The created VNode
   */
  render(t) {
    var o, a, u;
    const r = !!this.$slots.default, s = (o = this.$slots) == null ? void 0 : o.icon;
    !r && !this.ariaLabel && console.warn(
      "You need to fill either the text or the ariaLabel props in the button component.",
      {
        text: (u = (a = this.$slots.default) == null ? void 0 : a[0]) == null ? void 0 : u.text,
        ariaLabel: this.ariaLabel
      },
      this
    );
    const e = this.to || this.href, i = !e && typeof this.pressed == "boolean", l = ({ href: p, navigate: n, isActive: c, isExactActive: h } = {}) => t(
      e ? "a" : "button",
      {
        class: [
          "button-vue",
          {
            "button-vue--icon-only": s && !r,
            "button-vue--text-only": r && !s,
            "button-vue--icon-and-text": s && r,
            ["button-vue--vue-".concat(this.realType)]: this.realType,
            "button-vue--wide": this.wide,
            ["button-vue--".concat(this.flexAlignment)]: this.flexAlignment !== "center",
            "button-vue--reverse": this.isReverseAligned,
            active: c,
            "router-link-exact-active": h
          }
        ],
        attrs: {
          "aria-label": this.ariaLabel,
          "aria-pressed": i ? this.pressed.toString() : void 0,
          disabled: this.disabled,
          type: e ? null : this.nativeType,
          role: e ? "button" : null,
          href: this.to ? p : this.href || null,
          target: e ? "_self" : null,
          rel: e ? "nofollow noreferrer noopener" : null,
          download: !this.to && this.href && this.download ? this.download : null,
          // If this button is used as a popover trigger, we need to apply trigger attrs, e.g. aria attributes
          ...this.ncPopoverTriggerAttrs,
          // Inherit all the component attrs
          ...this.$attrs
        },
        on: {
          ...this.$listeners,
          click: (d) => {
            i && this.$emit("update:pressed", !this.pressed), this.$emit("click", d), n == null || n(d);
          }
        }
      },
      [
        t("span", { class: "button-vue__wrapper" }, [
          s ? t(
            "span",
            {
              class: "button-vue__icon",
              attrs: {
                "aria-hidden": "true"
              }
            },
            [this.$slots.icon]
          ) : null,
          r ? t("span", { class: "button-vue__text" }, [this.$slots.default]) : null
        ])
      ]
    );
    return this.to ? t("router-link", {
      props: {
        custom: !0,
        to: this.to,
        exact: this.exact
      },
      scopedSlots: {
        default: l
      }
    }) : l();
  }
}, b = null, g = null;
var v = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  y,
  b,
  g,
  !1,
  null,
  "fe3b5af5",
  null,
  null
);
const x = v.exports;



/***/ }),

/***/ 7005:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ H)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcModal-CwgrmxSg.css
var NcModal_CwgrmxSg = __webpack_require__(5277);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcModal-CwgrmxSg.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcModal_CwgrmxSg/* default */.A, options);




       /* harmony default export */ const assets_NcModal_CwgrmxSg = (NcModal_CwgrmxSg/* default */.A && NcModal_CwgrmxSg/* default */.A.locals ? NcModal_CwgrmxSg/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/ScopeComponent-Dz4pyD77.mjs
var ScopeComponent_Dz4pyD77 = __webpack_require__(2421);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/focusTrap-Be9GEB5C.mjs
var focusTrap_Be9GEB5C = __webpack_require__(9724);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_l10n-BaNxGGXy.mjs
var _l10n_BaNxGGXy = __webpack_require__(1543);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/GenRandomId-BW3iYFf9.mjs
var GenRandomId_BW3iYFf9 = __webpack_require__(6862);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcActions-DiFslXqv.mjs + 1 modules
var NcActions_DiFslXqv = __webpack_require__(5891);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcButton.mjs + 1 modules
var NcButton = __webpack_require__(6573);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/Directives/Tooltip.mjs + 1 modules
var Tooltip = __webpack_require__(4411);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/ChevronRight-DL3e8bjj.mjs
var ChevronRight_DL3e8bjj = __webpack_require__(4396);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/Close-BtO5TPBO.mjs
var Close_BtO5TPBO = __webpack_require__(4634);
// EXTERNAL MODULE: ./node_modules/focus-trap/dist/focus-trap.esm.js + 1 modules
var focus_trap_esm = __webpack_require__(2078);
// EXTERNAL MODULE: ./node_modules/@vueuse/core/index.mjs + 1 modules
var core = __webpack_require__(3073);
// EXTERNAL MODULE: ./node_modules/floating-vue/dist/floating-vue.es.js + 2 modules
var floating_vue_es = __webpack_require__(2508);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcModal.mjs














(0,_l10n_BaNxGGXy.r)(_l10n_BaNxGGXy.E, _l10n_BaNxGGXy.D);
/**
 * @copyright Copyright (c) 2019 John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
function C(s, e) {
  let t, a, o = e, n;
  this.start = function() {
    n = !0, a = /* @__PURE__ */ new Date(), t = setTimeout(s, o);
  }, this.pause = function() {
    n = !1, clearTimeout(t), o -= /* @__PURE__ */ new Date() - a;
  }, this.clear = function() {
    n = !1, clearTimeout(t), o = 0;
  }, this.getTimeLeft = function() {
    return n && (this.pause(), this.start()), o;
  }, this.getStateRunning = function() {
    return n;
  }, this.start();
}
const S = {
  name: "ChevronLeftIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var b = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon chevron-left-icon", attrs: { "aria-hidden": e.title ? null : !0, "aria-label": e.title, role: "img" }, on: { click: function(a) {
    return e.$emit("click", a);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, k = [], T = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  S,
  b,
  k,
  !1,
  null,
  null,
  null,
  null
);
const x = T.exports, N = {
  name: "PauseIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var B = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon pause-icon", attrs: { "aria-hidden": e.title ? null : !0, "aria-label": e.title, role: "img" }, on: { click: function(a) {
    return e.$emit("click", a);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M14,19H18V5H14M6,19H10V5H6V19Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, $ = [], P = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  N,
  B,
  $,
  !1,
  null,
  null,
  null,
  null
);
const z = P.exports, L = {
  name: "PlayIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var M = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon play-icon", attrs: { "aria-hidden": e.title ? null : !0, "aria-label": e.title, role: "img" }, on: { click: function(a) {
    return e.$emit("click", a);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M8,5.14V19.14L19,12.14L8,5.14Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, F = [], A = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  L,
  M,
  F,
  !1,
  null,
  null,
  null,
  null
);
const E = A.exports, R = {
  name: "NcModal",
  components: {
    NcActions: NcActions_DiFslXqv.N,
    ChevronLeft: x,
    ChevronRight: ChevronRight_DL3e8bjj.C,
    Close: Close_BtO5TPBO.C,
    Pause: z,
    Play: E,
    NcButton: NcButton/* default */.A
  },
  directives: {
    tooltip: floating_vue_es/* VTooltip */.yw
  },
  props: {
    /**
     * Name to be shown with the modal
     */
    name: {
      type: String,
      default: ""
    },
    /**
     * Declare if a previous slide is available
     */
    hasPrevious: {
      type: Boolean,
      default: !1
    },
    /**
     * Declare if a next slide is available
     */
    hasNext: {
      type: Boolean,
      default: !1
    },
    /**
     * Declare if hiding the modal should be animated
     */
    outTransition: {
      type: Boolean,
      default: !1
    },
    /**
     * Declare if the slideshow functionality should be enabled
     */
    enableSlideshow: {
      type: Boolean,
      default: !1
    },
    /**
     * Declare the slide interval
     */
    slideshowDelay: {
      type: Number,
      default: 5e3
    },
    /**
     * Allow to pause an ongoing slideshow
     */
    slideshowPaused: {
      type: Boolean,
      default: !1
    },
    /**
     * Enable swipe between slides
     */
    enableSwipe: {
      type: Boolean,
      default: !0
    },
    spreadNavigation: {
      type: Boolean,
      default: !1
    },
    /**
     * Defines the modal size.
     * Default is 'normal'.
     * Available are 'small', 'normal', 'large' and 'full'.
     * All sizes except 'small' change automatically to full-screen on mobile.
     */
    size: {
      type: String,
      default: "normal",
      validator: (s) => ["small", "normal", "large", "full"].includes(s)
    },
    /**
     * Declare if the modal can be closed
     */
    canClose: {
      type: Boolean,
      default: !0
    },
    /**
     * Close the modal if the user clicked outside of the modal
     * Only relevant if `canClose` is set to true.
     */
    closeOnClickOutside: {
      type: Boolean,
      default: !0
    },
    /**
     * Makes the modal backdrop black if true
     * Will be overwritten if some buttons are shown outside
     */
    dark: {
      type: Boolean,
      default: !1
    },
    /**
     * Selector for the modal container, pass `null` to prevent automatic container mounting
     */
    container: {
      type: [String, null],
      default: "body"
    },
    /**
     * Pass in false if you want the modal 'close' button to be displayed
     * outside the modal boundaries, in the top right corner of the window
     */
    closeButtonContained: {
      type: Boolean,
      default: !0
    },
    /**
     * Additional elements to add to the focus trap
     */
    additionalTrapElements: {
      type: Array,
      default: () => []
    },
    /**
     * Display x items inline
     *
     * @see Actions component usage
     */
    inlineActions: {
      type: Number,
      default: 0
    },
    show: {
      type: Boolean,
      default: void 0
    },
    /**
     * Set element to return focus to after focus trap deactivation
     *
     * @type {import('focus-trap').FocusTargetValueOrFalse}
     */
    setReturnFocus: {
      default: void 0,
      type: [HTMLElement, SVGElement, String, Boolean]
    }
  },
  emits: [
    "previous",
    "next",
    "close",
    "update:show"
  ],
  data() {
    return {
      mc: null,
      playing: !1,
      slideshowTimeout: null,
      iconSize: 24,
      focusTrap: null,
      randId: (0,GenRandomId_BW3iYFf9.G)(),
      internalShow: !0
    };
  },
  computed: {
    showModal() {
      return this.show === void 0 ? this.internalShow : this.show;
    },
    modalTransitionName() {
      return "modal-".concat(this.outTransition ? "out" : "in");
    },
    playPauseName() {
      return this.playing ? (0,_l10n_BaNxGGXy.a)("Pause slideshow") : (0,_l10n_BaNxGGXy.a)("Start slideshow");
    },
    cssVariables() {
      return {
        "--slideshow-duration": this.slideshowDelay + "ms",
        "--icon-size": this.iconSize + "px"
      };
    },
    closeButtonAriaLabel() {
      return (0,_l10n_BaNxGGXy.a)("Close");
    },
    prevButtonAriaLabel() {
      return (0,_l10n_BaNxGGXy.a)("Previous");
    },
    nextButtonAriaLabel() {
      return (0,_l10n_BaNxGGXy.a)("Next");
    }
  },
  watch: {
    /**
     * Handle play/pause of an ongoing slideshow
     *
     * @param {boolean} paused is the player paused
     */
    slideshowPaused(s) {
      this.slideshowTimeout && (s ? this.slideshowTimeout.pause() : this.slideshowTimeout.start());
    },
    additionalTrapElements(s) {
      if (this.focusTrap) {
        const e = this.$refs.mask;
        this.focusTrap.updateContainerElements([e, ...s]);
      }
    }
  },
  beforeMount() {
    window.addEventListener("keydown", this.handleKeydown);
  },
  beforeDestroy() {
    window.removeEventListener("keydown", this.handleKeydown), this.mc.stop();
  },
  mounted() {
    this.useFocusTrap(), this.mc = (0,core/* useSwipe */.o__)(this.$refs.mask, {
      onSwipeEnd: this.handleSwipe
    }), this.container && (this.container === "body" ? document.body.insertBefore(this.$el, document.body.lastChild) : document.querySelector(this.container).appendChild(this.$el));
  },
  destroyed() {
    this.clearFocusTrap(), this.$el.remove();
  },
  methods: {
    t: _l10n_BaNxGGXy.a,
    // Events emitters
    previous(s) {
      this.hasPrevious && (s && this.resetSlideshow(), this.$emit("previous", s));
    },
    next(s) {
      this.hasNext && (s && this.resetSlideshow(), this.$emit("next", s));
    },
    close(s) {
      this.canClose && (this.internalShow = !1, this.$emit("update:show", !1), setTimeout(() => {
        this.$emit("close", s);
      }, 300));
    },
    /**
     * Handle click on modal wrapper
     * If `closeOnClickOutside` is set the modal will be closed
     *
     * @param {MouseEvent} event The click event
     */
    handleClickModalWrapper(s) {
      this.closeOnClickOutside && this.close(s);
    },
    /**
     * @param {KeyboardEvent} event - keyboard event
     */
    handleKeydown(s) {
      if (s.key === "Escape") {
        const t = (0,focusTrap_Be9GEB5C.g)();
        return t.length > 0 && t[t.length - 1] !== this.focusTrap ? void 0 : this.close(s);
      }
      const e = {
        ArrowLeft: this.previous,
        ArrowRight: this.next
      };
      if (e[s.key])
        return document.activeElement && !this.$el.contains(document.activeElement) ? void 0 : e[s.key](s);
    },
    /**
     * handle the swipe event
     *
     * @param {TouchEvent} e The touch event
     * @param {import('@vueuse/core').SwipeDirection} direction Swipe direction
     */
    handleSwipe(s, e) {
      this.enableSwipe && (e === "left" ? this.next(s) : e === "right" && this.previous(s));
    },
    /**
     * Toggle the slideshow state
     */
    togglePlayPause() {
      this.playing = !this.playing, this.playing ? this.handleSlideshow() : this.clearSlideshowTimeout();
    },
    /**
     * Reset the slideshow timer and keep going if it was on
     */
    resetSlideshow() {
      this.playing = !this.playing, this.clearSlideshowTimeout(), this.$nextTick(function() {
        this.togglePlayPause();
      });
    },
    /**
     * Handle the slideshow timer and next event
     */
    handleSlideshow() {
      this.playing = !0, this.hasNext ? this.slideshowTimeout = new C(() => {
        this.next(), this.handleSlideshow();
      }, this.slideshowDelay) : (this.playing = !1, this.clearSlideshowTimeout());
    },
    /**
     * Clear slideshowTimeout if ongoing
     */
    clearSlideshowTimeout() {
      this.slideshowTimeout && this.slideshowTimeout.clear();
    },
    /**
     * Add focus trap for accessibility.
     */
    async useFocusTrap() {
      if (!this.showModal || this.focusTrap)
        return;
      const s = this.$refs.mask;
      await this.$nextTick();
      const e = {
        allowOutsideClick: !0,
        fallbackFocus: s,
        trapStack: (0,focusTrap_Be9GEB5C.g)(),
        // Esc can be used without stop in content or additionalTrapElements where it should not deacxtivate modal's focus trap.
        // Focus trap is deactivated on modal close anyway.
        escapeDeactivates: !1,
        setReturnFocus: this.setReturnFocus
      };
      this.focusTrap = (0,focus_trap_esm/* createFocusTrap */.K)([s, ...this.additionalTrapElements], e), this.focusTrap.activate();
    },
    clearFocusTrap() {
      var s;
      this.focusTrap && ((s = this.focusTrap) == null || s.deactivate(), this.focusTrap = null);
    }
  }
};
var I = function() {
  var e = this, t = e._self._c;
  return t("transition", { attrs: { name: "fade", appear: "" }, on: { "after-enter": e.useFocusTrap, "before-leave": e.clearFocusTrap } }, [t("div", { directives: [{ name: "show", rawName: "v-show", value: e.showModal, expression: "showModal" }], ref: "mask", staticClass: "modal-mask", class: { "modal-mask--dark": e.dark || !e.closeButtonContained || e.hasPrevious || e.hasNext }, style: e.cssVariables, attrs: { role: "dialog", "aria-modal": "true", "aria-labelledby": "modal-name-" + e.randId, "aria-describedby": "modal-description-" + e.randId, tabindex: "-1" } }, [t("transition", { attrs: { name: "fade-visibility", appear: "" } }, [t("div", { staticClass: "modal-header" }, [e.name.trim() !== "" ? t("h2", { staticClass: "modal-name", attrs: { id: "modal-name-" + e.randId } }, [e._v(" " + e._s(e.name) + " ")]) : e._e(), t("div", { staticClass: "icons-menu" }, [e.hasNext && e.enableSlideshow ? t("button", { directives: [{ name: "tooltip", rawName: "v-tooltip.auto", value: e.playPauseName, expression: "playPauseName", modifiers: { auto: !0 } }], staticClass: "play-pause-icons", class: { "play-pause-icons--paused": e.slideshowPaused }, attrs: { type: "button" }, on: { click: e.togglePlayPause } }, [e.playing ? t("Pause", { staticClass: "play-pause-icons__pause", attrs: { size: e.iconSize } }) : t("Play", { staticClass: "play-pause-icons__play", attrs: { size: e.iconSize } }), t("span", { staticClass: "hidden-visually" }, [e._v(" " + e._s(e.playPauseName) + " ")]), e.playing ? t("svg", { staticClass: "progress-ring", attrs: { height: "50", width: "50" } }, [t("circle", { staticClass: "progress-ring__circle", attrs: { stroke: "white", "stroke-width": "2", fill: "transparent", r: "15", cx: "25", cy: "25" } })]) : e._e()], 1) : e._e(), t("NcActions", { staticClass: "header-actions", attrs: { inline: e.inlineActions } }, [e._t("actions")], 2), e.canClose && !e.closeButtonContained ? t("NcButton", { staticClass: "header-close", attrs: { "aria-label": e.closeButtonAriaLabel, type: "tertiary" }, on: { click: e.close }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t("Close", { attrs: { size: e.iconSize } })];
  }, proxy: !0 }], null, !1, 1841713362) }) : e._e()], 1)])]), t("transition", { attrs: { name: e.modalTransitionName, appear: "" } }, [t("div", { directives: [{ name: "show", rawName: "v-show", value: e.showModal, expression: "showModal" }], staticClass: "modal-wrapper", class: [
    "modal-wrapper--".concat(e.size),
    { "modal-wrapper--spread-navigation": e.spreadNavigation }
  ], on: { mousedown: function(a) {
    return a.target !== a.currentTarget ? null : e.handleClickModalWrapper.apply(null, arguments);
  } } }, [t("transition", { attrs: { name: "fade-visibility", appear: "" } }, [t("NcButton", { directives: [{ name: "show", rawName: "v-show", value: e.hasPrevious, expression: "hasPrevious" }], staticClass: "prev", attrs: { type: "tertiary-no-background", "aria-label": e.prevButtonAriaLabel }, on: { click: e.previous }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t("ChevronLeft", { attrs: { size: 40 } })];
  }, proxy: !0 }]) })], 1), t("div", { staticClass: "modal-container", attrs: { id: "modal-description-" + e.randId } }, [e.canClose && e.closeButtonContained ? t("NcButton", { staticClass: "modal-container__close", attrs: { type: "tertiary", "aria-label": e.closeButtonAriaLabel }, on: { click: e.close }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t("Close", { attrs: { size: 20 } })];
  }, proxy: !0 }], null, !1, 2121748766) }) : e._e(), t("div", { staticClass: "modal-container__content" }, [e._t("default")], 2)], 1), t("transition", { attrs: { name: "fade-visibility", appear: "" } }, [t("NcButton", { directives: [{ name: "show", rawName: "v-show", value: e.hasNext, expression: "hasNext" }], staticClass: "next", attrs: { type: "tertiary-no-background", "aria-label": e.nextButtonAriaLabel }, on: { click: e.next }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t("ChevronRight", { attrs: { size: 40 } })];
  }, proxy: !0 }]) })], 1)], 1)])], 1)]);
}, D = [], V = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  R,
  I,
  D,
  !1,
  null,
  "1ea9d450",
  null,
  null
);
const H = V.exports;
/**
 * @copyright Copyright (c) 2019 John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
(0,ScopeComponent_Dz4pyD77.S)(H);



/***/ }),

/***/ 5359:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ M)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcNoteCard-B_Q1mnCM.css
var NcNoteCard_B_Q1mnCM = __webpack_require__(4496);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcNoteCard-B_Q1mnCM.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcNoteCard_B_Q1mnCM/* default */.A, options);




       /* harmony default export */ const assets_NcNoteCard_B_Q1mnCM = (NcNoteCard_B_Q1mnCM/* default */.A && NcNoteCard_B_Q1mnCM/* default */.A.locals ? NcNoteCard_B_Q1mnCM/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcNoteCard.mjs


const a = {
  name: "CheckboxMarkedCircleIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var s = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon checkbox-marked-circle-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(r) {
    return t.$emit("click", r);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, c = [], o = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  a,
  s,
  c,
  !1,
  null,
  null,
  null,
  null
);
const _ = o.exports, u = {
  name: "AlertDecagramIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var d = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon alert-decagram-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(r) {
    return t.$emit("click", r);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M13,17H11V15H13V17M13,13H11V7H13V13Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, f = [], m = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  u,
  d,
  f,
  !1,
  null,
  null,
  null,
  null
);
const p = m.exports, v = {
  name: "AlertIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var g = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon alert-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(r) {
    return t.$emit("click", r);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, h = [], C = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  v,
  g,
  h,
  !1,
  null,
  null,
  null,
  null
);
const i = C.exports, L = {
  name: "InformationIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var $ = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon information-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(r) {
    return t.$emit("click", r);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, w = [], y = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  L,
  $,
  w,
  !1,
  null,
  null,
  null,
  null
);
const k = y.exports, A = {
  name: "NcNoteCard",
  props: {
    /**
     * Type of the attribute
     */
    type: {
      type: String,
      default: "warning",
      validator: (n) => ["success", "info", "warning", "error"].includes(n)
    },
    showAlert: {
      type: Boolean,
      default: !1
    },
    heading: {
      type: String,
      default: ""
    }
  },
  computed: {
    shouldShowAlert() {
      return this.showAlert || this.type === "error";
    },
    icon() {
      switch (this.type) {
        case "error":
          return p;
        case "success":
          return _;
        case "info":
          return k;
        case "warning":
          return i;
        default:
          return i;
      }
    },
    color() {
      switch (this.type) {
        case "error":
          return "var(--color-error)";
        case "success":
          return "var(--color-success)";
        case "info":
          return "var(--color-info)";
        case "warning":
          return "var(--color-warning)";
        default:
          return "var(--color-warning)";
      }
    }
  }
};
var b = function() {
  var t = this, e = t._self._c;
  return e("div", { staticClass: "notecard", class: "notecard--".concat(t.type), attrs: { role: t.shouldShowAlert ? "alert" : "note" } }, [t._t("icon", function() {
    return [e(t.icon, { tag: "component", staticClass: "notecard__icon", class: { "notecard__icon--heading": t.heading }, attrs: { "fill-color": t.color } })];
  }), e("div", [t.heading ? e("h2", [t._v(" " + t._s(t.heading) + " ")]) : t._e(), t._t("default")], 2)], 2);
}, x = [], z = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  A,
  b,
  x,
  !1,
  null,
  "722d543a",
  null,
  null
);
const M = z.exports;



/***/ }),

/***/ 4411:
/***/ ((__unused_webpack___webpack_module__, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";

// UNUSED EXPORTS: default, options

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/Tooltip-DA4si7PR.css
var Tooltip_DA4si7PR = __webpack_require__(3962);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/Tooltip-DA4si7PR.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(Tooltip_DA4si7PR/* default */.A, options);




       /* harmony default export */ const assets_Tooltip_DA4si7PR = (Tooltip_DA4si7PR/* default */.A && Tooltip_DA4si7PR/* default */.A.locals ? Tooltip_DA4si7PR/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/floating-vue/dist/floating-vue.es.js + 2 modules
var floating_vue_es = __webpack_require__(2508);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/Directives/Tooltip.mjs



/**
 * @copyright Copyright (c) 2019 Julius Härtl <jus@bitgrid.net>
 *
 * @author Julius Härtl <jus@bitgrid.net>
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
floating_vue_es/* options */.fF.themes.tooltip.html = !1;
floating_vue_es/* options */.fF.themes.tooltip.delay = { show: 500, hide: 200 };
floating_vue_es/* options */.fF.themes.tooltip.distance = 10;
floating_vue_es/* options */.fF.themes.tooltip["arrow-padding"] = 3;



/***/ }),

/***/ 4396:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ _)
/* harmony export */ });
/* harmony import */ var _plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3490);

const n = {
  name: "ChevronRightIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var r = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon chevron-right-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(i) {
    return t.$emit("click", i);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, s = [], a = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_0__.n)(
  n,
  r,
  s,
  !1,
  null,
  null,
  null,
  null
);
const _ = a.exports;



/***/ }),

/***/ 4634:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ _)
/* harmony export */ });
/* harmony import */ var _plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3490);

const s = {
  name: "CloseIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var n = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon close-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(l) {
    return t.$emit("click", l);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, r = [], a = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_0__.n)(
  s,
  n,
  r,
  !1,
  null,
  null,
  null,
  null
);
const _ = a.exports;



/***/ }),

/***/ 958:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: () => (/* binding */ _)
/* harmony export */ });
/* harmony import */ var _plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3490);

const n = {
  name: "DotsHorizontalIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var r = function() {
  var t = this, e = t._self._c;
  return e("span", t._b({ staticClass: "material-design-icon dots-horizontal-icon", attrs: { "aria-hidden": t.title ? null : !0, "aria-label": t.title, role: "img" }, on: { click: function(i) {
    return t.$emit("click", i);
  } } }, "span", t.$attrs, !1), [e("svg", { staticClass: "material-design-icon__svg", attrs: { fill: t.fillColor, width: t.size, height: t.size, viewBox: "0 0 24 24" } }, [e("path", { attrs: { d: "M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z" } }, [t.title ? e("title", [t._v(t._s(t.title))]) : t._e()])])]);
}, s = [], a = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_0__.n)(
  n,
  r,
  s,
  !1,
  null,
  null,
  null,
  null
);
const _ = a.exports;



/***/ }),

/***/ 6862:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: () => (/* binding */ e)
/* harmony export */ });
/**
 * @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const e = (a) => Math.random().toString(36).replace(/[^a-z]+/g, "").slice(0, a || 5);



/***/ }),

/***/ 5891:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  N: () => (/* binding */ ve)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcActions-CiiQkX9v.css
var NcActions_CiiQkX9v = __webpack_require__(2425);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcActions-CiiQkX9v.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcActions_CiiQkX9v/* default */.A, options);




       /* harmony default export */ const assets_NcActions_CiiQkX9v = (NcActions_CiiQkX9v/* default */.A && NcActions_CiiQkX9v/* default */.A.locals ? NcActions_CiiQkX9v/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcButton.mjs + 1 modules
var NcButton = __webpack_require__(6573);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcPopover--V3R3EKV.mjs + 1 modules
var NcPopover_V3R3EKV = __webpack_require__(1194);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/GenRandomId-BW3iYFf9.mjs
var GenRandomId_BW3iYFf9 = __webpack_require__(6862);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/focusTrap-Be9GEB5C.mjs
var focusTrap_Be9GEB5C = __webpack_require__(9724);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_l10n-BaNxGGXy.mjs
var _l10n_BaNxGGXy = __webpack_require__(1543);
// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/DotsHorizontal-DfVgEXgz.mjs
var DotsHorizontal_DfVgEXgz = __webpack_require__(958);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcActions-DiFslXqv.mjs









(0,_l10n_BaNxGGXy.r)(_l10n_BaNxGGXy.o);
const W = ".focusable", ce = {
  name: "NcActions",
  components: {
    NcButton: NcButton/* default */.A,
    DotsHorizontal: DotsHorizontal_DfVgEXgz.D,
    NcPopover: NcPopover_V3R3EKV.N
  },
  provide() {
    return {
      /**
       * NcActions can be used as:
       * - Application menu (has menu role)
       * - Expanded block (has no specific role, should be used an element with expanded role)
       * - Popover with plain text or text inputs (has no specific role)
       * Depending on the usage (used items), the menu and its items should have different roles for a11y.
       * Provide the role for NcAction* components in the NcActions content.
       * @type {import('vue').ComputedRef<boolean>}
       */
      "NcActions:isSemanticMenu": (0,vue_runtime_esm/* computed */.EW)(() => this.actionsMenuSemanticType === "menu")
    };
  },
  props: {
    /**
     * Specify the open state of the popover menu
     */
    open: {
      type: Boolean,
      default: !1
    },
    /**
     * This disables the internal open management,
     * so the actions menu only respects the `open` prop.
     * This is e.g. necessary for the NcAvatar component
     * to only open the actions menu after loading it's entries has finished.
     */
    manualOpen: {
      type: Boolean,
      default: !1
    },
    /**
     * Force the actions to display in a three dot menu
     */
    forceMenu: {
      type: Boolean,
      default: !1
    },
    /**
     * Force the name to show for single actions
     */
    forceName: {
      type: Boolean,
      default: !1
    },
    /**
     * Specify the menu name
     */
    menuName: {
      type: String,
      default: null
    },
    /**
     * NcActions can be used as:
     *
     * - Application menu (has menu role)
     * - Navigation (has no specific role, should be used an element with expanded role)
     * - Popover with plain text or text inputs (has no specific role)
     *
     * By default the used type is automatically detected by components used in the default slot.#
     *
     * With Vue this is limited to direct children of the NcActions component.
     * So if you use a wrapper, you have to provide the semantic type yourself (see Example)
     *
     * Choose:
     *
     * - 'dialog' if you use any of these components: NcActionInput', 'NcActionTextEditable'
     * - 'menu' if you use any of these components: 'NcActionButton', 'NcActionButtonGroup', 'NcActionCheckbox', 'NcActionRadio'
     * - 'expanded' if using one of these: 'NcActionLink', 'NcActionRouter'. This represents an expanded block.
     * - 'tooltip' only to be used when a text without any interactive elements is used.
     * - Leave this property unset otherwise
     */
    forceSemanticType: {
      type: String,
      default: null,
      validator(e) {
        return ["dialog", "menu", "expanded", "tooltip"].includes(e);
      }
    },
    /**
     * Apply primary styling for this menu
     */
    primary: {
      type: Boolean,
      default: !1
    },
    /**
     * Specifies the button type used for trigger and single actions buttons
     * Accepted values: primary, secondary, tertiary, tertiary-no-background, tertiary-on-primary, error, warning, success. If left empty,
     * the default button style will be applied.
     */
    type: {
      type: String,
      validator(e) {
        return ["primary", "secondary", "tertiary", "tertiary-no-background", "tertiary-on-primary", "error", "warning", "success"].indexOf(e) !== -1;
      },
      default: null
    },
    /**
     * Icon to show for the toggle menu button
     * when more than one action is inside the actions component.
     * Only replace the default three-dot icon if really necessary.
     */
    defaultIcon: {
      type: String,
      default: ""
    },
    /**
     * Aria label for the actions menu.
     *
     * If `menuName` is defined this will not be used to prevent
     * any accessible name conflicts. This ensures that the
     * element can be activated via voice input.
     */
    ariaLabel: {
      type: String,
      default: (0,_l10n_BaNxGGXy.a)("Actions")
    },
    /**
     * @deprecated To be removed in @nextcloud/vue 9. Migration guide: remove ariaHidden prop from NcAction* components.
     * @todo Add a check in @nextcloud/vue 9 that this prop is not provided,
     * otherwise root element will inherit incorrect aria-hidden.
     */
    ariaHidden: {
      type: Boolean,
      default: null
    },
    /**
     * Wanted direction of the menu
     */
    placement: {
      type: String,
      default: "bottom"
    },
    /**
     * DOM element for the actions' popover boundaries
     */
    boundariesElement: {
      type: Element,
      default: () => document.querySelector("body")
    },
    /**
     * Selector for the actions' popover container
     */
    container: {
      type: [String, Object, Element, Boolean],
      default: "body"
    },
    /**
     * Disabled state of the main button (single action or menu toggle)
     */
    disabled: {
      type: Boolean,
      default: !1
    },
    /**
     * Display x items inline out of the dropdown menu
     * Will be ignored if `forceMenu` is set
     */
    inline: {
      type: Number,
      default: 0
    }
  },
  emits: [
    "open",
    "update:open",
    "close",
    "focus",
    "blur",
    "click"
  ],
  setup() {
    const e = "menu-".concat((0,GenRandomId_BW3iYFf9.G)());
    return {
      randomId: e,
      triggerRandomId: "trigger-".concat(e)
    };
  },
  data() {
    return {
      opened: this.open,
      focusIndex: 0,
      /**
       * @type {'menu'|'expanded'|'dialog'|'tooltip'|'unknown'}
       */
      actionsMenuSemanticType: "unknown",
      externalFocusTrapStack: []
    };
  },
  computed: {
    triggerBtnType() {
      return this.type || (this.primary ? "primary" : this.menuName ? "secondary" : "tertiary");
    },
    /**
     * A11y roles and keyboard navigation configuration depending on the semantic type
     */
    config() {
      return {
        menu: {
          popupRole: "menu",
          withArrowNavigation: !0,
          withTabNavigation: !1,
          withFocusTrap: !1,
          triggerA11yAttr: {
            "aria-controls": this.opened ? this.randomId : null
          },
          popoverContainerA11yAttrs: {},
          popoverUlA11yAttrs: {
            id: this.randomId,
            role: "menu"
          }
        },
        expanded: {
          popupRole: void 0,
          withArrowNavigation: !1,
          withTabNavigation: !0,
          withFocusTrap: !1,
          triggerA11yAttr: {},
          popoverContainerA11yAttrs: {},
          popoverUlA11yAttrs: {}
        },
        dialog: {
          popupRole: "dialog",
          withArrowNavigation: !1,
          withTabNavigation: !0,
          withFocusTrap: !0,
          triggerA11yAttr: {
            "aria-controls": this.opened ? this.randomId : null
          },
          popoverContainerA11yAttrs: {
            id: this.randomId,
            role: "dialog",
            // Dialog must have a label
            "aria-labelledby": this.triggerRandomId,
            "aria-modal": "true"
          },
          popoverUlA11yAttrs: {}
        },
        tooltip: {
          popupRole: void 0,
          withArrowNavigation: !1,
          withTabNavigation: !1,
          withFocusTrap: !1,
          triggerA11yAttr: {},
          popoverContainerA11yAttrs: {},
          popoverUlA11yAttrs: {}
        },
        // Due to Vue limitations, we sometimes cannot determine the true type
        // As a fallback use both arrow navigation and focus trap
        unknown: {
          popupRole: void 0,
          role: void 0,
          withArrowNavigation: !0,
          withTabNavigation: !1,
          withFocusTrap: !0,
          triggerA11yAttr: {},
          popoverContainerA11yAttrs: {},
          popoverUlA11yAttrs: {}
        }
      }[this.actionsMenuSemanticType];
    }
  },
  watch: {
    // Watch parent prop
    open(e) {
      e !== this.opened && (this.opened = e);
    },
    opened() {
      this.intersectIntoCurrentFocusTrapStack();
    }
  },
  methods: {
    /**
     * Get the name of the action component
     *
     * @param {import('vue').VNode} action - a vnode with a NcAction* component instance
     * @return {string} the name of the action component
     */
    getActionName(e) {
      var i, n, s, o, r;
      return (r = (s = (n = (i = e == null ? void 0 : e.componentOptions) == null ? void 0 : i.Ctor) == null ? void 0 : n.extendOptions) == null ? void 0 : s.name) != null ? r : (o = e == null ? void 0 : e.componentOptions) == null ? void 0 : o.tag;
    },
    /**
     * When the component has its own focus trap, then it is managed by global trap stack by focus-trap.
     *
     * However if the component has no focus trap and is used inside another focus trap - there is an issue.
     * By default popover content is rendered in body or other container, which is likely outside the current focus trap containers.
     * It results in broken behavior from focus-trap.
     *
     * We need to pause all the focus traps for opening popover and then unpause them back after closing.
     */
    intersectIntoCurrentFocusTrapStack() {
      if (!this.config.withFocusTrap)
        if (this.opened) {
          this.externalFocusTrapStack = [...(0,focusTrap_Be9GEB5C.g)()];
          for (const e of this.externalFocusTrapStack)
            e.pause();
        } else {
          for (const e of this.externalFocusTrapStack)
            e.unpause();
          this.externalFocusTrapStack = [];
        }
    },
    /**
     * Do we have exactly one Action and
     * is it allowed as a standalone element?
     *
     * @param {import('vue').VNode} action The action to check
     * @return {boolean}
     */
    isValidSingleAction(e) {
      return ["NcActionButton", "NcActionLink", "NcActionRouter"].includes(this.getActionName(e));
    },
    /**
     * Check whether a icon prop value is an URL or not
     * @param {string} url The icon prop value
     */
    isIconUrl(e) {
      try {
        return !!new URL(e, e.startsWith("/") ? window.location.origin : void 0);
      } catch {
        return !1;
      }
    },
    // MENU STATE MANAGEMENT
    openMenu(e) {
      this.opened || (this.opened = !0, this.$emit("update:open", !0), this.$emit("open"));
    },
    async closeMenu(e = !0) {
      var i, n;
      this.opened && (await this.$nextTick(), this.opened = !1, (i = this.$refs.popover) == null || i.clearFocusTrap({ returnFocus: e }), this.$emit("update:open", !1), this.$emit("close"), this.focusIndex = 0, e && ((n = this.$refs.menuButton) == null || n.$el.focus()));
    },
    /**
     * Called when popover is shown after the show delay
     */
    onOpen() {
      this.$nextTick(() => {
        this.focusFirstAction(null), this.resizePopover();
      });
    },
    /**
     * Hanle resizing the popover to make sure users can discover there is more to scroll
     */
    resizePopover() {
      const e = this.$refs.menu.closest(".v-popper__inner"), i = Number.parseFloat(window.getComputedStyle(e).maxHeight);
      if (this.$refs.menu.clientHeight > i) {
        let s = 0, o = 0;
        for (const r of this.$refs.menuList.children) {
          if (s + r.clientHeight / 2 > i) {
            e.style.height = "".concat(s - o / 2, "px");
            break;
          }
          o = r.clientHeight, s += o;
        }
      }
    },
    // MENU KEYS & FOCUS MANAGEMENT
    /**
     * @return {HTMLElement|null}
     */
    getCurrentActiveMenuItemElement() {
      return this.$refs.menu.querySelector("li.active");
    },
    /**
     * @return {NodeListOf<HTMLElement>}
     */
    getFocusableMenuItemElements() {
      return this.$refs.menu.querySelectorAll(W);
    },
    /**
     * Focus nearest focusable item on mouse move.
     * DO NOT change the focus if the target is already focused
     * this will prevent issues with input being unfocused
     * on mouse move
     * @param {PointerEvent} event - The mouse move event
     */
    onMouseFocusAction(e) {
      if (document.activeElement === e.target)
        return;
      const i = e.target.closest("li");
      if (i && this.$refs.menu.contains(i)) {
        const n = i.querySelector(W);
        if (n) {
          const o = [...this.getFocusableMenuItemElements()].indexOf(n);
          o > -1 && (this.focusIndex = o, this.focusAction());
        }
      }
    },
    /**
     * Dispatches the keydown listener to different handlers
     *
     * @param {object} event The keydown event
     */
    onKeydown(e) {
      if (e.key === "Tab") {
        if (this.config.withFocusTrap)
          return;
        if (!this.config.withTabNavigation) {
          this.closeMenu(!0);
          return;
        }
        e.preventDefault();
        const i = this.getFocusableMenuItemElements(), n = [...i].indexOf(document.activeElement);
        if (n === -1)
          return;
        const s = e.shiftKey ? n - 1 : n + 1;
        (s < 0 || s === i.length) && this.closeMenu(!0), this.focusIndex = s, this.focusAction();
        return;
      }
      this.config.withArrowNavigation && (e.key === "ArrowUp" && this.focusPreviousAction(e), e.key === "ArrowDown" && this.focusNextAction(e), e.key === "PageUp" && this.focusFirstAction(e), e.key === "PageDown" && this.focusLastAction(e)), e.key === "Escape" && (this.closeMenu(), e.preventDefault());
    },
    onTriggerKeydown(e) {
      e.key === "Escape" && this.actionsMenuSemanticType === "tooltip" && this.closeMenu();
    },
    removeCurrentActive() {
      const e = this.$refs.menu.querySelector("li.active");
      e && e.classList.remove("active");
    },
    focusAction() {
      const e = this.getFocusableMenuItemElements()[this.focusIndex];
      if (e) {
        this.removeCurrentActive();
        const i = e.closest("li.action");
        e.focus(), i && i.classList.add("active");
      }
    },
    focusPreviousAction(e) {
      this.opened && (this.focusIndex === 0 ? this.focusLastAction(e) : (this.preventIfEvent(e), this.focusIndex = this.focusIndex - 1), this.focusAction());
    },
    focusNextAction(e) {
      if (this.opened) {
        const i = this.getFocusableMenuItemElements().length - 1;
        this.focusIndex === i ? this.focusFirstAction(e) : (this.preventIfEvent(e), this.focusIndex = this.focusIndex + 1), this.focusAction();
      }
    },
    focusFirstAction(e) {
      if (this.opened) {
        this.preventIfEvent(e);
        const i = [...this.getFocusableMenuItemElements()].findIndex((n) => n.getAttribute("aria-checked") === "true" && n.getAttribute("role") === "menuitemradio");
        this.focusIndex = i > -1 ? i : 0, this.focusAction();
      }
    },
    focusLastAction(e) {
      this.opened && (this.preventIfEvent(e), this.focusIndex = this.getFocusableMenuItemElements().length - 1, this.focusAction());
    },
    preventIfEvent(e) {
      e && (e.preventDefault(), e.stopPropagation());
    },
    onFocus(e) {
      this.$emit("focus", e);
    },
    onBlur(e) {
      this.$emit("blur", e), this.actionsMenuSemanticType === "tooltip" && this.$refs.menu && this.getFocusableMenuItemElements().length === 0 && this.closeMenu(!1);
    },
    onClick(e) {
      this.$emit("click", e);
    }
  },
  /**
   * The render function to display the component
   *
   * @param {Function} h The function to create VNodes
   * @return {object|undefined} The created VNode
   */
  render(e) {
    const i = (this.$slots.default || []).filter((t) => this.getActionName(t));
    if (i.length === 0)
      return;
    let n = i.filter(this.isValidSingleAction);
    this.forceMenu && n.length > 0 && this.inline > 0 && (vue_runtime_esm/* default */.Ay.util.warn("Specifying forceMenu will ignore any inline actions rendering."), n = []);
    const s = n.slice(0, this.inline), o = i.filter((t) => !s.includes(t));
    if (this.forceSemanticType)
      this.actionsMenuSemanticType = this.forceSemanticType;
    else {
      const t = ["NcActionInput", "NcActionTextEditable"], a = ["NcActionButton", "NcActionButtonGroup", "NcActionCheckbox", "NcActionRadio"], l = ["NcActionLink", "NcActionRouter"], u = o.some((c) => t.includes(this.getActionName(c))), p = o.some((c) => a.includes(this.getActionName(c))), h = o.some((c) => l.includes(this.getActionName(c)));
      u ? this.actionsMenuSemanticType = "dialog" : p ? this.actionsMenuSemanticType = "menu" : h ? this.actionsMenuSemanticType = "expanded" : i.filter((d) => this.getActionName(d).startsWith("NcAction")).length === i.length ? this.actionsMenuSemanticType = "tooltip" : this.actionsMenuSemanticType = "unknown";
    }
    const r = (t) => {
      var y, v, b, I, w, T, N, x, S, k, F, M, m, $, E, B, C, L, O, _, R, D, P, U, H, z, V, q, K, G;
      const a = (v = (y = t == null ? void 0 : t.componentOptions) == null ? void 0 : y.propsData) == null ? void 0 : v.icon, l = (T = (w = (I = (b = t == null ? void 0 : t.data) == null ? void 0 : b.scopedSlots) == null ? void 0 : I.icon()) == null ? void 0 : w[0]) != null ? T : this.isIconUrl(a) ? e("img", { class: "action-item__menutoggle__icon", attrs: { src: a, alt: "" } }) : e("span", { class: ["icon", a] }), u = ((N = t == null ? void 0 : t.data) == null ? void 0 : N.attrs) || {}, p = (S = (x = t == null ? void 0 : t.componentOptions) == null ? void 0 : x.listeners) == null ? void 0 : S.click, h = ($ = (m = (M = (F = (k = t == null ? void 0 : t.componentOptions) == null ? void 0 : k.children) == null ? void 0 : F[0]) == null ? void 0 : M.text) == null ? void 0 : m.trim) == null ? void 0 : $.call(m), c = ((B = (E = t == null ? void 0 : t.componentOptions) == null ? void 0 : E.propsData) == null ? void 0 : B.ariaLabel) || h, d = this.forceName ? h : "";
      let g = (L = (C = t == null ? void 0 : t.componentOptions) == null ? void 0 : C.propsData) == null ? void 0 : L.title;
      this.forceName || g || (g = h);
      const f = { ...(_ = (O = t == null ? void 0 : t.componentOptions) == null ? void 0 : O.propsData) != null ? _ : {} }, j = ["submit", "reset"].includes(f.type) ? f.modelValue : "button";
      return delete f.modelValue, delete f.type, e(
        "NcButton",
        {
          class: [
            "action-item action-item--single",
            (R = t == null ? void 0 : t.data) == null ? void 0 : R.staticClass,
            (D = t == null ? void 0 : t.data) == null ? void 0 : D.class
          ],
          attrs: {
            ...u,
            "aria-label": c,
            title: g
          },
          ref: (P = t == null ? void 0 : t.data) == null ? void 0 : P.ref,
          props: {
            // If it has a menuName, we use a secondary button
            type: this.type || (d ? "secondary" : "tertiary"),
            disabled: this.disabled || ((H = (U = t == null ? void 0 : t.componentOptions) == null ? void 0 : U.propsData) == null ? void 0 : H.disabled),
            pressed: (V = (z = t == null ? void 0 : t.componentOptions) == null ? void 0 : z.propsData) == null ? void 0 : V.modelValue,
            nativeType: j,
            ...f
          },
          on: {
            focus: this.onFocus,
            blur: this.onBlur,
            // forward any pressed state from NcButton just like NcActionButton does
            "update:pressed": (G = (K = (q = t == null ? void 0 : t.componentOptions) == null ? void 0 : q.listeners) == null ? void 0 : K["update:modelValue"]) != null ? G : () => {
            },
            // If we have a click listener,
            // we bind it to execute on click and forward the click event
            ...!!p && {
              click: (J) => {
                p && p(J);
              }
            }
          }
        },
        [
          e("template", { slot: "icon" }, [l]),
          d
        ]
      );
    }, A = (t) => {
      var l, u;
      const a = ((l = this.$slots.icon) == null ? void 0 : l[0]) || (this.defaultIcon ? e("span", { class: ["icon", this.defaultIcon] }) : e("DotsHorizontal", {
        props: {
          size: 20
        }
      }));
      return e(
        "NcPopover",
        {
          ref: "popover",
          props: {
            delay: 0,
            handleResize: !0,
            shown: this.opened,
            placement: this.placement,
            boundary: this.boundariesElement,
            container: this.container,
            popoverBaseClass: "action-item__popper",
            popupRole: this.config.popupRole,
            setReturnFocus: this.config.withFocusTrap ? (u = this.$refs.menuButton) == null ? void 0 : u.$el : null,
            focusTrap: this.config.withFocusTrap
          },
          // For some reason the popover component
          // does not react to props given under the 'props' key,
          // so we use both 'attrs' and 'props'
          attrs: {
            delay: 0,
            handleResize: !0,
            shown: this.opened,
            placement: this.placement,
            boundary: this.boundariesElement,
            container: this.container,
            ...this.manualOpen && { triggers: [] }
          },
          on: {
            show: this.openMenu,
            "apply-show": this.onOpen,
            hide: this.closeMenu
          }
        },
        [
          e("NcButton", {
            class: "action-item__menutoggle",
            props: {
              type: this.triggerBtnType,
              disabled: this.disabled
            },
            slot: "trigger",
            ref: "menuButton",
            attrs: {
              id: this.triggerRandomId,
              "aria-label": this.menuName ? null : this.ariaLabel,
              ...this.config.triggerA11yAttr
            },
            on: {
              focus: this.onFocus,
              blur: this.onBlur,
              click: this.onClick,
              keydown: this.onTriggerKeydown
            }
          }, [
            e("template", { slot: "icon" }, [a]),
            this.menuName
          ]),
          e("div", {
            class: {
              open: this.opened
            },
            attrs: {
              tabindex: "-1",
              ...this.config.popoverContainerA11yAttrs
            },
            on: {
              keydown: this.onKeydown,
              mousemove: this.onMouseFocusAction
            },
            ref: "menu"
          }, [
            e("ul", {
              attrs: {
                tabindex: "-1",
                ...this.config.popoverUlA11yAttrs
              },
              ref: "menuList"
            }, [
              t
            ])
          ])
        ]
      );
    };
    return i.length === 1 && n.length === 1 && !this.forceMenu ? r(i[0]) : (this.$nextTick(() => {
      this.opened && this.$refs.menu && (this.resizePopover(), (this.$refs.menu.querySelector("li.active") || []).length === 0 && this.focusFirstAction());
    }), s.length > 0 && this.inline > 0 ? e(
      "div",
      {
        class: [
          "action-items",
          "action-item--".concat(this.triggerBtnType)
        ]
      },
      [
        // Render inline actions
        ...s.map(r),
        // render the rest within the popover menu
        o.length > 0 ? e(
          "div",
          {
            class: [
              "action-item",
              {
                "action-item--open": this.opened
              }
            ]
          },
          [
            A(o)
          ]
        ) : null
      ]
    ) : e(
      "div",
      {
        class: [
          "action-item action-item--default-popover",
          "action-item--".concat(this.triggerBtnType),
          {
            "action-item--open": this.opened
          }
        ]
      },
      [
        A(i)
      ]
    ));
  }
}, ae = null, le = null;
var ue = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  ce,
  ae,
  le,
  !1,
  null,
  "7f6b7570",
  null,
  null
);
const ve = ue.exports;



/***/ }),

/***/ 9002:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  N: () => (/* binding */ z)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcDialog-DEKSpcnR.css
var NcDialog_DEKSpcnR = __webpack_require__(3732);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcDialog-DEKSpcnR.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcDialog_DEKSpcnR/* default */.A, options);




       /* harmony default export */ const assets_NcDialog_DEKSpcnR = (NcDialog_DEKSpcnR/* default */.A && NcDialog_DEKSpcnR/* default */.A.locals ? NcDialog_DEKSpcnR/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/@vueuse/core/index.mjs + 1 modules
var core = __webpack_require__(3073);
// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcModal.mjs + 1 modules
var NcModal = __webpack_require__(7005);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcDialogButton-DQFoaN7q.mjs
var NcDialogButton_DQFoaN7q = __webpack_require__(4003);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/GenRandomId-BW3iYFf9.mjs
var GenRandomId_BW3iYFf9 = __webpack_require__(6862);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcDialog-C_1rhUHk.mjs







const N = (0,vue_runtime_esm/* defineComponent */.pM)({
  name: "NcDialog",
  components: {
    NcDialogButton: NcDialogButton_DQFoaN7q.N,
    NcModal: NcModal/* default */.A
  },
  props: {
    /** Name of the dialog (the heading) */
    name: {
      type: String,
      required: !0
    },
    /** Text of the dialog */
    message: {
      type: String,
      default: ""
    },
    /** Additional elements to add to the focus trap */
    additionalTrapElements: {
      type: Array,
      validator: (e) => Array.isArray(e) && e.every(
        (a) => typeof a == "string" || a instanceof HTMLElement
      ),
      default: () => []
    },
    /**
     * The element where to mount the dialog, if `null` is passed the dialog is mounted in place
     * @default 'body'
     */
    container: {
      type: String,
      required: !1,
      default: "body"
    },
    /**
     * Whether the dialog should be shown
     * @default true
     */
    open: {
      type: Boolean,
      default: !0
    },
    /**
     * Size of the underlying NcModal
     * @default 'small'
     * @type {'small'|'normal'|'large'|'full'}
     */
    size: {
      type: String,
      required: !1,
      default: "small",
      validator: (e) => typeof e == "string" && ["small", "normal", "large", "full"].includes(e)
    },
    /**
     * Buttons to display
     * @default []
     */
    buttons: {
      type: Array,
      required: !1,
      default: () => [],
      validator: (e) => Array.isArray(e) && e.every((a) => typeof a == "object")
    },
    /**
     * Set to false to no show a close button on the dialog
     * @default true
     */
    canClose: {
      type: Boolean,
      default: !0
    },
    /**
     * Close the dialog if the user clicked outside of the dialog
     * Only relevant if `canClose` is set to true.
     */
    closeOnClickOutside: {
      type: Boolean,
      default: !1
    },
    /**
     * Declare if hiding the modal should be animated
     * @default false
     */
    outTransition: {
      type: Boolean,
      default: !1
    },
    /**
     * Optionally pass additionaly classes which will be set on the navigation for custom styling
     * @default ''
     * @example
     * ```html
     * <DialogBase :navigation-classes="['mydialog-navigation']"><!-- --></DialogBase>
     * <!-- ... -->
     * <style lang="scss">
     * :deep(.mydialog-navigation) {
     *     flex-direction: row-reverse;
     * }
     * </style>
     * ```
     */
    navigationClasses: {
      type: [String, Array, Object],
      required: !1,
      default: ""
    },
    /**
     * aria-label for the dialog navigation.
     * Use it when you want to provide a more meaningful label than the dialog name.
     *
     * By default, navigation is labeled by the dialog name.
     */
    navigationAriaLabel: {
      type: String,
      required: !1,
      default: ""
    },
    /**
     * aria-labelledby for the dialog navigation.
     * Use it when you have an implicit navigation label (e.g. a heading).
     *
     * By default, navigation is labeled by the dialog name.
     */
    navigationAriaLabelledby: {
      type: String,
      required: !1,
      default: ""
    },
    /**
     * Optionally pass additionaly classes which will be set on the content wrapper for custom styling
     * @default ''
     */
    contentClasses: {
      type: [String, Array, Object],
      required: !1,
      default: ""
    },
    /**
     * Optionally pass additionaly classes which will be set on the dialog itself
     * (the default `class` attribute will be set on the modal wrapper)
     * @default ''
     */
    dialogClasses: {
      type: [String, Array, Object],
      required: !1,
      default: ""
    }
  },
  emits: ["closing", "update:open"],
  setup(e, { emit: a, slots: t }) {
    const i = (0,vue_runtime_esm/* ref */.KR)(), { width: l } = (0,core/* useElementSize */.Lhy)(i, { width: 900 }), u = (0,vue_runtime_esm/* computed */.EW)(() => l.value < 876), f = (0,vue_runtime_esm/* computed */.EW)(() => (t == null ? void 0 : t.navigation) !== void 0), r = (0,vue_runtime_esm/* ref */.KR)((0,GenRandomId_BW3iYFf9.G)()), g = (0,vue_runtime_esm/* computed */.EW)(() => e.navigationAriaLabel || void 0), p = (0,vue_runtime_esm/* computed */.EW)(() => {
      if (!e.navigationAriaLabel)
        return e.navigationAriaLabelledby || r.value;
    }), o = (0,vue_runtime_esm/* ref */.KR)(!0), _ = () => {
      d(), window.setTimeout(() => c(), 300);
    }, d = () => {
      o.value = !1, a("closing");
    }, c = () => {
      o.value = !0, a("update:open", !1);
    }, v = (0,vue_runtime_esm/* computed */.EW)(() => ({
      canClose: e.canClose,
      container: e.container === void 0 ? "body" : e.container,
      // we do not pass the name as we already have the name as the headline
      // name: props.name,
      size: e.size,
      show: e.open && o.value,
      outTransition: e.outTransition,
      closeOnClickOutside: e.closeOnClickOutside,
      additionalTrapElements: e.additionalTrapElements
    }));
    return {
      handleButtonClose: _,
      handleClosing: d,
      handleClosed: c,
      hasNavigation: f,
      navigationId: r,
      navigationAriaLabelAttr: g,
      navigationAriaLabelledbyAttr: p,
      isNavigationCollapsed: u,
      modalProps: v,
      wrapper: i
    };
  }
});
var w = function() {
  var a = this, t = a._self._c;
  return a._self._setupProxy, a.open ? t("NcModal", a._b({ staticClass: "dialog__modal", attrs: { "enable-slideshow": !1, "enable-swipe": !1 }, on: { close: a.handleClosed, "update:show": a.handleClosing } }, "NcModal", a.modalProps, !1), [t("h2", { staticClass: "dialog__name", attrs: { id: a.navigationId }, domProps: { textContent: a._s(a.name) } }), t("div", { staticClass: "dialog", class: a.dialogClasses }, [t("div", { ref: "wrapper", class: ["dialog__wrapper", { "dialog__wrapper--collapsed": a.isNavigationCollapsed }] }, [a.hasNavigation ? t("nav", { staticClass: "dialog__navigation", class: a.navigationClasses, attrs: { "aria-label": a.navigationAriaLabelAttr, "aria-labelledby": a.navigationAriaLabelledbyAttr } }, [a._t("navigation", null, { isCollapsed: a.isNavigationCollapsed })], 2) : a._e(), t("div", { staticClass: "dialog__content", class: a.contentClasses }, [a._t("default", function() {
    return [t("p", { staticClass: "dialog__text" }, [a._v(" " + a._s(a.message) + " ")])];
  })], 2)]), t("div", { staticClass: "dialog__actions" }, [a._t("actions", function() {
    return a._l(a.buttons, function(i, l) {
      return t("NcDialogButton", a._b({ key: l, on: { click: a.handleButtonClose } }, "NcDialogButton", i, !1));
    });
  })], 2)])]) : a._e();
}, L = [], S = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  N,
  w,
  L,
  !1,
  null,
  "b0b5e355",
  null,
  null
);
const z = S.exports;



/***/ }),

/***/ 4003:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   N: () => (/* binding */ g)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5471);
/* harmony import */ var _Components_NcButton_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6573);
/* harmony import */ var _NcIconSvgWrapper_BTdzvQGV_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9476);
/* harmony import */ var _plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3490);




const u = (0,vue__WEBPACK_IMPORTED_MODULE_2__/* .defineComponent */ .pM)({
  name: "NcDialogButton",
  components: {
    NcButton: _Components_NcButton_mjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A,
    NcIconSvgWrapper: _NcIconSvgWrapper_BTdzvQGV_mjs__WEBPACK_IMPORTED_MODULE_1__.N
  },
  props: {
    /**
     * The function that will be called when the button is pressed
     * @type {() => void}
     */
    callback: {
      type: Function,
      required: !0
    },
    /**
     * The label of the button
     */
    label: {
      type: String,
      required: !0
    },
    /**
     * Optional inline SVG icon for the button
     */
    icon: {
      type: String,
      required: !1,
      default: void 0
    },
    /**
     * The button type, see NcButton
     * @type {'primary'|'secondary'|'error'|'warning'|'success'}
     */
    type: {
      type: String,
      required: !1,
      default: "secondary",
      validator: (n) => typeof n == "string" && ["primary", "secondary", "error", "warning", "success"].includes(n)
    }
  },
  emits: ["click"],
  setup(n, { emit: e }) {
    return { handleClick: (c) => {
      var t;
      (t = n.callback) == null || t.call(n), e("click", c);
    } };
  }
});
var s = function() {
  var e = this, r = e._self._c;
  return e._self._setupProxy, r("NcButton", { attrs: { "aria-label": e.label, type: e.type }, on: { click: e.handleClick }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [e._t("icon", function() {
      return [e.icon !== void 0 ? r("NcIconSvgWrapper", { attrs: { svg: e.icon } }) : e._e()];
    })];
  }, proxy: !0 }], null, !0) }, [e._v(" " + e._s(e.label) + " ")]);
}, d = [], f = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  u,
  s,
  d,
  !1,
  null,
  null,
  null,
  null
);
const g = f.exports;



/***/ }),

/***/ 9476:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  N: () => (/* binding */ g)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcIconSvgWrapper-oui2KPBT.css
var NcIconSvgWrapper_oui2KPBT = __webpack_require__(8902);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcIconSvgWrapper-oui2KPBT.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcIconSvgWrapper_oui2KPBT/* default */.A, options);




       /* harmony default export */ const assets_NcIconSvgWrapper_oui2KPBT = (NcIconSvgWrapper_oui2KPBT/* default */.A && NcIconSvgWrapper_oui2KPBT/* default */.A.locals ? NcIconSvgWrapper_oui2KPBT/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
// EXTERNAL MODULE: ./node_modules/dompurify/dist/purify.js
var purify = __webpack_require__(2838);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcIconSvgWrapper-BTdzvQGV.mjs




const r = {
  name: "NcIconSvgWrapper",
  props: {
    /**
     * Set if the icon should be used as inline content e.g. within text.
     * By default the icon is made a block element for use inside `icon`-slots.
     */
    inline: {
      type: Boolean,
      default: !1
    },
    /**
     * Raw SVG string to render
     */
    svg: {
      type: String,
      default: ""
    },
    /**
     * Label of the icon, used in aria-label
     */
    name: {
      type: String,
      default: ""
    },
    /**
     * Raw SVG path to render. Takes precedence over the SVG string in the `svg` prop.
     */
    path: {
      type: String,
      default: ""
    },
    /**
     * Size of the icon to show. Only use if not using within an icon slot.
     * Defaults to 20px which is the Nextcloud icon size for all icon slots.
     * @default 20
     */
    size: {
      type: [Number, String],
      default: 20,
      validator: (t) => typeof t == "number" || t === "auto"
    }
  },
  computed: {
    /**
     * Icon size used in CSS
     */
    iconSize() {
      return typeof this.size == "number" ? "".concat(this.size, "px") : this.size;
    },
    cleanSvg() {
      if (!this.svg || this.path)
        return;
      const t = purify.sanitize(this.svg), e = new DOMParser().parseFromString(t, "image/svg+xml");
      return e.querySelector("parsererror") ? (vue_runtime_esm/* default */.Ay.util.warn("SVG is not valid"), "") : (e.documentElement.id && e.documentElement.removeAttribute("id"), e.documentElement.outerHTML);
    },
    attributes() {
      return {
        class: ["icon-vue", { "icon-vue--inline": this.inline }],
        role: "img",
        "aria-hidden": this.name ? void 0 : !0,
        "aria-label": this.name || void 0
      };
    }
  }
}, s = () => {
  (0,vue_runtime_esm/* useCssVars */.$9)((t, e) => ({
    "758c7a6a": t.iconSize
  }));
}, i = r.setup;
r.setup = i ? (t, e) => (s(), i(t, e)) : s;
const l = r;
var c = function() {
  var e = this, n = e._self._c;
  return e.cleanSvg ? n("span", e._b({ domProps: { innerHTML: e._s(e.cleanSvg) } }, "span", e.attributes, !1)) : n("span", e._b({}, "span", e.attributes, !1), [n("svg", { attrs: { viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg" } }, [n("path", { attrs: { d: e.path } })])]);
}, m = [], _ = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  l,
  c,
  m,
  !1,
  null,
  "74df2152",
  null,
  null
);
const g = _.exports;



/***/ }),

/***/ 1194:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  N: () => (/* binding */ E)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/@nextcloud/vue/dist/assets/NcPopover-wrgZy49g.css
var NcPopover_wrgZy49g = __webpack_require__(2550);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/assets/NcPopover-wrgZy49g.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(NcPopover_wrgZy49g/* default */.A, options);




       /* harmony default export */ const assets_NcPopover_wrgZy49g = (NcPopover_wrgZy49g/* default */.A && NcPopover_wrgZy49g/* default */.A.locals ? NcPopover_wrgZy49g/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
// EXTERNAL MODULE: ./node_modules/floating-vue/dist/floating-vue.es.js + 2 modules
var floating_vue_es = __webpack_require__(2508);
// EXTERNAL MODULE: ./node_modules/focus-trap/dist/focus-trap.esm.js + 1 modules
var focus_trap_esm = __webpack_require__(2078);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/focusTrap-Be9GEB5C.mjs
var focusTrap_Be9GEB5C = __webpack_require__(9724);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/_plugin-vue2_normalizer-Bj5bLKV4.mjs
var _plugin_vue2_normalizer_Bj5bLKV4 = __webpack_require__(3490);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcPopover--V3R3EKV.mjs






const l = (0,vue_runtime_esm/* defineComponent */.pM)({
  name: "NcPopoverTriggerProvider",
  provide() {
    return {
      "NcPopover:trigger:shown": () => this.shown,
      "NcPopover:trigger:attrs": () => this.triggerAttrs
    };
  },
  props: {
    shown: {
      type: Boolean,
      required: !0
    },
    popupRole: {
      type: String,
      default: void 0
    }
  },
  computed: {
    triggerAttrs() {
      return {
        "aria-haspopup": this.popupRole,
        "aria-expanded": this.shown.toString()
      };
    }
  },
  render() {
    var e, t;
    return (t = (e = this.$scopedSlots).default) == null ? void 0 : t.call(e, {
      attrs: this.triggerAttrs
    });
  }
}), c = null, d = null;
var g = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  l,
  c,
  d,
  !1,
  null,
  null,
  null,
  null
);
const h = g.exports, f = {
  name: "NcPopover",
  components: {
    Dropdown: floating_vue_es/* Dropdown */.ms,
    NcPopoverTriggerProvider: h
  },
  inheritAttrs: !1,
  props: {
    /**
     * Show or hide the popper
     * @see https://floating-vue.starpad.dev/api/#shown
     */
    shown: {
      type: Boolean,
      default: !1
    },
    /**
     * Popup role
     * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup#values
     */
    popupRole: {
      type: String,
      default: void 0,
      validator: (e) => ["menu", "listbox", "tree", "grid", "dialog", "true"].includes(e)
    },
    popoverBaseClass: {
      type: String,
      default: ""
    },
    /**
     * Enable popover focus trap
     */
    focusTrap: {
      type: Boolean,
      default: !0
    },
    /**
     * Set element to return focus to after focus trap deactivation
     *
     * @type {import('focus-trap').FocusTargetValueOrFalse}
     */
    setReturnFocus: {
      default: void 0,
      type: [HTMLElement, SVGElement, String, Boolean]
    }
  },
  emits: [
    "after-show",
    "after-hide",
    /**
     * @see https://floating-vue.starpad.dev/api/#update-shown
     */
    "update:shown"
  ],
  data() {
    return {
      internalShown: this.shown
    };
  },
  watch: {
    shown(e) {
      this.internalShown = e;
    },
    internalShown(e) {
      this.$emit("update:shown", e);
    }
  },
  mounted() {
    this.checkTriggerA11y();
  },
  beforeDestroy() {
    this.clearFocusTrap(), this.clearEscapeStopPropagation();
  },
  methods: {
    /**
     * Check if the trigger has all required a11y attributes.
     * Important to check custom trigger button.
     */
    checkTriggerA11y() {
      var e;
      (e = window.OC) != null && e.debug && (this.getPopoverTriggerContainerElement().querySelector("[aria-expanded]") || vue_runtime_esm/* default */.Ay.util.warn("It looks like you are using a custom button as a <NcPopover> or other popover #trigger. If you are not using <NcButton> as a trigger, you need to bind attrs from the #trigger slot props to your custom button. See <NcPopover> docs for an example."));
    },
    /**
     * Remove incorrect aria-describedby attribute from the trigger.
     * @see https://github.com/Akryum/floating-vue/blob/8d4f7125aae0e3ea00ba4093d6d2001ab15058f1/packages/floating-vue/src/components/Popper.ts#L734
     */
    removeFloatingVueAriaDescribedBy() {
      const t = this.getPopoverTriggerContainerElement().querySelectorAll("[data-popper-shown]");
      for (const r of t)
        r.removeAttribute("aria-describedby");
    },
    /**
     * @return {HTMLElement|undefined}
     */
    getPopoverContentElement() {
      var e, t;
      return (t = (e = this.$refs.popover) == null ? void 0 : e.$refs.popperContent) == null ? void 0 : t.$el;
    },
    /**
     * @return {HTMLElement|undefined}
     */
    getPopoverTriggerContainerElement() {
      return this.$refs.popover.$refs.reference;
    },
    /**
     * Add focus trap for accessibility.
     */
    async useFocusTrap() {
      if (await this.$nextTick(), !this.focusTrap)
        return;
      const e = this.getPopoverContentElement();
      e && (this.$focusTrap = (0,focus_trap_esm/* createFocusTrap */.K)(e, {
        // Prevents to lose focus using esc key
        // Focus will be release when popover be hide
        escapeDeactivates: !1,
        allowOutsideClick: !0,
        setReturnFocus: this.setReturnFocus,
        trapStack: (0,focusTrap_Be9GEB5C.g)()
      }), this.$focusTrap.activate());
    },
    /**
     * Remove focus trap
     *
     * @param {object} options The configuration options for focusTrap
     */
    clearFocusTrap(e = {}) {
      var t;
      try {
        (t = this.$focusTrap) == null || t.deactivate(e), this.$focusTrap = null;
      } catch (r) {
        console.warn(r);
      }
    },
    /**
     * Add stopPropagation for Escape.
     * It prevents global Escape handling after closing popover.
     *
     * Manual event handling is used here instead of v-on because there is no direct access to the node.
     * Alternative - wrap <template #popover> in a div wrapper.
     */
    addEscapeStopPropagation() {
      const e = this.getPopoverContentElement();
      e == null || e.addEventListener("keydown", this.stopKeydownEscapeHandler);
    },
    /**
     * Remove stop Escape handler
     */
    clearEscapeStopPropagation() {
      const e = this.getPopoverContentElement();
      e == null || e.removeEventListener("keydown", this.stopKeydownEscapeHandler);
    },
    /**
     * @param {KeyboardEvent} event - native keydown event
     */
    stopKeydownEscapeHandler(e) {
      e.type === "keydown" && e.key === "Escape" && e.stopPropagation();
    },
    afterShow() {
      this.removeFloatingVueAriaDescribedBy(), this.$nextTick(() => {
        this.$emit("after-show"), this.useFocusTrap(), this.addEscapeStopPropagation();
      });
    },
    afterHide() {
      this.$emit("after-hide"), this.clearFocusTrap(), this.clearEscapeStopPropagation();
    }
  }
};
var m = function() {
  var t = this, r = t._self._c;
  return r("Dropdown", t._g(t._b({ ref: "popover", attrs: { distance: 10, "arrow-padding": 10, "no-auto-focus": !0, "popper-class": t.popoverBaseClass, shown: t.internalShown }, on: { "update:shown": function(o) {
    t.internalShown = o;
  }, "apply-show": t.afterShow, "apply-hide": t.afterHide }, scopedSlots: t._u([{ key: "popper", fn: function() {
    return [t._t("default")];
  }, proxy: !0 }], null, !0) }, "Dropdown", t.$attrs, !1), t.$listeners), [r("NcPopoverTriggerProvider", { attrs: { shown: t.internalShown, "popup-role": t.popupRole }, scopedSlots: t._u([{ key: "default", fn: function(o) {
    return [t._t("trigger", null, null, o)];
  } }], null, !0) })], 1);
}, w = [], v = /* @__PURE__ */ (0,_plugin_vue2_normalizer_Bj5bLKV4.n)(
  f,
  m,
  w,
  !1,
  null,
  null,
  null,
  null
);
const E = v.exports;



/***/ }),

/***/ 2421:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   S: () => (/* binding */ e)
/* harmony export */ });
/**
 * @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const e = (t) => {
  t.mounted ? Array.isArray(t.mounted) || (t.mounted = [t.mounted]) : t.mounted = [], t.mounted.push(function() {
    this.$el.setAttribute("data-v-c8b37f5", "");
  });
};



/***/ }),

/***/ 1543:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ X),
/* harmony export */   B: () => (/* binding */ q),
/* harmony export */   C: () => (/* binding */ D),
/* harmony export */   D: () => (/* binding */ V),
/* harmony export */   E: () => (/* binding */ z),
/* harmony export */   F: () => (/* binding */ Z),
/* harmony export */   G: () => (/* binding */ N),
/* harmony export */   H: () => (/* binding */ O),
/* harmony export */   I: () => (/* binding */ B),
/* harmony export */   J: () => (/* binding */ C),
/* harmony export */   K: () => (/* binding */ se),
/* harmony export */   L: () => (/* binding */ c),
/* harmony export */   M: () => (/* binding */ W),
/* harmony export */   N: () => (/* binding */ I),
/* harmony export */   O: () => (/* binding */ b),
/* harmony export */   P: () => (/* binding */ M),
/* harmony export */   Q: () => (/* binding */ S),
/* harmony export */   R: () => (/* binding */ J),
/* harmony export */   S: () => (/* binding */ K),
/* harmony export */   T: () => (/* binding */ F),
/* harmony export */   U: () => (/* binding */ U),
/* harmony export */   V: () => (/* binding */ w),
/* harmony export */   a: () => (/* binding */ m),
/* harmony export */   b: () => (/* binding */ A),
/* harmony export */   c: () => (/* binding */ ae),
/* harmony export */   d: () => (/* binding */ E),
/* harmony export */   e: () => (/* binding */ te),
/* harmony export */   f: () => (/* binding */ ee),
/* harmony export */   g: () => (/* binding */ u),
/* harmony export */   h: () => (/* binding */ y),
/* harmony export */   i: () => (/* binding */ h),
/* harmony export */   j: () => (/* binding */ k),
/* harmony export */   k: () => (/* binding */ H),
/* harmony export */   l: () => (/* binding */ $),
/* harmony export */   m: () => (/* binding */ _),
/* harmony export */   n: () => (/* binding */ f),
/* harmony export */   o: () => (/* binding */ p),
/* harmony export */   p: () => (/* binding */ T),
/* harmony export */   q: () => (/* binding */ x),
/* harmony export */   r: () => (/* binding */ d),
/* harmony export */   s: () => (/* binding */ Q),
/* harmony export */   t: () => (/* binding */ g),
/* harmony export */   u: () => (/* binding */ Y),
/* harmony export */   v: () => (/* binding */ L),
/* harmony export */   w: () => (/* binding */ P),
/* harmony export */   x: () => (/* binding */ j),
/* harmony export */   y: () => (/* binding */ G),
/* harmony export */   z: () => (/* binding */ R)
/* harmony export */ });
/* harmony import */ var _nextcloud_l10n_gettext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1195);

const e = (0,_nextcloud_l10n_gettext__WEBPACK_IMPORTED_MODULE_0__/* .getGettextBuilder */ .$)().detectLocale().build(), c = e.ngettext.bind(e), m = e.gettext.bind(e), d = (...l) => {
  l.forEach((a) => {
    a.registered || (a.forEach(({ l: t, t: i }) => {
      const v = Object.fromEntries(
        Object.entries(i).map(([s, o]) => [
          s,
          {
            msgid: s,
            msgid_plural: o.p,
            msgstr: o.v
          }
        ])
      );
      e.gt.catalogs[t] || (e.gt.catalogs[t] = { messages: { translations: {} } }), e.gt.catalogs[t].messages.translations[""] = { ...e.gt.catalogs[t].messages.translations[""], ...v };
    }), a.registered = !0);
  });
}, u = [{ l: "af", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ar", t: { "{tag} (restricted)": { v: ["{tag} (مُقيّد)"] }, "Select a tag": { v: ["إختَر سِمَةً tag"] } } }, { l: "ast", t: { "{tag} (restricted)": { v: ["{tag} (restrinxóse)"] }, "Select a tag": { v: ["Seleicionar una etiqueta"] } } }, { l: "az", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "be", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "bg", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "bn_BD", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "br", t: { "{tag} (restricted)": { v: ["{tag} (bevennet)"] }, "Select a tag": { v: ["Choaz ur c'hlav"] } } }, { l: "bs", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ca", t: { "{tag} (restricted)": { v: ["{tag} (restringit)"] }, "Select a tag": { v: ["Seleccioneu una etiqueta"] } } }, { l: "cs", t: { "{tag} (restricted)": { v: ["{tag} (omezené)"] }, "Select a tag": { v: ["Vybrat štítek"] } } }, { l: "cs_CZ", t: { "{tag} (restricted)": { v: ["{tag} (omezené)"] }, "Select a tag": { v: ["Vybrat štítek"] } } }, { l: "cy_GB", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "da", t: { "{tag} (restricted)": { v: ["{tag} (begrænset)"] }, "Select a tag": { v: ["Vælg et mærke"] } } }, { l: "de", t: { "{tag} (restricted)": { v: ["{tag} (eingeschränkt)"] }, "Select a tag": { v: ["Schlagwort auswählen"] } } }, { l: "de_DE", t: { "{tag} (restricted)": { v: ["{tag} (eingeschränkt)"] }, "Select a tag": { v: ["Schlagwort auswählen"] } } }, { l: "el", t: { "{tag} (restricted)": { v: ["{tag} (περιορισμένο)"] }, "Select a tag": { v: ["Επιλογή ετικέτας"] } } }, { l: "en_GB", t: { "{tag} (restricted)": { v: ["{tag} (restricted)"] }, "Select a tag": { v: ["Select a tag"] } } }, { l: "eo", t: { "{tag} (restricted)": { v: ["{tag} (limigita)"] }, "Select a tag": { v: ["Elektu etikedon"] } } }, { l: "es", t: { "{tag} (restricted)": { v: ["{tag} (restringido)"] }, "Select a tag": { v: ["Seleccione una etiqueta"] } } }, { l: "es_419", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_AR", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_CL", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_CO", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_CR", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_DO", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_EC", t: { "{tag} (restricted)": { v: ["{tag} (restricted)"] }, "Select a tag": { v: ["Seleccionar una etiqueta"] } } }, { l: "es_GT", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_HN", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_MX", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_NI", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_PA", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_PE", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_PR", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_PY", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_SV", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "es_UY", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "et_EE", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "eu", t: { "{tag} (restricted)": { v: ["{tag} (mugatua)"] }, "Select a tag": { v: ["Hautatu etiketa bat"] } } }, { l: "fa", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "fi", t: { "{tag} (restricted)": { v: ["{tag} (rajoitettu)"] }, "Select a tag": { v: ["Valitse tagi"] } } }, { l: "fo", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "fr", t: { "{tag} (restricted)": { v: ["{tag} (restreint)"] }, "Select a tag": { v: ["Sélectionnez une balise"] } } }, { l: "gd", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "gl", t: { "{tag} (restricted)": { v: ["{tag} (restrinxido)"] }, "Select a tag": { v: ["Seleccione unha etiqueta"] } } }, { l: "he", t: { "{tag} (restricted)": { v: ["{tag} (מוגבל)"] }, "Select a tag": { v: ["בחירת תגית"] } } }, { l: "hi_IN", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "hr", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "hsb", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "hu", t: { "{tag} (restricted)": { v: ["{tag} (korlátozott)"] }, "Select a tag": { v: ["Válasszon címkét"] } } }, { l: "hy", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ia", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "id", t: { "{tag} (restricted)": { v: ["{tag} (dibatasi)"] }, "Select a tag": { v: ["Pilih tag"] } } }, { l: "ig", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "is", t: { "{tag} (restricted)": { v: ["{tag} (takmarkað)"] }, "Select a tag": { v: ["Veldu merki"] } } }, { l: "it", t: { "{tag} (restricted)": { v: ["{tag} (limitato)"] }, "Select a tag": { v: ["Seleziona un'etichetta"] } } }, { l: "ja", t: { "{tag} (restricted)": { v: ["{タグ} (制限付)"] }, "Select a tag": { v: ["タグを選択"] } } }, { l: "ka", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ka_GE", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "kab", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "kk", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "km", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "kn", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ko", t: { "{tag} (restricted)": { v: ["{tag}(제한)"] }, "Select a tag": { v: [""] } } }, { l: "la", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "lb", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "lo", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "lt_LT", t: { "{tag} (restricted)": { v: ["{tag} (apribota)"] }, "Select a tag": { v: ["Pasirinkti žymę"] } } }, { l: "lv", t: { "{tag} (restricted)": { v: ["{tag} (ierobežots)"] }, "Select a tag": { v: ["Izvēlēties birku"] } } }, { l: "mk", t: { "{tag} (restricted)": { v: ["{tag} (ограничено)"] }, "Select a tag": { v: ["Избери ознака"] } } }, { l: "mn", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "mr", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ms_MY", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "my", t: { "{tag} (restricted)": { v: ["{tag} (ကန့်သတ်)"] }, "Select a tag": { v: ["tag ရွေးချယ်ရန်"] } } }, { l: "nb", t: { "{tag} (restricted)": { v: ["{tag} (beskyttet)"] }, "Select a tag": { v: ["Velg en merkelapp"] } } }, { l: "ne", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "nl", t: { "{tag} (restricted)": { v: ["{tag} (beperkt)"] }, "Select a tag": { v: ["Selecteer een label"] } } }, { l: "nn_NO", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "oc", t: { "{tag} (restricted)": { v: ["{tag} (limit)"] }, "Select a tag": { v: ["Seleccionar una etiqueta"] } } }, { l: "pl", t: { "{tag} (restricted)": { v: ["{tag} (ograniczona)"] }, "Select a tag": { v: ["Wybierz etykietę"] } } }, { l: "ps", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "pt_BR", t: { "{tag} (restricted)": { v: ["{tag} (restrito) "] }, "Select a tag": { v: ["Selecionar uma tag"] } } }, { l: "pt_PT", t: { "{tag} (restricted)": { v: ["{tag} (restrito)"] }, "Select a tag": { v: ["Selecionar uma etiqueta"] } } }, { l: "ro", t: { "{tag} (restricted)": { v: ["{tag} (restricționat)"] }, "Select a tag": { v: ["Selectați o etichetă"] } } }, { l: "ru", t: { "{tag} (restricted)": { v: ["{tag} (ограниченное)"] }, "Select a tag": { v: ["Выберите метку"] } } }, { l: "sc", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "si", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "sk", t: { "{tag} (restricted)": { v: ["{tag} (obmedzený)"] }, "Select a tag": { v: ["Vybrať štítok"] } } }, { l: "sl", t: { "{tag} (restricted)": { v: ["{tag} (omejeno)"] }, "Select a tag": { v: ["Izbor oznake"] } } }, { l: "sq", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "sr", t: { "{tag} (restricted)": { v: ["{tag} (ограничено)"] }, "Select a tag": { v: ["Изаберите ознаку"] } } }, { l: "sr@latin", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "sv", t: { "{tag} (restricted)": { v: ["{tag} (begränsad)"] }, "Select a tag": { v: ["Välj en tag"] } } }, { l: "sw", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "ta", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "th", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "tk", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "tr", t: { "{tag} (restricted)": { v: ["{tag} (kısıtlı)"] }, "Select a tag": { v: ["Bir etiket seçin"] } } }, { l: "ug", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "uk", t: { "{tag} (restricted)": { v: ["{tag} (обмежений)"] }, "Select a tag": { v: ["Виберіть позначку"] } } }, { l: "ur_PK", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "uz", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "vi", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }, { l: "zh_CN", t: { "{tag} (restricted)": { v: ["{tag} （受限）"] }, "Select a tag": { v: ["选择一个标签"] } } }, { l: "zh_HK", t: { "{tag} (restricted)": { v: ["{tag} (受限)"] }, "Select a tag": { v: ["選擇標籤"] } } }, { l: "zh_TW", t: { "{tag} (restricted)": { v: ["{tag}（受限）"] }, "Select a tag": { v: ["選擇標籤"] } } }, { l: "zu_ZA", t: { "{tag} (restricted)": { v: [""] }, "Select a tag": { v: [""] } } }], h = [{ l: "af", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ar", t: { "A color with a HEX value {hex}": { v: ["لون بالقيمة الست عشرية {hex}"] }, Back: { v: ["عودة"] }, Choose: { v: ["إختَر"] }, "Color picker": { v: ["لاقط الألوان"] }, "More options": { v: ["خيارات أخرى ..."] } } }, { l: "ast", t: { "A color with a HEX value {hex}": { v: ["Un color con un valor HEX {hex}"] }, Back: { v: ["Atrás"] }, Choose: { v: ["Escoyer"] }, "Color picker": { v: ["Selector de colores"] }, "More options": { v: ["Más opciones"] } } }, { l: "az", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "be", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "bg", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "bn_BD", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "br", t: { Back: { v: [""] }, Choose: { v: ["Dibab"] }, "More options": { v: [""] } } }, { l: "bs", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ca", t: { Back: { v: [""] }, Choose: { v: ["Tria"] }, "More options": { v: [""] } } }, { l: "cs", t: { Back: { v: ["Zpět"] }, Choose: { v: ["Zvolit"] }, "More options": { v: ["Další volby"] } } }, { l: "cs_CZ", t: { "A color with a HEX value {hex}": { v: ["Barva vyjádřená HEX hodnotou {hex}"] }, Back: { v: ["Zpět"] }, Choose: { v: ["Zvolit"] }, "Color picker": { v: ["Výběr barev"] }, "More options": { v: ["Další volby"] } } }, { l: "cy_GB", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "da", t: { "A color with a HEX value {hex}": { v: ["En farve med en HEX-værdi {hex}"] }, Back: { v: ["Tilbage"] }, Choose: { v: ["Vælg"] }, "Color picker": { v: ["Farvevælger"] }, "More options": { v: ["Flere muligheder"] } } }, { l: "de", t: { "A color with a HEX value {hex}": { v: ["Eine Farbe mit einem HEX-Wert {hex}"] }, Back: { v: ["Zurück"] }, Choose: { v: ["Auswählen"] }, "More options": { v: ["Weitere Optionen"] } } }, { l: "de_DE", t: { "A color with a HEX value {hex}": { v: ["Eine Farbe mit einem HEX-Wert {hex}"] }, Back: { v: ["Zurück"] }, Choose: { v: ["Auswählen"] }, "Color picker": { v: ["Farbauswahl"] }, "More options": { v: ["Mehr Optionen"] } } }, { l: "el", t: { Back: { v: [""] }, Choose: { v: ["Επιλογή"] }, "More options": { v: [""] } } }, { l: "en_GB", t: { "A color with a HEX value {hex}": { v: ["A colour with a HEX value {hex}"] }, Back: { v: ["Back"] }, Choose: { v: ["Choose"] }, "Color picker": { v: ["Colour picker"] }, "More options": { v: ["More options"] } } }, { l: "eo", t: { Back: { v: [""] }, Choose: { v: ["Elektu"] }, "More options": { v: [""] } } }, { l: "es", t: { "A color with a HEX value {hex}": { v: ["Un color con un valor HEX {hex}"] }, Back: { v: ["Atrás"] }, Choose: { v: ["Escoger"] }, "Color picker": { v: ["Selector de color"] }, "More options": { v: ["Más opciones"] } } }, { l: "es_419", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_AR", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_CL", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_CO", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_CR", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_DO", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_EC", t: { Back: { v: ["Atrás"] }, Choose: { v: ["Elegir"] }, "More options": { v: ["Más opciones"] } } }, { l: "es_GT", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_HN", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_MX", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_NI", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_PA", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_PE", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_PR", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_PY", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_SV", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "es_UY", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "et_EE", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "eu", t: { Back: { v: ["Atzera"] }, Choose: { v: ["Aukeratu"] }, "More options": { v: ["Aukera gehiago"] } } }, { l: "fa", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "fi", t: { Back: { v: [""] }, Choose: { v: ["Valitse"] }, "More options": { v: [""] } } }, { l: "fo", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "fr", t: { "A color with a HEX value {hex}": { v: ["Une couleur de valeur HEX {hex}"] }, Back: { v: ["Retour"] }, Choose: { v: ["Choisir"] }, "More options": { v: ["Plus d'options"] } } }, { l: "gd", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "gl", t: { "A color with a HEX value {hex}": { v: ["Unha cor cun valor HEX {hex}"] }, Back: { v: ["Atrás"] }, Choose: { v: ["Escoller"] }, "Color picker": { v: ["Selector de cores"] }, "More options": { v: ["Máis opcións"] } } }, { l: "he", t: { Back: { v: ["חזרה"] }, Choose: { v: ["בחירה"] }, "More options": { v: ["אפשרויות נוספות"] } } }, { l: "hi_IN", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "hr", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "hsb", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "hu", t: { Back: { v: [""] }, Choose: { v: ["Válassszon"] }, "More options": { v: [""] } } }, { l: "hy", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ia", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "id", t: { "A color with a HEX value {hex}": { v: ["Warna dengan nilai HEX {hex}"] }, Back: { v: ["Kembali"] }, Choose: { v: ["Pilih"] }, "More options": { v: ["Opsi lainnya"] } } }, { l: "ig", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "is", t: { "A color with a HEX value {hex}": { v: ["Litur með HEX-gildi {hex}"] }, Back: { v: ["Til baka"] }, Choose: { v: ["Velja"] }, "More options": { v: ["Fleiri valkostir"] } } }, { l: "it", t: { "A color with a HEX value {hex}": { v: ["Un colore con un valore HEX {hex}"] }, Back: { v: ["Indietro"] }, Choose: { v: ["Scegli"] }, "More options": { v: ["Altre opzioni"] } } }, { l: "ja", t: { Back: { v: [""] }, Choose: { v: ["選択"] }, "More options": { v: [""] } } }, { l: "ka", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ka_GE", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "kab", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "kk", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "km", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "kn", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ko", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "la", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "lb", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "lo", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "lt_LT", t: { Back: { v: [""] }, Choose: { v: ["Pasirinkti"] }, "More options": { v: [""] } } }, { l: "lv", t: { Back: { v: [""] }, Choose: { v: ["Izvēlēties"] }, "More options": { v: [""] } } }, { l: "mk", t: { Back: { v: [""] }, Choose: { v: ["Избери"] }, "More options": { v: [""] } } }, { l: "mn", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "mr", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ms_MY", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "my", t: { Back: { v: [""] }, Choose: { v: ["ရွေးချယ်ရန်"] }, "More options": { v: [""] } } }, { l: "nb", t: { Back: { v: [""] }, Choose: { v: ["Velg"] }, "More options": { v: [""] } } }, { l: "ne", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "nl", t: { Back: { v: ["Terug"] }, Choose: { v: ["Kies"] }, "More options": { v: ["Meer opties"] } } }, { l: "nn_NO", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "oc", t: { Back: { v: [""] }, Choose: { v: ["Causir"] }, "More options": { v: [""] } } }, { l: "pl", t: { "A color with a HEX value {hex}": { v: ["Kolor o wartości HEX {hex}"] }, Back: { v: ["Wstecz"] }, Choose: { v: ["Wybierz"] }, "More options": { v: ["Więcej opcji"] } } }, { l: "ps", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "pt_BR", t: { "A color with a HEX value {hex}": { v: ["Uma cor com valor HEX {hex}"] }, Back: { v: ["Voltar"] }, Choose: { v: ["Escolher"] }, "Color picker": { v: ["Seletor de cores"] }, "More options": { v: ["Mais opções"] } } }, { l: "pt_PT", t: { Back: { v: ["Voltar atrás"] }, Choose: { v: ["Escolher"] }, "More options": { v: ["Mais opções"] } } }, { l: "ro", t: { "A color with a HEX value {hex}": { v: ["O culoare în HEX value {hex}"] }, Back: { v: ["Înapoi"] }, Choose: { v: ["Alegeți"] }, "More options": { v: ["Mai multe opțiuni"] } } }, { l: "ru", t: { Back: { v: ["Назад"] }, Choose: { v: ["Выберите"] }, "More options": { v: ["Больше опций"] } } }, { l: "sc", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "si", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "sk", t: { Back: { v: [""] }, Choose: { v: ["Vybrať"] }, "More options": { v: [""] } } }, { l: "sl", t: { Back: { v: [""] }, Choose: { v: ["Izbor"] }, "More options": { v: [""] } } }, { l: "sq", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "sr", t: { "A color with a HEX value {hex}": { v: ["Боја са HEX вредности {hex}"] }, Back: { v: ["Назад"] }, Choose: { v: ["Изаберите"] }, "Color picker": { v: ["Бирач боје"] }, "More options": { v: ["Још опција"] } } }, { l: "sr@latin", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "sv", t: { "A color with a HEX value {hex}": { v: ["En färg med ett HEX-värde {hex}"] }, Back: { v: ["Tillbaka"] }, Choose: { v: ["Välj"] }, "Color picker": { v: ["Färgväljare"] }, "More options": { v: ["Fler alternativ"] } } }, { l: "sw", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "ta", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "th", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "tk", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "tr", t: { "A color with a HEX value {hex}": { v: ["{hex} onaltılık değeri ile bir renk "] }, Back: { v: ["Geri"] }, Choose: { v: ["Seçin"] }, "Color picker": { v: ["Renk seçici"] }, "More options": { v: ["Diğer seçenekler"] } } }, { l: "ug", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "uk", t: { "A color with a HEX value {hex}": { v: ["Колір у форматі HEX {hex}"] }, Back: { v: ["Назад"] }, Choose: { v: ["Виберіть"] }, "More options": { v: ["Більше об'єктів"] } } }, { l: "ur_PK", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "uz", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "vi", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }, { l: "zh_CN", t: { Back: { v: [""] }, Choose: { v: ["选择"] }, "More options": { v: [""] } } }, { l: "zh_HK", t: { Back: { v: ["返回"] }, Choose: { v: ["選擇"] }, "More options": { v: ["更多選項"] } } }, { l: "zh_TW", t: { Back: { v: ["返回"] }, Choose: { v: ["選擇"] }, "More options": { v: ["更多選項"] } } }, { l: "zu_ZA", t: { Back: { v: [""] }, Choose: { v: [""] }, "More options": { v: [""] } } }], k = [{ l: "af", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ar", t: { "a few seconds ago": { v: ["منذ عدة ثوانٍ مضت"] }, "sec. ago": { v: ["ثانية مضت"] }, "seconds ago": { v: ["ثوانٍ مضت"] } } }, { l: "ast", t: { "a few seconds ago": { v: ["hai unos segundos"] }, "sec. ago": { v: ["hai segs"] }, "seconds ago": { v: ["hai segundos"] } } }, { l: "az", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "be", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "bg", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "bn_BD", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "br", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "bs", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ca", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "cs", t: { "a few seconds ago": { v: ["před několika sekundami"] }, "sec. ago": { v: ["sek. před"] }, "seconds ago": { v: ["sekund předtím"] } } }, { l: "cs_CZ", t: { "a few seconds ago": { v: ["před několika sekundami"] }, "sec. ago": { v: ["sek. před"] }, "seconds ago": { v: ["sekund předtím"] } } }, { l: "cy_GB", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "da", t: { "a few seconds ago": { v: ["et par sekunder siden"] }, "sec. ago": { v: ["sek. siden"] }, "seconds ago": { v: ["sekunder siden"] } } }, { l: "de", t: { "a few seconds ago": { v: ["vor ein paar Sekunden"] }, "sec. ago": { v: ["Sek. zuvor"] }, "seconds ago": { v: ["Sekunden zuvor"] } } }, { l: "de_DE", t: { "a few seconds ago": { v: ["vor ein paar Sekunden"] }, "sec. ago": { v: ["Sek. zuvor"] }, "seconds ago": { v: ["Sekunden zuvor"] } } }, { l: "el", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "en_GB", t: { "a few seconds ago": { v: ["a few seconds ago"] }, "sec. ago": { v: ["sec. ago"] }, "seconds ago": { v: ["seconds ago"] } } }, { l: "eo", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es", t: { "a few seconds ago": { v: ["hace unos pocos segundos"] }, "sec. ago": { v: ["hace segundos"] }, "seconds ago": { v: ["segundos atrás"] } } }, { l: "es_419", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_AR", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_CL", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_CO", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_CR", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_DO", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_EC", t: { "a few seconds ago": { v: ["hace unos segundos"] }, "sec. ago": { v: ["hace segundos"] }, "seconds ago": { v: ["Segundos atrás"] } } }, { l: "es_GT", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_HN", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_MX", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_NI", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_PA", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_PE", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_PR", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_PY", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_SV", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "es_UY", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "et_EE", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "eu", t: { "a few seconds ago": { v: ["duela segundo batzuk"] }, "sec. ago": { v: ["duela seg."] }, "seconds ago": { v: ["duela segundo"] } } }, { l: "fa", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "fi", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "fo", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "fr", t: { "a few seconds ago": { v: ["il y a quelques instants"] }, "sec. ago": { v: ["il y a sec."] }, "seconds ago": { v: ["il y a secondes"] } } }, { l: "gd", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "gl", t: { "a few seconds ago": { v: ["hai uns segundos"] }, "sec. ago": { v: ["segs. atrás"] }, "seconds ago": { v: ["segundos atrás"] } } }, { l: "he", t: { "a few seconds ago": { v: ["לפני מספר שניות"] }, "sec. ago": { v: ["לפני מספר שניות"] }, "seconds ago": { v: ["לפני מס׳ שניות"] } } }, { l: "hi_IN", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "hr", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "hsb", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "hu", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "hy", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ia", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "id", t: { "a few seconds ago": { v: ["beberapa detik yang lalu"] }, "sec. ago": { v: ["dtk. yang lalu"] }, "seconds ago": { v: ["beberapa detik lalu"] } } }, { l: "ig", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "is", t: { "a few seconds ago": { v: ["fyrir örfáum sekúndum síðan"] }, "sec. ago": { v: ["sek. síðan"] }, "seconds ago": { v: ["sekúndum síðan"] } } }, { l: "it", t: { "a few seconds ago": { v: ["pochi secondi fa"] }, "sec. ago": { v: ["sec. fa"] }, "seconds ago": { v: ["secondi fa"] } } }, { l: "ja", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ka", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ka_GE", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "kab", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "kk", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "km", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "kn", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ko", t: { "a few seconds ago": { v: ["방금 전"] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "la", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "lb", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "lo", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "lt_LT", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "lv", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "mk", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "mn", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "mr", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ms_MY", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "my", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "nb", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ne", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "nl", t: { "a few seconds ago": { v: ["enkele seconden terug"] }, "sec. ago": { v: ["sec. geleden"] }, "seconds ago": { v: ["seconden geleden"] } } }, { l: "nn_NO", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "oc", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "pl", t: { "a few seconds ago": { v: ["kilka sekund temu"] }, "sec. ago": { v: ["sek. temu"] }, "seconds ago": { v: ["sekund temu"] } } }, { l: "ps", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "pt_BR", t: { "a few seconds ago": { v: ["Alguns segundos atrás"] }, "sec. ago": { v: ["seg. atrás"] }, "seconds ago": { v: ["segundos atrás"] } } }, { l: "pt_PT", t: { "a few seconds ago": { v: ["alguns segundos atrás"] }, "sec. ago": { v: ["seg. atrás"] }, "seconds ago": { v: ["segundos atrás"] } } }, { l: "ro", t: { "a few seconds ago": { v: ["acum câteva secunde"] }, "sec. ago": { v: ["sec. în urmă"] }, "seconds ago": { v: ["secunde în urmă"] } } }, { l: "ru", t: { "a few seconds ago": { v: ["несколько секунд назад"] }, "sec. ago": { v: ["сек. назад"] }, "seconds ago": { v: ["секунд назад"] } } }, { l: "sc", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "si", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "sk", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "sl", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "sq", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "sr", t: { "a few seconds ago": { v: ["пре неколико секунди"] }, "sec. ago": { v: ["сек. раније"] }, "seconds ago": { v: ["секунди раније"] } } }, { l: "sr@latin", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "sv", t: { "a few seconds ago": { v: ["några sekunder sedan"] }, "sec. ago": { v: ["sek. sedan"] }, "seconds ago": { v: ["sekunder sedan"] } } }, { l: "sw", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "ta", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "th", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "tk", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "tr", t: { "a few seconds ago": { v: ["birkaç saniye önce"] }, "sec. ago": { v: ["sn. önce"] }, "seconds ago": { v: ["saniye önce"] } } }, { l: "ug", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "uk", t: { "a few seconds ago": { v: ["декілька секунд тому"] }, "sec. ago": { v: ["с тому"] }, "seconds ago": { v: ["с тому"] } } }, { l: "ur_PK", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "uz", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "vi", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "zh_CN", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }, { l: "zh_HK", t: { "a few seconds ago": { v: ["幾秒前"] }, "sec. ago": { v: ["秒前"] }, "seconds ago": { v: ["秒前"] } } }, { l: "zh_TW", t: { "a few seconds ago": { v: ["幾秒前"] }, "sec. ago": { v: ["秒前"] }, "seconds ago": { v: ["秒前"] } } }, { l: "zu_ZA", t: { "a few seconds ago": { v: [""] }, "sec. ago": { v: [""] }, "seconds ago": { v: [""] } } }], g = [{ l: "af", t: {} }, { l: "ar", t: { Acapulco: { v: ["بازلائي مطفي"] }, "Blue Violet": { v: ["بنفسجي مشعشع"] }, "Boston Blue": { v: ["سماوي مطفي"] }, Deluge: { v: ["بنفسجي مطفي"] }, Feldspar: { v: ["وردي صخري"] }, Gold: { v: ["ذهبي"] }, Mariner: { v: ["أزرق بحري"] }, "Nextcloud blue": { v: ["أزرق نكست كلاود"] }, Olivine: { v: ["زيتي"] }, Purple: { v: ["بنفسجي"] }, "Rosy brown": { v: ["بُنِّي زهري"] }, Whiskey: { v: ["نبيذي"] } } }, { l: "ast", t: { Acapulco: { v: ["Acapulcu"] }, "Blue Violet": { v: ["Viola azulao"] }, "Boston Blue": { v: ["Azul Boston"] }, Deluge: { v: ["Deluge"] }, Feldspar: { v: ["Feldspar"] }, Gold: { v: ["Oru"] }, Mariner: { v: ["Marineru"] }, "Nextcloud blue": { v: ["Nextcloud azul"] }, Olivine: { v: ["Olivina"] }, Purple: { v: ["Moráu"] }, "Rosy brown": { v: ["Marrón arrosao"] }, Whiskey: { v: ["Whiskey"] } } }, { l: "az", t: {} }, { l: "be", t: {} }, { l: "bg", t: {} }, { l: "bn_BD", t: {} }, { l: "br", t: {} }, { l: "bs", t: {} }, { l: "ca", t: {} }, { l: "cs", t: {} }, { l: "cs_CZ", t: { Acapulco: { v: ["Akapulko"] }, "Blue Violet": { v: ["Modrofialová"] }, "Boston Blue": { v: ["Bostonská modrá"] }, Deluge: { v: ["Deluge"] }, Feldspar: { v: ["Živicová"] }, Gold: { v: ["Zlatá"] }, Mariner: { v: ["Námořnická"] }, "Nextcloud blue": { v: ["Nextcloud modrá"] }, Olivine: { v: ["Olivínová"] }, Purple: { v: ["Fialová"] }, "Rosy brown": { v: ["Růžovohnědá"] }, Whiskey: { v: ["Whisky"] } } }, { l: "cy_GB", t: {} }, { l: "da", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Blue Violet"] }, "Boston Blue": { v: ["Boston Blue"] }, Deluge: { v: ["Deluge"] }, Feldspar: { v: ["Feldspar"] }, Gold: { v: ["Guld"] }, Mariner: { v: ["Mariner"] }, "Nextcloud blue": { v: ["Nextcloud blue"] }, Olivine: { v: ["Olivine"] }, Purple: { v: ["Lilla"] }, "Rosy brown": { v: ["Rosy brown"] }, Whiskey: { v: ["Whiskey"] } } }, { l: "de", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Blau Violett"] }, "Boston Blue": { v: ["Boston-Blau"] }, Deluge: { v: ["Sintflut"] }, Feldspar: { v: ["Feldspat"] }, Gold: { v: ["Gold"] }, Mariner: { v: ["Seemann"] }, "Nextcloud blue": { v: ["Nextcloud Blau"] }, Olivine: { v: ["Olivin"] }, Purple: { v: ["Lila"] }, "Rosy brown": { v: ["Rosiges Braun"] }, Whiskey: { v: ["Whiskey"] } } }, { l: "de_DE", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Blau Violett"] }, "Boston Blue": { v: ["Boston-Blau"] }, Deluge: { v: ["Sintflut"] }, Feldspar: { v: ["Feldspat"] }, Gold: { v: ["Gold"] }, Mariner: { v: ["Seemann"] }, "Nextcloud blue": { v: ["Nextcloud Blau"] }, Olivine: { v: ["Olivin"] }, Purple: { v: ["Lila"] }, "Rosy brown": { v: ["Rosiges Braun"] }, Whiskey: { v: ["Whiskey"] } } }, { l: "el", t: {} }, { l: "en_GB", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Blue Violet"] }, "Boston Blue": { v: ["Boston Blue"] }, Deluge: { v: ["Deluge"] }, Feldspar: { v: ["Feldspar"] }, Gold: { v: ["Gold"] }, Mariner: { v: ["Mariner"] }, "Nextcloud blue": { v: ["Nextcloud blue"] }, Olivine: { v: ["Olivine"] }, Purple: { v: ["Purple"] }, "Rosy brown": { v: ["Rosy brown"] }, Whiskey: { v: ["Whiskey"] } } }, { l: "eo", t: {} }, { l: "es", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Violeta Azul"] }, "Boston Blue": { v: ["Azul Boston"] }, Deluge: { v: ["Diluvio"] }, Feldspar: { v: ["Feldespato"] }, Gold: { v: ["Oro"] }, Mariner: { v: ["Marinero"] }, "Nextcloud blue": { v: ["Azul Nextcloud"] }, Olivine: { v: ["Olivino"] }, Purple: { v: ["Púrpura"] }, "Rosy brown": { v: ["Marrón rosáceo"] }, Whiskey: { v: ["Whiskey"] } } }, { l: "es_419", t: {} }, { l: "es_AR", t: {} }, { l: "es_CL", t: {} }, { l: "es_CO", t: {} }, { l: "es_CR", t: {} }, { l: "es_DO", t: {} }, { l: "es_EC", t: {} }, { l: "es_GT", t: {} }, { l: "es_HN", t: {} }, { l: "es_MX", t: {} }, { l: "es_NI", t: {} }, { l: "es_PA", t: {} }, { l: "es_PE", t: {} }, { l: "es_PR", t: {} }, { l: "es_PY", t: {} }, { l: "es_SV", t: {} }, { l: "es_UY", t: {} }, { l: "et_EE", t: {} }, { l: "eu", t: {} }, { l: "fa", t: {} }, { l: "fi", t: {} }, { l: "fo", t: {} }, { l: "fr", t: { Gold: { v: ["Doré"] }, "Nextcloud blue": { v: ["Bleu Nextcloud"] }, Purple: { v: ["Violet"] } } }, { l: "gd", t: {} }, { l: "gl", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Azul violeta"] }, "Boston Blue": { v: ["Azul Boston"] }, Deluge: { v: ["Diluvio"] }, Feldspar: { v: ["Feldespato"] }, Gold: { v: ["Ouro"] }, Mariner: { v: ["Marino"] }, "Nextcloud blue": { v: ["Nextcloud azul"] }, Olivine: { v: ["Olivina"] }, Purple: { v: ["Púrpura"] }, "Rosy brown": { v: ["Pardo rosado"] }, Whiskey: { v: ["Whisky"] } } }, { l: "he", t: {} }, { l: "hi_IN", t: {} }, { l: "hr", t: {} }, { l: "hsb", t: {} }, { l: "hu", t: {} }, { l: "hy", t: {} }, { l: "ia", t: {} }, { l: "id", t: { Gold: { v: ["Emas"] }, "Nextcloud blue": { v: ["Biru Nextcloud"] }, Purple: { v: ["Ungu"] } } }, { l: "ig", t: {} }, { l: "is", t: { Gold: { v: ["Gull"] }, "Nextcloud blue": { v: ["Nextcloud blátt"] }, Purple: { v: ["Purpurablátt"] } } }, { l: "it", t: { Gold: { v: ["Oro"] }, "Nextcloud blue": { v: ["Nextcloud blue"] }, Purple: { v: ["Viola"] } } }, { l: "ja", t: {} }, { l: "ka", t: {} }, { l: "ka_GE", t: {} }, { l: "kab", t: {} }, { l: "kk", t: {} }, { l: "km", t: {} }, { l: "kn", t: {} }, { l: "ko", t: {} }, { l: "la", t: {} }, { l: "lb", t: {} }, { l: "lo", t: {} }, { l: "lt_LT", t: {} }, { l: "lv", t: {} }, { l: "mk", t: {} }, { l: "mn", t: {} }, { l: "mr", t: {} }, { l: "ms_MY", t: {} }, { l: "my", t: {} }, { l: "nb", t: {} }, { l: "ne", t: {} }, { l: "nl", t: {} }, { l: "nn_NO", t: {} }, { l: "oc", t: {} }, { l: "pl", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Niebieski fiolet"] }, "Boston Blue": { v: ["Błękit Bostonu"] }, Deluge: { v: ["Potop"] }, Feldspar: { v: ["Skaleń"] }, Gold: { v: ["Złote"] }, Mariner: { v: ["Marynarz"] }, "Nextcloud blue": { v: ["Niebieskie Nextcloud"] }, Olivine: { v: ["Oliwin"] }, Purple: { v: ["Fioletowy"] }, "Rosy brown": { v: ["Różowy brąz"] }, Whiskey: { v: ["Whisky"] } } }, { l: "ps", t: {} }, { l: "pt_BR", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Violeta Azul"] }, "Boston Blue": { v: ["Violeta Azul"] }, Deluge: { v: ["Dilúvio"] }, Feldspar: { v: ["Feldspato"] }, Gold: { v: ["Ouro"] }, Mariner: { v: ["Marinheiro"] }, "Nextcloud blue": { v: ["Nextcloud azul"] }, Olivine: { v: ["Olivina"] }, Purple: { v: ["Roxo"] }, "Rosy brown": { v: ["Castanho rosado"] }, Whiskey: { v: ["Uísque"] } } }, { l: "pt_PT", t: {} }, { l: "ro", t: { Gold: { v: ["Aur"] }, "Nextcloud blue": { v: ["Nextcloud albastru"] }, Purple: { v: ["Purpuriu"] } } }, { l: "ru", t: {} }, { l: "sc", t: {} }, { l: "si", t: {} }, { l: "sk", t: {} }, { l: "sl", t: {} }, { l: "sq", t: {} }, { l: "sr", t: { Acapulco: { v: ["Акапулко"] }, "Blue Violet": { v: ["Плаво љубичаста"] }, "Boston Blue": { v: ["Бостон плава"] }, Deluge: { v: ["Поплава"] }, Feldspar: { v: ["Фелдспар"] }, Gold: { v: ["Злато"] }, Mariner: { v: ["Морнар"] }, "Nextcloud blue": { v: ["Nextcloud плава"] }, Olivine: { v: ["Маслинаста"] }, Purple: { v: ["Пурпурна"] }, "Rosy brown": { v: ["Роси браон"] }, Whiskey: { v: ["Виски"] } } }, { l: "sr@latin", t: {} }, { l: "sv", t: { Acapulco: { v: ["Acapulco"] }, "Blue Violet": { v: ["Blåviolett"] }, "Boston Blue": { v: ["Bostonblå"] }, Deluge: { v: ["Skyfallsblå"] }, Feldspar: { v: ["Feldspat"] }, Gold: { v: ["Guld"] }, Mariner: { v: ["Marinblå"] }, "Nextcloud blue": { v: ["Nextcloud-blå"] }, Olivine: { v: ["Olivin"] }, Purple: { v: ["Lila"] }, "Rosy brown": { v: ["Rosabrun"] }, Whiskey: { v: ["Whisky"] } } }, { l: "sw", t: {} }, { l: "ta", t: {} }, { l: "th", t: {} }, { l: "tk", t: {} }, { l: "tr", t: { Acapulco: { v: ["Akapulko"] }, "Blue Violet": { v: ["Mavi mor"] }, "Boston Blue": { v: ["Boston mavisi"] }, Deluge: { v: ["Sel"] }, Feldspar: { v: ["Feldispat"] }, Gold: { v: ["Altın"] }, Mariner: { v: ["Denizci"] }, "Nextcloud blue": { v: ["Nextcloud mavi"] }, Olivine: { v: ["Zeytinlik"] }, Purple: { v: ["Mor"] }, "Rosy brown": { v: ["Kırmızımsı kahverengi"] }, Whiskey: { v: ["Viski"] } } }, { l: "ug", t: {} }, { l: "uk", t: { Gold: { v: ["Золотий"] }, "Nextcloud blue": { v: ["Блакитний Nextcloud"] }, Purple: { v: ["Фіолетовий"] } } }, { l: "ur_PK", t: {} }, { l: "uz", t: {} }, { l: "vi", t: {} }, { l: "zh_CN", t: {} }, { l: "zh_HK", t: {} }, { l: "zh_TW", t: {} }, { l: "zu_ZA", t: {} }], p = [{ l: "af", t: { Actions: { v: [""] } } }, { l: "ar", t: { Actions: { v: ["إجراءات"] } } }, { l: "ast", t: { Actions: { v: ["Aiciones"] } } }, { l: "az", t: { Actions: { v: [""] } } }, { l: "be", t: { Actions: { v: [""] } } }, { l: "bg", t: { Actions: { v: [""] } } }, { l: "bn_BD", t: { Actions: { v: [""] } } }, { l: "br", t: { Actions: { v: ["Oberioù"] } } }, { l: "bs", t: { Actions: { v: [""] } } }, { l: "ca", t: { Actions: { v: ["Accions"] } } }, { l: "cs", t: { Actions: { v: ["Akce"] } } }, { l: "cs_CZ", t: { Actions: { v: ["Akce"] } } }, { l: "cy_GB", t: { Actions: { v: [""] } } }, { l: "da", t: { Actions: { v: ["Handlinger"] } } }, { l: "de", t: { Actions: { v: ["Aktionen"] } } }, { l: "de_DE", t: { Actions: { v: ["Aktionen"] } } }, { l: "el", t: { Actions: { v: ["Ενέργειες"] } } }, { l: "en_GB", t: { Actions: { v: ["Actions"] } } }, { l: "eo", t: { Actions: { v: ["Agoj"] } } }, { l: "es", t: { Actions: { v: ["Acciones"] } } }, { l: "es_419", t: { Actions: { v: [""] } } }, { l: "es_AR", t: { Actions: { v: [""] } } }, { l: "es_CL", t: { Actions: { v: [""] } } }, { l: "es_CO", t: { Actions: { v: [""] } } }, { l: "es_CR", t: { Actions: { v: [""] } } }, { l: "es_DO", t: { Actions: { v: [""] } } }, { l: "es_EC", t: { Actions: { v: ["Acciones"] } } }, { l: "es_GT", t: { Actions: { v: [""] } } }, { l: "es_HN", t: { Actions: { v: [""] } } }, { l: "es_MX", t: { Actions: { v: [""] } } }, { l: "es_NI", t: { Actions: { v: [""] } } }, { l: "es_PA", t: { Actions: { v: [""] } } }, { l: "es_PE", t: { Actions: { v: [""] } } }, { l: "es_PR", t: { Actions: { v: [""] } } }, { l: "es_PY", t: { Actions: { v: [""] } } }, { l: "es_SV", t: { Actions: { v: [""] } } }, { l: "es_UY", t: { Actions: { v: [""] } } }, { l: "et_EE", t: { Actions: { v: [""] } } }, { l: "eu", t: { Actions: { v: ["Ekintzak"] } } }, { l: "fa", t: { Actions: { v: [""] } } }, { l: "fi", t: { Actions: { v: ["Toiminnot"] } } }, { l: "fo", t: { Actions: { v: [""] } } }, { l: "fr", t: { Actions: { v: ["Actions"] } } }, { l: "gd", t: { Actions: { v: [""] } } }, { l: "gl", t: { Actions: { v: ["Accións"] } } }, { l: "he", t: { Actions: { v: ["פעולות"] } } }, { l: "hi_IN", t: { Actions: { v: [""] } } }, { l: "hr", t: { Actions: { v: [""] } } }, { l: "hsb", t: { Actions: { v: [""] } } }, { l: "hu", t: { Actions: { v: ["Műveletek"] } } }, { l: "hy", t: { Actions: { v: [""] } } }, { l: "ia", t: { Actions: { v: [""] } } }, { l: "id", t: { Actions: { v: ["Tindakan"] } } }, { l: "ig", t: { Actions: { v: [""] } } }, { l: "is", t: { Actions: { v: ["Aðgerðir"] } } }, { l: "it", t: { Actions: { v: ["Azioni"] } } }, { l: "ja", t: { Actions: { v: ["操作"] } } }, { l: "ka", t: { Actions: { v: [""] } } }, { l: "ka_GE", t: { Actions: { v: [""] } } }, { l: "kab", t: { Actions: { v: [""] } } }, { l: "kk", t: { Actions: { v: [""] } } }, { l: "km", t: { Actions: { v: [""] } } }, { l: "kn", t: { Actions: { v: [""] } } }, { l: "ko", t: { Actions: { v: [""] } } }, { l: "la", t: { Actions: { v: [""] } } }, { l: "lb", t: { Actions: { v: [""] } } }, { l: "lo", t: { Actions: { v: [""] } } }, { l: "lt_LT", t: { Actions: { v: ["Veiksmai"] } } }, { l: "lv", t: { Actions: { v: [""] } } }, { l: "mk", t: { Actions: { v: ["Акции"] } } }, { l: "mn", t: { Actions: { v: [""] } } }, { l: "mr", t: { Actions: { v: [""] } } }, { l: "ms_MY", t: { Actions: { v: [""] } } }, { l: "my", t: { Actions: { v: ["လုပ်ဆောင်ချက်များ"] } } }, { l: "nb", t: { Actions: { v: ["Handlinger"] } } }, { l: "ne", t: { Actions: { v: [""] } } }, { l: "nl", t: { Actions: { v: ["Acties"] } } }, { l: "nn_NO", t: { Actions: { v: [""] } } }, { l: "oc", t: { Actions: { v: ["Accions"] } } }, { l: "pl", t: { Actions: { v: ["Działania"] } } }, { l: "ps", t: { Actions: { v: [""] } } }, { l: "pt_BR", t: { Actions: { v: ["Ações"] } } }, { l: "pt_PT", t: { Actions: { v: ["Ações"] } } }, { l: "ro", t: { Actions: { v: ["Acțiuni"] } } }, { l: "ru", t: { Actions: { v: ["Действия "] } } }, { l: "sc", t: { Actions: { v: [""] } } }, { l: "si", t: { Actions: { v: [""] } } }, { l: "sk", t: { Actions: { v: ["Akcie"] } } }, { l: "sl", t: { Actions: { v: ["Dejanja"] } } }, { l: "sq", t: { Actions: { v: [""] } } }, { l: "sr", t: { Actions: { v: ["Радње"] } } }, { l: "sr@latin", t: { Actions: { v: [""] } } }, { l: "sv", t: { Actions: { v: ["Åtgärder"] } } }, { l: "sw", t: { Actions: { v: [""] } } }, { l: "ta", t: { Actions: { v: [""] } } }, { l: "th", t: { Actions: { v: [""] } } }, { l: "tk", t: { Actions: { v: [""] } } }, { l: "tr", t: { Actions: { v: ["İşlemler"] } } }, { l: "ug", t: { Actions: { v: [""] } } }, { l: "uk", t: { Actions: { v: ["Дії"] } } }, { l: "ur_PK", t: { Actions: { v: [""] } } }, { l: "uz", t: { Actions: { v: [""] } } }, { l: "vi", t: { Actions: { v: [""] } } }, { l: "zh_CN", t: { Actions: { v: ["行为"] } } }, { l: "zh_HK", t: { Actions: { v: ["動作"] } } }, { l: "zh_TW", t: { Actions: { v: ["動作"] } } }, { l: "zu_ZA", t: { Actions: { v: [""] } } }], y = [{ l: "af", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ar", t: { 'Actions for item with name "{name}"': { v: ['إجراءات على العنصر المُسمَّى "{name}"'] } } }, { l: "ast", t: { 'Actions for item with name "{name}"': { v: ["Aiciones pal elementu col nome «{name}»"] } } }, { l: "az", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "be", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "bg", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "bn_BD", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "br", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "bs", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ca", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "cs", t: { 'Actions for item with name "{name}"': { v: ["Akce pro položku s názvem „{name}“"] } } }, { l: "cs_CZ", t: { 'Actions for item with name "{name}"': { v: ["Akce pro položku s názvem „{name}“"] } } }, { l: "cy_GB", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "da", t: { 'Actions for item with name "{name}"': { v: ['Handlinger for element med navnet "{name}"'] } } }, { l: "de", t: { 'Actions for item with name "{name}"': { v: ['Aktionen für das Element "{name}“'] } } }, { l: "de_DE", t: { 'Actions for item with name "{name}"': { v: ['Aktionen für Element mit dem Namen "{name}“'] } } }, { l: "el", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "en_GB", t: { 'Actions for item with name "{name}"': { v: ['Actions for item with name "{name}"'] } } }, { l: "eo", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es", t: { 'Actions for item with name "{name}"': { v: ['Acciones para el ítem con nombre "{name}"'] } } }, { l: "es_419", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_AR", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_CL", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_CO", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_CR", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_DO", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_EC", t: { 'Actions for item with name "{name}"': { v: ['Acciones para el elemento con nombre "{name}"'] } } }, { l: "es_GT", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_HN", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_MX", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_NI", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_PA", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_PE", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_PR", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_PY", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_SV", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "es_UY", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "et_EE", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "eu", t: { 'Actions for item with name "{name}"': { v: ['"{name}" izeneko elementuaren ekintzak'] } } }, { l: "fa", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "fi", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "fo", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "fr", t: { 'Actions for item with name "{name}"': { v: ['Actions de l\'entrée avec le nom "{name}"'] } } }, { l: "gd", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "gl", t: { 'Actions for item with name "{name}"': { v: ["Accións para o elemento co nome «{name}»"] } } }, { l: "he", t: { 'Actions for item with name "{name}"': { v: ["פעולות לפריט בשם „{name}”"] } } }, { l: "hi_IN", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "hr", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "hsb", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "hu", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "hy", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ia", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "id", t: { 'Actions for item with name "{name}"': { v: ['Tindakan untuk item dengan nama "{name}"'] } } }, { l: "ig", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "is", t: { 'Actions for item with name "{name}"': { v: ['Aðgerð fyrir atriði með heitið "{name}"'] } } }, { l: "it", t: { 'Actions for item with name "{name}"': { v: ['Azioni per l\'elemento con il nome "{nome}"'] } } }, { l: "ja", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ka", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ka_GE", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "kab", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "kk", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "km", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "kn", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ko", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "la", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "lb", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "lo", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "lt_LT", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "lv", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "mk", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "mn", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "mr", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ms_MY", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "my", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "nb", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ne", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "nl", t: { 'Actions for item with name "{name}"': { v: ['Actie voor item met naam "{name}"'] } } }, { l: "nn_NO", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "oc", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "pl", t: { 'Actions for item with name "{name}"': { v: ['Akcje dla elementu o nazwie "{name}"'] } } }, { l: "ps", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "pt_BR", t: { 'Actions for item with name "{name}"': { v: ['Ações para item com nome "{name}"'] } } }, { l: "pt_PT", t: { 'Actions for item with name "{name}"': { v: ['Ações para objeto com o nome "[name]"'] } } }, { l: "ro", t: { 'Actions for item with name "{name}"': { v: ['Acțiuni pentru elementul cu numele "{name}"'] } } }, { l: "ru", t: { 'Actions for item with name "{name}"': { v: ['Действия для элемента с названием "{name}"'] } } }, { l: "sc", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "si", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "sk", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "sl", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "sq", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "sr", t: { 'Actions for item with name "{name}"': { v: ["Радње за ставку под називом „{name}”"] } } }, { l: "sr@latin", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "sv", t: { 'Actions for item with name "{name}"': { v: ['Åtgärder för objekt med namn "{name}"'] } } }, { l: "sw", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "ta", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "th", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "tk", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "tr", t: { 'Actions for item with name "{name}"': { v: ["{name} adındaki öge için işlemler"] } } }, { l: "ug", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "uk", t: { 'Actions for item with name "{name}"': { v: ['Дії для об\'єкту "{name}"'] } } }, { l: "ur_PK", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "uz", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "vi", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "zh_CN", t: { 'Actions for item with name "{name}"': { v: [""] } } }, { l: "zh_HK", t: { 'Actions for item with name "{name}"': { v: ["名稱為「{name}」項目的操作"] } } }, { l: "zh_TW", t: { 'Actions for item with name "{name}"': { v: ["名稱為「{name}」項目的動作"] } } }, { l: "zu_ZA", t: { 'Actions for item with name "{name}"': { v: [""] } } }], P = [{ l: "af", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ar", t: { Activities: { v: ["سجل الحركات"] }, "Animals & Nature": { v: ["الحيوانات والطبيعة"] }, "Clear search": { v: ["مَحْوُ البحث"] }, Custom: { v: ["مُخصَّص"] }, "Dark skin tone": { v: ["أسمر البُشرة"] }, "Emoji picker": { v: ["لاقط الإيموجي"] }, Flags: { v: ["الأعلام"] }, "Food & Drink": { v: ["الطعام والشراب"] }, "Frequently used": { v: ["شائعة الاستعمال"] }, "Light skin tone": { v: ["فاتح البُشرة"] }, "Medium dark skin tone": { v: ["بُشرة متوسطة الاسمرار"] }, "Medium light skin tone": { v: ["بُشرة متوسطة البياض"] }, "Medium skin tone": { v: ["بُشرة وسطية اللون"] }, "Neutral skin color": { v: ["لون بُشرة طبيعي"] }, Objects: { v: ["أشياء"] }, "People & Body": { v: ["أشخاص و أجسام"] }, "Pick an emoji": { v: ["إختَر رمز إيموجي emoji"] }, "Search emoji": { v: ["البحث عن إيموجي emoji"] }, "Search results": { v: ["نتائج البحث"] }, Selected: { v: ["مُحدّدة"] }, "Skin tone": { v: ["لون البُشرة"] }, "Smileys & Emotion": { v: ["وجوهٌ ضاحكة و مشاعر"] }, Symbols: { v: ["رموز"] }, "Travel & Places": { v: ["سفر و أماكن"] } } }, { l: "ast", t: { Activities: { v: ["Actividaes"] }, "Animals & Nature": { v: ["Animales y natura"] }, "Clear search": { v: ["Borrar la busca"] }, Custom: { v: ["Personalizar"] }, "Dark skin tone": { v: ["Tonu d'aspeutu escuru"] }, "Emoji picker": { v: ["Selector de fustaxes"] }, Flags: { v: ["Banderes"] }, "Food & Drink": { v: ["Cómida y bébora"] }, "Frequently used": { v: ["D'usu frecuente"] }, "Light skin tone": { v: ["Tonu d'aspeutu claru"] }, "Medium dark skin tone": { v: ["Tonu d'aspeutu medio escuru"] }, "Medium light skin tone": { v: ["Tonu d'aspeutu medio claru"] }, "Medium skin tone": { v: ["Tonu d'aspeutu mediu"] }, "Neutral skin color": { v: ["Color d'aspeutu neutral"] }, Objects: { v: ["Oxetos"] }, "People & Body": { v: ["Persones y cuerpu"] }, "Pick an emoji": { v: ["Escueyi un fustaxe"] }, "Search emoji": { v: ["Buscar nos fustaxes"] }, "Search results": { v: ["Resultaos de la busca"] }, Selected: { v: ["Na seleición"] }, "Skin tone": { v: ["Tonu d'aspeutu"] }, "Smileys & Emotion": { v: ["Sorrises y emociones"] }, Symbols: { v: ["Símbolos"] }, "Travel & Places": { v: ["Viaxes y llugares"] } } }, { l: "az", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "be", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "bg", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "bn_BD", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "br", t: { Activities: { v: ["Oberiantizoù"] }, "Animals & Nature": { v: ["Loened & Natur"] }, "Clear search": { v: [""] }, Custom: { v: ["Personelañ"] }, Flags: { v: ["Bannieloù"] }, "Food & Drink": { v: ["Boued & Evajoù"] }, "Frequently used": { v: ["Implijet alies"] }, Objects: { v: ["Traoù"] }, "People & Body": { v: ["Tud & Korf"] }, "Pick an emoji": { v: ["Choaz un emoji"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Disoc'hoù an enklask"] }, "Smileys & Emotion": { v: ["Smileyioù & Fromoù"] }, Symbols: { v: ["Arouezioù"] }, "Travel & Places": { v: ["Beaj & Lec'hioù"] } } }, { l: "bs", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ca", t: { Activities: { v: ["Activitats"] }, "Animals & Nature": { v: ["Animals i natura"] }, "Clear search": { v: [""] }, Custom: { v: ["Personalitzat"] }, Flags: { v: ["Marques"] }, "Food & Drink": { v: ["Menjar i begudes"] }, "Frequently used": { v: ["Utilitzats recentment"] }, Objects: { v: ["Objectes"] }, "People & Body": { v: ["Persones i cos"] }, "Pick an emoji": { v: ["Trieu un emoji"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Resultats de cerca"] }, "Smileys & Emotion": { v: ["Cares i emocions"] }, Symbols: { v: ["Símbols"] }, "Travel & Places": { v: ["Viatges i llocs"] } } }, { l: "cs", t: { Activities: { v: ["Aktivity"] }, "Animals & Nature": { v: ["Zvířata a příroda"] }, "Clear search": { v: ["Vyčistit vyhledávání"] }, Custom: { v: ["Uživatelsky určené"] }, Flags: { v: ["Příznaky"] }, "Food & Drink": { v: ["Jídlo a pití"] }, "Frequently used": { v: ["Často používané"] }, Objects: { v: ["Objekty"] }, "People & Body": { v: ["Lidé a tělo"] }, "Pick an emoji": { v: ["Vybrat emoji"] }, "Search emoji": { v: ["Hledat emoji"] }, "Search results": { v: ["Výsledky hledání"] }, "Smileys & Emotion": { v: ["Úsměvy a emoce"] }, Symbols: { v: ["Symboly"] }, "Travel & Places": { v: ["Cestování a místa"] } } }, { l: "cs_CZ", t: { Activities: { v: ["Aktivity"] }, "Animals & Nature": { v: ["Zvířata a příroda"] }, "Clear search": { v: ["Vyčistit vyhledávání"] }, Custom: { v: ["Uživatelsky určené"] }, "Dark skin tone": { v: ["Tmavý tělový tón"] }, "Emoji picker": { v: ["Výběr emotikon"] }, Flags: { v: ["Příznaky"] }, "Food & Drink": { v: ["Jídlo a pití"] }, "Frequently used": { v: ["Často používané"] }, "Light skin tone": { v: ["Světlý tělový tón"] }, "Medium dark skin tone": { v: ["Středně tmavý tělový tón"] }, "Medium light skin tone": { v: ["Středně světlý tělový tón"] }, "Medium skin tone": { v: ["Střední tělový tón"] }, "Neutral skin color": { v: ["Neutřální tělová barva"] }, Objects: { v: ["Objekty"] }, "People & Body": { v: ["Lidé a tělo"] }, "Pick an emoji": { v: ["Vybrat emoji"] }, "Search emoji": { v: ["Hledat emoji"] }, "Search results": { v: ["Výsledky hledání"] }, Selected: { v: ["Vybráno"] }, "Skin tone": { v: ["Tělový tón"] }, "Smileys & Emotion": { v: ["Úsměvy a emoce"] }, Symbols: { v: ["Symboly"] }, "Travel & Places": { v: ["Cestování a místa"] } } }, { l: "cy_GB", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "da", t: { Activities: { v: ["Aktiviteter"] }, "Animals & Nature": { v: ["Dyr & Natur"] }, "Clear search": { v: ["Ryd søgning"] }, Custom: { v: ["Brugerdefineret"] }, "Dark skin tone": { v: ["Mørk skin tone"] }, "Emoji picker": { v: ["Emoji vælger"] }, Flags: { v: ["Flag"] }, "Food & Drink": { v: ["Mad & Drikke"] }, "Frequently used": { v: ["Ofte brugt"] }, "Light skin tone": { v: ["Lys skin tone"] }, "Medium dark skin tone": { v: ["Medium mørk skin tone"] }, "Medium light skin tone": { v: ["Medium lys skin tone"] }, "Medium skin tone": { v: ["Medium skin tone"] }, "Neutral skin color": { v: ["Neutral skin color"] }, Objects: { v: ["Objekter"] }, "People & Body": { v: ["Mennesker & Menneskekroppen"] }, "Pick an emoji": { v: ["Vælg en emoji"] }, "Search emoji": { v: ["Søg emoji"] }, "Search results": { v: ["Søgeresultater"] }, Selected: { v: ["Valgt"] }, "Skin tone": { v: ["Skin tone"] }, "Smileys & Emotion": { v: ["Smileys & Emotion"] }, Symbols: { v: ["Symboler"] }, "Travel & Places": { v: ["Rejser & Rejsemål"] } } }, { l: "de", t: { Activities: { v: ["Aktivitäten"] }, "Animals & Nature": { v: ["Tiere & Natur"] }, "Clear search": { v: ["Suche leeren"] }, Custom: { v: ["Benutzerdefiniert"] }, Flags: { v: ["Flaggen"] }, "Food & Drink": { v: ["Essen & Trinken"] }, "Frequently used": { v: ["Häufig verwendet"] }, Objects: { v: ["Gegenstände"] }, "People & Body": { v: ["Menschen & Körper"] }, "Pick an emoji": { v: ["Ein Emoji auswählen"] }, "Search emoji": { v: ["Emoji suchen"] }, "Search results": { v: ["Suchergebnisse"] }, Selected: { v: ["Ausgewählt"] }, "Smileys & Emotion": { v: ["Smileys & Emotionen"] }, Symbols: { v: ["Symbole"] }, "Travel & Places": { v: ["Reisen & Orte"] } } }, { l: "de_DE", t: { Activities: { v: ["Aktivitäten"] }, "Animals & Nature": { v: ["Tiere & Natur"] }, "Clear search": { v: ["Suche leeren"] }, Custom: { v: ["Benutzerdefiniert"] }, "Dark skin tone": { v: ["Dunkler Hautfarbton"] }, "Emoji picker": { v: ["Emoji-Auswahl"] }, Flags: { v: ["Flaggen"] }, "Food & Drink": { v: ["Essen & Trinken"] }, "Frequently used": { v: ["Häufig verwendet"] }, "Light skin tone": { v: ["Heller Hautfarbton"] }, "Medium dark skin tone": { v: ["Mitteldunkler Hautfarbton"] }, "Medium light skin tone": { v: ["Mittelheller Hautfarbton"] }, "Medium skin tone": { v: ["Mittlerer Hautfarbton"] }, "Neutral skin color": { v: ["Neutraler Hautfarbton"] }, Objects: { v: ["Objekte"] }, "People & Body": { v: ["Menschen & Körper"] }, "Pick an emoji": { v: ["Ein Emoji auswählen"] }, "Search emoji": { v: ["Emoji suchen"] }, "Search results": { v: ["Suchergebnisse"] }, Selected: { v: ["Ausgewählt"] }, "Skin tone": { v: ["Hautfarbton"] }, "Smileys & Emotion": { v: ["Smileys & Emotionen"] }, Symbols: { v: ["Symbole"] }, "Travel & Places": { v: ["Reisen & Orte"] } } }, { l: "el", t: { Activities: { v: ["Δραστηριότητες"] }, "Animals & Nature": { v: ["Ζώα & Φύση"] }, "Clear search": { v: [""] }, Custom: { v: ["Προσαρμογή"] }, Flags: { v: ["Σημαίες"] }, "Food & Drink": { v: ["Φαγητό & Ποτό"] }, "Frequently used": { v: ["Συχνά χρησιμοποιούμενο"] }, Objects: { v: ["Αντικείμενα"] }, "People & Body": { v: ["Άνθρωποι & Σώμα"] }, "Pick an emoji": { v: ["Επιλέξτε ένα emoji"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Αποτελέσματα αναζήτησης"] }, "Smileys & Emotion": { v: ["Φατσούλες & Συναίσθημα"] }, Symbols: { v: ["Σύμβολα"] }, "Travel & Places": { v: ["Ταξίδια & Τοποθεσίες"] } } }, { l: "en_GB", t: { Activities: { v: ["Activities"] }, "Animals & Nature": { v: ["Animals & Nature"] }, "Clear search": { v: ["Clear search"] }, Custom: { v: ["Custom"] }, "Dark skin tone": { v: ["Dark skin tone"] }, "Emoji picker": { v: ["Emoji picker"] }, Flags: { v: ["Flags"] }, "Food & Drink": { v: ["Food & Drink"] }, "Frequently used": { v: ["Frequently used"] }, "Light skin tone": { v: ["Light skin tone"] }, "Medium dark skin tone": { v: ["Medium dark skin tone"] }, "Medium light skin tone": { v: ["Medium light skin tone"] }, "Medium skin tone": { v: ["Medium skin tone"] }, "Neutral skin color": { v: ["Neutral skin colour"] }, Objects: { v: ["Objects"] }, "People & Body": { v: ["People & Body"] }, "Pick an emoji": { v: ["Pick an emoji"] }, "Search emoji": { v: ["Search emoji"] }, "Search results": { v: ["Search results"] }, Selected: { v: ["Selected"] }, "Skin tone": { v: ["Skin tone"] }, "Smileys & Emotion": { v: ["Smileys & Emotion"] }, Symbols: { v: ["Symbols"] }, "Travel & Places": { v: ["Travel & Places"] } } }, { l: "eo", t: { Activities: { v: ["Aktiveco"] }, "Animals & Nature": { v: ["Bestoj & Naturo"] }, "Clear search": { v: [""] }, Custom: { v: ["Propra"] }, Flags: { v: ["Flagoj"] }, "Food & Drink": { v: ["Manĝaĵo & Trinkaĵo"] }, "Frequently used": { v: ["Ofte uzataj"] }, Objects: { v: ["Objektoj"] }, "People & Body": { v: ["Homoj & Korpo"] }, "Pick an emoji": { v: ["Elekti emoĝion "] }, "Search emoji": { v: [""] }, "Search results": { v: ["Serĉrezultoj"] }, "Smileys & Emotion": { v: ["Ridoj kaj Emocioj"] }, Symbols: { v: ["Signoj"] }, "Travel & Places": { v: ["Vojaĵoj & Lokoj"] } } }, { l: "es", t: { Activities: { v: ["Actividades"] }, "Animals & Nature": { v: ["Animales y naturaleza"] }, "Clear search": { v: ["Limpiar búsqueda"] }, Custom: { v: ["Personalizado"] }, "Dark skin tone": { v: ["Tono de piel obscuro"] }, "Emoji picker": { v: ["Selector de emojis"] }, Flags: { v: ["Banderas"] }, "Food & Drink": { v: ["Comida y bebida"] }, "Frequently used": { v: ["Usado con frecuencia"] }, "Light skin tone": { v: ["Tono de piel claro"] }, "Medium dark skin tone": { v: ["Tono de piel medio oscuro"] }, "Medium light skin tone": { v: ["Tono de piel medio claro"] }, "Medium skin tone": { v: ["Tono de piel medio"] }, "Neutral skin color": { v: ["Color de piel neutral"] }, Objects: { v: ["Objetos"] }, "People & Body": { v: ["Personas y Cuerpo"] }, "Pick an emoji": { v: ["Elegir un emoji"] }, "Search emoji": { v: ["Buscar emoji"] }, "Search results": { v: ["Resultados de la búsqueda"] }, Selected: { v: ["Seleccionado"] }, "Skin tone": { v: ["Tono de piel"] }, "Smileys & Emotion": { v: ["Smileys y emoticonos"] }, Symbols: { v: ["Símbolos"] }, "Travel & Places": { v: ["Viajes y lugares"] } } }, { l: "es_419", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_AR", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_CL", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_CO", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_CR", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_DO", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_EC", t: { Activities: { v: ["Actividades"] }, "Animals & Nature": { v: ["Animales y Naturaleza"] }, "Clear search": { v: ["Limpiar búsqueda"] }, Custom: { v: ["Personalizado"] }, Flags: { v: ["Marcas"] }, "Food & Drink": { v: ["Comida y Bebida"] }, "Frequently used": { v: ["Frecuentemente utilizado"] }, Objects: { v: ["Objetos"] }, "People & Body": { v: ["Personas y Cuerpo"] }, "Pick an emoji": { v: ["Seleccionar un emoji"] }, "Search emoji": { v: ["Buscar emoji"] }, "Search results": { v: ["Resultados de búsqueda"] }, Selected: { v: [""] }, "Smileys & Emotion": { v: ["Caritas y Emociones"] }, Symbols: { v: ["Símbolos"] }, "Travel & Places": { v: ["Viajes y Lugares"] } } }, { l: "es_GT", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_HN", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_MX", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_NI", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_PA", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_PE", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_PR", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_PY", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_SV", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "es_UY", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "et_EE", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "eu", t: { Activities: { v: ["Jarduerak"] }, "Animals & Nature": { v: ["Animaliak eta Natura"] }, "Clear search": { v: ["Garbitu bilaketa"] }, Custom: { v: ["Pertsonalizatua"] }, Flags: { v: ["Banderak"] }, "Food & Drink": { v: ["Janaria eta edariak"] }, "Frequently used": { v: ["Askotan erabilia"] }, Objects: { v: ["Objektuak"] }, "People & Body": { v: ["Jendea eta gorputza"] }, "Pick an emoji": { v: ["Hautatu emoji bat"] }, "Search emoji": { v: ["Bilatu emojiak"] }, "Search results": { v: ["Bilaketa emaitzak"] }, Selected: { v: ["Hautatuta"] }, "Smileys & Emotion": { v: ["Smileyak eta emozioa"] }, Symbols: { v: ["Sinboloak"] }, "Travel & Places": { v: ["Bidaiak eta lekuak"] } } }, { l: "fa", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "fi", t: { Activities: { v: ["Aktiviteetit"] }, "Animals & Nature": { v: ["Eläimet & luonto"] }, "Clear search": { v: [""] }, Custom: { v: ["Mukautettu"] }, Flags: { v: ["Liput"] }, "Food & Drink": { v: ["Ruoka & juoma"] }, "Frequently used": { v: ["Usein käytetyt"] }, Objects: { v: ["Esineet & asiat"] }, "People & Body": { v: ["Ihmiset & keho"] }, "Pick an emoji": { v: ["Valitse emoji"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Hakutulokset"] }, "Smileys & Emotion": { v: ["Hymiöt & tunteet"] }, Symbols: { v: ["Symbolit"] }, "Travel & Places": { v: ["Matkustus & kohteet"] } } }, { l: "fo", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "fr", t: { Activities: { v: ["Activités"] }, "Animals & Nature": { v: ["Animaux & Nature"] }, "Clear search": { v: ["Effacer la recherche"] }, Custom: { v: ["Personnalisé"] }, Flags: { v: ["Drapeaux"] }, "Food & Drink": { v: ["Nourriture & Boissons"] }, "Frequently used": { v: ["Utilisés fréquemment"] }, Objects: { v: ["Objets"] }, "People & Body": { v: ["Personnes & Corps"] }, "Pick an emoji": { v: ["Choisissez un émoji"] }, "Search emoji": { v: ["Rechercher un emoji"] }, "Search results": { v: ["Résultats de recherche"] }, Selected: { v: ["sélectionné"] }, "Smileys & Emotion": { v: ["Smileys & Émotions"] }, Symbols: { v: ["Symboles"] }, "Travel & Places": { v: ["Voyage & Lieux"] } } }, { l: "gd", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "gl", t: { Activities: { v: ["Actividades"] }, "Animals & Nature": { v: ["Animais e natureza"] }, "Clear search": { v: ["Limpar a busca"] }, Custom: { v: ["Personalizado"] }, "Dark skin tone": { v: ["Ton de pel escuro"] }, "Emoji picker": { v: ["Selector de «emojis»"] }, Flags: { v: ["Bandeiras"] }, "Food & Drink": { v: ["Comida e bebida"] }, "Frequently used": { v: ["Usado con frecuencia"] }, "Light skin tone": { v: ["Ton de pel claro"] }, "Medium dark skin tone": { v: ["Ton de pel medio escuro"] }, "Medium light skin tone": { v: ["Ton de pel medio claro"] }, "Medium skin tone": { v: ["Ton de pel medio"] }, "Neutral skin color": { v: ["Cor de pel neutra"] }, Objects: { v: ["Obxectos"] }, "People & Body": { v: ["Persoas e corpo"] }, "Pick an emoji": { v: ["Escolla un «emoji»"] }, "Search emoji": { v: ["Buscar «emoji»"] }, "Search results": { v: ["Resultados da busca"] }, Selected: { v: ["Seleccionado"] }, "Skin tone": { v: ["Ton de pel"] }, "Smileys & Emotion": { v: ["Sorrisos e emocións"] }, Symbols: { v: ["Símbolos"] }, "Travel & Places": { v: ["Viaxes e lugares"] } } }, { l: "he", t: { Activities: { v: ["פעילויות"] }, "Animals & Nature": { v: ["חיות וטבע"] }, "Clear search": { v: ["פינוי חיפוש"] }, Custom: { v: ["בהתאמה אישית"] }, Flags: { v: ["דגלים"] }, "Food & Drink": { v: ["מזון ומשקאות"] }, "Frequently used": { v: ["בשימוש תדיר"] }, Objects: { v: ["חפצים"] }, "People & Body": { v: ["אנשים וגוף"] }, "Pick an emoji": { v: ["נא לבחור אמוג׳י"] }, "Search emoji": { v: ["חיפוש אמוג׳י"] }, "Search results": { v: ["תוצאות חיפוש"] }, Selected: { v: [""] }, "Smileys & Emotion": { v: ["חייכנים ורגשונים"] }, Symbols: { v: ["סמלים"] }, "Travel & Places": { v: ["טיולים ומקומות"] } } }, { l: "hi_IN", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "hr", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "hsb", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "hu", t: { Activities: { v: ["Tevékenységek"] }, "Animals & Nature": { v: ["Állatok és természet"] }, "Clear search": { v: [""] }, Custom: { v: ["Egyéni"] }, Flags: { v: ["Zászlók"] }, "Food & Drink": { v: ["Étel és ital"] }, "Frequently used": { v: ["Gyakran használt"] }, Objects: { v: ["Tárgyak"] }, "People & Body": { v: ["Emberek és test"] }, "Pick an emoji": { v: ["Válasszon egy emodzsit"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Találatok"] }, "Smileys & Emotion": { v: ["Mosolyok és érzelmek"] }, Symbols: { v: ["Szimbólumok"] }, "Travel & Places": { v: ["Utazás és helyek"] } } }, { l: "hy", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ia", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "id", t: { Activities: { v: ["Aktivitas"] }, "Animals & Nature": { v: ["Satwa dan Alam"] }, "Clear search": { v: ["Bersihkan pencarian"] }, Custom: { v: ["Khusus"] }, Flags: { v: ["Tanda"] }, "Food & Drink": { v: ["Makanan dan Minuman"] }, "Frequently used": { v: ["Sering digunakan"] }, Objects: { v: ["Objek"] }, "People & Body": { v: ["Orang & Badan"] }, "Pick an emoji": { v: ["Pilih emoji"] }, "Search emoji": { v: ["Cari emoji"] }, "Search results": { v: ["Hasil pencarian"] }, Selected: { v: ["Dipilih"] }, "Smileys & Emotion": { v: ["Senyuman & Perasaan"] }, Symbols: { v: ["Simbol"] }, "Travel & Places": { v: ["Perjalanan & Tempat"] } } }, { l: "ig", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "is", t: { Activities: { v: ["Aðgerðir"] }, "Animals & Nature": { v: ["Dýr og náttúra"] }, "Clear search": { v: ["Hreinsa leit"] }, Custom: { v: ["Sérsniðið"] }, Flags: { v: ["Flögg"] }, "Food & Drink": { v: ["Matur og drykkur"] }, "Frequently used": { v: ["Oftast notað"] }, Objects: { v: ["Hlutir"] }, "People & Body": { v: ["Fólk og líkami"] }, "Pick an emoji": { v: ["Veldu tjáningartákn"] }, "Search emoji": { v: ["Leita að tjáningartákni"] }, "Search results": { v: ["Leitarniðurstöður"] }, Selected: { v: ["Valið"] }, "Smileys & Emotion": { v: ["Broskallar og tilfinningar"] }, Symbols: { v: ["Tákn"] }, "Travel & Places": { v: ["Staðir og ferðalög"] } } }, { l: "it", t: { Activities: { v: ["Attività"] }, "Animals & Nature": { v: ["Animali e natura"] }, "Clear search": { v: ["online"] }, Custom: { v: ["Personalizzato"] }, Flags: { v: ["Bandiere"] }, "Food & Drink": { v: ["Cibo e bevande"] }, "Frequently used": { v: ["Usati di frequente"] }, Objects: { v: ["Oggetti"] }, "People & Body": { v: ["Persone e corpo"] }, "Pick an emoji": { v: ["Scegli un emoji"] }, "Search emoji": { v: ["Ricerca emoji"] }, "Search results": { v: ["Risultati di ricerca"] }, Selected: { v: ["Selezionato"] }, "Smileys & Emotion": { v: ["Faccine ed emozioni"] }, Symbols: { v: ["Simboli"] }, "Travel & Places": { v: ["Viaggi e luoghi"] } } }, { l: "ja", t: { Activities: { v: ["アクティビティ"] }, "Animals & Nature": { v: ["動物と自然"] }, "Clear search": { v: [""] }, Custom: { v: ["カスタム"] }, Flags: { v: ["国旗"] }, "Food & Drink": { v: ["食べ物と飲み物"] }, "Frequently used": { v: ["よく使うもの"] }, Objects: { v: ["物"] }, "People & Body": { v: ["様々な人と体の部位"] }, "Pick an emoji": { v: ["絵文字を選択"] }, "Search emoji": { v: [""] }, "Search results": { v: ["検索結果"] }, "Smileys & Emotion": { v: ["感情表現"] }, Symbols: { v: ["記号"] }, "Travel & Places": { v: ["旅行と場所"] } } }, { l: "ka", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ka_GE", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "kab", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "kk", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "km", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "kn", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ko", t: { Activities: { v: ["활동"] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "la", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "lb", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "lo", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "lt_LT", t: { Activities: { v: ["Veiklos"] }, "Animals & Nature": { v: ["Gyvūnai ir gamta"] }, "Clear search": { v: [""] }, Custom: { v: ["Tinkinti"] }, Flags: { v: ["Vėliavos"] }, "Food & Drink": { v: ["Maistas ir gėrimai"] }, "Frequently used": { v: ["Dažniausiai naudoti"] }, Objects: { v: ["Objektai"] }, "People & Body": { v: ["Žmonės ir kūnas"] }, "Pick an emoji": { v: ["Pasirinkti jaustuką"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Paieškos rezultatai"] }, "Smileys & Emotion": { v: ["Šypsenos ir emocijos"] }, Symbols: { v: ["Simboliai"] }, "Travel & Places": { v: ["Kelionės ir vietos"] } } }, { l: "lv", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "mk", t: { Activities: { v: ["Активности"] }, "Animals & Nature": { v: ["Животни & Природа"] }, "Clear search": { v: [""] }, Custom: { v: ["Прилагодени"] }, Flags: { v: ["Знамиња"] }, "Food & Drink": { v: ["Храна & Пијалоци"] }, "Frequently used": { v: ["Најчесто користени"] }, Objects: { v: ["Објекти"] }, "People & Body": { v: ["Луѓе & Тело"] }, "Pick an emoji": { v: ["Избери емотикон"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Резултати од барувањето"] }, "Smileys & Emotion": { v: ["Смешковци & Емотикони"] }, Symbols: { v: ["Симболи"] }, "Travel & Places": { v: ["Патувања & Места"] } } }, { l: "mn", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "mr", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ms_MY", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "my", t: { Activities: { v: ["ပြုလုပ်ဆောင်တာများ"] }, "Animals & Nature": { v: ["တိရစ္ဆာန်များနှင့် သဘာဝ"] }, "Clear search": { v: [""] }, Custom: { v: ["အလိုကျချိန်ညှိမှု"] }, Flags: { v: ["အလံများ"] }, "Food & Drink": { v: ["အစားအသောက်"] }, "Frequently used": { v: ["မကြာခဏအသုံးပြုသော"] }, Objects: { v: ["အရာဝတ္ထုများ"] }, "People & Body": { v: ["လူပုဂ္ဂိုလ်များနှင့် ခန္ဓာကိုယ်"] }, "Pick an emoji": { v: ["အီမိုဂျီရွေးရန်"] }, "Search emoji": { v: [""] }, "Search results": { v: ["ရှာဖွေမှု ရလဒ်များ"] }, "Smileys & Emotion": { v: ["စမိုင်လီများနှင့် အီမိုရှင်း"] }, Symbols: { v: ["သင်္ကေတများ"] }, "Travel & Places": { v: ["ခရီးသွားလာခြင်းနှင့် နေရာများ"] } } }, { l: "nb", t: { Activities: { v: ["Aktiviteter"] }, "Animals & Nature": { v: ["Dyr og natur"] }, "Clear search": { v: [""] }, Custom: { v: ["Tilpasset"] }, Flags: { v: ["Flagg"] }, "Food & Drink": { v: ["Mat og drikke"] }, "Frequently used": { v: ["Ofte brukt"] }, Objects: { v: ["Objekter"] }, "People & Body": { v: ["Mennesker og kropp"] }, "Pick an emoji": { v: ["Velg en emoji"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Søkeresultater"] }, "Smileys & Emotion": { v: ["Smilefjes og følelser"] }, Symbols: { v: ["Symboler"] }, "Travel & Places": { v: ["Reise og steder"] } } }, { l: "ne", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "nl", t: { Activities: { v: ["Activiteiten"] }, "Animals & Nature": { v: ["Dieren & Natuur"] }, "Clear search": { v: ["Wis zoekopdracht"] }, Custom: { v: ["Aangepast"] }, Flags: { v: ["Vlaggen"] }, "Food & Drink": { v: ["Eten & Drinken"] }, "Frequently used": { v: ["Vaak gebruikt"] }, Objects: { v: ["Objecten"] }, "People & Body": { v: ["Mensen & Lichaam"] }, "Pick an emoji": { v: ["Kies een emoji"] }, "Search emoji": { v: ["Zoek emoji"] }, "Search results": { v: ["Zoekresultaten"] }, Selected: { v: ["Geselecteerd"] }, "Smileys & Emotion": { v: ["Smileys & Emotie"] }, Symbols: { v: ["Symbolen"] }, "Travel & Places": { v: ["Reizen & Plaatsen"] } } }, { l: "nn_NO", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "oc", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "pl", t: { Activities: { v: ["Aktywność"] }, "Animals & Nature": { v: ["Zwierzęta i natura"] }, "Clear search": { v: ["Wyczyść wyszukiwanie"] }, Custom: { v: ["Zwyczajne"] }, Flags: { v: ["Flagi"] }, "Food & Drink": { v: ["Jedzenie i picie"] }, "Frequently used": { v: ["Często używane"] }, Objects: { v: ["Obiekty"] }, "People & Body": { v: ["Ludzie i ciało"] }, "Pick an emoji": { v: ["Wybierz emoji"] }, "Search emoji": { v: ["Szukaj emoji"] }, "Search results": { v: ["Wyniki wyszukiwania"] }, Selected: { v: ["Wybrane"] }, "Smileys & Emotion": { v: ["Buźki i emotikony"] }, Symbols: { v: ["Symbole"] }, "Travel & Places": { v: ["Podróże i miejsca"] } } }, { l: "ps", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "pt_BR", t: { Activities: { v: ["Atividades"] }, "Animals & Nature": { v: ["Animais & Natureza"] }, "Clear search": { v: ["Limpar pesquisa"] }, Custom: { v: ["Personalizado"] }, "Dark skin tone": { v: ["Tom de pele escuro"] }, "Emoji picker": { v: ["Selecionar emoji"] }, Flags: { v: ["Bandeiras"] }, "Food & Drink": { v: ["Comida & Bebida"] }, "Frequently used": { v: ["Mais usados"] }, "Light skin tone": { v: ["Tome de pele claro"] }, "Medium dark skin tone": { v: ["Tom de pele meio escuro"] }, "Medium light skin tone": { v: ["Tom de pele meio claro"] }, "Medium skin tone": { v: ["Tom de pele médio"] }, "Neutral skin color": { v: ["Tom de pele neutro"] }, Objects: { v: ["Objetos"] }, "People & Body": { v: ["Pessoas & Corpo"] }, "Pick an emoji": { v: ["Escolha um emoji"] }, "Search emoji": { v: ["Pesquisar emoticons"] }, "Search results": { v: ["Resultados da pesquisa"] }, Selected: { v: ["Selecionado"] }, "Skin tone": { v: ["Tom de pele"] }, "Smileys & Emotion": { v: ["Smiles & Emoções"] }, Symbols: { v: ["Símbolo"] }, "Travel & Places": { v: ["Viagem & Lugares"] } } }, { l: "pt_PT", t: { Activities: { v: ["Atividades"] }, "Animals & Nature": { v: ["Animais e Natureza"] }, "Clear search": { v: ["Limpar a pesquisa"] }, Custom: { v: ["Personalizado"] }, Flags: { v: ["Bandeiras"] }, "Food & Drink": { v: ["Comida e Bebida"] }, "Frequently used": { v: ["Mais utilizados"] }, Objects: { v: ["Objetos"] }, "People & Body": { v: ["Pessoas e Corpo"] }, "Pick an emoji": { v: ["Escolha um emoji"] }, "Search emoji": { v: ["Pesquisar emoji"] }, "Search results": { v: ["Resultados da pesquisa"] }, Selected: { v: [""] }, "Smileys & Emotion": { v: ["Sorrisos e Emoções"] }, Symbols: { v: ["Símbolos"] }, "Travel & Places": { v: ["Viagem e Lugares"] } } }, { l: "ro", t: { Activities: { v: ["Activități"] }, "Animals & Nature": { v: ["Animale și natură"] }, "Clear search": { v: ["Șterge căutarea"] }, Custom: { v: ["Personalizat"] }, Flags: { v: ["Marcaje"] }, "Food & Drink": { v: ["Alimente și băuturi"] }, "Frequently used": { v: ["Utilizate frecvent"] }, Objects: { v: ["Obiecte"] }, "People & Body": { v: ["Oameni și corp"] }, "Pick an emoji": { v: ["Alege un emoji"] }, "Search emoji": { v: ["Căutare emoji"] }, "Search results": { v: ["Rezultatele căutării"] }, Selected: { v: ["Selectat"] }, "Smileys & Emotion": { v: ["Zâmbete și emoții"] }, Symbols: { v: ["Simboluri"] }, "Travel & Places": { v: ["Călătorii și locuri"] } } }, { l: "ru", t: { Activities: { v: ["События"] }, "Animals & Nature": { v: ["Животные и природа "] }, "Clear search": { v: ["Очистить поиск"] }, Custom: { v: ["Пользовательское"] }, Flags: { v: ["Флаги"] }, "Food & Drink": { v: ["Еда, напиток"] }, "Frequently used": { v: ["Часто используемый"] }, Objects: { v: ["Объекты"] }, "People & Body": { v: ["Люди и тело"] }, "Pick an emoji": { v: ["Выберите эмодзи"] }, "Search emoji": { v: ["Поиск эмодзи"] }, "Search results": { v: ["Результаты поиска"] }, Selected: { v: ["Выбрано"] }, "Smileys & Emotion": { v: ["Смайлики и эмоции"] }, Symbols: { v: ["Символы"] }, "Travel & Places": { v: ["Путешествия и места"] } } }, { l: "sc", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "si", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "sk", t: { Activities: { v: ["Aktivity"] }, "Animals & Nature": { v: ["Zvieratá a príroda"] }, "Clear search": { v: [""] }, Custom: { v: ["Zvyk"] }, Flags: { v: ["Vlajky"] }, "Food & Drink": { v: ["Jedlo a nápoje"] }, "Frequently used": { v: ["Často používané"] }, Objects: { v: ["Objekty"] }, "People & Body": { v: ["Ľudia a telo"] }, "Pick an emoji": { v: ["Vyberte si emodži"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Výsledky vyhľadávania"] }, "Smileys & Emotion": { v: ["Smajlíky a emócie"] }, Symbols: { v: ["Symboly"] }, "Travel & Places": { v: ["Cestovanie a miesta"] } } }, { l: "sl", t: { Activities: { v: ["Dejavnosti"] }, "Animals & Nature": { v: ["Živali in Narava"] }, "Clear search": { v: [""] }, Custom: { v: ["Po meri"] }, Flags: { v: ["Zastavice"] }, "Food & Drink": { v: ["Hrana in Pijača"] }, "Frequently used": { v: ["Pogostost uporabe"] }, Objects: { v: ["Predmeti"] }, "People & Body": { v: ["Ljudje in Telo"] }, "Pick an emoji": { v: ["Izbor izrazne ikone"] }, "Search emoji": { v: [""] }, "Search results": { v: ["Zadetki iskanja"] }, "Smileys & Emotion": { v: ["Izrazne ikone"] }, Symbols: { v: ["Simboli"] }, "Travel & Places": { v: ["Potovanja in Kraji"] } } }, { l: "sq", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "sr", t: { Activities: { v: ["Активности"] }, "Animals & Nature": { v: ["Животиње и природа"] }, "Clear search": { v: ["Обриши претрагу"] }, Custom: { v: ["Произвољно"] }, "Dark skin tone": { v: ["Тамни тен коже"] }, "Emoji picker": { v: ["Бирач емођија"] }, Flags: { v: ["Заставе"] }, "Food & Drink": { v: ["Храна и пиће"] }, "Frequently used": { v: ["Често коришћено"] }, "Light skin tone": { v: ["Светли тен коже"] }, "Medium dark skin tone": { v: ["Средње тамни тен коже"] }, "Medium light skin tone": { v: ["Средње светли тен коже"] }, "Medium skin tone": { v: ["Средњи тен коже"] }, "Neutral skin color": { v: ["Неутрална боја коже"] }, Objects: { v: ["Предмети"] }, "People & Body": { v: ["Људи и тело"] }, "Pick an emoji": { v: ["Изаберите емођи"] }, "Search emoji": { v: ["Претражи емођи"] }, "Search results": { v: ["Резултати претраге"] }, Selected: { v: ["Изабрано"] }, "Skin tone": { v: ["Тен коже"] }, "Smileys & Emotion": { v: ["Смајлији и емоције"] }, Symbols: { v: ["Симболи"] }, "Travel & Places": { v: ["Путовање и места"] } } }, { l: "sr@latin", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "sv", t: { Activities: { v: ["Aktiviteter"] }, "Animals & Nature": { v: ["Djur & Natur"] }, "Clear search": { v: ["Rensa sökning"] }, Custom: { v: ["Anpassad"] }, "Dark skin tone": { v: ["Mörk hudton"] }, "Emoji picker": { v: ["Emoji-väljare"] }, Flags: { v: ["Flaggor"] }, "Food & Drink": { v: ["Mat & Dryck"] }, "Frequently used": { v: ["Används ofta"] }, "Light skin tone": { v: ["Ljus hudton"] }, "Medium dark skin tone": { v: ["Medium mörk hudton"] }, "Medium light skin tone": { v: ["Medium ljus hudton"] }, "Medium skin tone": { v: ["Medium hudton"] }, "Neutral skin color": { v: ["Neutral hudfärg"] }, Objects: { v: ["Objekt"] }, "People & Body": { v: ["Kropp & Själ"] }, "Pick an emoji": { v: ["Välj en emoji"] }, "Search emoji": { v: ["Sök emoji"] }, "Search results": { v: ["Sökresultat"] }, Selected: { v: ["Vald"] }, "Skin tone": { v: ["Hudton"] }, "Smileys & Emotion": { v: ["Selfies & Känslor"] }, Symbols: { v: ["Symboler"] }, "Travel & Places": { v: ["Resor & Sevärdigheter"] } } }, { l: "sw", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "ta", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "th", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "tk", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "tr", t: { Activities: { v: ["Etkinlikler"] }, "Animals & Nature": { v: ["Hayvanlar ve Doğa"] }, "Clear search": { v: ["Aramayı temizle"] }, Custom: { v: ["Özel"] }, "Dark skin tone": { v: ["Koyu deri rengi"] }, "Emoji picker": { v: ["Emoji seçici"] }, Flags: { v: ["Bayraklar"] }, "Food & Drink": { v: ["Yeme ve içme"] }, "Frequently used": { v: ["Sık kullanılanlar"] }, "Light skin tone": { v: ["Açık deri rengi"] }, "Medium dark skin tone": { v: ["Orta koyu deri rengi"] }, "Medium light skin tone": { v: ["Orta açık deri rengi"] }, "Medium skin tone": { v: ["Orta deri rengi"] }, "Neutral skin color": { v: ["Nötr deri rengi"] }, Objects: { v: ["Nesneler"] }, "People & Body": { v: ["İnsanlar ve beden"] }, "Pick an emoji": { v: ["Bir emoji seçin"] }, "Search emoji": { v: ["Emoji ara"] }, "Search results": { v: ["Arama sonuçları"] }, Selected: { v: ["Seçilmiş"] }, "Skin tone": { v: ["Deri rengi"] }, "Smileys & Emotion": { v: ["İfadeler ve duygular"] }, Symbols: { v: ["Simgeler"] }, "Travel & Places": { v: ["Gezi ve yerler"] } } }, { l: "ug", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "uk", t: { Activities: { v: ["Діяльність"] }, "Animals & Nature": { v: ["Тварини та природа"] }, "Clear search": { v: ["Очистити пошук"] }, Custom: { v: ["Власне"] }, Flags: { v: ["Прапори"] }, "Food & Drink": { v: ["Їжа та напої"] }, "Frequently used": { v: ["Найчастіші"] }, Objects: { v: ["Об'єкти"] }, "People & Body": { v: ["Люди та жести"] }, "Pick an emoji": { v: ["Виберіть емоційку"] }, "Search emoji": { v: ["Шукати емоційки"] }, "Search results": { v: ["Результати пошуку"] }, Selected: { v: ["Вибрано"] }, "Smileys & Emotion": { v: ["Смайли та емоції"] }, Symbols: { v: ["Символи"] }, "Travel & Places": { v: ["Поїздки та місця"] } } }, { l: "ur_PK", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "uz", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "vi", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }, { l: "zh_CN", t: { Activities: { v: ["活动"] }, "Animals & Nature": { v: ["动物 & 自然"] }, "Clear search": { v: [""] }, Custom: { v: ["自定义"] }, Flags: { v: ["旗帜"] }, "Food & Drink": { v: ["食物 & 饮品"] }, "Frequently used": { v: ["经常使用"] }, Objects: { v: ["物体"] }, "People & Body": { v: ["人 & 身体"] }, "Pick an emoji": { v: ["选择一个表情"] }, "Search emoji": { v: [""] }, "Search results": { v: ["搜索结果"] }, "Smileys & Emotion": { v: ["笑脸 & 情感"] }, Symbols: { v: ["符号"] }, "Travel & Places": { v: ["旅游 & 地点"] } } }, { l: "zh_HK", t: { Activities: { v: ["活動"] }, "Animals & Nature": { v: ["動物與自然"] }, "Clear search": { v: ["清除搜索"] }, Custom: { v: ["自定義"] }, Flags: { v: ["旗幟"] }, "Food & Drink": { v: ["食物與飲料"] }, "Frequently used": { v: ["經常使用"] }, Objects: { v: ["物件"] }, "People & Body": { v: ["人物"] }, "Pick an emoji": { v: ["選擇表情符號"] }, "Search emoji": { v: ["搜尋表情符號"] }, "Search results": { v: ["搜尋結果"] }, Selected: { v: ["已選"] }, "Smileys & Emotion": { v: ["表情"] }, Symbols: { v: ["標誌"] }, "Travel & Places": { v: ["旅遊與景點"] } } }, { l: "zh_TW", t: { Activities: { v: ["活動"] }, "Animals & Nature": { v: ["動物與自然"] }, "Clear search": { v: ["清除搜尋"] }, Custom: { v: ["自定義"] }, Flags: { v: ["旗幟"] }, "Food & Drink": { v: ["食物與飲料"] }, "Frequently used": { v: ["最近使用"] }, Objects: { v: ["物件"] }, "People & Body": { v: ["人物"] }, "Pick an emoji": { v: ["選擇表情符號"] }, "Search emoji": { v: ["搜尋表情符號"] }, "Search results": { v: ["搜尋結果"] }, Selected: { v: ["已選取"] }, "Smileys & Emotion": { v: ["表情"] }, Symbols: { v: ["標誌"] }, "Travel & Places": { v: ["旅遊與景點"] } } }, { l: "zu_ZA", t: { Activities: { v: [""] }, "Animals & Nature": { v: [""] }, "Clear search": { v: [""] }, Custom: { v: [""] }, Flags: { v: [""] }, "Food & Drink": { v: [""] }, "Frequently used": { v: [""] }, Objects: { v: [""] }, "People & Body": { v: [""] }, "Pick an emoji": { v: [""] }, "Search emoji": { v: [""] }, "Search results": { v: [""] }, "Smileys & Emotion": { v: [""] }, Symbols: { v: [""] }, "Travel & Places": { v: [""] } } }], S = [{ l: "af", t: { "Any link": { v: [""] } } }, { l: "ar", t: { "Any link": { v: ["أيَّ رابطٍ"] } } }, { l: "ast", t: { "Any link": { v: ["Cualesquier enllaz"] } } }, { l: "az", t: { "Any link": { v: [""] } } }, { l: "be", t: { "Any link": { v: [""] } } }, { l: "bg", t: { "Any link": { v: [""] } } }, { l: "bn_BD", t: { "Any link": { v: [""] } } }, { l: "br", t: { "Any link": { v: [""] } } }, { l: "bs", t: { "Any link": { v: [""] } } }, { l: "ca", t: { "Any link": { v: [""] } } }, { l: "cs", t: { "Any link": { v: ["Jakýkoli odkaz"] } } }, { l: "cs_CZ", t: { "Any link": { v: ["Jakýkoli odkaz"] } } }, { l: "cy_GB", t: { "Any link": { v: [""] } } }, { l: "da", t: { "Any link": { v: ["Ethvert link"] } } }, { l: "de", t: { "Any link": { v: ["Irgendein Link"] } } }, { l: "de_DE", t: { "Any link": { v: ["Irgendein Link"] } } }, { l: "el", t: { "Any link": { v: [""] } } }, { l: "en_GB", t: { "Any link": { v: ["Any link"] } } }, { l: "eo", t: { "Any link": { v: [""] } } }, { l: "es", t: { "Any link": { v: ["Cualquier enlace"] } } }, { l: "es_419", t: { "Any link": { v: [""] } } }, { l: "es_AR", t: { "Any link": { v: [""] } } }, { l: "es_CL", t: { "Any link": { v: [""] } } }, { l: "es_CO", t: { "Any link": { v: [""] } } }, { l: "es_CR", t: { "Any link": { v: [""] } } }, { l: "es_DO", t: { "Any link": { v: [""] } } }, { l: "es_EC", t: { "Any link": { v: ["Cualquier enlace"] } } }, { l: "es_GT", t: { "Any link": { v: [""] } } }, { l: "es_HN", t: { "Any link": { v: [""] } } }, { l: "es_MX", t: { "Any link": { v: [""] } } }, { l: "es_NI", t: { "Any link": { v: [""] } } }, { l: "es_PA", t: { "Any link": { v: [""] } } }, { l: "es_PE", t: { "Any link": { v: [""] } } }, { l: "es_PR", t: { "Any link": { v: [""] } } }, { l: "es_PY", t: { "Any link": { v: [""] } } }, { l: "es_SV", t: { "Any link": { v: [""] } } }, { l: "es_UY", t: { "Any link": { v: [""] } } }, { l: "et_EE", t: { "Any link": { v: [""] } } }, { l: "eu", t: { "Any link": { v: ["Edozein esteka"] } } }, { l: "fa", t: { "Any link": { v: [""] } } }, { l: "fi", t: { "Any link": { v: [""] } } }, { l: "fo", t: { "Any link": { v: [""] } } }, { l: "fr", t: { "Any link": { v: ["N'importe quel lien"] } } }, { l: "gd", t: { "Any link": { v: [""] } } }, { l: "gl", t: { "Any link": { v: ["Calquera ligazón"] } } }, { l: "he", t: { "Any link": { v: ["קישור כלשהו"] } } }, { l: "hi_IN", t: { "Any link": { v: [""] } } }, { l: "hr", t: { "Any link": { v: [""] } } }, { l: "hsb", t: { "Any link": { v: [""] } } }, { l: "hu", t: { "Any link": { v: [""] } } }, { l: "hy", t: { "Any link": { v: [""] } } }, { l: "ia", t: { "Any link": { v: [""] } } }, { l: "id", t: { "Any link": { v: ["Semua tautan"] } } }, { l: "ig", t: { "Any link": { v: [""] } } }, { l: "is", t: { "Any link": { v: ["Einhver tengill"] } } }, { l: "it", t: { "Any link": { v: ["Qualsiasi link"] } } }, { l: "ja", t: { "Any link": { v: [""] } } }, { l: "ka", t: { "Any link": { v: [""] } } }, { l: "ka_GE", t: { "Any link": { v: [""] } } }, { l: "kab", t: { "Any link": { v: [""] } } }, { l: "kk", t: { "Any link": { v: [""] } } }, { l: "km", t: { "Any link": { v: [""] } } }, { l: "kn", t: { "Any link": { v: [""] } } }, { l: "ko", t: { "Any link": { v: [""] } } }, { l: "la", t: { "Any link": { v: [""] } } }, { l: "lb", t: { "Any link": { v: [""] } } }, { l: "lo", t: { "Any link": { v: [""] } } }, { l: "lt_LT", t: { "Any link": { v: [""] } } }, { l: "lv", t: { "Any link": { v: [""] } } }, { l: "mk", t: { "Any link": { v: [""] } } }, { l: "mn", t: { "Any link": { v: [""] } } }, { l: "mr", t: { "Any link": { v: [""] } } }, { l: "ms_MY", t: { "Any link": { v: [""] } } }, { l: "my", t: { "Any link": { v: [""] } } }, { l: "nb", t: { "Any link": { v: [""] } } }, { l: "ne", t: { "Any link": { v: [""] } } }, { l: "nl", t: { "Any link": { v: ["Elke link"] } } }, { l: "nn_NO", t: { "Any link": { v: [""] } } }, { l: "oc", t: { "Any link": { v: [""] } } }, { l: "pl", t: { "Any link": { v: ["Dowolny link"] } } }, { l: "ps", t: { "Any link": { v: [""] } } }, { l: "pt_BR", t: { "Any link": { v: ["Qualquer link"] } } }, { l: "pt_PT", t: { "Any link": { v: ["Qualquer link"] } } }, { l: "ro", t: { "Any link": { v: ["Orice link"] } } }, { l: "ru", t: { "Any link": { v: ["Любая ссылка"] } } }, { l: "sc", t: { "Any link": { v: [""] } } }, { l: "si", t: { "Any link": { v: [""] } } }, { l: "sk", t: { "Any link": { v: [""] } } }, { l: "sl", t: { "Any link": { v: [""] } } }, { l: "sq", t: { "Any link": { v: [""] } } }, { l: "sr", t: { "Any link": { v: ["Било који линк"] } } }, { l: "sr@latin", t: { "Any link": { v: [""] } } }, { l: "sv", t: { "Any link": { v: ["Vilken länk som helst"] } } }, { l: "sw", t: { "Any link": { v: [""] } } }, { l: "ta", t: { "Any link": { v: [""] } } }, { l: "th", t: { "Any link": { v: [""] } } }, { l: "tk", t: { "Any link": { v: [""] } } }, { l: "tr", t: { "Any link": { v: ["Herhangi bir bağlantı"] } } }, { l: "ug", t: { "Any link": { v: [""] } } }, { l: "uk", t: { "Any link": { v: ["Будь-яке посилання"] } } }, { l: "ur_PK", t: { "Any link": { v: [""] } } }, { l: "uz", t: { "Any link": { v: [""] } } }, { l: "vi", t: { "Any link": { v: [""] } } }, { l: "zh_CN", t: { "Any link": { v: [""] } } }, { l: "zh_HK", t: { "Any link": { v: ["任何連結"] } } }, { l: "zh_TW", t: { "Any link": { v: ["任何連結"] } } }, { l: "zu_ZA", t: { "Any link": { v: [""] } } }], b = [{ l: "af", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ar", t: { "Anything shared with the same group of people will show up here": { v: ["أيّ مادة تمت مشاركتها مع نفس المجموعة من الأشخاص سيتم عرضها هنا"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["خطأ في الحصول على الموارد ذات الصلة. يرجى الاتصال بمشرف النظام عندك إذا كان لديك أيّ أسئلة."] }, "Related resources": { v: ["مصادر ذات صلة"] } } }, { l: "ast", t: { "Anything shared with the same group of people will show up here": { v: ["Equí va apaecer tolo que compartas col mesmu grupu de persones"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Hebo un error al consiguir los recursos rellacionaos. Ponte en contautu col alministrador del sistema si tienes dalguna entruga."] }, "Related resources": { v: ["Recursos rellacionao"] } } }, { l: "az", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "be", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "bg", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "bn_BD", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "br", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "bs", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ca", t: { "Anything shared with the same group of people will show up here": { v: ["Qualsevol cosa compartida amb el mateix grup de persones es mostrarà aquí"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["Recursos relacionats"] } } }, { l: "cs", t: { "Anything shared with the same group of people will show up here": { v: ["Cokoli nasdíleného stejné skupině lidí se zobrazí zde"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Chyba při získávání souvisejících prostředků. Pokud máte jakékoli dotazy, obraťte se na správce vámi využívaného systému."] }, "Related resources": { v: ["Související prostředky"] } } }, { l: "cs_CZ", t: { "Anything shared with the same group of people will show up here": { v: ["Cokoli nasdíleného stejné skupině lidí se zobrazí zde"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Chyba při získávání souvisejících prostředků. Pokud máte jakékoli dotazy, obraťte se na správce vámi využívaného systému."] }, "Related resources": { v: ["Související prostředky"] } } }, { l: "cy_GB", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "da", t: { "Anything shared with the same group of people will show up here": { v: ["Alt der deles med samme gruppe af personer vil vises her"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Fejl ved hentning af relaterede ressourcer. Kontakt venligst din systemadministrator, hvis du har spørgsmål."] }, "Related resources": { v: ["Relaterede emner"] } } }, { l: "de", t: { "Anything shared with the same group of people will show up here": { v: ["Alles, das mit derselben Gruppe von Personen geteilt wird, wird hier angezeigt"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Fehler beim Abrufen verwandter Ressourcen. Bei Fragen wende dich bitte an deinen Systemadministrator."] }, "Related resources": { v: ["Verwandte Ressourcen"] } } }, { l: "de_DE", t: { "Anything shared with the same group of people will show up here": { v: ["Alles, das mit derselben Gruppe von Personen geteilt wird, wird hier angezeigt"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Fehler beim Abrufen verwandter Ressourcen. Bei Fragen wenden Sie sich bitte an Ihre Systemadministration."] }, "Related resources": { v: ["Verwandte Ressourcen"] } } }, { l: "el", t: { "Anything shared with the same group of people will show up here": { v: ["Οτιδήποτε μοιράζεται με την ίδια ομάδα ατόμων θα εμφανίζεται εδώ"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["Σχετικοί πόροι"] } } }, { l: "en_GB", t: { "Anything shared with the same group of people will show up here": { v: ["Anything shared with the same group of people will show up here"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Error getting related resources. Please contact your system administrator if you have any questions."] }, "Related resources": { v: ["Related resources"] } } }, { l: "eo", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es", t: { "Anything shared with the same group of people will show up here": { v: ["Cualquier cosa que esté compartida con el mismo grupo de personas se mostrará aquí"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Error al obtener recursos relacionados. Por favor, contacte a su administrador del sistema si tiene alguna pregunta."] }, "Related resources": { v: ["Recursos relacionados"] } } }, { l: "es_419", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_AR", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_CL", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_CO", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_CR", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_DO", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_EC", t: { "Anything shared with the same group of people will show up here": { v: ["Cualquier cosa compartida con el mismo grupo de personas aparecerá aquí."] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Error al obtener recursos relacionados. Por favor, contacta a tu administrador del sistema si tienes alguna pregunta."] }, "Related resources": { v: ["Recursos relacionados"] } } }, { l: "es_GT", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_HN", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_MX", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_NI", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_PA", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_PE", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_PR", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_PY", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_SV", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "es_UY", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "et_EE", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "eu", t: { "Anything shared with the same group of people will show up here": { v: ["Pertsona-talde berarekin partekatutako edozer agertuko da hemen"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Errore bat gertatu da erlazionatutako baliabideak eskuratzean. Jarri harremanetan zure sistemaren administratzailearekin galderarik baduzu."] }, "Related resources": { v: ["Erlazionatutako baliabideak"] } } }, { l: "fa", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "fi", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "fo", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "fr", t: { "Anything shared with the same group of people will show up here": { v: ["Tout ce qui est partagé avec le même groupe de personnes apparaîtra ici"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Erreur lors de la récupération des ressources liées. Contactez votre administrateur système pour répondre à vos éventuelles questions."] }, "Related resources": { v: ["Ressources liées"] } } }, { l: "gd", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "gl", t: { "Anything shared with the same group of people will show up here": { v: ["Todo o que se comparta co mesmo grupo de persoas aparecerá aquí"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Produciuse un erro ao obter os recursos relacionados. Póñase en contacto coa administración do seu sistema se ten algunha dúbida."] }, "Related resources": { v: ["Recursos relacionados"] } } }, { l: "he", t: { "Anything shared with the same group of people will show up here": { v: ["כל מה שמשותף עם אותה קבוצת האנשים יופיע כאן"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["שגיאה בקבלת המשאבים הקשורים. נא ליצור קשר עם הנהלת המערכת אם יש לך שאלות."] }, "Related resources": { v: ["משאבים קשורים"] } } }, { l: "hi_IN", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "hr", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "hsb", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "hu", t: { "Anything shared with the same group of people will show up here": { v: ["Minden, amit ugyanazzal a csoporttal oszt meg, itt fog megjelenni"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["Kapcsolódó erőforrások"] } } }, { l: "hy", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ia", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "id", t: { "Anything shared with the same group of people will show up here": { v: ["Apa pun yang dibagikan dengan grup orang yang sama akan muncul di sini"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Kesalahan saat mengambil sumber daya terkait. Hubungi administrator sistem Anda jika ada pertanyaan."] }, "Related resources": { v: ["Sumber daya terkait"] } } }, { l: "ig", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "is", t: { "Anything shared with the same group of people will show up here": { v: ["Allt sem deilt er með sama hópi fólks mun birtast hér"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Villa við að sækja tengd tilföng. Hafðu samband við kerfisstjórann þinn ef þú ert með einhverjar spurningar."] }, "Related resources": { v: ["Tengd tilföng"] } } }, { l: "it", t: { "Anything shared with the same group of people will show up here": { v: ["Tutto ciò che è stato condiviso con lo stesso gruppo di persone viene visualizzato qui"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Errore nell'ottenere le risorse correlate. Per qualsiasi domanda, contattare l'amministratore di sistema."] }, "Related resources": { v: ["Risorse correlate"] } } }, { l: "ja", t: { "Anything shared with the same group of people will show up here": { v: ["同じグループで共有しているものは、全てここに表示されます"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["関連リソース"] } } }, { l: "ka", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ka_GE", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "kab", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "kk", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "km", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "kn", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ko", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "la", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "lb", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "lo", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "lt_LT", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "lv", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "mk", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "mn", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "mr", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ms_MY", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "my", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "nb", t: { "Anything shared with the same group of people will show up here": { v: ["Alt som er delt med den samme gruppen vil vises her"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["Relaterte ressurser"] } } }, { l: "ne", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "nl", t: { "Anything shared with the same group of people will show up here": { v: ["Alles dat gedeeld is met dezelfde groep mensen zal hier getoond worden"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Fout bij het verkrijgen van resources. Neem a.u.b. contact op met uw systeembeheerder als u vragen heeft."] }, "Related resources": { v: ["Gerelateerde bronnen"] } } }, { l: "nn_NO", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "oc", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "pl", t: { "Anything shared with the same group of people will show up here": { v: ["Tutaj pojawi się wszystko, co zostało udostępnione tej samej grupie osób"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Błąd podczas pobierania powiązanych zasobów. Jeśli masz jakiekolwiek pytania, skontaktuj się z administratorem systemu."] }, "Related resources": { v: ["Powiązane zasoby"] } } }, { l: "ps", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "pt_BR", t: { "Anything shared with the same group of people will show up here": { v: ["Qualquer coisa compartilhada com o mesmo grupo de pessoas aparecerá aqui"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Erro ao obter recursos relacionados. Por favor entre em contato com o administrador do sistema se tiver alguma dúvida."] }, "Related resources": { v: ["Recursos relacionados"] } } }, { l: "pt_PT", t: { "Anything shared with the same group of people will show up here": { v: ["Qualquer coisa compartilhada com o mesmo grupo de pessoas aparecerá aqui"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Erro em obter info relacionadas. Por favor contacte o administrador do sistema para esclarecimentos adicionais."] }, "Related resources": { v: ["Recursos relacionados"] } } }, { l: "ro", t: { "Anything shared with the same group of people will show up here": { v: ["Tot ceea ce este partajat cu același grup de persoane va fi afișat aici"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Eroare la preluarea resurselor adiționale. Vă rugăm să contactați administratorul pentru întrebări."] }, "Related resources": { v: ["Resurse legate"] } } }, { l: "ru", t: { "Anything shared with the same group of people will show up here": { v: ["Всё, чем поделились с той же группой людей, будет отображаться здесь"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Ошибка при получении связанных ресурсов. Если у вас есть какие-либо вопросы, обратитесь к системному администратору."] }, "Related resources": { v: ["Связанные ресурсы"] } } }, { l: "sc", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "si", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "sk", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "sl", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["Povezani viri"] } } }, { l: "sq", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "sr", t: { "Anything shared with the same group of people will show up here": { v: ["Све што се дели са истом групом људи ће се појавити овде"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Грешка код прибављања везаних ресурса. Молимо вас да се обратите администратору ако имате питања."] }, "Related resources": { v: ["Повезани ресурси"] } } }, { l: "sr@latin", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "sv", t: { "Anything shared with the same group of people will show up here": { v: ["Något som delats med samma grupp av personer kommer att visas här"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Det gick inte att hämta relaterade resurser. Kontakta din systemadministratör om du har några frågor."] }, "Related resources": { v: ["Relaterade resurser"] } } }, { l: "sw", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "ta", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "th", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "tk", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "tr", t: { "Anything shared with the same group of people will show up here": { v: ["Aynı kişi grubu ile paylaşılan herşey burada görüntülenir"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["İlgili kaynaklara ulaşılırken sorun çıktı. Herhangi bir sorunuz varsa lütfen sistem yöneticiniz ile görüşün "] }, "Related resources": { v: ["İlgili kaynaklar"] } } }, { l: "ug", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "uk", t: { "Anything shared with the same group of people will show up here": { v: ["Будь-що доступне для цієї же групи людей буде показано тут"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["Помилка під час отримання пов'язаних ресурсів. Будь ласка, сконтактуйте з системним адміністратором, якщо у вас виникли запитання."] }, "Related resources": { v: ["Пов'язані ресурси"] } } }, { l: "ur_PK", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "uz", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "vi", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }, { l: "zh_CN", t: { "Anything shared with the same group of people will show up here": { v: ["与同组用户分享的所有内容都会显示于此"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: ["相关资源"] } } }, { l: "zh_HK", t: { "Anything shared with the same group of people will show up here": { v: ["與同一組人共享的任何內容都會顯示在此處"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["取得相關資源時發生錯誤。如果有任何問題，請聯絡系統管理員。"] }, "Related resources": { v: ["相關資源"] } } }, { l: "zh_TW", t: { "Anything shared with the same group of people will show up here": { v: ["與相同群組分享的所有內容都會顯示於此"] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: ["取得相關資源時發生錯誤。如果有任何問題，請聯絡系統管理員。"] }, "Related resources": { v: ["相關資源"] } } }, { l: "zu_ZA", t: { "Anything shared with the same group of people will show up here": { v: [""] }, "Error getting related resources. Please contact your system administrator if you have any questions.": { v: [""] }, "Related resources": { v: [""] } } }], f = [{ l: "af", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ar", t: { "Avatar of {displayName}": { v: ["الرمز التجسيدي avatar لــ {displayName}  "] }, "Avatar of {displayName}, {status}": { v: ["الرمز التجسيدي  avatar لــ {displayName}، {status}"] } } }, { l: "ast", t: { "Avatar of {displayName}": { v: ["Avatar de: {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de: {displayName}, {status}"] } } }, { l: "az", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "be", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "bg", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "bn_BD", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "br", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "bs", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ca", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "cs", t: { "Avatar of {displayName}": { v: ["Zástupný obrázek uživatele {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Zástupný obrázek uživatele {displayName}, {status}"] } } }, { l: "cs_CZ", t: { "Avatar of {displayName}": { v: ["Zástupný obrázek uživatele {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Zástupný obrázek uživatele {displayName}, {status}"] } } }, { l: "cy_GB", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "da", t: { "Avatar of {displayName}": { v: ["Avatar af {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar af {displayName}, {status}"] } } }, { l: "de", t: { "Avatar of {displayName}": { v: ["Avatar von {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar von {displayName}, {status}"] } } }, { l: "de_DE", t: { "Avatar of {displayName}": { v: ["Avatar von {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar von {displayName}, {status}"] } } }, { l: "el", t: { "Avatar of {displayName}": { v: ["Άβαταρ του {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Άβαταρ του {displayName}, {status}"] } } }, { l: "en_GB", t: { "Avatar of {displayName}": { v: ["Avatar of {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar of {displayName}, {status}"] } } }, { l: "eo", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "es_419", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_AR", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_CL", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_CO", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_CR", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_DO", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_EC", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "es_GT", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_HN", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_MX", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_NI", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_PA", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_PE", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_PR", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_PY", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_SV", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "es_UY", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "et_EE", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "eu", t: { "Avatar of {displayName}": { v: ["{displayName}-(e)n irudia"] }, "Avatar of {displayName}, {status}": { v: ["{displayName} -(e)n irudia, {status}"] } } }, { l: "fa", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "fi", t: { "Avatar of {displayName}": { v: ["Käyttäjän {displayName} avatar"] }, "Avatar of {displayName}, {status}": { v: ["Käyttäjän {displayName} avatar, {status}"] } } }, { l: "fo", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "fr", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "gd", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "gl", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "he", t: { "Avatar of {displayName}": { v: ["תמונה ייצוגית של {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["תמונה ייצוגית של {displayName}, {status}"] } } }, { l: "hi_IN", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "hr", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "hsb", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "hu", t: { "Avatar of {displayName}": { v: ["{displayName} profilképe"] }, "Avatar of {displayName}, {status}": { v: ["{displayName} profilképe, {status}"] } } }, { l: "hy", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ia", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "id", t: { "Avatar of {displayName}": { v: ["Avatar {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar {displayName}, {status}"] } } }, { l: "ig", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "is", t: { "Avatar of {displayName}": { v: ["Auðkennismynd fyrir {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Auðkennismynd fyrir {displayName}, {status}"] } } }, { l: "it", t: { "Avatar of {displayName}": { v: ["Avatar di {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar di {displayName}, {status}"] } } }, { l: "ja", t: { "Avatar of {displayName}": { v: ["{displayName} のアバター"] }, "Avatar of {displayName}, {status}": { v: ["{displayName}, {status} のアバター"] } } }, { l: "ka", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ka_GE", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "kab", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "kk", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "km", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "kn", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ko", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "la", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "lb", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "lo", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "lt_LT", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "lv", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "mk", t: { "Avatar of {displayName}": { v: ["Аватар на {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Аватар на {displayName}, {status}"] } } }, { l: "mn", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "mr", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ms_MY", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "my", t: { "Avatar of {displayName}": { v: ["{displayName} ၏ ကိုယ်ပွား"] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "nb", t: { "Avatar of {displayName}": { v: ["Avataren til {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["{displayName}'s avatar, {status}"] } } }, { l: "ne", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "nl", t: { "Avatar of {displayName}": { v: ["Avatar van {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar van {displayName}, {status}"] } } }, { l: "nn_NO", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "oc", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "pl", t: { "Avatar of {displayName}": { v: ["Awatar {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Awatar {displayName}, {status}"] } } }, { l: "ps", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "pt_BR", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "pt_PT", t: { "Avatar of {displayName}": { v: ["Avatar de {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar de {displayName}, {status}"] } } }, { l: "ro", t: { "Avatar of {displayName}": { v: ["Avatarul lui {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatarul lui {displayName}, {status}"] } } }, { l: "ru", t: { "Avatar of {displayName}": { v: ["Аватар {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Фотография {displayName}, {status}"] } } }, { l: "sc", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "si", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "sk", t: { "Avatar of {displayName}": { v: ["Avatar {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar {displayName}, {status}"] } } }, { l: "sl", t: { "Avatar of {displayName}": { v: ["Podoba {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Prikazna slika {displayName}, {status}"] } } }, { l: "sq", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "sr", t: { "Avatar of {displayName}": { v: ["Аватар за {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Avatar za {displayName}, {status}"] } } }, { l: "sr@latin", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "sv", t: { "Avatar of {displayName}": { v: ["{displayName}s avatar"] }, "Avatar of {displayName}, {status}": { v: ["{displayName}s avatar, {status}"] } } }, { l: "sw", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "ta", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "th", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "tk", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "tr", t: { "Avatar of {displayName}": { v: ["{displayName} avatarı"] }, "Avatar of {displayName}, {status}": { v: ["{displayName}, {status} avatarı"] } } }, { l: "ug", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "uk", t: { "Avatar of {displayName}": { v: ["Аватар {displayName}"] }, "Avatar of {displayName}, {status}": { v: ["Аватар {displayName}, {status}"] } } }, { l: "ur_PK", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "uz", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "vi", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }, { l: "zh_CN", t: { "Avatar of {displayName}": { v: ["{displayName}的头像"] }, "Avatar of {displayName}, {status}": { v: ["{displayName}的头像，{status}"] } } }, { l: "zh_HK", t: { "Avatar of {displayName}": { v: ["{displayName} 的頭像"] }, "Avatar of {displayName}, {status}": { v: ["{displayName} 的頭像，{status}"] } } }, { l: "zh_TW", t: { "Avatar of {displayName}": { v: ["{displayName} 的大頭照"] }, "Avatar of {displayName}, {status}": { v: ["{displayName}, {status} 的大頭照"] } } }, { l: "zu_ZA", t: { "Avatar of {displayName}": { v: [""] }, "Avatar of {displayName}, {status}": { v: [""] } } }], C = [{ l: "af", t: {} }, { l: "ar", t: { away: { v: ["غير موجود"] }, busy: { v: ["مشغول"] }, "do not disturb": { v: ["يُرجى عدم الإزعاج"] }, invisible: { v: ["غير مرئي"] }, offline: { v: ["غير متصل"] }, online: { v: ["مُتّصِلٌ"] } } }, { l: "ast", t: { away: { v: ["ausente"] }, busy: { v: ["ocupáu"] }, "do not disturb": { v: ["nun molestar"] }, invisible: { v: ["invisible"] }, offline: { v: ["desconectáu"] }, online: { v: ["en llinia"] } } }, { l: "az", t: {} }, { l: "be", t: {} }, { l: "bg", t: {} }, { l: "bn_BD", t: {} }, { l: "br", t: {} }, { l: "bs", t: {} }, { l: "ca", t: {} }, { l: "cs", t: {} }, { l: "cs_CZ", t: { away: { v: ["pryč"] }, busy: { v: ["zaneprádněn(a)"] }, "do not disturb": { v: ["nerušit"] }, invisible: { v: ["neviditelné"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "cy_GB", t: {} }, { l: "da", t: { away: { v: ["væk"] }, busy: { v: ["optaget"] }, "do not disturb": { v: ["forstyr ikke"] }, invisible: { v: ["usynlig"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "de", t: { away: { v: ["Abwesend"] }, busy: { v: ["Beschäftigt"] }, "do not disturb": { v: ["Bitte nicht stören"] }, invisible: { v: ["Unsichtbar"] }, offline: { v: ["Offline"] }, online: { v: ["Online"] } } }, { l: "de_DE", t: { away: { v: ["Abwesend"] }, busy: { v: ["Beschäftigt"] }, "do not disturb": { v: ["Bitte nicht stören"] }, invisible: { v: ["Unsichtbar"] }, offline: { v: ["Offline"] }, online: { v: ["Online"] } } }, { l: "el", t: {} }, { l: "en_GB", t: { away: { v: ["away"] }, busy: { v: ["busy"] }, "do not disturb": { v: ["do not disturb"] }, invisible: { v: ["invisible"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "eo", t: {} }, { l: "es", t: { away: { v: ["ausente"] }, busy: { v: ["ocupado"] }, "do not disturb": { v: ["no molestar"] }, invisible: { v: ["invisible"] }, offline: { v: ["fuera de línea"] }, online: { v: ["en línea"] } } }, { l: "es_419", t: {} }, { l: "es_AR", t: {} }, { l: "es_CL", t: {} }, { l: "es_CO", t: {} }, { l: "es_CR", t: {} }, { l: "es_DO", t: {} }, { l: "es_EC", t: {} }, { l: "es_GT", t: {} }, { l: "es_HN", t: {} }, { l: "es_MX", t: {} }, { l: "es_NI", t: {} }, { l: "es_PA", t: {} }, { l: "es_PE", t: {} }, { l: "es_PR", t: {} }, { l: "es_PY", t: {} }, { l: "es_SV", t: {} }, { l: "es_UY", t: {} }, { l: "et_EE", t: {} }, { l: "eu", t: {} }, { l: "fa", t: {} }, { l: "fi", t: {} }, { l: "fo", t: {} }, { l: "fr", t: { away: { v: ["absent"] }, "do not disturb": { v: ["ne pas déranger"] }, offline: { v: ["hors ligne"] }, online: { v: ["en ligne"] } } }, { l: "gd", t: {} }, { l: "gl", t: { away: { v: ["ausente"] }, busy: { v: ["ocupado"] }, "do not disturb": { v: ["non molestar"] }, invisible: { v: ["invisíbel"] }, offline: { v: ["desconectado"] }, online: { v: ["conectado"] } } }, { l: "he", t: {} }, { l: "hi_IN", t: {} }, { l: "hr", t: {} }, { l: "hsb", t: {} }, { l: "hu", t: {} }, { l: "hy", t: {} }, { l: "ia", t: {} }, { l: "id", t: { away: { v: ["tidak tersedia"] }, "do not disturb": { v: ["jangan ganggu"] }, offline: { v: ["luring"] }, online: { v: ["daring"] } } }, { l: "ig", t: {} }, { l: "is", t: { away: { v: ["í burtu"] }, "do not disturb": { v: ["ekki ónáða"] }, offline: { v: ["ónettengt"] }, online: { v: ["nettengt"] } } }, { l: "it", t: { away: { v: ["via"] }, "do not disturb": { v: ["non disturbare"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "ja", t: {} }, { l: "ka", t: {} }, { l: "ka_GE", t: {} }, { l: "kab", t: {} }, { l: "kk", t: {} }, { l: "km", t: {} }, { l: "kn", t: {} }, { l: "ko", t: {} }, { l: "la", t: {} }, { l: "lb", t: {} }, { l: "lo", t: {} }, { l: "lt_LT", t: {} }, { l: "lv", t: {} }, { l: "mk", t: {} }, { l: "mn", t: {} }, { l: "mr", t: {} }, { l: "ms_MY", t: {} }, { l: "my", t: {} }, { l: "nb", t: {} }, { l: "ne", t: {} }, { l: "nl", t: { away: { v: ["weg"] }, "do not disturb": { v: ["niet storen"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "nn_NO", t: {} }, { l: "oc", t: {} }, { l: "pl", t: { away: { v: ["stąd"] }, "do not disturb": { v: ["nie przeszkadzać"] }, invisible: { v: ["niewidzialny"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "ps", t: {} }, { l: "pt_BR", t: { away: { v: ["ausente"] }, busy: { v: ["ocupado"] }, "do not disturb": { v: ["não perturbe"] }, invisible: { v: ["invisível"] }, offline: { v: ["desligada"] }, online: { v: ["ligado"] } } }, { l: "pt_PT", t: {} }, { l: "ro", t: { away: { v: ["plecat"] }, "do not disturb": { v: ["nu deranjați"] }, offline: { v: ["deconectat"] }, online: { v: ["online"] } } }, { l: "ru", t: { away: { v: ["отсутствие"] }, "do not disturb": { v: ["не беспокоить"] }, offline: { v: ["офлайн"] }, online: { v: ["онлайн"] } } }, { l: "sc", t: {} }, { l: "si", t: {} }, { l: "sk", t: {} }, { l: "sl", t: {} }, { l: "sq", t: {} }, { l: "sr", t: { away: { v: ["одсутан"] }, busy: { v: ["заузет"] }, "do not disturb": { v: ["не узнемиравај"] }, invisible: { v: ["невидљиво"] }, offline: { v: ["ван мреже"] }, online: { v: ["на мрежи"] } } }, { l: "sr@latin", t: {} }, { l: "sv", t: { away: { v: ["borta"] }, busy: { v: ["upptagen"] }, "do not disturb": { v: ["stör ej"] }, invisible: { v: ["osynlig"] }, offline: { v: ["offline"] }, online: { v: ["online"] } } }, { l: "sw", t: {} }, { l: "ta", t: {} }, { l: "th", t: {} }, { l: "tk", t: {} }, { l: "tr", t: { away: { v: ["Uzakta"] }, busy: { v: ["meşgul"] }, "do not disturb": { v: ["Rahatsız etmeyin"] }, invisible: { v: ["görünmez"] }, offline: { v: ["Çevrim dışı"] }, online: { v: ["Çevrim içi"] } } }, { l: "ug", t: {} }, { l: "uk", t: { away: { v: ["відсутній"] }, "do not disturb": { v: ["не турбувати"] }, offline: { v: ["не в мережі"] }, online: { v: ["в мережі"] } } }, { l: "ur_PK", t: {} }, { l: "uz", t: {} }, { l: "vi", t: {} }, { l: "zh_CN", t: {} }, { l: "zh_HK", t: { away: { v: ["離開"] }, "do not disturb": { v: ["請勿打擾"] }, offline: { v: ["離線"] }, online: { v: ["在線"] } } }, { l: "zh_TW", t: {} }, { l: "zu_ZA", t: {} }], w = [{ l: "af", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ar", t: { "Back to provider selection": { v: ["عودة إلى اختيار المُزوِّد"] }, "Close Smart Picker": { v: ["أغلِق اللاقط الذكي Smart Picker"] }, "Smart Picker": { v: ["اللاقط الذكي smart picker"] } } }, { l: "ast", t: { "Back to provider selection": { v: ["Volver a la seleición de fornidores"] }, "Close Smart Picker": { v: ["Zarrar la seleición intelixente"] }, "Smart Picker": { v: ["Selector intelixente"] } } }, { l: "az", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "be", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "bg", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "bn_BD", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "br", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "bs", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ca", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "cs", t: { "Back to provider selection": { v: ["Zpět na výběr poskytovatele"] }, "Close Smart Picker": { v: ["Zavřít inteligentní výběr"] }, "Smart Picker": { v: ["Inteligentní výběr"] } } }, { l: "cs_CZ", t: { "Back to provider selection": { v: ["Zpět na výběr poskytovatele"] }, "Close Smart Picker": { v: ["Zavřít inteligentní výběr"] }, "Smart Picker": { v: ["Inteligentní výběr"] } } }, { l: "cy_GB", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "da", t: { "Back to provider selection": { v: ["Tilbage til udbydervalg"] }, "Close Smart Picker": { v: ["Luk Smart Vælger"] }, "Smart Picker": { v: ["Smart Vælger"] } } }, { l: "de", t: { "Back to provider selection": { v: ["Zurück zur Anbieterauswahl"] }, "Close Smart Picker": { v: ["Smart Picker schließen"] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "de_DE", t: { "Back to provider selection": { v: ["Zurück zur Anbieterauswahl"] }, "Close Smart Picker": { v: ["Smart Picker schließen"] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "el", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "en_GB", t: { "Back to provider selection": { v: ["Back to provider selection"] }, "Close Smart Picker": { v: ["Close Smart Picker"] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "eo", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es", t: { "Back to provider selection": { v: ["Volver a la selección de proveedor"] }, "Close Smart Picker": { v: ["Cerrar selector inteligente"] }, "Smart Picker": { v: ["Selector inteligente"] } } }, { l: "es_419", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_AR", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_CL", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_CO", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_CR", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_DO", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_EC", t: { "Back to provider selection": { v: ["Volver a la selección de proveedor"] }, "Close Smart Picker": { v: ["Cerrar selector inteligente"] }, "Smart Picker": { v: ["Selector inteligente"] } } }, { l: "es_GT", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_HN", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_MX", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_NI", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_PA", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_PE", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_PR", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_PY", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_SV", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "es_UY", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "et_EE", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "eu", t: { "Back to provider selection": { v: ["Itzuli hornitzaileen hautapenera"] }, "Close Smart Picker": { v: ["Itxi hautatzaile adimenduna"] }, "Smart Picker": { v: ["Hautatzaile adimenduna"] } } }, { l: "fa", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "fi", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "fo", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "fr", t: { "Back to provider selection": { v: ["Revenir à la sélection du fournisseur"] }, "Close Smart Picker": { v: ["Fermer le sélecteur intelligent"] }, "Smart Picker": { v: ["Sélecteur intelligent"] } } }, { l: "gd", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "gl", t: { "Back to provider selection": { v: ["Volver á selección do provedor"] }, "Close Smart Picker": { v: ["Pechar o Selector intelixente"] }, "Smart Picker": { v: ["Selector intelixente"] } } }, { l: "he", t: { "Back to provider selection": { v: ["חזרה לבחירת ספק"] }, "Close Smart Picker": { v: ["סגירת הבורר החכם"] }, "Smart Picker": { v: ["בורר חכם"] } } }, { l: "hi_IN", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "hr", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "hsb", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "hu", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "hy", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ia", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "id", t: { "Back to provider selection": { v: ["Kembali ke pemilihan penyedia"] }, "Close Smart Picker": { v: ["Tutup Pemilih Cerdas"] }, "Smart Picker": { v: ["Pemilih Cerdas"] } } }, { l: "ig", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "is", t: { "Back to provider selection": { v: ["Til baka í val á þjónustuveitu"] }, "Close Smart Picker": { v: ["Loka snjall-veljara"] }, "Smart Picker": { v: ["Snjall-veljari"] } } }, { l: "it", t: { "Back to provider selection": { v: ["Torna alla selezione del provider"] }, "Close Smart Picker": { v: ["Chiudere lo Smart Picker"] }, "Smart Picker": { v: ["Picker intelligente"] } } }, { l: "ja", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ka", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ka_GE", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "kab", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "kk", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "km", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "kn", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ko", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "la", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "lb", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "lo", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "lt_LT", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "lv", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "mk", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "mn", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "mr", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ms_MY", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "my", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "nb", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ne", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "nl", t: { "Back to provider selection": { v: ["Terug naar provider selectie"] }, "Close Smart Picker": { v: ["Sluit Slimme Kiezer"] }, "Smart Picker": { v: ["Slimme Kiezer"] } } }, { l: "nn_NO", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "oc", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "pl", t: { "Back to provider selection": { v: ["Powrót do wyboru dostawcy"] }, "Close Smart Picker": { v: ["Zamknij inteligentny selektor"] }, "Smart Picker": { v: ["Inteligentny Picker"] } } }, { l: "ps", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "pt_BR", t: { "Back to provider selection": { v: ["Voltar para seleção de provedor"] }, "Close Smart Picker": { v: ["Fechar Seletor Inteligente"] }, "Smart Picker": { v: ["Seletor Inteligente"] } } }, { l: "pt_PT", t: { "Back to provider selection": { v: ["Voltar à seleção de fornecedor"] }, "Close Smart Picker": { v: ['Fechar "Smart Picker"'] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "ro", t: { "Back to provider selection": { v: ["Înapoi la selecția providerului"] }, "Close Smart Picker": { v: ["Închide Smart Picker"] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "ru", t: { "Back to provider selection": { v: ["Вернуться к выбору провайдера"] }, "Close Smart Picker": { v: ["Закрыть интеллектуальный выбор"] }, "Smart Picker": { v: ["Умный выбор"] } } }, { l: "sc", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "si", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "sk", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "sl", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "sq", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "sr", t: { "Back to provider selection": { v: ["Назад на избор пружаоца"] }, "Close Smart Picker": { v: ["Затвори паметни бирач"] }, "Smart Picker": { v: ["Паметни бирач"] } } }, { l: "sr@latin", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "sv", t: { "Back to provider selection": { v: ["Tillbaka till leverantörsval"] }, "Close Smart Picker": { v: ["Stäng Smart Picker"] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "sw", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "ta", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "th", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "tk", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "tr", t: { "Back to provider selection": { v: ["Sağlayıcı seçimine dön"] }, "Close Smart Picker": { v: ["Akıllı seçimi kapat"] }, "Smart Picker": { v: ["Akıllı seçim"] } } }, { l: "ug", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "uk", t: { "Back to provider selection": { v: ["Назад до вибору постачальника"] }, "Close Smart Picker": { v: ["Закрити асистент вибору"] }, "Smart Picker": { v: ["Асистент вибору"] } } }, { l: "ur_PK", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "uz", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "vi", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "zh_CN", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }, { l: "zh_HK", t: { "Back to provider selection": { v: ["回到提供者選擇"] }, "Close Smart Picker": { v: ["關閉 Smart Picker"] }, "Smart Picker": { v: ["Smart Picker"] } } }, { l: "zh_TW", t: { "Back to provider selection": { v: ["回到提供者選擇"] }, "Close Smart Picker": { v: ["關閉智慧型挑選器"] }, "Smart Picker": { v: ["智慧型挑選器"] } } }, { l: "zu_ZA", t: { "Back to provider selection": { v: [""] }, "Close Smart Picker": { v: [""] }, "Smart Picker": { v: [""] } } }], _ = [{ l: "af", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ar", t: { "Cancel changes": { v: ["إلغاء التغييرات"] }, "Confirm changes": { v: ["تأكيد التغييرات"] } } }, { l: "ast", t: { "Cancel changes": { v: ["Encaboxar los cambeos"] }, "Confirm changes": { v: ["Confirmar los cambeos"] } } }, { l: "az", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "be", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "bg", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "bn_BD", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "br", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "bs", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ca", t: { "Cancel changes": { v: ["Cancel·la els canvis"] }, "Confirm changes": { v: ["Confirmeu els canvis"] } } }, { l: "cs", t: { "Cancel changes": { v: ["Zrušit změny"] }, "Confirm changes": { v: ["Potvrdit změny"] } } }, { l: "cs_CZ", t: { "Cancel changes": { v: ["Zrušit změny"] }, "Confirm changes": { v: ["Potvrdit změny"] } } }, { l: "cy_GB", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "da", t: { "Cancel changes": { v: ["Annuller ændringer"] }, "Confirm changes": { v: ["Bekræft ændringer"] } } }, { l: "de", t: { "Cancel changes": { v: ["Änderungen verwerfen"] }, "Confirm changes": { v: ["Änderungen bestätigen"] } } }, { l: "de_DE", t: { "Cancel changes": { v: ["Änderungen verwerfen"] }, "Confirm changes": { v: ["Änderungen bestätigen"] } } }, { l: "el", t: { "Cancel changes": { v: ["Ακύρωση αλλαγών"] }, "Confirm changes": { v: ["Επιβεβαίωση αλλαγών"] } } }, { l: "en_GB", t: { "Cancel changes": { v: ["Cancel changes"] }, "Confirm changes": { v: ["Confirm changes"] } } }, { l: "eo", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es", t: { "Cancel changes": { v: ["Cancelar cambios"] }, "Confirm changes": { v: ["Confirmar cambios"] } } }, { l: "es_419", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_AR", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_CL", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_CO", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_CR", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_DO", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_EC", t: { "Cancel changes": { v: ["Cancelar cambios"] }, "Confirm changes": { v: ["Confirmar cambios"] } } }, { l: "es_GT", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_HN", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_MX", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_NI", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_PA", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_PE", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_PR", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_PY", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_SV", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "es_UY", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "et_EE", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "eu", t: { "Cancel changes": { v: ["Ezeztatu aldaketak"] }, "Confirm changes": { v: ["Baieztatu aldaketak"] } } }, { l: "fa", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "fi", t: { "Cancel changes": { v: ["Peruuta muutokset"] }, "Confirm changes": { v: ["Vahvista muutokset"] } } }, { l: "fo", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "fr", t: { "Cancel changes": { v: ["Annuler les modifications"] }, "Confirm changes": { v: ["Confirmer les modifications"] } } }, { l: "gd", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "gl", t: { "Cancel changes": { v: ["Cancelar os cambios"] }, "Confirm changes": { v: ["Confirma os cambios"] } } }, { l: "he", t: { "Cancel changes": { v: ["ביטול שינויים"] }, "Confirm changes": { v: ["אישור השינויים"] } } }, { l: "hi_IN", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "hr", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "hsb", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "hu", t: { "Cancel changes": { v: ["Változtatások elvetése"] }, "Confirm changes": { v: ["Változtatások megerősítése"] } } }, { l: "hy", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ia", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "id", t: { "Cancel changes": { v: ["Batalkan perubahan"] }, "Confirm changes": { v: ["Konfirmasikan perubahan"] } } }, { l: "ig", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "is", t: { "Cancel changes": { v: ["Hætta við breytingar"] }, "Confirm changes": { v: ["Staðfesta breytingar"] } } }, { l: "it", t: { "Cancel changes": { v: ["Annulla modifiche"] }, "Confirm changes": { v: ["Conferma modifiche"] } } }, { l: "ja", t: { "Cancel changes": { v: ["変更をキャンセル"] }, "Confirm changes": { v: ["変更を承認"] } } }, { l: "ka", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ka_GE", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "kab", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "kk", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "km", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "kn", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ko", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "la", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "lb", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "lo", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "lt_LT", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "lv", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "mk", t: { "Cancel changes": { v: ["Откажи ги промените"] }, "Confirm changes": { v: ["Потврди ги промените"] } } }, { l: "mn", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "mr", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ms_MY", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "my", t: { "Cancel changes": { v: ["ပြောင်းလဲမှုများ ပယ်ဖျက်ရန်"] }, "Confirm changes": { v: ["ပြောင်းလဲမှုများ အတည်ပြုရန်"] } } }, { l: "nb", t: { "Cancel changes": { v: ["Avbryt endringer"] }, "Confirm changes": { v: ["Bekreft endringer"] } } }, { l: "ne", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "nl", t: { "Cancel changes": { v: ["Wijzigingen annuleren"] }, "Confirm changes": { v: ["Wijzigingen bevestigen"] } } }, { l: "nn_NO", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "oc", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "pl", t: { "Cancel changes": { v: ["Anuluj zmiany"] }, "Confirm changes": { v: ["Potwierdź zmiany"] } } }, { l: "ps", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "pt_BR", t: { "Cancel changes": { v: ["Cancelar alterações"] }, "Confirm changes": { v: ["Confirmar alterações"] } } }, { l: "pt_PT", t: { "Cancel changes": { v: ["Cancelar alterações"] }, "Confirm changes": { v: ["Confirmar alterações"] } } }, { l: "ro", t: { "Cancel changes": { v: ["Anulează modificările"] }, "Confirm changes": { v: ["Confirmați modificările"] } } }, { l: "ru", t: { "Cancel changes": { v: ["Отменить изменения"] }, "Confirm changes": { v: ["Подтвердить изменения"] } } }, { l: "sc", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "si", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "sk", t: { "Cancel changes": { v: ["Zrušiť zmeny"] }, "Confirm changes": { v: ["Potvrdiť zmeny"] } } }, { l: "sl", t: { "Cancel changes": { v: ["Prekliči spremembe"] }, "Confirm changes": { v: ["Potrdi spremembe"] } } }, { l: "sq", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "sr", t: { "Cancel changes": { v: ["Откажи измене"] }, "Confirm changes": { v: ["Потврдите измене"] } } }, { l: "sr@latin", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "sv", t: { "Cancel changes": { v: ["Avbryt ändringar"] }, "Confirm changes": { v: ["Bekräfta ändringar"] } } }, { l: "sw", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "ta", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "th", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "tk", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "tr", t: { "Cancel changes": { v: ["Değişiklikleri iptal et"] }, "Confirm changes": { v: ["Değişiklikleri onayla"] } } }, { l: "ug", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "uk", t: { "Cancel changes": { v: ["Скасувати зміни"] }, "Confirm changes": { v: ["Підтвердити зміни"] } } }, { l: "ur_PK", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "uz", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "vi", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }, { l: "zh_CN", t: { "Cancel changes": { v: ["取消更改"] }, "Confirm changes": { v: ["确认更改"] } } }, { l: "zh_HK", t: { "Cancel changes": { v: ["取消更改"] }, "Confirm changes": { v: ["確認更改"] } } }, { l: "zh_TW", t: { "Cancel changes": { v: ["取消變更"] }, "Confirm changes": { v: ["確認變更"] } } }, { l: "zu_ZA", t: { "Cancel changes": { v: [""] }, "Confirm changes": { v: [""] } } }], N = [{ l: "af", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ar", t: { "Change name": { v: ["تغيير الاسم"] }, "Close sidebar": { v: ["قفل الشريط الجانبي"] }, Favorite: { v: ["المُفضَّلة"] } } }, { l: "ast", t: { "Change name": { v: ["Camudar el nome"] }, "Close sidebar": { v: ["Zarrar la barra llateral"] }, Favorite: { v: ["Favoritu"] } } }, { l: "az", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "be", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "bg", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "bn_BD", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "br", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "bs", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ca", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["Tancar la barra lateral"] }, Favorite: { v: ["Preferit"] } } }, { l: "cs", t: { "Change name": { v: ["Změnit název"] }, "Close sidebar": { v: ["Zavřít postranní panel"] }, Favorite: { v: ["Oblíbené"] } } }, { l: "cs_CZ", t: { "Change name": { v: ["Změnit název"] }, "Close sidebar": { v: ["Zavřít postranní panel"] }, Favorite: { v: ["Oblíbené"] } } }, { l: "cy_GB", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "da", t: { "Change name": { v: ["Ændre navn"] }, "Close sidebar": { v: ["Luk sidepanel"] }, Favorite: { v: ["Favorit"] } } }, { l: "de", t: { "Change name": { v: ["Namen ändern"] }, "Close sidebar": { v: ["Seitenleiste schließen"] }, Favorite: { v: ["Favorit"] } } }, { l: "de_DE", t: { "Change name": { v: ["Namen ändern"] }, "Close sidebar": { v: ["Seitenleiste schließen"] }, Favorite: { v: ["Favorit"] } } }, { l: "el", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["Κλείσιμο πλευρικής μπάρας"] }, Favorite: { v: ["Αγαπημένα"] } } }, { l: "en_GB", t: { "Change name": { v: ["Change name"] }, "Close sidebar": { v: ["Close sidebar"] }, Favorite: { v: ["Favourite"] } } }, { l: "eo", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es", t: { "Change name": { v: ["Cambiar nombre"] }, "Close sidebar": { v: ["Cerrar barra lateral"] }, Favorite: { v: ["Favorito"] } } }, { l: "es_419", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_AR", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_CL", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_CO", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_CR", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_DO", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_EC", t: { "Change name": { v: ["Cambiar nombre"] }, "Close sidebar": { v: ["Cerrar barra lateral"] }, Favorite: { v: ["Favorito"] } } }, { l: "es_GT", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_HN", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_MX", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_NI", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_PA", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_PE", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_PR", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_PY", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_SV", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "es_UY", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "et_EE", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "eu", t: { "Change name": { v: ["Aldatu izena"] }, "Close sidebar": { v: ["Itxi albo-barra"] }, Favorite: { v: ["Gogokoa"] } } }, { l: "fa", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "fi", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "fo", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "fr", t: { "Change name": { v: ["Modifier le nom"] }, "Close sidebar": { v: ["Fermer la barre latérale"] }, Favorite: { v: ["Favori"] } } }, { l: "gd", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "gl", t: { "Change name": { v: ["Cambiar o nome"] }, "Close sidebar": { v: ["Pechar a barra lateral"] }, Favorite: { v: ["Favorito"] } } }, { l: "he", t: { "Change name": { v: ["החלפת שם"] }, "Close sidebar": { v: ["סגירת סרגל הצד"] }, Favorite: { v: ["למועדפים"] } } }, { l: "hi_IN", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "hr", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "hsb", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "hu", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["Oldalsáv bezárása"] }, Favorite: { v: ["Kedvenc"] } } }, { l: "hy", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ia", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "id", t: { "Change name": { v: ["Ubah nama"] }, "Close sidebar": { v: ["Tutup bilah sisi"] }, Favorite: { v: ["Favorit"] } } }, { l: "ig", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "is", t: { "Change name": { v: ["Breyta nafni"] }, "Close sidebar": { v: ["Loka hliðarstiku"] }, Favorite: { v: ["Eftirlæti"] } } }, { l: "it", t: { "Change name": { v: ["Cambia nome"] }, "Close sidebar": { v: ["Chiudi la barra laterale"] }, Favorite: { v: ["Preferito"] } } }, { l: "ja", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["サイドバーを閉じる"] }, Favorite: { v: ["お気に入り"] } } }, { l: "ka", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ka_GE", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "kab", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "kk", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "km", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "kn", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ko", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "la", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "lb", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "lo", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "lt_LT", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "lv", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "mk", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: ["Фаворити"] } } }, { l: "mn", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "mr", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ms_MY", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "my", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "nb", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["Lukk sidepanel"] }, Favorite: { v: ["Favoritt"] } } }, { l: "ne", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "nl", t: { "Change name": { v: ["Verander naam"] }, "Close sidebar": { v: ["Sluit sidebar"] }, Favorite: { v: ["Favoriet"] } } }, { l: "nn_NO", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "oc", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "pl", t: { "Change name": { v: ["Zmień nazwę"] }, "Close sidebar": { v: ["Zamknij pasek boczny"] }, Favorite: { v: ["Ulubiony"] } } }, { l: "ps", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "pt_BR", t: { "Change name": { v: ["Mude o nome"] }, "Close sidebar": { v: ["Fechar barra lateral"] }, Favorite: { v: ["Favorito"] } } }, { l: "pt_PT", t: { "Change name": { v: ["Alterar nome"] }, "Close sidebar": { v: ["Fechar barra lateral"] }, Favorite: { v: ["Favorito"] } } }, { l: "ro", t: { "Change name": { v: ["Modifică numele"] }, "Close sidebar": { v: ["Închide bara laterală"] }, Favorite: { v: ["Favorit"] } } }, { l: "ru", t: { "Change name": { v: ["Изменить имя"] }, "Close sidebar": { v: ["Закрыть сайдбар"] }, Favorite: { v: ["Избранное"] } } }, { l: "sc", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "si", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "sk", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "sl", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["Zapri stransko vrstico"] }, Favorite: { v: ["Priljubljeno"] } } }, { l: "sq", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "sr", t: { "Change name": { v: ["Измени назив"] }, "Close sidebar": { v: ["Затвори бочну траку"] }, Favorite: { v: ["Омиљени"] } } }, { l: "sr@latin", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "sv", t: { "Change name": { v: ["Ändra namn"] }, "Close sidebar": { v: ["Stäng sidopanel"] }, Favorite: { v: ["Favorit"] } } }, { l: "sw", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "ta", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "th", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "tk", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "tr", t: { "Change name": { v: ["Adı değiştir"] }, "Close sidebar": { v: ["Yan çubuğu kapat"] }, Favorite: { v: ["Sık kullanılanlara ekle"] } } }, { l: "ug", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "uk", t: { "Change name": { v: ["Змінити назву"] }, "Close sidebar": { v: ["Закрити бічну панель"] }, Favorite: { v: ["Із зірочкою"] } } }, { l: "ur_PK", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "uz", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "vi", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }, { l: "zh_CN", t: { "Change name": { v: [""] }, "Close sidebar": { v: ["关闭侧边栏"] }, Favorite: { v: ["喜爱"] } } }, { l: "zh_HK", t: { "Change name": { v: ["更改名稱"] }, "Close sidebar": { v: ["關閉側邊欄"] }, Favorite: { v: ["喜愛"] } } }, { l: "zh_TW", t: { "Change name": { v: ["變更名稱"] }, "Close sidebar": { v: ["關閉側邊欄"] }, Favorite: { v: ["最愛"] } } }, { l: "zu_ZA", t: { "Change name": { v: [""] }, "Close sidebar": { v: [""] }, Favorite: { v: [""] } } }], A = [{ l: "af", t: { "No results": { v: [""] } } }, { l: "ar", t: { "Clear selected": { v: ["مَحْوُ المُحدّد"] }, "Deselect {option}": { v: ["إلغاء تحديد {option}"] }, "No results": { v: ["ليس هناك أية نتيجة"] }, Options: { v: ["خيارات"] } } }, { l: "ast", t: { "Clear selected": { v: ["Borrar lo seleicionao"] }, "Deselect {option}": { v: ["Deseleicionar «{option}»"] }, "No results": { v: ["Nun hai nengún resultáu"] }, Options: { v: ["Opciones"] } } }, { l: "az", t: { "No results": { v: [""] } } }, { l: "be", t: { "No results": { v: [""] } } }, { l: "bg", t: { "No results": { v: [""] } } }, { l: "bn_BD", t: { "No results": { v: [""] } } }, { l: "br", t: { "No results": { v: ["Disoc'h ebet"] } } }, { l: "bs", t: { "No results": { v: [""] } } }, { l: "ca", t: { "No results": { v: ["Sense resultats"] } } }, { l: "cs", t: { "No results": { v: ["Nic nenalezeno"] } } }, { l: "cs_CZ", t: { "Clear selected": { v: ["Vyčistit vybrané"] }, "Deselect {option}": { v: ["Zrušit výběr {option}"] }, "No results": { v: ["Nic nenalezeno"] }, Options: { v: ["Možnosti"] } } }, { l: "cy_GB", t: { "No results": { v: [""] } } }, { l: "da", t: { "Clear selected": { v: ["Ryd valgt"] }, "Deselect {option}": { v: ["Fravælg {option}"] }, "No results": { v: ["Ingen resultater"] }, Options: { v: ["Indstillinger"] } } }, { l: "de", t: { "Clear selected": { v: ["Auswahl leeren"] }, "Deselect {option}": { v: ["{option} abwählen"] }, "No results": { v: ["Keine Ergebnisse"] }, Options: { v: ["Optionen"] } } }, { l: "de_DE", t: { "Clear selected": { v: ["Auswahl leeren"] }, "Deselect {option}": { v: ["{option} abwählen"] }, "No results": { v: ["Keine Ergebnisse"] }, Options: { v: ["Optionen"] } } }, { l: "el", t: { "No results": { v: ["Κανένα αποτέλεσμα"] } } }, { l: "en_GB", t: { "Clear selected": { v: ["Clear selected"] }, "Deselect {option}": { v: ["Deselect {option}"] }, "No results": { v: ["No results"] }, Options: { v: ["Options"] } } }, { l: "eo", t: { "No results": { v: ["La rezulto forestas"] } } }, { l: "es", t: { "Clear selected": { v: ["Limpiar selección"] }, "Deselect {option}": { v: ["Deseleccionar {option}"] }, "No results": { v: [" Ningún resultado"] }, Options: { v: ["Opciones"] } } }, { l: "es_419", t: { "No results": { v: [""] } } }, { l: "es_AR", t: { "No results": { v: [""] } } }, { l: "es_CL", t: { "No results": { v: [""] } } }, { l: "es_CO", t: { "No results": { v: [""] } } }, { l: "es_CR", t: { "No results": { v: [""] } } }, { l: "es_DO", t: { "No results": { v: [""] } } }, { l: "es_EC", t: { "No results": { v: ["Sin resultados"] } } }, { l: "es_GT", t: { "No results": { v: [""] } } }, { l: "es_HN", t: { "No results": { v: [""] } } }, { l: "es_MX", t: { "No results": { v: [""] } } }, { l: "es_NI", t: { "No results": { v: [""] } } }, { l: "es_PA", t: { "No results": { v: [""] } } }, { l: "es_PE", t: { "No results": { v: [""] } } }, { l: "es_PR", t: { "No results": { v: [""] } } }, { l: "es_PY", t: { "No results": { v: [""] } } }, { l: "es_SV", t: { "No results": { v: [""] } } }, { l: "es_UY", t: { "No results": { v: [""] } } }, { l: "et_EE", t: { "No results": { v: [""] } } }, { l: "eu", t: { "No results": { v: ["Emaitzarik ez"] } } }, { l: "fa", t: { "No results": { v: [""] } } }, { l: "fi", t: { "No results": { v: ["Ei tuloksia"] } } }, { l: "fo", t: { "No results": { v: [""] } } }, { l: "fr", t: { "Clear selected": { v: ["Vider la sélection"] }, "Deselect {option}": { v: ["Désélectionner {option}"] }, "No results": { v: ["Aucun résultat"] } } }, { l: "gd", t: { "No results": { v: [""] } } }, { l: "gl", t: { "Clear selected": { v: ["Limpar o seleccionado"] }, "Deselect {option}": { v: ["Desmarcar {opción}"] }, "No results": { v: ["Sen resultados"] }, Options: { v: ["Opcións"] } } }, { l: "he", t: { "No results": { v: ["אין תוצאות"] } } }, { l: "hi_IN", t: { "No results": { v: [""] } } }, { l: "hr", t: { "No results": { v: [""] } } }, { l: "hsb", t: { "No results": { v: [""] } } }, { l: "hu", t: { "No results": { v: ["Nincs találat"] } } }, { l: "hy", t: { "No results": { v: [""] } } }, { l: "ia", t: { "No results": { v: [""] } } }, { l: "id", t: { "Clear selected": { v: ["Hapus terpilih"] }, "Deselect {option}": { v: ["Batalkan pemilihan {option}"] }, "No results": { v: ["Tidak ada hasil"] } } }, { l: "ig", t: { "No results": { v: [""] } } }, { l: "is", t: { "Clear selected": { v: ["Hreinsa valið"] }, "Deselect {option}": { v: ["Afvelja {option}"] }, "No results": { v: ["Engar niðurstöður"] } } }, { l: "it", t: { "Clear selected": { v: ["Cancella selezionati"] }, "Deselect {option}": { v: ["Deselezionare {option}"] }, "No results": { v: ["Nessun risultato"] } } }, { l: "ja", t: { "No results": { v: ["なし"] } } }, { l: "ka", t: { "No results": { v: [""] } } }, { l: "ka_GE", t: { "No results": { v: [""] } } }, { l: "kab", t: { "No results": { v: [""] } } }, { l: "kk", t: { "No results": { v: [""] } } }, { l: "km", t: { "No results": { v: [""] } } }, { l: "kn", t: { "No results": { v: [""] } } }, { l: "ko", t: { "No results": { v: [""] } } }, { l: "la", t: { "No results": { v: [""] } } }, { l: "lb", t: { "No results": { v: [""] } } }, { l: "lo", t: { "No results": { v: [""] } } }, { l: "lt_LT", t: { "No results": { v: ["Nėra rezultatų"] } } }, { l: "lv", t: { "No results": { v: ["Nav rezultātu"] } } }, { l: "mk", t: { "No results": { v: ["Нема резултати"] } } }, { l: "mn", t: { "No results": { v: [""] } } }, { l: "mr", t: { "No results": { v: [""] } } }, { l: "ms_MY", t: { "No results": { v: [""] } } }, { l: "my", t: { "No results": { v: ["ရလဒ်မရှိပါ"] } } }, { l: "nb", t: { "No results": { v: ["Ingen resultater"] } } }, { l: "ne", t: { "No results": { v: [""] } } }, { l: "nl", t: { "No results": { v: ["Geen resultaten"] } } }, { l: "nn_NO", t: { "No results": { v: [""] } } }, { l: "oc", t: { "No results": { v: ["Cap de resultat"] } } }, { l: "pl", t: { "Clear selected": { v: ["Wyczyść wybrane"] }, "Deselect {option}": { v: ["Odznacz {option}"] }, "No results": { v: ["Brak wyników"] }, Options: { v: ["Opcje"] } } }, { l: "ps", t: { "No results": { v: [""] } } }, { l: "pt_BR", t: { "Clear selected": { v: ["Limpar selecionado"] }, "Deselect {option}": { v: ["Desmarque {option}"] }, "No results": { v: ["Sem resultados"] }, Options: { v: ["Opções"] } } }, { l: "pt_PT", t: { "No results": { v: ["Sem resultados"] } } }, { l: "ro", t: { "Clear selected": { v: ["Șterge selecția"] }, "Deselect {option}": { v: ["Deselctează {option}"] }, "No results": { v: ["Nu există rezultate"] } } }, { l: "ru", t: { "No results": { v: ["Результаты отсуствуют"] } } }, { l: "sc", t: { "No results": { v: [""] } } }, { l: "si", t: { "No results": { v: [""] } } }, { l: "sk", t: { "No results": { v: ["Žiadne výsledky"] } } }, { l: "sl", t: { "No results": { v: ["Ni zadetkov"] } } }, { l: "sq", t: { "No results": { v: [""] } } }, { l: "sr", t: { "Clear selected": { v: ["Обриши изабрано"] }, "Deselect {option}": { v: ["Уклони избор {option}"] }, "No results": { v: ["Нема резултата"] }, Options: { v: ["Опције"] } } }, { l: "sr@latin", t: { "No results": { v: [""] } } }, { l: "sv", t: { "Clear selected": { v: ["Rensa val"] }, "Deselect {option}": { v: ["Avmarkera {option}"] }, "No results": { v: ["Inga resultat"] }, Options: { v: ["Alternativ"] } } }, { l: "sw", t: { "No results": { v: [""] } } }, { l: "ta", t: { "No results": { v: [""] } } }, { l: "th", t: { "No results": { v: [""] } } }, { l: "tk", t: { "No results": { v: [""] } } }, { l: "tr", t: { "Clear selected": { v: ["Seçilmişleri temizle"] }, "Deselect {option}": { v: ["{option} bırak"] }, "No results": { v: ["Herhangi bir sonuç bulunamadı"] }, Options: { v: ["Seçenekler"] } } }, { l: "ug", t: { "No results": { v: [""] } } }, { l: "uk", t: { "Clear selected": { v: ["Очистити вибране"] }, "Deselect {option}": { v: ["Зняти вибір {option}"] }, "No results": { v: ["Відсутні результати"] } } }, { l: "ur_PK", t: { "No results": { v: [""] } } }, { l: "uz", t: { "No results": { v: [""] } } }, { l: "vi", t: { "No results": { v: [""] } } }, { l: "zh_CN", t: { "No results": { v: ["无结果"] } } }, { l: "zh_HK", t: { "No results": { v: ["無結果"] } } }, { l: "zh_TW", t: { "No results": { v: ["無結果"] } } }, { l: "zu_ZA", t: { "No results": { v: [""] } } }], E = [{ l: "af", t: { "Clear text": { v: [""] } } }, { l: "ar", t: { "Clear text": { v: ["مَحْوُ النص"] }, "Save changes": { v: ["حفظ التغييرات"] } } }, { l: "ast", t: { "Clear text": { v: ["Borrar el testu"] }, "Save changes": { v: ["Guardar los cambeos"] } } }, { l: "az", t: { "Clear text": { v: [""] } } }, { l: "be", t: { "Clear text": { v: [""] } } }, { l: "bg", t: { "Clear text": { v: [""] } } }, { l: "bn_BD", t: { "Clear text": { v: [""] } } }, { l: "br", t: { "Clear text": { v: [""] } } }, { l: "bs", t: { "Clear text": { v: [""] } } }, { l: "ca", t: { "Clear text": { v: ["Netejar text"] } } }, { l: "cs", t: { "Clear text": { v: ["Čitelný text"] } } }, { l: "cs_CZ", t: { "Clear text": { v: ["Čitelný text"] }, "Save changes": { v: ["Uložit změny"] } } }, { l: "cy_GB", t: { "Clear text": { v: [""] } } }, { l: "da", t: { "Clear text": { v: ["Ryd tekst"] }, "Save changes": { v: ["Gem ændringer"] } } }, { l: "de", t: { "Clear text": { v: ["Klartext"] }, "Save changes": { v: ["Änderungen speichern"] } } }, { l: "de_DE", t: { "Clear text": { v: ["Klartext"] }, "Save changes": { v: ["Änderungen speichern"] } } }, { l: "el", t: { "Clear text": { v: ["Εκκαθάριση κειμένου"] } } }, { l: "en_GB", t: { "Clear text": { v: ["Clear text"] }, "Save changes": { v: ["Save changes"] } } }, { l: "eo", t: { "Clear text": { v: [""] } } }, { l: "es", t: { "Clear text": { v: ["Limpiar texto"] }, "Save changes": { v: ["Guardar cambios"] } } }, { l: "es_419", t: { "Clear text": { v: [""] } } }, { l: "es_AR", t: { "Clear text": { v: [""] } } }, { l: "es_CL", t: { "Clear text": { v: [""] } } }, { l: "es_CO", t: { "Clear text": { v: [""] } } }, { l: "es_CR", t: { "Clear text": { v: [""] } } }, { l: "es_DO", t: { "Clear text": { v: [""] } } }, { l: "es_EC", t: { "Clear text": { v: ["Limpiar texto"] } } }, { l: "es_GT", t: { "Clear text": { v: [""] } } }, { l: "es_HN", t: { "Clear text": { v: [""] } } }, { l: "es_MX", t: { "Clear text": { v: [""] } } }, { l: "es_NI", t: { "Clear text": { v: [""] } } }, { l: "es_PA", t: { "Clear text": { v: [""] } } }, { l: "es_PE", t: { "Clear text": { v: [""] } } }, { l: "es_PR", t: { "Clear text": { v: [""] } } }, { l: "es_PY", t: { "Clear text": { v: [""] } } }, { l: "es_SV", t: { "Clear text": { v: [""] } } }, { l: "es_UY", t: { "Clear text": { v: [""] } } }, { l: "et_EE", t: { "Clear text": { v: [""] } } }, { l: "eu", t: { "Clear text": { v: ["Garbitu testua"] } } }, { l: "fa", t: { "Clear text": { v: [""] } } }, { l: "fi", t: { "Clear text": { v: [""] } } }, { l: "fo", t: { "Clear text": { v: [""] } } }, { l: "fr", t: { "Clear text": { v: ["Effacer le texte"] }, "Save changes": { v: ["Sauvegarder les changements"] } } }, { l: "gd", t: { "Clear text": { v: [""] } } }, { l: "gl", t: { "Clear text": { v: ["Limpar o texto"] }, "Save changes": { v: ["Gardar os cambios"] } } }, { l: "he", t: { "Clear text": { v: ["פינוי טקסט"] } } }, { l: "hi_IN", t: { "Clear text": { v: [""] } } }, { l: "hr", t: { "Clear text": { v: [""] } } }, { l: "hsb", t: { "Clear text": { v: [""] } } }, { l: "hu", t: { "Clear text": { v: ["Szöveg törlése"] } } }, { l: "hy", t: { "Clear text": { v: [""] } } }, { l: "ia", t: { "Clear text": { v: [""] } } }, { l: "id", t: { "Clear text": { v: ["Bersihkan teks"] }, "Save changes": { v: ["Simpan perubahan"] } } }, { l: "ig", t: { "Clear text": { v: [""] } } }, { l: "is", t: { "Clear text": { v: ["Hreinsa texta"] }, "Save changes": { v: ["Vista breytingar"] } } }, { l: "it", t: { "Clear text": { v: ["Cancella il testo"] }, "Save changes": { v: ["Salva le modifiche"] } } }, { l: "ja", t: { "Clear text": { v: ["テキストをクリア"] } } }, { l: "ka", t: { "Clear text": { v: [""] } } }, { l: "ka_GE", t: { "Clear text": { v: [""] } } }, { l: "kab", t: { "Clear text": { v: [""] } } }, { l: "kk", t: { "Clear text": { v: [""] } } }, { l: "km", t: { "Clear text": { v: [""] } } }, { l: "kn", t: { "Clear text": { v: [""] } } }, { l: "ko", t: { "Clear text": { v: [""] } } }, { l: "la", t: { "Clear text": { v: [""] } } }, { l: "lb", t: { "Clear text": { v: [""] } } }, { l: "lo", t: { "Clear text": { v: [""] } } }, { l: "lt_LT", t: { "Clear text": { v: [""] } } }, { l: "lv", t: { "Clear text": { v: [""] } } }, { l: "mk", t: { "Clear text": { v: [""] } } }, { l: "mn", t: { "Clear text": { v: [""] } } }, { l: "mr", t: { "Clear text": { v: [""] } } }, { l: "ms_MY", t: { "Clear text": { v: [""] } } }, { l: "my", t: { "Clear text": { v: [""] } } }, { l: "nb", t: { "Clear text": { v: ["Fjern tekst"] } } }, { l: "ne", t: { "Clear text": { v: [""] } } }, { l: "nl", t: { "Clear text": { v: ["Wis tekst"] } } }, { l: "nn_NO", t: { "Clear text": { v: [""] } } }, { l: "oc", t: { "Clear text": { v: [""] } } }, { l: "pl", t: { "Clear text": { v: ["Wyczyść tekst"] }, "Save changes": { v: ["Zapisz zmiany"] } } }, { l: "ps", t: { "Clear text": { v: [""] } } }, { l: "pt_BR", t: { "Clear text": { v: ["Limpar texto"] }, "Save changes": { v: ["Salvar alterações"] } } }, { l: "pt_PT", t: { "Clear text": { v: ["Limpar texto"] } } }, { l: "ro", t: { "Clear text": { v: ["Șterge textul"] }, "Save changes": { v: ["Salvează modificările"] } } }, { l: "ru", t: { "Clear text": { v: ["Очистить текст"] } } }, { l: "sc", t: { "Clear text": { v: [""] } } }, { l: "si", t: { "Clear text": { v: [""] } } }, { l: "sk", t: { "Clear text": { v: [""] } } }, { l: "sl", t: { "Clear text": { v: ["Počisti besedilo"] } } }, { l: "sq", t: { "Clear text": { v: [""] } } }, { l: "sr", t: { "Clear text": { v: ["Обриши текст"] }, "Save changes": { v: ["Сачувај измене"] } } }, { l: "sr@latin", t: { "Clear text": { v: [""] } } }, { l: "sv", t: { "Clear text": { v: ["Ta bort text"] }, "Save changes": { v: ["Spara ändringar"] } } }, { l: "sw", t: { "Clear text": { v: [""] } } }, { l: "ta", t: { "Clear text": { v: [""] } } }, { l: "th", t: { "Clear text": { v: [""] } } }, { l: "tk", t: { "Clear text": { v: [""] } } }, { l: "tr", t: { "Clear text": { v: ["Metni temizle"] }, "Save changes": { v: ["Değişiklikleri kaydet"] } } }, { l: "ug", t: { "Clear text": { v: [""] } } }, { l: "uk", t: { "Clear text": { v: ["Очистити текст"] }, "Save changes": { v: ["Зберегти зміни"] } } }, { l: "ur_PK", t: { "Clear text": { v: [""] } } }, { l: "uz", t: { "Clear text": { v: [""] } } }, { l: "vi", t: { "Clear text": { v: [""] } } }, { l: "zh_CN", t: { "Clear text": { v: ["清除文本"] } } }, { l: "zh_HK", t: { "Clear text": { v: ["清除文本"] } } }, { l: "zh_TW", t: { "Clear text": { v: ["清除文字"] } } }, { l: "zu_ZA", t: { "Clear text": { v: [""] } } }], z = [{ l: "af", t: { Close: { v: [""] } } }, { l: "ar", t: { Close: { v: ["أغلِق"] } } }, { l: "ast", t: { Close: { v: ["Zarrar"] } } }, { l: "az", t: { Close: { v: [""] } } }, { l: "be", t: { Close: { v: [""] } } }, { l: "bg", t: { Close: { v: [""] } } }, { l: "bn_BD", t: { Close: { v: [""] } } }, { l: "br", t: { Close: { v: ["Serriñ"] } } }, { l: "bs", t: { Close: { v: [""] } } }, { l: "ca", t: { Close: { v: ["Tanca"] } } }, { l: "cs", t: { Close: { v: ["Zavřít"] } } }, { l: "cs_CZ", t: { Close: { v: ["Zavřít"] } } }, { l: "cy_GB", t: { Close: { v: [""] } } }, { l: "da", t: { Close: { v: ["Luk"] } } }, { l: "de", t: { Close: { v: ["Schließen"] } } }, { l: "de_DE", t: { Close: { v: ["Schließen"] } } }, { l: "el", t: { Close: { v: ["Κλείσιμο"] } } }, { l: "en_GB", t: { Close: { v: ["Close"] } } }, { l: "eo", t: { Close: { v: ["Fermu"] } } }, { l: "es", t: { Close: { v: ["Cerrar"] } } }, { l: "es_419", t: { Close: { v: [""] } } }, { l: "es_AR", t: { Close: { v: [""] } } }, { l: "es_CL", t: { Close: { v: [""] } } }, { l: "es_CO", t: { Close: { v: [""] } } }, { l: "es_CR", t: { Close: { v: [""] } } }, { l: "es_DO", t: { Close: { v: [""] } } }, { l: "es_EC", t: { Close: { v: ["Cerrar"] } } }, { l: "es_GT", t: { Close: { v: [""] } } }, { l: "es_HN", t: { Close: { v: [""] } } }, { l: "es_MX", t: { Close: { v: [""] } } }, { l: "es_NI", t: { Close: { v: [""] } } }, { l: "es_PA", t: { Close: { v: [""] } } }, { l: "es_PE", t: { Close: { v: [""] } } }, { l: "es_PR", t: { Close: { v: [""] } } }, { l: "es_PY", t: { Close: { v: [""] } } }, { l: "es_SV", t: { Close: { v: [""] } } }, { l: "es_UY", t: { Close: { v: [""] } } }, { l: "et_EE", t: { Close: { v: [""] } } }, { l: "eu", t: { Close: { v: ["Itxi"] } } }, { l: "fa", t: { Close: { v: [""] } } }, { l: "fi", t: { Close: { v: ["Sulje"] } } }, { l: "fo", t: { Close: { v: [""] } } }, { l: "fr", t: { Close: { v: ["Fermer"] } } }, { l: "gd", t: { Close: { v: [""] } } }, { l: "gl", t: { Close: { v: ["Pechar"] } } }, { l: "he", t: { Close: { v: ["סגירה"] } } }, { l: "hi_IN", t: { Close: { v: [""] } } }, { l: "hr", t: { Close: { v: [""] } } }, { l: "hsb", t: { Close: { v: [""] } } }, { l: "hu", t: { Close: { v: ["Bezárás"] } } }, { l: "hy", t: { Close: { v: [""] } } }, { l: "ia", t: { Close: { v: [""] } } }, { l: "id", t: { Close: { v: ["Tutup"] } } }, { l: "ig", t: { Close: { v: [""] } } }, { l: "is", t: { Close: { v: ["Loka"] } } }, { l: "it", t: { Close: { v: ["Chiudi"] } } }, { l: "ja", t: { Close: { v: ["閉じる"] } } }, { l: "ka", t: { Close: { v: [""] } } }, { l: "ka_GE", t: { Close: { v: [""] } } }, { l: "kab", t: { Close: { v: [""] } } }, { l: "kk", t: { Close: { v: [""] } } }, { l: "km", t: { Close: { v: [""] } } }, { l: "kn", t: { Close: { v: [""] } } }, { l: "ko", t: { Close: { v: [""] } } }, { l: "la", t: { Close: { v: [""] } } }, { l: "lb", t: { Close: { v: [""] } } }, { l: "lo", t: { Close: { v: [""] } } }, { l: "lt_LT", t: { Close: { v: ["Užverti"] } } }, { l: "lv", t: { Close: { v: ["Aizvērt"] } } }, { l: "mk", t: { Close: { v: ["Затвори"] } } }, { l: "mn", t: { Close: { v: [""] } } }, { l: "mr", t: { Close: { v: [""] } } }, { l: "ms_MY", t: { Close: { v: [""] } } }, { l: "my", t: { Close: { v: ["ပိတ်ရန်"] } } }, { l: "nb", t: { Close: { v: ["Lukk"] } } }, { l: "ne", t: { Close: { v: [""] } } }, { l: "nl", t: { Close: { v: ["Sluiten"] } } }, { l: "nn_NO", t: { Close: { v: [""] } } }, { l: "oc", t: { Close: { v: ["Tampar"] } } }, { l: "pl", t: { Close: { v: ["Zamknij"] } } }, { l: "ps", t: { Close: { v: [""] } } }, { l: "pt_BR", t: { Close: { v: ["Fechar"] } } }, { l: "pt_PT", t: { Close: { v: ["Fechar"] } } }, { l: "ro", t: { Close: { v: ["Închideți"] } } }, { l: "ru", t: { Close: { v: ["Закрыть"] } } }, { l: "sc", t: { Close: { v: [""] } } }, { l: "si", t: { Close: { v: [""] } } }, { l: "sk", t: { Close: { v: ["Zatvoriť"] } } }, { l: "sl", t: { Close: { v: ["Zapri"] } } }, { l: "sq", t: { Close: { v: [""] } } }, { l: "sr", t: { Close: { v: ["Затвори"] } } }, { l: "sr@latin", t: { Close: { v: [""] } } }, { l: "sv", t: { Close: { v: ["Stäng"] } } }, { l: "sw", t: { Close: { v: [""] } } }, { l: "ta", t: { Close: { v: [""] } } }, { l: "th", t: { Close: { v: [""] } } }, { l: "tk", t: { Close: { v: [""] } } }, { l: "tr", t: { Close: { v: ["Kapat"] } } }, { l: "ug", t: { Close: { v: [""] } } }, { l: "uk", t: { Close: { v: ["Закрити"] } } }, { l: "ur_PK", t: { Close: { v: [""] } } }, { l: "uz", t: { Close: { v: [""] } } }, { l: "vi", t: { Close: { v: [""] } } }, { l: "zh_CN", t: { Close: { v: ["关闭"] } } }, { l: "zh_HK", t: { Close: { v: ["關閉"] } } }, { l: "zh_TW", t: { Close: { v: ["關閉"] } } }, { l: "zu_ZA", t: { Close: { v: [""] } } }], j = [{ l: "af", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ar", t: { "Close navigation": { v: ["أغلِق المُتصفِّح"] }, "Open navigation": { v: ["إفتَح المتصفح"] } } }, { l: "ast", t: { "Close navigation": { v: ["Zarrar la navegación"] }, "Open navigation": { v: ["Abrir la navegación"] } } }, { l: "az", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "be", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "bg", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "bn_BD", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "br", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "bs", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ca", t: { "Close navigation": { v: ["Tanca la navegació"] }, "Open navigation": { v: ["Obre la navegació"] } } }, { l: "cs", t: { "Close navigation": { v: ["Zavřít navigaci"] }, "Open navigation": { v: ["Otevřít navigaci"] } } }, { l: "cs_CZ", t: { "Close navigation": { v: ["Zavřít navigaci"] }, "Open navigation": { v: ["Otevřít navigaci"] } } }, { l: "cy_GB", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "da", t: { "Close navigation": { v: ["Luk navigation"] }, "Open navigation": { v: ["Åbn navigation"] } } }, { l: "de", t: { "Close navigation": { v: ["Navigation schließen"] }, "Open navigation": { v: ["Navigation öffnen"] } } }, { l: "de_DE", t: { "Close navigation": { v: ["Navigation schließen"] }, "Open navigation": { v: ["Navigation öffnen"] } } }, { l: "el", t: { "Close navigation": { v: ["Κλείσιμο πλοήγησης"] }, "Open navigation": { v: ["Άνοιγμα πλοήγησης"] } } }, { l: "en_GB", t: { "Close navigation": { v: ["Close navigation"] }, "Open navigation": { v: ["Open navigation"] } } }, { l: "eo", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es", t: { "Close navigation": { v: ["Cerrar navegación"] }, "Open navigation": { v: ["Abrir navegación"] } } }, { l: "es_419", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_AR", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_CL", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_CO", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_CR", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_DO", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_EC", t: { "Close navigation": { v: ["Cerrar navegación"] }, "Open navigation": { v: ["Abrir navegación"] } } }, { l: "es_GT", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_HN", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_MX", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_NI", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_PA", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_PE", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_PR", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_PY", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_SV", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "es_UY", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "et_EE", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "eu", t: { "Close navigation": { v: ["Itxi nabigazioa"] }, "Open navigation": { v: ["Ireki nabigazioa"] } } }, { l: "fa", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "fi", t: { "Close navigation": { v: ["Sulje navigaatio"] }, "Open navigation": { v: ["Avaa navigaatio"] } } }, { l: "fo", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "fr", t: { "Close navigation": { v: ["Fermer la navigation"] }, "Open navigation": { v: ["Ouvrir la navigation"] } } }, { l: "gd", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "gl", t: { "Close navigation": { v: ["Pechar a navegación"] }, "Open navigation": { v: ["Abrir a navegación"] } } }, { l: "he", t: { "Close navigation": { v: ["סגירת הניווט"] }, "Open navigation": { v: ["פתיחת ניווט"] } } }, { l: "hi_IN", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "hr", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "hsb", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "hu", t: { "Close navigation": { v: ["Navigáció bezárása"] }, "Open navigation": { v: ["Navigáció megnyitása"] } } }, { l: "hy", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ia", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "id", t: { "Close navigation": { v: ["Tutup navigasi"] }, "Open navigation": { v: ["Buka navigasi"] } } }, { l: "ig", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "is", t: { "Close navigation": { v: ["Loka leiðsagnarsleða"] }, "Open navigation": { v: ["Opna leiðsagnarsleða"] } } }, { l: "it", t: { "Close navigation": { v: ["Chiudi la navigazione"] }, "Open navigation": { v: ["Apri la navigazione"] } } }, { l: "ja", t: { "Close navigation": { v: ["ナビゲーションを閉じる"] }, "Open navigation": { v: ["ナビゲーションを開く"] } } }, { l: "ka", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ka_GE", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "kab", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "kk", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "km", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "kn", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ko", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "la", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "lb", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "lo", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "lt_LT", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "lv", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "mk", t: { "Close navigation": { v: ["Затвори навигација"] }, "Open navigation": { v: ["Отвори навигација"] } } }, { l: "mn", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "mr", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ms_MY", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "my", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "nb", t: { "Close navigation": { v: ["Lukk navigasjon"] }, "Open navigation": { v: ["Åpne navigasjon"] } } }, { l: "ne", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "nl", t: { "Close navigation": { v: ["Navigatie sluiten"] }, "Open navigation": { v: ["Navigatie openen"] } } }, { l: "nn_NO", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "oc", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "pl", t: { "Close navigation": { v: ["Zamknij nawigację"] }, "Open navigation": { v: ["Otwórz nawigację"] } } }, { l: "ps", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "pt_BR", t: { "Close navigation": { v: ["Fechar navegação"] }, "Open navigation": { v: ["Abrir navegação"] } } }, { l: "pt_PT", t: { "Close navigation": { v: ["Fechar navegação"] }, "Open navigation": { v: ["Abrir navegação"] } } }, { l: "ro", t: { "Close navigation": { v: ["Închideți navigarea"] }, "Open navigation": { v: ["Deschideți navigația"] } } }, { l: "ru", t: { "Close navigation": { v: ["Закрыть навигацию"] }, "Open navigation": { v: ["Открыть навигацию"] } } }, { l: "sc", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "si", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "sk", t: { "Close navigation": { v: ["Zavrieť navigáciu"] }, "Open navigation": { v: ["Otvoriť navigáciu"] } } }, { l: "sl", t: { "Close navigation": { v: ["Zapri krmarjenje"] }, "Open navigation": { v: ["Odpri krmarjenje"] } } }, { l: "sq", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "sr", t: { "Close navigation": { v: ["Затвори навигацију"] }, "Open navigation": { v: ["Отвори навигацију"] } } }, { l: "sr@latin", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "sv", t: { "Close navigation": { v: ["Stäng navigering"] }, "Open navigation": { v: ["Öppna navigering"] } } }, { l: "sw", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "ta", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "th", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "tk", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "tr", t: { "Close navigation": { v: ["Gezinmeyi kapat"] }, "Open navigation": { v: ["Gezinmeyi aç"] } } }, { l: "ug", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "uk", t: { "Close navigation": { v: ["Закрити навігацію"] }, "Open navigation": { v: ["Відкрити навігацію"] } } }, { l: "ur_PK", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "uz", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "vi", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }, { l: "zh_CN", t: { "Close navigation": { v: ["关闭导航"] }, "Open navigation": { v: ["开启导航"] } } }, { l: "zh_HK", t: { "Close navigation": { v: ["關閉導航"] }, "Open navigation": { v: ["開啟導航"] } } }, { l: "zh_TW", t: { "Close navigation": { v: ["關閉導航"] }, "Open navigation": { v: ["開啟導航"] } } }, { l: "zu_ZA", t: { "Close navigation": { v: [""] }, "Open navigation": { v: [""] } } }], O = [{ l: "af", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ar", t: { "Collapse menu": { v: ["طَيُّ القائمة"] }, "Open menu": { v: ["إفتَح القائمة"] } } }, { l: "ast", t: { "Collapse menu": { v: ["Recoyer el menú"] }, "Open menu": { v: ["Abrir le menú"] } } }, { l: "az", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "be", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "bg", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "bn_BD", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "br", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "bs", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ca", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "cs", t: { "Collapse menu": { v: ["Sbalit nabídku"] }, "Open menu": { v: ["Otevřít nabídku"] } } }, { l: "cs_CZ", t: { "Collapse menu": { v: ["Sbalit nabídku"] }, "Open menu": { v: ["Otevřít nabídku"] } } }, { l: "cy_GB", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "da", t: { "Collapse menu": { v: ["Skjul menuen"] }, "Open menu": { v: ["Åben menu"] } } }, { l: "de", t: { "Collapse menu": { v: ["Menü einklappen"] }, "Open menu": { v: ["Menü öffnen"] } } }, { l: "de_DE", t: { "Collapse menu": { v: ["Menü einklappen"] }, "Open menu": { v: ["Menü öffnen"] } } }, { l: "el", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "en_GB", t: { "Collapse menu": { v: ["Collapse menu"] }, "Open menu": { v: ["Open menu"] } } }, { l: "eo", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es", t: { "Collapse menu": { v: ["Ocultar menú"] }, "Open menu": { v: ["Abrir menú"] } } }, { l: "es_419", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_AR", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_CL", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_CO", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_CR", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_DO", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_EC", t: { "Collapse menu": { v: ["Ocultar menú"] }, "Open menu": { v: ["Abrir menú"] } } }, { l: "es_GT", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_HN", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_MX", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_NI", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_PA", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_PE", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_PR", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_PY", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_SV", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "es_UY", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "et_EE", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "eu", t: { "Collapse menu": { v: ["Tolestu menua"] }, "Open menu": { v: ["Ireki menua"] } } }, { l: "fa", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "fi", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "fo", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "fr", t: { "Collapse menu": { v: ["Réduire le menu"] }, "Open menu": { v: ["Ouvrir le menu"] } } }, { l: "gd", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "gl", t: { "Collapse menu": { v: ["Contraer o menú"] }, "Open menu": { v: ["Abrir o menú"] } } }, { l: "he", t: { "Collapse menu": { v: ["צמצום התפריט"] }, "Open menu": { v: ["פתיחת תפריט"] } } }, { l: "hi_IN", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "hr", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "hsb", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "hu", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "hy", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ia", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "id", t: { "Collapse menu": { v: ["Ciutkan menu"] }, "Open menu": { v: ["Buka menu"] } } }, { l: "ig", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "is", t: { "Collapse menu": { v: ["Fella valmynd saman"] }, "Open menu": { v: ["Opna valmynd"] } } }, { l: "it", t: { "Collapse menu": { v: ["Chiudi Menu"] }, "Open menu": { v: ["Apri il menu"] } } }, { l: "ja", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ka", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ka_GE", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "kab", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "kk", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "km", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "kn", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ko", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "la", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "lb", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "lo", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "lt_LT", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "lv", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "mk", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "mn", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "mr", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ms_MY", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "my", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "nb", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ne", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "nl", t: { "Collapse menu": { v: ["Klap menu in"] }, "Open menu": { v: ["Open menu"] } } }, { l: "nn_NO", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "oc", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "pl", t: { "Collapse menu": { v: ["Zwiń menu"] }, "Open menu": { v: ["Otwórz menu"] } } }, { l: "ps", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "pt_BR", t: { "Collapse menu": { v: ["Recolher menu"] }, "Open menu": { v: ["Abrir menu"] } } }, { l: "pt_PT", t: { "Collapse menu": { v: ["Comprimir menu"] }, "Open menu": { v: ["Abrir menu"] } } }, { l: "ro", t: { "Collapse menu": { v: ["Restrânge meniul"] }, "Open menu": { v: ["Deschide meniul"] } } }, { l: "ru", t: { "Collapse menu": { v: ["Свернуть меню"] }, "Open menu": { v: ["Открыть меню"] } } }, { l: "sc", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "si", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "sk", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "sl", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "sq", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "sr", t: { "Collapse menu": { v: ["Сажми мени"] }, "Open menu": { v: ["Отвори мени"] } } }, { l: "sr@latin", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "sv", t: { "Collapse menu": { v: ["Komprimera menyn"] }, "Open menu": { v: ["Öppna menyn"] } } }, { l: "sw", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "ta", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "th", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "tk", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "tr", t: { "Collapse menu": { v: ["Menüyü daralt"] }, "Open menu": { v: ["Menüyü aç"] } } }, { l: "ug", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "uk", t: { "Collapse menu": { v: ["Згорнути меню"] }, "Open menu": { v: ["Відкрити меню"] } } }, { l: "ur_PK", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "uz", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "vi", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "zh_CN", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }, { l: "zh_HK", t: { "Collapse menu": { v: ["折疊選單"] }, "Open menu": { v: ["開啟選單"] } } }, { l: "zh_TW", t: { "Collapse menu": { v: ["折疊選單"] }, "Open menu": { v: ["開啟選單"] } } }, { l: "zu_ZA", t: { "Collapse menu": { v: [""] }, "Open menu": { v: [""] } } }], B = [{ l: "af", t: { "Edit item": { v: [""] } } }, { l: "ar", t: { "Edit item": { v: ["تعديل عنصر"] } } }, { l: "ast", t: { "Edit item": { v: ["Editar l'elementu"] } } }, { l: "az", t: { "Edit item": { v: [""] } } }, { l: "be", t: { "Edit item": { v: [""] } } }, { l: "bg", t: { "Edit item": { v: [""] } } }, { l: "bn_BD", t: { "Edit item": { v: [""] } } }, { l: "br", t: { "Edit item": { v: [""] } } }, { l: "bs", t: { "Edit item": { v: [""] } } }, { l: "ca", t: { "Edit item": { v: ["Edita l'element"] } } }, { l: "cs", t: { "Edit item": { v: ["Upravit položku"] } } }, { l: "cs_CZ", t: { "Edit item": { v: ["Upravit položku"] } } }, { l: "cy_GB", t: { "Edit item": { v: [""] } } }, { l: "da", t: { "Edit item": { v: ["Rediger emne"] } } }, { l: "de", t: { "Edit item": { v: ["Objekt bearbeiten"] } } }, { l: "de_DE", t: { "Edit item": { v: ["Element bearbeiten"] } } }, { l: "el", t: { "Edit item": { v: ["Επεξεργασία"] } } }, { l: "en_GB", t: { "Edit item": { v: ["Edit item"] } } }, { l: "eo", t: { "Edit item": { v: [""] } } }, { l: "es", t: { "Edit item": { v: ["Editar elemento"] } } }, { l: "es_419", t: { "Edit item": { v: [""] } } }, { l: "es_AR", t: { "Edit item": { v: [""] } } }, { l: "es_CL", t: { "Edit item": { v: [""] } } }, { l: "es_CO", t: { "Edit item": { v: [""] } } }, { l: "es_CR", t: { "Edit item": { v: [""] } } }, { l: "es_DO", t: { "Edit item": { v: [""] } } }, { l: "es_EC", t: { "Edit item": { v: ["Editar elemento"] } } }, { l: "es_GT", t: { "Edit item": { v: [""] } } }, { l: "es_HN", t: { "Edit item": { v: [""] } } }, { l: "es_MX", t: { "Edit item": { v: [""] } } }, { l: "es_NI", t: { "Edit item": { v: [""] } } }, { l: "es_PA", t: { "Edit item": { v: [""] } } }, { l: "es_PE", t: { "Edit item": { v: [""] } } }, { l: "es_PR", t: { "Edit item": { v: [""] } } }, { l: "es_PY", t: { "Edit item": { v: [""] } } }, { l: "es_SV", t: { "Edit item": { v: [""] } } }, { l: "es_UY", t: { "Edit item": { v: [""] } } }, { l: "et_EE", t: { "Edit item": { v: [""] } } }, { l: "eu", t: { "Edit item": { v: ["Editatu elementua"] } } }, { l: "fa", t: { "Edit item": { v: [""] } } }, { l: "fi", t: { "Edit item": { v: ["Muokkaa kohdetta"] } } }, { l: "fo", t: { "Edit item": { v: [""] } } }, { l: "fr", t: { "Edit item": { v: ["Éditer l'élément"] } } }, { l: "gd", t: { "Edit item": { v: [""] } } }, { l: "gl", t: { "Edit item": { v: ["Editar o elemento"] } } }, { l: "he", t: { "Edit item": { v: ["עריכת פריט"] } } }, { l: "hi_IN", t: { "Edit item": { v: [""] } } }, { l: "hr", t: { "Edit item": { v: [""] } } }, { l: "hsb", t: { "Edit item": { v: [""] } } }, { l: "hu", t: { "Edit item": { v: ["Elem szerkesztése"] } } }, { l: "hy", t: { "Edit item": { v: [""] } } }, { l: "ia", t: { "Edit item": { v: [""] } } }, { l: "id", t: { "Edit item": { v: ["Edit item"] } } }, { l: "ig", t: { "Edit item": { v: [""] } } }, { l: "is", t: { "Edit item": { v: ["Breyta atriði"] } } }, { l: "it", t: { "Edit item": { v: ["Modifica l'elemento"] } } }, { l: "ja", t: { "Edit item": { v: ["編集"] } } }, { l: "ka", t: { "Edit item": { v: [""] } } }, { l: "ka_GE", t: { "Edit item": { v: [""] } } }, { l: "kab", t: { "Edit item": { v: [""] } } }, { l: "kk", t: { "Edit item": { v: [""] } } }, { l: "km", t: { "Edit item": { v: [""] } } }, { l: "kn", t: { "Edit item": { v: [""] } } }, { l: "ko", t: { "Edit item": { v: [""] } } }, { l: "la", t: { "Edit item": { v: [""] } } }, { l: "lb", t: { "Edit item": { v: [""] } } }, { l: "lo", t: { "Edit item": { v: [""] } } }, { l: "lt_LT", t: { "Edit item": { v: [""] } } }, { l: "lv", t: { "Edit item": { v: [""] } } }, { l: "mk", t: { "Edit item": { v: ["Уреди"] } } }, { l: "mn", t: { "Edit item": { v: [""] } } }, { l: "mr", t: { "Edit item": { v: [""] } } }, { l: "ms_MY", t: { "Edit item": { v: [""] } } }, { l: "my", t: { "Edit item": { v: [""] } } }, { l: "nb", t: { "Edit item": { v: ["Rediger"] } } }, { l: "ne", t: { "Edit item": { v: [""] } } }, { l: "nl", t: { "Edit item": { v: ["Item bewerken"] } } }, { l: "nn_NO", t: { "Edit item": { v: [""] } } }, { l: "oc", t: { "Edit item": { v: [""] } } }, { l: "pl", t: { "Edit item": { v: ["Edytuj element"] } } }, { l: "ps", t: { "Edit item": { v: [""] } } }, { l: "pt_BR", t: { "Edit item": { v: ["Editar item"] } } }, { l: "pt_PT", t: { "Edit item": { v: ["Editar item"] } } }, { l: "ro", t: { "Edit item": { v: ["Editați elementul"] } } }, { l: "ru", t: { "Edit item": { v: ["Изменить элемент"] } } }, { l: "sc", t: { "Edit item": { v: [""] } } }, { l: "si", t: { "Edit item": { v: [""] } } }, { l: "sk", t: { "Edit item": { v: ["Upraviť položku"] } } }, { l: "sl", t: { "Edit item": { v: ["Uredi predmet"] } } }, { l: "sq", t: { "Edit item": { v: [""] } } }, { l: "sr", t: { "Edit item": { v: ["Уреди ставку"] } } }, { l: "sr@latin", t: { "Edit item": { v: [""] } } }, { l: "sv", t: { "Edit item": { v: ["Ändra"] } } }, { l: "sw", t: { "Edit item": { v: [""] } } }, { l: "ta", t: { "Edit item": { v: [""] } } }, { l: "th", t: { "Edit item": { v: [""] } } }, { l: "tk", t: { "Edit item": { v: [""] } } }, { l: "tr", t: { "Edit item": { v: ["Ögeyi düzenle"] } } }, { l: "ug", t: { "Edit item": { v: [""] } } }, { l: "uk", t: { "Edit item": { v: ["Редагувати елемент"] } } }, { l: "ur_PK", t: { "Edit item": { v: [""] } } }, { l: "uz", t: { "Edit item": { v: [""] } } }, { l: "vi", t: { "Edit item": { v: [""] } } }, { l: "zh_CN", t: { "Edit item": { v: ["编辑项目"] } } }, { l: "zh_HK", t: { "Edit item": { v: ["編輯項目"] } } }, { l: "zh_TW", t: { "Edit item": { v: ["編輯項目"] } } }, { l: "zu_ZA", t: { "Edit item": { v: [""] } } }], M = [{ l: "af", t: {} }, { l: "ar", t: { "Enable interactive view": { v: ["تمكين المنظور التفاعلي"] } } }, { l: "ast", t: {} }, { l: "az", t: {} }, { l: "be", t: {} }, { l: "bg", t: {} }, { l: "bn_BD", t: {} }, { l: "br", t: {} }, { l: "bs", t: {} }, { l: "ca", t: {} }, { l: "cs", t: {} }, { l: "cs_CZ", t: {} }, { l: "cy_GB", t: {} }, { l: "da", t: { "Enable interactive view": { v: ["Aktiver interaktiv visning"] } } }, { l: "de", t: {} }, { l: "de_DE", t: { "Enable interactive view": { v: ["Die interaktive Ansicht aktivieren"] } } }, { l: "el", t: {} }, { l: "en_GB", t: {} }, { l: "eo", t: {} }, { l: "es", t: {} }, { l: "es_419", t: {} }, { l: "es_AR", t: {} }, { l: "es_CL", t: {} }, { l: "es_CO", t: {} }, { l: "es_CR", t: {} }, { l: "es_DO", t: {} }, { l: "es_EC", t: {} }, { l: "es_GT", t: {} }, { l: "es_HN", t: {} }, { l: "es_MX", t: {} }, { l: "es_NI", t: {} }, { l: "es_PA", t: {} }, { l: "es_PE", t: {} }, { l: "es_PR", t: {} }, { l: "es_PY", t: {} }, { l: "es_SV", t: {} }, { l: "es_UY", t: {} }, { l: "et_EE", t: {} }, { l: "eu", t: {} }, { l: "fa", t: {} }, { l: "fi", t: {} }, { l: "fo", t: {} }, { l: "fr", t: {} }, { l: "gd", t: {} }, { l: "gl", t: { "Enable interactive view": { v: ["Activar a vista interactiva"] } } }, { l: "he", t: {} }, { l: "hi_IN", t: {} }, { l: "hr", t: {} }, { l: "hsb", t: {} }, { l: "hu", t: {} }, { l: "hy", t: {} }, { l: "ia", t: {} }, { l: "id", t: {} }, { l: "ig", t: {} }, { l: "is", t: {} }, { l: "it", t: {} }, { l: "ja", t: {} }, { l: "ka", t: {} }, { l: "ka_GE", t: {} }, { l: "kab", t: {} }, { l: "kk", t: {} }, { l: "km", t: {} }, { l: "kn", t: {} }, { l: "ko", t: {} }, { l: "la", t: {} }, { l: "lb", t: {} }, { l: "lo", t: {} }, { l: "lt_LT", t: {} }, { l: "lv", t: {} }, { l: "mk", t: {} }, { l: "mn", t: {} }, { l: "mr", t: {} }, { l: "ms_MY", t: {} }, { l: "my", t: {} }, { l: "nb", t: {} }, { l: "ne", t: {} }, { l: "nl", t: {} }, { l: "nn_NO", t: {} }, { l: "oc", t: {} }, { l: "pl", t: {} }, { l: "ps", t: {} }, { l: "pt_BR", t: { "Enable interactive view": { v: ["Ativar visualização interativa"] } } }, { l: "pt_PT", t: {} }, { l: "ro", t: {} }, { l: "ru", t: {} }, { l: "sc", t: {} }, { l: "si", t: {} }, { l: "sk", t: {} }, { l: "sl", t: {} }, { l: "sq", t: {} }, { l: "sr", t: {} }, { l: "sr@latin", t: {} }, { l: "sv", t: { "Enable interactive view": { v: ["Aktivera interaktiv vy"] } } }, { l: "sw", t: {} }, { l: "ta", t: {} }, { l: "th", t: {} }, { l: "tk", t: {} }, { l: "tr", t: { "Enable interactive view": { v: ["Etkileşimli görünümü aç"] } } }, { l: "ug", t: {} }, { l: "uk", t: {} }, { l: "ur_PK", t: {} }, { l: "uz", t: {} }, { l: "vi", t: {} }, { l: "zh_CN", t: {} }, { l: "zh_HK", t: {} }, { l: "zh_TW", t: {} }, { l: "zu_ZA", t: {} }], F = [{ l: "af", t: { "Enter link": { v: [""] } } }, { l: "ar", t: { "Enter link": { v: ["أدخِل الرابط"] } } }, { l: "ast", t: { "Enter link": { v: ["Introducir l'enllaz"] } } }, { l: "az", t: { "Enter link": { v: [""] } } }, { l: "be", t: { "Enter link": { v: [""] } } }, { l: "bg", t: { "Enter link": { v: [""] } } }, { l: "bn_BD", t: { "Enter link": { v: [""] } } }, { l: "br", t: { "Enter link": { v: [""] } } }, { l: "bs", t: { "Enter link": { v: [""] } } }, { l: "ca", t: { "Enter link": { v: [""] } } }, { l: "cs", t: { "Enter link": { v: ["Zadat odkaz"] } } }, { l: "cs_CZ", t: { "Enter link": { v: ["Zadat odkaz"] } } }, { l: "cy_GB", t: { "Enter link": { v: [""] } } }, { l: "da", t: { "Enter link": { v: ["Indtast link"] } } }, { l: "de", t: { "Enter link": { v: ["Link eingeben"] } } }, { l: "de_DE", t: { "Enter link": { v: ["Link eingeben"] } } }, { l: "el", t: { "Enter link": { v: [""] } } }, { l: "en_GB", t: { "Enter link": { v: ["Enter link"] } } }, { l: "eo", t: { "Enter link": { v: [""] } } }, { l: "es", t: { "Enter link": { v: ["Ingrese enlace"] } } }, { l: "es_419", t: { "Enter link": { v: [""] } } }, { l: "es_AR", t: { "Enter link": { v: [""] } } }, { l: "es_CL", t: { "Enter link": { v: [""] } } }, { l: "es_CO", t: { "Enter link": { v: [""] } } }, { l: "es_CR", t: { "Enter link": { v: [""] } } }, { l: "es_DO", t: { "Enter link": { v: [""] } } }, { l: "es_EC", t: { "Enter link": { v: ["Ingresar enlace"] } } }, { l: "es_GT", t: { "Enter link": { v: [""] } } }, { l: "es_HN", t: { "Enter link": { v: [""] } } }, { l: "es_MX", t: { "Enter link": { v: [""] } } }, { l: "es_NI", t: { "Enter link": { v: [""] } } }, { l: "es_PA", t: { "Enter link": { v: [""] } } }, { l: "es_PE", t: { "Enter link": { v: [""] } } }, { l: "es_PR", t: { "Enter link": { v: [""] } } }, { l: "es_PY", t: { "Enter link": { v: [""] } } }, { l: "es_SV", t: { "Enter link": { v: [""] } } }, { l: "es_UY", t: { "Enter link": { v: [""] } } }, { l: "et_EE", t: { "Enter link": { v: [""] } } }, { l: "eu", t: { "Enter link": { v: ["Sartu esteka"] } } }, { l: "fa", t: { "Enter link": { v: [""] } } }, { l: "fi", t: { "Enter link": { v: [""] } } }, { l: "fo", t: { "Enter link": { v: [""] } } }, { l: "fr", t: { "Enter link": { v: ["Saisissez le lien"] } } }, { l: "gd", t: { "Enter link": { v: [""] } } }, { l: "gl", t: { "Enter link": { v: ["Introducir a ligazón"] } } }, { l: "he", t: { "Enter link": { v: ["מילוי קישור"] } } }, { l: "hi_IN", t: { "Enter link": { v: [""] } } }, { l: "hr", t: { "Enter link": { v: [""] } } }, { l: "hsb", t: { "Enter link": { v: [""] } } }, { l: "hu", t: { "Enter link": { v: [""] } } }, { l: "hy", t: { "Enter link": { v: [""] } } }, { l: "ia", t: { "Enter link": { v: [""] } } }, { l: "id", t: { "Enter link": { v: ["Masukkan tautan"] } } }, { l: "ig", t: { "Enter link": { v: [""] } } }, { l: "is", t: { "Enter link": { v: ["Settu inn tengil"] } } }, { l: "it", t: { "Enter link": { v: ["Inserire il link"] } } }, { l: "ja", t: { "Enter link": { v: [""] } } }, { l: "ka", t: { "Enter link": { v: [""] } } }, { l: "ka_GE", t: { "Enter link": { v: [""] } } }, { l: "kab", t: { "Enter link": { v: [""] } } }, { l: "kk", t: { "Enter link": { v: [""] } } }, { l: "km", t: { "Enter link": { v: [""] } } }, { l: "kn", t: { "Enter link": { v: [""] } } }, { l: "ko", t: { "Enter link": { v: [""] } } }, { l: "la", t: { "Enter link": { v: [""] } } }, { l: "lb", t: { "Enter link": { v: [""] } } }, { l: "lo", t: { "Enter link": { v: [""] } } }, { l: "lt_LT", t: { "Enter link": { v: [""] } } }, { l: "lv", t: { "Enter link": { v: [""] } } }, { l: "mk", t: { "Enter link": { v: [""] } } }, { l: "mn", t: { "Enter link": { v: [""] } } }, { l: "mr", t: { "Enter link": { v: [""] } } }, { l: "ms_MY", t: { "Enter link": { v: [""] } } }, { l: "my", t: { "Enter link": { v: [""] } } }, { l: "nb", t: { "Enter link": { v: [""] } } }, { l: "ne", t: { "Enter link": { v: [""] } } }, { l: "nl", t: { "Enter link": { v: ["Voer link in"] } } }, { l: "nn_NO", t: { "Enter link": { v: [""] } } }, { l: "oc", t: { "Enter link": { v: [""] } } }, { l: "pl", t: { "Enter link": { v: ["Wprowadź link"] } } }, { l: "ps", t: { "Enter link": { v: [""] } } }, { l: "pt_BR", t: { "Enter link": { v: ["Insira o link"] } } }, { l: "pt_PT", t: { "Enter link": { v: ["Introduzir link"] } } }, { l: "ro", t: { "Enter link": { v: ["Introduceți link-ul"] } } }, { l: "ru", t: { "Enter link": { v: ["Введите ссылку"] } } }, { l: "sc", t: { "Enter link": { v: [""] } } }, { l: "si", t: { "Enter link": { v: [""] } } }, { l: "sk", t: { "Enter link": { v: [""] } } }, { l: "sl", t: { "Enter link": { v: [""] } } }, { l: "sq", t: { "Enter link": { v: [""] } } }, { l: "sr", t: { "Enter link": { v: ["Унесите линк"] } } }, { l: "sr@latin", t: { "Enter link": { v: [""] } } }, { l: "sv", t: { "Enter link": { v: ["Ange länk"] } } }, { l: "sw", t: { "Enter link": { v: [""] } } }, { l: "ta", t: { "Enter link": { v: [""] } } }, { l: "th", t: { "Enter link": { v: [""] } } }, { l: "tk", t: { "Enter link": { v: [""] } } }, { l: "tr", t: { "Enter link": { v: ["Bağlantıyı yazın"] } } }, { l: "ug", t: { "Enter link": { v: [""] } } }, { l: "uk", t: { "Enter link": { v: ["Зазначте посилання"] } } }, { l: "ur_PK", t: { "Enter link": { v: [""] } } }, { l: "uz", t: { "Enter link": { v: [""] } } }, { l: "vi", t: { "Enter link": { v: [""] } } }, { l: "zh_CN", t: { "Enter link": { v: [""] } } }, { l: "zh_HK", t: { "Enter link": { v: ["輸入連結"] } } }, { l: "zh_TW", t: { "Enter link": { v: ["輸入連結"] } } }, { l: "zu_ZA", t: { "Enter link": { v: [""] } } }], T = [{ l: "af", t: { "External documentation for {name}": { v: [""] } } }, { l: "ar", t: { "External documentation for {name}": { v: ["التوثيق الخارجي لـ {name}"] } } }, { l: "ast", t: { "External documentation for {name}": { v: ["Documentación esterna pa: {name}"] } } }, { l: "az", t: { "External documentation for {name}": { v: [""] } } }, { l: "be", t: { "External documentation for {name}": { v: [""] } } }, { l: "bg", t: { "External documentation for {name}": { v: [""] } } }, { l: "bn_BD", t: { "External documentation for {name}": { v: [""] } } }, { l: "br", t: { "External documentation for {name}": { v: [""] } } }, { l: "bs", t: { "External documentation for {name}": { v: [""] } } }, { l: "ca", t: { "External documentation for {name}": { v: [""] } } }, { l: "cs", t: { "External documentation for {name}": { v: ["Externí dokumentace pro {name}"] } } }, { l: "cs_CZ", t: { "External documentation for {name}": { v: ["Externí dokumentace pro {name}"] } } }, { l: "cy_GB", t: { "External documentation for {name}": { v: [""] } } }, { l: "da", t: { "External documentation for {name}": { v: ["Ekstern dokumentation for {name}"] } } }, { l: "de", t: { "External documentation for {name}": { v: ["Externe Dokumentation für {name}"] } } }, { l: "de_DE", t: { "External documentation for {name}": { v: ["Externe Dokumentation für {name}"] } } }, { l: "el", t: { "External documentation for {name}": { v: [""] } } }, { l: "en_GB", t: { "External documentation for {name}": { v: ["External documentation for {name}"] } } }, { l: "eo", t: { "External documentation for {name}": { v: [""] } } }, { l: "es", t: { "External documentation for {name}": { v: ["Documentación externa para {name}"] } } }, { l: "es_419", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_AR", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_CL", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_CO", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_CR", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_DO", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_EC", t: { "External documentation for {name}": { v: ["Documentación externa para {name}"] } } }, { l: "es_GT", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_HN", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_MX", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_NI", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_PA", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_PE", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_PR", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_PY", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_SV", t: { "External documentation for {name}": { v: [""] } } }, { l: "es_UY", t: { "External documentation for {name}": { v: [""] } } }, { l: "et_EE", t: { "External documentation for {name}": { v: [""] } } }, { l: "eu", t: { "External documentation for {name}": { v: ["{name}-ren kanpoko dokumentazioa"] } } }, { l: "fa", t: { "External documentation for {name}": { v: [""] } } }, { l: "fi", t: { "External documentation for {name}": { v: [""] } } }, { l: "fo", t: { "External documentation for {name}": { v: [""] } } }, { l: "fr", t: { "External documentation for {name}": { v: ["Documentation externe pour {name}"] } } }, { l: "gd", t: { "External documentation for {name}": { v: [""] } } }, { l: "gl", t: { "External documentation for {name}": { v: ["Documentación externa para {name}"] } } }, { l: "he", t: { "External documentation for {name}": { v: ["תיעוד חיצוני עבור {name}"] } } }, { l: "hi_IN", t: { "External documentation for {name}": { v: [""] } } }, { l: "hr", t: { "External documentation for {name}": { v: [""] } } }, { l: "hsb", t: { "External documentation for {name}": { v: [""] } } }, { l: "hu", t: { "External documentation for {name}": { v: [""] } } }, { l: "hy", t: { "External documentation for {name}": { v: [""] } } }, { l: "ia", t: { "External documentation for {name}": { v: [""] } } }, { l: "id", t: { "External documentation for {name}": { v: ["Dokumentasi eksternal untuk {name}"] } } }, { l: "ig", t: { "External documentation for {name}": { v: [""] } } }, { l: "is", t: { "External documentation for {name}": { v: ["Utanaðkomandi leiðbeiningar fyrir {name}"] } } }, { l: "it", t: { "External documentation for {name}": { v: ["Documentazione esterna per {name}"] } } }, { l: "ja", t: { "External documentation for {name}": { v: [""] } } }, { l: "ka", t: { "External documentation for {name}": { v: [""] } } }, { l: "ka_GE", t: { "External documentation for {name}": { v: [""] } } }, { l: "kab", t: { "External documentation for {name}": { v: [""] } } }, { l: "kk", t: { "External documentation for {name}": { v: [""] } } }, { l: "km", t: { "External documentation for {name}": { v: [""] } } }, { l: "kn", t: { "External documentation for {name}": { v: [""] } } }, { l: "ko", t: { "External documentation for {name}": { v: [""] } } }, { l: "la", t: { "External documentation for {name}": { v: [""] } } }, { l: "lb", t: { "External documentation for {name}": { v: [""] } } }, { l: "lo", t: { "External documentation for {name}": { v: [""] } } }, { l: "lt_LT", t: { "External documentation for {name}": { v: [""] } } }, { l: "lv", t: { "External documentation for {name}": { v: [""] } } }, { l: "mk", t: { "External documentation for {name}": { v: [""] } } }, { l: "mn", t: { "External documentation for {name}": { v: [""] } } }, { l: "mr", t: { "External documentation for {name}": { v: [""] } } }, { l: "ms_MY", t: { "External documentation for {name}": { v: [""] } } }, { l: "my", t: { "External documentation for {name}": { v: [""] } } }, { l: "nb", t: { "External documentation for {name}": { v: [""] } } }, { l: "ne", t: { "External documentation for {name}": { v: [""] } } }, { l: "nl", t: { "External documentation for {name}": { v: ["Externe documentatie voor {name}"] } } }, { l: "nn_NO", t: { "External documentation for {name}": { v: [""] } } }, { l: "oc", t: { "External documentation for {name}": { v: [""] } } }, { l: "pl", t: { "External documentation for {name}": { v: ["Dokumentacja zewnętrzna dla {name}"] } } }, { l: "ps", t: { "External documentation for {name}": { v: [""] } } }, { l: "pt_BR", t: { "External documentation for {name}": { v: ["Documentação externa para {name}"] } } }, { l: "pt_PT", t: { "External documentation for {name}": { v: ["Documentação externa para {name}"] } } }, { l: "ro", t: { "External documentation for {name}": { v: ["Documentație externă pentru {name}"] } } }, { l: "ru", t: { "External documentation for {name}": { v: ["Внешняя документация для {name}"] } } }, { l: "sc", t: { "External documentation for {name}": { v: [""] } } }, { l: "si", t: { "External documentation for {name}": { v: [""] } } }, { l: "sk", t: { "External documentation for {name}": { v: [""] } } }, { l: "sl", t: { "External documentation for {name}": { v: [""] } } }, { l: "sq", t: { "External documentation for {name}": { v: [""] } } }, { l: "sr", t: { "External documentation for {name}": { v: ["Спољна документација за {name}"] } } }, { l: "sr@latin", t: { "External documentation for {name}": { v: [""] } } }, { l: "sv", t: { "External documentation for {name}": { v: ["Extern dokumentation för {name}"] } } }, { l: "sw", t: { "External documentation for {name}": { v: [""] } } }, { l: "ta", t: { "External documentation for {name}": { v: [""] } } }, { l: "th", t: { "External documentation for {name}": { v: [""] } } }, { l: "tk", t: { "External documentation for {name}": { v: [""] } } }, { l: "tr", t: { "External documentation for {name}": { v: ["{name} için dış belgeler"] } } }, { l: "ug", t: { "External documentation for {name}": { v: [""] } } }, { l: "uk", t: { "External documentation for {name}": { v: ["Зовнішня документація для {name}"] } } }, { l: "ur_PK", t: { "External documentation for {name}": { v: [""] } } }, { l: "uz", t: { "External documentation for {name}": { v: [""] } } }, { l: "vi", t: { "External documentation for {name}": { v: [""] } } }, { l: "zh_CN", t: { "External documentation for {name}": { v: [""] } } }, { l: "zh_HK", t: { "External documentation for {name}": { v: ["{name} 的外部文件"] } } }, { l: "zh_TW", t: { "External documentation for {name}": { v: ["{name} 的外部文件"] } } }, { l: "zu_ZA", t: { "External documentation for {name}": { v: [""] } } }], R = [{ l: "af", t: { Global: { v: [""] } } }, { l: "ar", t: { Global: { v: ["شامل"] } } }, { l: "ast", t: { Global: { v: ["Global"] } } }, { l: "az", t: { Global: { v: [""] } } }, { l: "be", t: { Global: { v: [""] } } }, { l: "bg", t: { Global: { v: [""] } } }, { l: "bn_BD", t: { Global: { v: [""] } } }, { l: "br", t: { Global: { v: [""] } } }, { l: "bs", t: { Global: { v: [""] } } }, { l: "ca", t: { Global: { v: ["Global"] } } }, { l: "cs", t: { Global: { v: ["Globální"] } } }, { l: "cs_CZ", t: { Global: { v: ["Globální"] } } }, { l: "cy_GB", t: { Global: { v: [""] } } }, { l: "da", t: { Global: { v: ["Global"] } } }, { l: "de", t: { Global: { v: ["Global"] } } }, { l: "de_DE", t: { Global: { v: ["Global"] } } }, { l: "el", t: { Global: { v: ["Καθολικό"] } } }, { l: "en_GB", t: { Global: { v: ["Global"] } } }, { l: "eo", t: { Global: { v: [""] } } }, { l: "es", t: { Global: { v: ["Global"] } } }, { l: "es_419", t: { Global: { v: [""] } } }, { l: "es_AR", t: { Global: { v: [""] } } }, { l: "es_CL", t: { Global: { v: [""] } } }, { l: "es_CO", t: { Global: { v: [""] } } }, { l: "es_CR", t: { Global: { v: [""] } } }, { l: "es_DO", t: { Global: { v: [""] } } }, { l: "es_EC", t: { Global: { v: ["Global"] } } }, { l: "es_GT", t: { Global: { v: [""] } } }, { l: "es_HN", t: { Global: { v: [""] } } }, { l: "es_MX", t: { Global: { v: [""] } } }, { l: "es_NI", t: { Global: { v: [""] } } }, { l: "es_PA", t: { Global: { v: [""] } } }, { l: "es_PE", t: { Global: { v: [""] } } }, { l: "es_PR", t: { Global: { v: [""] } } }, { l: "es_PY", t: { Global: { v: [""] } } }, { l: "es_SV", t: { Global: { v: [""] } } }, { l: "es_UY", t: { Global: { v: [""] } } }, { l: "et_EE", t: { Global: { v: [""] } } }, { l: "eu", t: { Global: { v: ["Globala"] } } }, { l: "fa", t: { Global: { v: [""] } } }, { l: "fi", t: { Global: { v: ["Yleinen"] } } }, { l: "fo", t: { Global: { v: [""] } } }, { l: "fr", t: { Global: { v: ["Global"] } } }, { l: "gd", t: { Global: { v: [""] } } }, { l: "gl", t: { Global: { v: ["Global"] } } }, { l: "he", t: { Global: { v: ["כללי"] } } }, { l: "hi_IN", t: { Global: { v: [""] } } }, { l: "hr", t: { Global: { v: [""] } } }, { l: "hsb", t: { Global: { v: [""] } } }, { l: "hu", t: { Global: { v: ["Globális"] } } }, { l: "hy", t: { Global: { v: [""] } } }, { l: "ia", t: { Global: { v: [""] } } }, { l: "id", t: { Global: { v: ["Global"] } } }, { l: "ig", t: { Global: { v: [""] } } }, { l: "is", t: { Global: { v: ["Almennt"] } } }, { l: "it", t: { Global: { v: ["Globale"] } } }, { l: "ja", t: { Global: { v: ["全体"] } } }, { l: "ka", t: { Global: { v: [""] } } }, { l: "ka_GE", t: { Global: { v: [""] } } }, { l: "kab", t: { Global: { v: [""] } } }, { l: "kk", t: { Global: { v: [""] } } }, { l: "km", t: { Global: { v: [""] } } }, { l: "kn", t: { Global: { v: [""] } } }, { l: "ko", t: { Global: { v: [""] } } }, { l: "la", t: { Global: { v: [""] } } }, { l: "lb", t: { Global: { v: [""] } } }, { l: "lo", t: { Global: { v: [""] } } }, { l: "lt_LT", t: { Global: { v: [""] } } }, { l: "lv", t: { Global: { v: [""] } } }, { l: "mk", t: { Global: { v: ["Глобално"] } } }, { l: "mn", t: { Global: { v: [""] } } }, { l: "mr", t: { Global: { v: [""] } } }, { l: "ms_MY", t: { Global: { v: [""] } } }, { l: "my", t: { Global: { v: ["ကမ္ဘာလုံးဆိုင်ရာ"] } } }, { l: "nb", t: { Global: { v: ["Global"] } } }, { l: "ne", t: { Global: { v: [""] } } }, { l: "nl", t: { Global: { v: ["Globaal"] } } }, { l: "nn_NO", t: { Global: { v: [""] } } }, { l: "oc", t: { Global: { v: [""] } } }, { l: "pl", t: { Global: { v: ["Globalnie"] } } }, { l: "ps", t: { Global: { v: [""] } } }, { l: "pt_BR", t: { Global: { v: ["Global"] } } }, { l: "pt_PT", t: { Global: { v: ["Global"] } } }, { l: "ro", t: { Global: { v: ["Global"] } } }, { l: "ru", t: { Global: { v: ["Глобальный"] } } }, { l: "sc", t: { Global: { v: [""] } } }, { l: "si", t: { Global: { v: [""] } } }, { l: "sk", t: { Global: { v: ["Globálne"] } } }, { l: "sl", t: { Global: { v: ["Splošno"] } } }, { l: "sq", t: { Global: { v: [""] } } }, { l: "sr", t: { Global: { v: ["Глобално"] } } }, { l: "sr@latin", t: { Global: { v: [""] } } }, { l: "sv", t: { Global: { v: ["Global"] } } }, { l: "sw", t: { Global: { v: [""] } } }, { l: "ta", t: { Global: { v: [""] } } }, { l: "th", t: { Global: { v: [""] } } }, { l: "tk", t: { Global: { v: [""] } } }, { l: "tr", t: { Global: { v: ["Evrensel"] } } }, { l: "ug", t: { Global: { v: [""] } } }, { l: "uk", t: { Global: { v: ["Глобальний"] } } }, { l: "ur_PK", t: { Global: { v: [""] } } }, { l: "uz", t: { Global: { v: [""] } } }, { l: "vi", t: { Global: { v: [""] } } }, { l: "zh_CN", t: { Global: { v: ["全局"] } } }, { l: "zh_HK", t: { Global: { v: ["全球的"] } } }, { l: "zh_TW", t: { Global: { v: ["全域"] } } }, { l: "zu_ZA", t: { Global: { v: [""] } } }], G = [{ l: "af", t: { "Go back to the list": { v: [""] } } }, { l: "ar", t: { "Go back to the list": { v: ["عودة إلى القائمة"] } } }, { l: "ast", t: { "Go back to the list": { v: ["Volver a la llista"] } } }, { l: "az", t: { "Go back to the list": { v: [""] } } }, { l: "be", t: { "Go back to the list": { v: [""] } } }, { l: "bg", t: { "Go back to the list": { v: [""] } } }, { l: "bn_BD", t: { "Go back to the list": { v: [""] } } }, { l: "br", t: { "Go back to the list": { v: [""] } } }, { l: "bs", t: { "Go back to the list": { v: [""] } } }, { l: "ca", t: { "Go back to the list": { v: ["Torna a la llista"] } } }, { l: "cs", t: { "Go back to the list": { v: ["Jít zpět na seznam"] } } }, { l: "cs_CZ", t: { "Go back to the list": { v: ["Jít zpět na seznam"] } } }, { l: "cy_GB", t: { "Go back to the list": { v: [""] } } }, { l: "da", t: { "Go back to the list": { v: ["Tilbage til listen"] } } }, { l: "de", t: { "Go back to the list": { v: ["Zurück zur Liste"] } } }, { l: "de_DE", t: { "Go back to the list": { v: ["Zurück zur Liste"] } } }, { l: "el", t: { "Go back to the list": { v: ["Επιστροφή στην αρχική λίστα "] } } }, { l: "en_GB", t: { "Go back to the list": { v: ["Go back to the list"] } } }, { l: "eo", t: { "Go back to the list": { v: [""] } } }, { l: "es", t: { "Go back to the list": { v: ["Volver a la lista"] } } }, { l: "es_419", t: { "Go back to the list": { v: [""] } } }, { l: "es_AR", t: { "Go back to the list": { v: [""] } } }, { l: "es_CL", t: { "Go back to the list": { v: [""] } } }, { l: "es_CO", t: { "Go back to the list": { v: [""] } } }, { l: "es_CR", t: { "Go back to the list": { v: [""] } } }, { l: "es_DO", t: { "Go back to the list": { v: [""] } } }, { l: "es_EC", t: { "Go back to the list": { v: ["Volver a la lista"] } } }, { l: "es_GT", t: { "Go back to the list": { v: [""] } } }, { l: "es_HN", t: { "Go back to the list": { v: [""] } } }, { l: "es_MX", t: { "Go back to the list": { v: [""] } } }, { l: "es_NI", t: { "Go back to the list": { v: [""] } } }, { l: "es_PA", t: { "Go back to the list": { v: [""] } } }, { l: "es_PE", t: { "Go back to the list": { v: [""] } } }, { l: "es_PR", t: { "Go back to the list": { v: [""] } } }, { l: "es_PY", t: { "Go back to the list": { v: [""] } } }, { l: "es_SV", t: { "Go back to the list": { v: [""] } } }, { l: "es_UY", t: { "Go back to the list": { v: [""] } } }, { l: "et_EE", t: { "Go back to the list": { v: [""] } } }, { l: "eu", t: { "Go back to the list": { v: ["Bueltatu zerrendara"] } } }, { l: "fa", t: { "Go back to the list": { v: [""] } } }, { l: "fi", t: { "Go back to the list": { v: ["Siirry takaisin listaan"] } } }, { l: "fo", t: { "Go back to the list": { v: [""] } } }, { l: "fr", t: { "Go back to the list": { v: ["Retourner à la liste"] } } }, { l: "gd", t: { "Go back to the list": { v: [""] } } }, { l: "gl", t: { "Go back to the list": { v: ["Volver á lista"] } } }, { l: "he", t: { "Go back to the list": { v: ["חזרה לרשימה"] } } }, { l: "hi_IN", t: { "Go back to the list": { v: [""] } } }, { l: "hr", t: { "Go back to the list": { v: [""] } } }, { l: "hsb", t: { "Go back to the list": { v: [""] } } }, { l: "hu", t: { "Go back to the list": { v: ["Ugrás vissza a listához"] } } }, { l: "hy", t: { "Go back to the list": { v: [""] } } }, { l: "ia", t: { "Go back to the list": { v: [""] } } }, { l: "id", t: { "Go back to the list": { v: ["Kembali ke daftar"] } } }, { l: "ig", t: { "Go back to the list": { v: [""] } } }, { l: "is", t: { "Go back to the list": { v: ["Fara til baka í listann"] } } }, { l: "it", t: { "Go back to the list": { v: ["Torna all'elenco"] } } }, { l: "ja", t: { "Go back to the list": { v: ["リストに戻る"] } } }, { l: "ka", t: { "Go back to the list": { v: [""] } } }, { l: "ka_GE", t: { "Go back to the list": { v: [""] } } }, { l: "kab", t: { "Go back to the list": { v: [""] } } }, { l: "kk", t: { "Go back to the list": { v: [""] } } }, { l: "km", t: { "Go back to the list": { v: [""] } } }, { l: "kn", t: { "Go back to the list": { v: [""] } } }, { l: "ko", t: { "Go back to the list": { v: [""] } } }, { l: "la", t: { "Go back to the list": { v: [""] } } }, { l: "lb", t: { "Go back to the list": { v: [""] } } }, { l: "lo", t: { "Go back to the list": { v: [""] } } }, { l: "lt_LT", t: { "Go back to the list": { v: [""] } } }, { l: "lv", t: { "Go back to the list": { v: [""] } } }, { l: "mk", t: { "Go back to the list": { v: ["Врати се на листата"] } } }, { l: "mn", t: { "Go back to the list": { v: [""] } } }, { l: "mr", t: { "Go back to the list": { v: [""] } } }, { l: "ms_MY", t: { "Go back to the list": { v: [""] } } }, { l: "my", t: { "Go back to the list": { v: [""] } } }, { l: "nb", t: { "Go back to the list": { v: ["Gå tilbake til listen"] } } }, { l: "ne", t: { "Go back to the list": { v: [""] } } }, { l: "nl", t: { "Go back to the list": { v: ["Ga terug naar de lijst"] } } }, { l: "nn_NO", t: { "Go back to the list": { v: [""] } } }, { l: "oc", t: { "Go back to the list": { v: [""] } } }, { l: "pl", t: { "Go back to the list": { v: ["Powrót do listy"] } } }, { l: "ps", t: { "Go back to the list": { v: [""] } } }, { l: "pt_BR", t: { "Go back to the list": { v: ["Volte para a lista"] } } }, { l: "pt_PT", t: { "Go back to the list": { v: ["Voltar para a lista"] } } }, { l: "ro", t: { "Go back to the list": { v: ["Întoarceți-vă la listă"] } } }, { l: "ru", t: { "Go back to the list": { v: ["Вернуться к списку"] } } }, { l: "sc", t: { "Go back to the list": { v: [""] } } }, { l: "si", t: { "Go back to the list": { v: [""] } } }, { l: "sk", t: { "Go back to the list": { v: ["Naspäť na zoznam"] } } }, { l: "sl", t: { "Go back to the list": { v: ["Vrni se na seznam"] } } }, { l: "sq", t: { "Go back to the list": { v: [""] } } }, { l: "sr", t: { "Go back to the list": { v: ["Назад на листу"] } } }, { l: "sr@latin", t: { "Go back to the list": { v: [""] } } }, { l: "sv", t: { "Go back to the list": { v: ["Gå tillbaka till listan"] } } }, { l: "sw", t: { "Go back to the list": { v: [""] } } }, { l: "ta", t: { "Go back to the list": { v: [""] } } }, { l: "th", t: { "Go back to the list": { v: [""] } } }, { l: "tk", t: { "Go back to the list": { v: [""] } } }, { l: "tr", t: { "Go back to the list": { v: ["Listeye dön"] } } }, { l: "ug", t: { "Go back to the list": { v: [""] } } }, { l: "uk", t: { "Go back to the list": { v: ["Повернутися до списку"] } } }, { l: "ur_PK", t: { "Go back to the list": { v: [""] } } }, { l: "uz", t: { "Go back to the list": { v: [""] } } }, { l: "vi", t: { "Go back to the list": { v: [""] } } }, { l: "zh_CN", t: { "Go back to the list": { v: ["返回至列表"] } } }, { l: "zh_HK", t: { "Go back to the list": { v: ["返回清單"] } } }, { l: "zh_TW", t: { "Go back to the list": { v: ["回到清單"] } } }, { l: "zu_ZA", t: { "Go back to the list": { v: [""] } } }], x = [{ l: "af", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ar", t: { "Hide password": { v: ["إخفاء كلمة المرور"] }, "Password is secure": { v: ["كلمة المرور مُؤمّنة"] }, "Show password": { v: ["أظهِر كلمة المرور"] } } }, { l: "ast", t: { "Hide password": { v: ["Anubrir la contraseña"] }, "Password is secure": { v: ["La contraseña ye segura"] }, "Show password": { v: ["Amosar la contraseña"] } } }, { l: "az", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "be", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "bg", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "bn_BD", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "br", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "bs", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ca", t: { "Hide password": { v: ["Amagar contrasenya"] }, "Password is secure": { v: ["Contrasenya segura<br>"] }, "Show password": { v: ["Mostrar contrasenya"] } } }, { l: "cs", t: { "Hide password": { v: ["Skrýt heslo"] }, "Password is secure": { v: ["Heslo je bezpečné"] }, "Show password": { v: ["Zobrazit heslo"] } } }, { l: "cs_CZ", t: { "Hide password": { v: ["Skrýt heslo"] }, "Password is secure": { v: ["Heslo je bezpečné"] }, "Show password": { v: ["Zobrazit heslo"] } } }, { l: "cy_GB", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "da", t: { "Hide password": { v: ["Skjul kodeord"] }, "Password is secure": { v: ["Kodeordet er sikkert"] }, "Show password": { v: ["Vis kodeord"] } } }, { l: "de", t: { "Hide password": { v: ["Passwort verbergen"] }, "Password is secure": { v: ["Passwort ist sicher"] }, "Show password": { v: ["Passwort anzeigen"] } } }, { l: "de_DE", t: { "Hide password": { v: ["Passwort verbergen"] }, "Password is secure": { v: ["Passwort ist sicher"] }, "Show password": { v: ["Passwort anzeigen"] } } }, { l: "el", t: { "Hide password": { v: ["Απόκρυψη κωδικού πρόσβασης"] }, "Password is secure": { v: ["Ο κωδικός πρόσβασης είναι ασφαλής"] }, "Show password": { v: ["Εμφάνιση κωδικού πρόσβασης"] } } }, { l: "en_GB", t: { "Hide password": { v: ["Hide password"] }, "Password is secure": { v: ["Password is secure"] }, "Show password": { v: ["Show password"] } } }, { l: "eo", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es", t: { "Hide password": { v: ["Ocultar contraseña"] }, "Password is secure": { v: ["La contraseña es segura"] }, "Show password": { v: ["Mostrar contraseña"] } } }, { l: "es_419", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_AR", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_CL", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_CO", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_CR", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_DO", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_EC", t: { "Hide password": { v: ["Ocultar contraseña"] }, "Password is secure": { v: ["La contraseña es segura"] }, "Show password": { v: ["Mostrar contraseña"] } } }, { l: "es_GT", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_HN", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_MX", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_NI", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_PA", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_PE", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_PR", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_PY", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_SV", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "es_UY", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "et_EE", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "eu", t: { "Hide password": { v: ["Ezkutatu pasahitza"] }, "Password is secure": { v: ["Pasahitza segurua da"] }, "Show password": { v: ["Erakutsi pasahitza"] } } }, { l: "fa", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "fi", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "fo", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "fr", t: { "Hide password": { v: ["Cacher le mot de passe"] }, "Password is secure": { v: ["Le mot de passe est sécurisé"] }, "Show password": { v: ["Afficher le mot de passe"] } } }, { l: "gd", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "gl", t: { "Hide password": { v: ["Agochar o contrasinal"] }, "Password is secure": { v: ["O contrasinal é seguro"] }, "Show password": { v: ["Amosar o contrasinal"] } } }, { l: "he", t: { "Hide password": { v: ["הסתרת סיסמה"] }, "Password is secure": { v: ["הסיסמה מאובטחת"] }, "Show password": { v: ["הצגת סיסמה"] } } }, { l: "hi_IN", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "hr", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "hsb", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "hu", t: { "Hide password": { v: ["Jelszó elrejtése"] }, "Password is secure": { v: ["A jelszó biztonságos"] }, "Show password": { v: ["Jelszó megjelenítése"] } } }, { l: "hy", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ia", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "id", t: { "Hide password": { v: ["Sembunyikan sandi"] }, "Password is secure": { v: ["Kata sandi sudah aman"] }, "Show password": { v: ["Tampilkan sandi"] } } }, { l: "ig", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "is", t: { "Hide password": { v: ["Fela lykilorð"] }, "Password is secure": { v: ["Lykilorðið er öruggt"] }, "Show password": { v: ["Birta lykilorð"] } } }, { l: "it", t: { "Hide password": { v: ["Nascondi la password"] }, "Password is secure": { v: ["La password è sicura"] }, "Show password": { v: ["Mostra la password"] } } }, { l: "ja", t: { "Hide password": { v: ["パスワードを非表示"] }, "Password is secure": { v: ["パスワードは保護されています"] }, "Show password": { v: ["パスワードを表示"] } } }, { l: "ka", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ka_GE", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "kab", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "kk", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "km", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "kn", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ko", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "la", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "lb", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "lo", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "lt_LT", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "lv", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "mk", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "mn", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "mr", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ms_MY", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "my", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "nb", t: { "Hide password": { v: ["Skjul passord"] }, "Password is secure": { v: ["Passordet er sikkert"] }, "Show password": { v: ["Vis passord"] } } }, { l: "ne", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "nl", t: { "Hide password": { v: ["Verberg wachtwoord"] }, "Password is secure": { v: ["Wachtwoord is veilig"] }, "Show password": { v: ["Toon wachtwoord"] } } }, { l: "nn_NO", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "oc", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "pl", t: { "Hide password": { v: ["Ukryj hasło"] }, "Password is secure": { v: ["Hasło jest bezpieczne"] }, "Show password": { v: ["Pokaż hasło"] } } }, { l: "ps", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "pt_BR", t: { "Hide password": { v: ["Ocultar a senha"] }, "Password is secure": { v: ["A senha é segura"] }, "Show password": { v: ["Mostrar senha"] } } }, { l: "pt_PT", t: { "Hide password": { v: ["Ocultar a senha"] }, "Password is secure": { v: ["A senha é segura"] }, "Show password": { v: ["Mostrar senha"] } } }, { l: "ro", t: { "Hide password": { v: ["Ascunde parola"] }, "Password is secure": { v: ["Parola este sigură"] }, "Show password": { v: ["Arată parola"] } } }, { l: "ru", t: { "Hide password": { v: ["Скрыть пароль"] }, "Password is secure": { v: ["Пароль надежный"] }, "Show password": { v: ["Показать пароль"] } } }, { l: "sc", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "si", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "sk", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "sl", t: { "Hide password": { v: ["Skrij geslo"] }, "Password is secure": { v: ["Geslo je varno"] }, "Show password": { v: ["Pokaži geslo"] } } }, { l: "sq", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "sr", t: { "Hide password": { v: ["Сакриј лозинку"] }, "Password is secure": { v: ["Лозинка је безбедна"] }, "Show password": { v: ["Прикажи лозинку"] } } }, { l: "sr@latin", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "sv", t: { "Hide password": { v: ["Göm lössenordet"] }, "Password is secure": { v: ["Lössenordet är säkert"] }, "Show password": { v: ["Visa lössenordet"] } } }, { l: "sw", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "ta", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "th", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "tk", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "tr", t: { "Hide password": { v: ["Parolayı gizle"] }, "Password is secure": { v: ["Parola güvenli"] }, "Show password": { v: ["Parolayı görüntüle"] } } }, { l: "ug", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "uk", t: { "Hide password": { v: ["Приховати пароль"] }, "Password is secure": { v: ["Пароль безпечний"] }, "Show password": { v: ["Показати пароль"] } } }, { l: "ur_PK", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "uz", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "vi", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }, { l: "zh_CN", t: { "Hide password": { v: ["隐藏密码"] }, "Password is secure": { v: ["密码安全"] }, "Show password": { v: ["显示密码"] } } }, { l: "zh_HK", t: { "Hide password": { v: ["隱藏密碼"] }, "Password is secure": { v: ["密碼是安全的"] }, "Show password": { v: ["顯示密碼"] } } }, { l: "zh_TW", t: { "Hide password": { v: ["隱藏密碼"] }, "Password is secure": { v: ["密碼安全"] }, "Show password": { v: ["顯示密碼"] } } }, { l: "zu_ZA", t: { "Hide password": { v: [""] }, "Password is secure": { v: [""] }, "Show password": { v: [""] } } }], D = [{ l: "af", t: {} }, { l: "ar", t: { "Keyboard navigation help": { v: ["مساعدة في التنقل باستعمال لوحة المفاتيح"] }, "Skip to app navigation": { v: ["تجاوَز إلى التنقل في التطبيق"] }, "Skip to main content": { v: ["تجاوَز إلى المحتوى الرئيسي"] } } }, { l: "ast", t: { "Keyboard navigation help": { v: ["Ayuda de la navegación pente'l tecláu"] }, "Skip to app navigation": { v: ["Dir a la navegación d'aplicaciones"] }, "Skip to main content": { v: ["Dir al conteníu principal"] } } }, { l: "az", t: {} }, { l: "be", t: {} }, { l: "bg", t: {} }, { l: "bn_BD", t: {} }, { l: "br", t: {} }, { l: "bs", t: {} }, { l: "ca", t: {} }, { l: "cs", t: {} }, { l: "cs_CZ", t: { "Keyboard navigation help": { v: ["Nápověda pro pohyb pomocí klávesnice"] }, "Skip to app navigation": { v: ["Přeskočit na navigaci aplikace"] }, "Skip to main content": { v: ["Přeskočit na hlavní obsah"] } } }, { l: "cy_GB", t: {} }, { l: "da", t: { "Keyboard navigation help": { v: ["Hjælp til tastaturnavigation"] }, "Skip to app navigation": { v: ["Spring til app navigation"] }, "Skip to main content": { v: ["Spring til hovedindhold"] } } }, { l: "de", t: {} }, { l: "de_DE", t: { "Keyboard navigation help": { v: ["Tastatur-Navigationshilfe"] }, "Skip to app navigation": { v: ["Zur App-Navigation springen"] }, "Skip to main content": { v: ["Zum Hauptinhalt springen"] } } }, { l: "el", t: {} }, { l: "en_GB", t: { "Keyboard navigation help": { v: ["Keyboard navigation help"] }, "Skip to app navigation": { v: ["Skip to app navigation"] }, "Skip to main content": { v: ["Skip to main content"] } } }, { l: "eo", t: {} }, { l: "es", t: { "Keyboard navigation help": { v: ["Ayuda de navegación del teclado"] }, "Skip to app navigation": { v: ["Saltar a la navegación de apps"] }, "Skip to main content": { v: ["Saltar al contenido principal"] } } }, { l: "es_419", t: {} }, { l: "es_AR", t: {} }, { l: "es_CL", t: {} }, { l: "es_CO", t: {} }, { l: "es_CR", t: {} }, { l: "es_DO", t: {} }, { l: "es_EC", t: {} }, { l: "es_GT", t: {} }, { l: "es_HN", t: {} }, { l: "es_MX", t: {} }, { l: "es_NI", t: {} }, { l: "es_PA", t: {} }, { l: "es_PE", t: {} }, { l: "es_PR", t: {} }, { l: "es_PY", t: {} }, { l: "es_SV", t: {} }, { l: "es_UY", t: {} }, { l: "et_EE", t: {} }, { l: "eu", t: {} }, { l: "fa", t: {} }, { l: "fi", t: {} }, { l: "fo", t: {} }, { l: "fr", t: {} }, { l: "gd", t: {} }, { l: "gl", t: { "Keyboard navigation help": { v: ["Axuda á navegación co teclado"] }, "Skip to app navigation": { v: ["Ir á navegación da aplicación"] }, "Skip to main content": { v: ["Ir ao contido principal"] } } }, { l: "he", t: {} }, { l: "hi_IN", t: {} }, { l: "hr", t: {} }, { l: "hsb", t: {} }, { l: "hu", t: {} }, { l: "hy", t: {} }, { l: "ia", t: {} }, { l: "id", t: {} }, { l: "ig", t: {} }, { l: "is", t: {} }, { l: "it", t: {} }, { l: "ja", t: {} }, { l: "ka", t: {} }, { l: "ka_GE", t: {} }, { l: "kab", t: {} }, { l: "kk", t: {} }, { l: "km", t: {} }, { l: "kn", t: {} }, { l: "ko", t: {} }, { l: "la", t: {} }, { l: "lb", t: {} }, { l: "lo", t: {} }, { l: "lt_LT", t: {} }, { l: "lv", t: {} }, { l: "mk", t: {} }, { l: "mn", t: {} }, { l: "mr", t: {} }, { l: "ms_MY", t: {} }, { l: "my", t: {} }, { l: "nb", t: {} }, { l: "ne", t: {} }, { l: "nl", t: {} }, { l: "nn_NO", t: {} }, { l: "oc", t: {} }, { l: "pl", t: {} }, { l: "ps", t: {} }, { l: "pt_BR", t: { "Keyboard navigation help": { v: ["Ajuda navegação de teclado"] }, "Skip to app navigation": { v: ["Ir para navegação"] }, "Skip to main content": { v: ["Ir para conteúdo principal"] } } }, { l: "pt_PT", t: {} }, { l: "ro", t: {} }, { l: "ru", t: {} }, { l: "sc", t: {} }, { l: "si", t: {} }, { l: "sk", t: {} }, { l: "sl", t: {} }, { l: "sq", t: {} }, { l: "sr", t: { "Keyboard navigation help": { v: ["Помоћ за навигацију тастатуром"] }, "Skip to app navigation": { v: ["Прескочи на навигацију апликацијом"] }, "Skip to main content": { v: ["Прескочи на главни садржај"] } } }, { l: "sr@latin", t: {} }, { l: "sv", t: { "Keyboard navigation help": { v: ["Hjälp med tangentbordsnavigering"] }, "Skip to app navigation": { v: ["Hoppa till appnavigering"] }, "Skip to main content": { v: ["Hoppa till huvudinnehåll"] } } }, { l: "sw", t: {} }, { l: "ta", t: {} }, { l: "th", t: {} }, { l: "tk", t: {} }, { l: "tr", t: { "Keyboard navigation help": { v: ["Klavye ile gezinme yardımı"] }, "Skip to app navigation": { v: ["Uygulama gezinmesine git"] }, "Skip to main content": { v: ["Ana içeriğe git"] } } }, { l: "ug", t: {} }, { l: "uk", t: {} }, { l: "ur_PK", t: {} }, { l: "uz", t: {} }, { l: "vi", t: {} }, { l: "zh_CN", t: {} }, { l: "zh_HK", t: {} }, { l: "zh_TW", t: {} }, { l: "zu_ZA", t: {} }], U = [{ l: "af", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ar", t: { 'Load more "{options}"': { v: ['تحميل المزيد من "{options}" '] }, "Raw link {options}": { v: [" الرابط الخام raw link ـ {options}"] }, "Start typing to search": { v: ["إبدإ كتابة مفردات البحث"] } } }, { l: "ast", t: { 'Load more "{options}"': { v: ["Cargar más «{options}»"] }, "Raw link {options}": { v: ["Enllaz en bruto {optiones}"] }, "Start typing to search": { v: ["Comienza a escribir pa buscar"] } } }, { l: "az", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "be", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "bg", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "bn_BD", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "br", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "bs", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ca", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "cs", t: { "Raw link {options}": { v: ["Holý odkaz {options}"] }, "Start typing to search": { v: ["Vyhledávejte psaním"] } } }, { l: "cs_CZ", t: { 'Load more "{options}"': { v: ["Načíst další „{options}“"] }, "Raw link {options}": { v: ["Holý odkaz {options}"] }, "Start typing to search": { v: ["Vyhledávejte psaním"] } } }, { l: "cy_GB", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "da", t: { 'Load more "{options}"': { v: ['Indlæs flere "{options}"'] }, "Raw link {options}": { v: ["Rå link {options}"] }, "Start typing to search": { v: ["Begynd at skrive for at søge"] } } }, { l: "de", t: { 'Load more "{options}"': { v: ['Weitere "{options}" laden'] }, "Raw link {options}": { v: ["Unverarbeiteter Link {Optionen}"] }, "Start typing to search": { v: ["Beginne mit der Eingabe, um zu suchen"] } } }, { l: "de_DE", t: { 'Load more "{options}"': { v: ['Weitere "{options}" laden'] }, "Raw link {options}": { v: ["Unverarbeiteter Link {Optionen}"] }, "Start typing to search": { v: ["Mit der Eingabe beginnen, um zu suchen"] } } }, { l: "el", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "en_GB", t: { 'Load more "{options}"': { v: ['Load more "{options}"'] }, "Raw link {options}": { v: ["Raw link {options}"] }, "Start typing to search": { v: ["Start typing to search"] } } }, { l: "eo", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es", t: { 'Load more "{options}"': { v: ['Cargar más "{options}"'] }, "Raw link {options}": { v: ["Enlace directo {options}"] }, "Start typing to search": { v: ["Comience a escribir para buscar"] } } }, { l: "es_419", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_AR", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_CL", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_CO", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_CR", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_DO", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_EC", t: { 'Load more "{options}"': { v: [""] }, "Raw link {options}": { v: ["Enlace directo {options}"] }, "Start typing to search": { v: ["Comienza a escribir para buscar"] } } }, { l: "es_GT", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_HN", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_MX", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_NI", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_PA", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_PE", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_PR", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_PY", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_SV", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "es_UY", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "et_EE", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "eu", t: { 'Load more "{options}"': { v: ['Kargatu "{options}" gehiago'] }, "Raw link {options}": { v: ["Formaturik gabeko esteka {aukerak}"] }, "Start typing to search": { v: ["Hasi idazten bilatzeko"] } } }, { l: "fa", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "fi", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "fo", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "fr", t: { 'Load more "{options}"': { v: ['Charger d\'avantage "{options}"'] }, "Raw link {options}": { v: ["Lien brut {options}"] }, "Start typing to search": { v: ["Commencez à écrire pour rechercher"] } } }, { l: "gd", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "gl", t: { 'Load more "{options}"': { v: ["Cargar máis «{options}»"] }, "Raw link {options}": { v: ["Ligazón sen procesar {options}"] }, "Start typing to search": { v: ["Comece a escribir para buscar"] } } }, { l: "he", t: { 'Load more "{options}"': { v: [""] }, "Raw link {options}": { v: ["קישור גולמי {options}"] }, "Start typing to search": { v: ["התחלת הקלדה מחפשת"] } } }, { l: "hi_IN", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "hr", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "hsb", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "hu", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "hy", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ia", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "id", t: { 'Load more "{options}"': { v: ['Muat "{options}" lainnya'] }, "Raw link {options}": { v: ["Tautan mentah {options}"] }, "Start typing to search": { v: ["Ketik untuk mulai mencari"] } } }, { l: "ig", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "is", t: { 'Load more "{options}"': { v: ['Hlaða inn fleiri "{options}"'] }, "Raw link {options}": { v: ["Hrár tengill {options}"] }, "Start typing to search": { v: ["Byrjaðu að skrifa til að leita"] } } }, { l: "it", t: { 'Load more "{options}"': { v: ['Carica più "{options}"'] }, "Raw link {options}": { v: ["Raw link {options}"] }, "Start typing to search": { v: ["Iniziare a digitare per effettuare la ricerca"] } } }, { l: "ja", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ka", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ka_GE", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "kab", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "kk", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "km", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "kn", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ko", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "la", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "lb", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "lo", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "lt_LT", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "lv", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "mk", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "mn", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "mr", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ms_MY", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "my", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "nb", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ne", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "nl", t: { 'Load more "{options}"': { v: ['Laad meer "{options}"'] }, "Raw link {options}": { v: ["Basis link {options}"] }, "Start typing to search": { v: ["Start met typen om te zoeken"] } } }, { l: "nn_NO", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "oc", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "pl", t: { 'Load more "{options}"': { v: ['Załaduj więcej "{options}"'] }, "Raw link {options}": { v: ["Link Raw {options}"] }, "Start typing to search": { v: ["Zacznij pisać, aby wyszukać"] } } }, { l: "ps", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "pt_BR", t: { 'Load more "{options}"': { v: ['Carregue mais "{options}"'] }, "Raw link {options}": { v: ["Link bruto {options}"] }, "Start typing to search": { v: ["Comece a digitar para pesquisar"] } } }, { l: "pt_PT", t: { 'Load more "{options}"': { v: [""] }, "Raw link {options}": { v: ["Link inicial {options}"] }, "Start typing to search": { v: ["Comece a digitar para pesquisar"] } } }, { l: "ro", t: { 'Load more "{options}"': { v: ['Încarcă mai multe "{options}"'] }, "Raw link {options}": { v: ["Link brut {options}"] }, "Start typing to search": { v: ["Tastați pentru căutare"] } } }, { l: "ru", t: { 'Load more "{options}"': { v: ['Загрузить больше "{options}""'] }, "Raw link {options}": { v: ["Необработанная ссылка {options}"] }, "Start typing to search": { v: ["Начните вводить текст для поиска"] } } }, { l: "sc", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "si", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "sk", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "sl", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "sq", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "sr", t: { 'Load more "{options}"': { v: ["Учитај још „{options}”"] }, "Raw link {options}": { v: ["Сирови линк {options}"] }, "Start typing to search": { v: ["Покрените претрагу куцањем"] } } }, { l: "sr@latin", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "sv", t: { 'Load more "{options}"': { v: ['Ladda fler "{options}"'] }, "Raw link {options}": { v: ["Oformaterad länk {options}"] }, "Start typing to search": { v: ["Börja skriva för att söka"] } } }, { l: "sw", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "ta", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "th", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "tk", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "tr", t: { 'Load more "{options}"': { v: ['Diğer "{options}"'] }, "Raw link {options}": { v: ["Ham bağlantı {options}"] }, "Start typing to search": { v: ["Aramak için yazmaya başlayın"] } } }, { l: "ug", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "uk", t: { 'Load more "{options}"': { v: ['Завантажити більше "{options}"'] }, "Raw link {options}": { v: ["Пряме посилання {options}"] }, "Start typing to search": { v: ["Почніть вводити для пошуку"] } } }, { l: "ur_PK", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "uz", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "vi", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "zh_CN", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }, { l: "zh_HK", t: { 'Load more "{options}"': { v: ['載入更多 "{options}"'] }, "Raw link {options}": { v: ["原始連結 {options}"] }, "Start typing to search": { v: ["開始輸入以進行搜尋"] } } }, { l: "zh_TW", t: { 'Load more "{options}"': { v: ["載入更多「{options}」"] }, "Raw link {options}": { v: ["原始連結 {options}"] }, "Start typing to search": { v: ["開始輸入以進行搜尋"] } } }, { l: "zu_ZA", t: { "Raw link {options}": { v: [""] }, "Start typing to search": { v: [""] } } }], q = [{ l: "af", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ar", t: { "Message limit of {count} characters reached": { v: ["تمّ الوصول إلى الحد الأقصى لعدد الأحرف في الرسالة: {count} حرف"] }, "No link provider found": { v: ["لا يوجد أيّ مزود روابط link provider"] }, "Write a message …": { v: ["أكتُب رسالةً ..."] } } }, { l: "ast", t: { "Message limit of {count} characters reached": { v: ["Algamóse la llende del mensaxe con {count} caráuteres"] }, "No link provider found": { v: ["Nun s'atopó nengún fornidor d'enllaces"] }, "Write a message …": { v: ["Escribi un mensaxe…"] } } }, { l: "az", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "be", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "bg", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "bn_BD", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "br", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "bs", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ca", t: { "Message limit of {count} characters reached": { v: ["S'ha arribat al límit de {count} caràcters per missatge"] }, "No link provider found": { v: [""] } } }, { l: "cs", t: { "Message limit of {count} characters reached": { v: ["Dosaženo limitu počtu ({count}) znaků zprávy"] }, "No link provider found": { v: ["Nenalezen žádný poskytovatel odkazů"] } } }, { l: "cs_CZ", t: { "Message limit of {count} characters reached": { v: ["Dosaženo limitu počtu ({count}) znaků zprávy"] }, "No link provider found": { v: ["Nenalezen žádný poskytovatel odkazů"] }, "Write a message …": { v: ["Napsat zprávu…"] } } }, { l: "cy_GB", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "da", t: { "Message limit of {count} characters reached": { v: ["Begrænsning på {count} tegn er nået"] }, "No link provider found": { v: ["Ingen linkudbyder fundet"] }, "Write a message …": { v: ["Skriv en besked ..."] } } }, { l: "de", t: { "Message limit of {count} characters reached": { v: ["Nachrichtenlimit von {count} Zeichen erreicht."] }, "No link provider found": { v: ["Kein Linkanbieter gefunden"] }, "Write a message …": { v: ["Nachricht schreiben …"] } } }, { l: "de_DE", t: { "Message limit of {count} characters reached": { v: ["Nachrichtenlimit von {count} Zeichen erreicht"] }, "No link provider found": { v: ["Kein Linkanbieter gefunden"] }, "Write a message …": { v: ["Nachricht schreiben …"] } } }, { l: "el", t: { "Message limit of {count} characters reached": { v: ["Συμπληρώθηκε το όριο των {count} χαρακτήρων του μηνύματος"] }, "No link provider found": { v: [""] } } }, { l: "en_GB", t: { "Message limit of {count} characters reached": { v: ["Message limit of {count} characters reached"] }, "No link provider found": { v: ["No link provider found"] }, "Write a message …": { v: ["Write a message …"] } } }, { l: "eo", t: { "Message limit of {count} characters reached": { v: ["La limo je {count} da literoj atingita"] }, "No link provider found": { v: [""] } } }, { l: "es", t: { "Message limit of {count} characters reached": { v: ["Se ha alcanzado el límite de {count} caracteres en el mensaje"] }, "No link provider found": { v: ["No se encontró ningún proveedor de enlaces"] }, "Write a message …": { v: ["Escriba un mensaje ..."] } } }, { l: "es_419", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_AR", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_CL", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_CO", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_CR", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_DO", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_EC", t: { "Message limit of {count} characters reached": { v: ["Se ha alcanzado el límite de caracteres del mensaje {count}"] }, "No link provider found": { v: ["No se encontró ningún proveedor de enlaces"] }, "Write a message …": { v: [""] } } }, { l: "es_GT", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_HN", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_MX", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_NI", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_PA", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_PE", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_PR", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_PY", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_SV", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "es_UY", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "et_EE", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "eu", t: { "Message limit of {count} characters reached": { v: ["Mezuaren {count} karaketere-limitera heldu zara"] }, "No link provider found": { v: ["Ez da aurkitu esteka-hornitzailerik"] }, "Write a message …": { v: ["Idatzi mezu bat…"] } } }, { l: "fa", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "fi", t: { "Message limit of {count} characters reached": { v: ["Viestin merkken enimmäisimäärä {count} täynnä "] }, "No link provider found": { v: [""] } } }, { l: "fo", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "fr", t: { "Message limit of {count} characters reached": { v: ["Limite de messages de {count} caractères atteinte"] }, "No link provider found": { v: ["Aucun fournisseur de lien trouvé"] }, "Write a message …": { v: ["Ecrire un message..."] } } }, { l: "gd", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "gl", t: { "Message limit of {count} characters reached": { v: ["Acadouse o límite de {count} caracteres por mensaxe"] }, "No link provider found": { v: ["Non se atopou ningún provedor de ligazóns"] }, "Write a message …": { v: ["Escribir unha mensaxe…"] } } }, { l: "he", t: { "Message limit of {count} characters reached": { v: ["הגעת למגבלה של {count} תווים"] }, "No link provider found": { v: ["לא נמצא ספק קישורים"] }, "Write a message …": { v: [""] } } }, { l: "hi_IN", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "hr", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "hsb", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "hu", t: { "Message limit of {count} characters reached": { v: ["{count} karakteres üzenetkorlát elérve"] }, "No link provider found": { v: [""] } } }, { l: "hy", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ia", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "id", t: { "Message limit of {count} characters reached": { v: ["Batas jumlah karakter pesan ({count} karakter) tercapai"] }, "No link provider found": { v: ["Tidak ada penyedia tautan yang ditemukan"] }, "Write a message …": { v: ["Tulis pesan ..."] } } }, { l: "ig", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "is", t: { "Message limit of {count} characters reached": { v: ["Takmörkum {count} stafa náð"] }, "No link provider found": { v: ["Engin tenglaveita fannst"] }, "Write a message …": { v: ["Skrifaðu skilaboð …"] } } }, { l: "it", t: { "Message limit of {count} characters reached": { v: ["Limite dei messaggi di {count} caratteri raggiunto"] }, "No link provider found": { v: ["Nessun fornitore di link trovato"] }, "Write a message …": { v: ["Scrivi un messaggio ..."] } } }, { l: "ja", t: { "Message limit of {count} characters reached": { v: ["{count} 文字のメッセージ上限に達しています"] }, "No link provider found": { v: [""] } } }, { l: "ka", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ka_GE", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "kab", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "kk", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "km", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "kn", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ko", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "la", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "lb", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "lo", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "lt_LT", t: { "Message limit of {count} characters reached": { v: ["Pasiekta {count} simbolių žinutės riba"] }, "No link provider found": { v: [""] } } }, { l: "lv", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "mk", t: { "Message limit of {count} characters reached": { v: ["Ограничувањето на должината на пораката од {count} карактери е надминато"] }, "No link provider found": { v: [""] } } }, { l: "mn", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "mr", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ms_MY", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "my", t: { "Message limit of {count} characters reached": { v: ["ကန့်သတ် စာလုံးရေ {count} လုံး ပြည့်ပါပြီ"] }, "No link provider found": { v: [""] } } }, { l: "nb", t: { "Message limit of {count} characters reached": { v: ["Karakter begrensing {count} nådd i melding"] }, "No link provider found": { v: [""] } } }, { l: "ne", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "nl", t: { "Message limit of {count} characters reached": { v: ["Berichtlimiet van {count} karakters bereikt"] }, "No link provider found": { v: ["Geen link provider gevonden"] }, "Write a message …": { v: ["Schrijf een bericht..."] } } }, { l: "nn_NO", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "oc", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "pl", t: { "Message limit of {count} characters reached": { v: ["Przekroczono limit wiadomości wynoszący {count} znaków"] }, "No link provider found": { v: ["Nie znaleziono dostawcy linków"] }, "Write a message …": { v: ["Napisać wiadomość…"] } } }, { l: "ps", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "pt_BR", t: { "Message limit of {count} characters reached": { v: ["Limite de mensagem de {count} caracteres atingido"] }, "No link provider found": { v: ["Nenhum provedor de link encontrado"] }, "Write a message …": { v: ["Escreve uma mensagem …"] } } }, { l: "pt_PT", t: { "Message limit of {count} characters reached": { v: ["Atingido o limite de {count} carateres da mensagem."] }, "No link provider found": { v: ["Nenhum fornecedor de link encontrado"] }, "Write a message …": { v: [""] } } }, { l: "ro", t: { "Message limit of {count} characters reached": { v: ["Limita mesajului de {count} caractere a fost atinsă"] }, "No link provider found": { v: ["Nu s-a găsit un provider pentru linkuri"] }, "Write a message …": { v: ["Scrieți un mesaj ..."] } } }, { l: "ru", t: { "Message limit of {count} characters reached": { v: ["Достигнуто ограничение на количество символов в {count}"] }, "No link provider found": { v: ["Поставщик ссылок не найден"] }, "Write a message …": { v: ["Напиши сообщение …"] } } }, { l: "sc", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "si", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "sk", t: { "Message limit of {count} characters reached": { v: ["Limit správy na {count} znakov dosiahnutý"] }, "No link provider found": { v: [""] } } }, { l: "sl", t: { "Message limit of {count} characters reached": { v: ["Dosežena omejitev {count} znakov na sporočilo."] }, "No link provider found": { v: [""] } } }, { l: "sq", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "sr", t: { "Message limit of {count} characters reached": { v: ["Достигнуто је ограничење величине поруке од {count} карактера"] }, "No link provider found": { v: ["Није пронађен ниједан пружалац линка"] }, "Write a message …": { v: ["Напишите поруку…"] } } }, { l: "sr@latin", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "sv", t: { "Message limit of {count} characters reached": { v: ["Meddelandegräns {count} tecken används"] }, "No link provider found": { v: ["Ingen länkleverantör hittades"] }, "Write a message …": { v: ["Skriv ett meddelande …"] } } }, { l: "sw", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "ta", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "th", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "tk", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "tr", t: { "Message limit of {count} characters reached": { v: ["{count} karakter ileti sınırına ulaşıldı"] }, "No link provider found": { v: ["Bağlantı sağlayıcısı bulunamadı"] }, "Write a message …": { v: ["Bir ileti yazın…"] } } }, { l: "ug", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "uk", t: { "Message limit of {count} characters reached": { v: ["Вичерпано ліміт у {count} символів для повідомлення"] }, "No link provider found": { v: ["Не наведено посилання"] }, "Write a message …": { v: ["Написати повідомлення ..."] } } }, { l: "ur_PK", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "uz", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "vi", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }, { l: "zh_CN", t: { "Message limit of {count} characters reached": { v: ["已达到 {count} 个字符的消息限制"] }, "No link provider found": { v: [""] } } }, { l: "zh_HK", t: { "Message limit of {count} characters reached": { v: ["已達到訊息最多 {count} 字元限制"] }, "No link provider found": { v: ["找不到連結提供者"] }, "Write a message …": { v: ["編寫訊息 …"] } } }, { l: "zh_TW", t: { "Message limit of {count} characters reached": { v: ["已達到訊息最多 {count} 字元限制"] }, "No link provider found": { v: ["找不到連結提供者"] }, "Write a message …": { v: ["編寫訊息……"] } } }, { l: "zu_ZA", t: { "Message limit of {count} characters reached": { v: [""] }, "No link provider found": { v: [""] } } }], H = [{ l: "af", t: { "More items …": { v: [""] } } }, { l: "ar", t: { "More items …": { v: ["عناصر أخرى ..."] } } }, { l: "ast", t: { "More items …": { v: ["Más elementos…"] } } }, { l: "az", t: { "More items …": { v: [""] } } }, { l: "be", t: { "More items …": { v: [""] } } }, { l: "bg", t: { "More items …": { v: [""] } } }, { l: "bn_BD", t: { "More items …": { v: [""] } } }, { l: "br", t: { "More items …": { v: [""] } } }, { l: "bs", t: { "More items …": { v: [""] } } }, { l: "ca", t: { "More items …": { v: ["Més artícles..."] } } }, { l: "cs", t: { "More items …": { v: ["Další položky…"] } } }, { l: "cs_CZ", t: { "More items …": { v: ["Další položky…"] } } }, { l: "cy_GB", t: { "More items …": { v: [""] } } }, { l: "da", t: { "More items …": { v: ["Mere ..."] } } }, { l: "de", t: { "More items …": { v: ["Weitere Elemente …"] } } }, { l: "de_DE", t: { "More items …": { v: ["Weitere Elemente …"] } } }, { l: "el", t: { "More items …": { v: ["Περισσότερα στοιχεία …"] } } }, { l: "en_GB", t: { "More items …": { v: ["More items …"] } } }, { l: "eo", t: { "More items …": { v: [""] } } }, { l: "es", t: { "More items …": { v: ["Más ítems ..."] } } }, { l: "es_419", t: { "More items …": { v: [""] } } }, { l: "es_AR", t: { "More items …": { v: [""] } } }, { l: "es_CL", t: { "More items …": { v: [""] } } }, { l: "es_CO", t: { "More items …": { v: [""] } } }, { l: "es_CR", t: { "More items …": { v: [""] } } }, { l: "es_DO", t: { "More items …": { v: [""] } } }, { l: "es_EC", t: { "More items …": { v: ["Más elementos..."] } } }, { l: "es_GT", t: { "More items …": { v: [""] } } }, { l: "es_HN", t: { "More items …": { v: [""] } } }, { l: "es_MX", t: { "More items …": { v: [""] } } }, { l: "es_NI", t: { "More items …": { v: [""] } } }, { l: "es_PA", t: { "More items …": { v: [""] } } }, { l: "es_PE", t: { "More items …": { v: [""] } } }, { l: "es_PR", t: { "More items …": { v: [""] } } }, { l: "es_PY", t: { "More items …": { v: [""] } } }, { l: "es_SV", t: { "More items …": { v: [""] } } }, { l: "es_UY", t: { "More items …": { v: [""] } } }, { l: "et_EE", t: { "More items …": { v: [""] } } }, { l: "eu", t: { "More items …": { v: ["Elementu gehiago …"] } } }, { l: "fa", t: { "More items …": { v: [""] } } }, { l: "fi", t: { "More items …": { v: [""] } } }, { l: "fo", t: { "More items …": { v: [""] } } }, { l: "fr", t: { "More items …": { v: ["Plus d'éléments..."] } } }, { l: "gd", t: { "More items …": { v: [""] } } }, { l: "gl", t: { "More items …": { v: ["Máis elementos…"] } } }, { l: "he", t: { "More items …": { v: ["פריטים נוספים…"] } } }, { l: "hi_IN", t: { "More items …": { v: [""] } } }, { l: "hr", t: { "More items …": { v: [""] } } }, { l: "hsb", t: { "More items …": { v: [""] } } }, { l: "hu", t: { "More items …": { v: ["További elemek..."] } } }, { l: "hy", t: { "More items …": { v: [""] } } }, { l: "ia", t: { "More items …": { v: [""] } } }, { l: "id", t: { "More items …": { v: ["Item lainnya…"] } } }, { l: "ig", t: { "More items …": { v: [""] } } }, { l: "is", t: { "More items …": { v: ["Fleiri atriði …"] } } }, { l: "it", t: { "More items …": { v: ["Più elementi ..."] } } }, { l: "ja", t: { "More items …": { v: ["他のアイテム"] } } }, { l: "ka", t: { "More items …": { v: [""] } } }, { l: "ka_GE", t: { "More items …": { v: [""] } } }, { l: "kab", t: { "More items …": { v: [""] } } }, { l: "kk", t: { "More items …": { v: [""] } } }, { l: "km", t: { "More items …": { v: [""] } } }, { l: "kn", t: { "More items …": { v: [""] } } }, { l: "ko", t: { "More items …": { v: [""] } } }, { l: "la", t: { "More items …": { v: [""] } } }, { l: "lb", t: { "More items …": { v: [""] } } }, { l: "lo", t: { "More items …": { v: [""] } } }, { l: "lt_LT", t: { "More items …": { v: [""] } } }, { l: "lv", t: { "More items …": { v: [""] } } }, { l: "mk", t: { "More items …": { v: [""] } } }, { l: "mn", t: { "More items …": { v: [""] } } }, { l: "mr", t: { "More items …": { v: [""] } } }, { l: "ms_MY", t: { "More items …": { v: [""] } } }, { l: "my", t: { "More items …": { v: [""] } } }, { l: "nb", t: { "More items …": { v: ["Flere gjenstander..."] } } }, { l: "ne", t: { "More items …": { v: [""] } } }, { l: "nl", t: { "More items …": { v: ["Meer items..."] } } }, { l: "nn_NO", t: { "More items …": { v: [""] } } }, { l: "oc", t: { "More items …": { v: [""] } } }, { l: "pl", t: { "More items …": { v: ["Więcej pozycji…"] } } }, { l: "ps", t: { "More items …": { v: [""] } } }, { l: "pt_BR", t: { "More items …": { v: ["Mais itens …"] } } }, { l: "pt_PT", t: { "More items …": { v: ["Mais itens …"] } } }, { l: "ro", t: { "More items …": { v: ["Mai multe articole ..."] } } }, { l: "ru", t: { "More items …": { v: ["Больше элементов..."] } } }, { l: "sc", t: { "More items …": { v: [""] } } }, { l: "si", t: { "More items …": { v: [""] } } }, { l: "sk", t: { "More items …": { v: [""] } } }, { l: "sl", t: { "More items …": { v: ["Več predmetov ..."] } } }, { l: "sq", t: { "More items …": { v: [""] } } }, { l: "sr", t: { "More items …": { v: ["Још ставки..."] } } }, { l: "sr@latin", t: { "More items …": { v: [""] } } }, { l: "sv", t: { "More items …": { v: ["Fler objekt"] } } }, { l: "sw", t: { "More items …": { v: [""] } } }, { l: "ta", t: { "More items …": { v: [""] } } }, { l: "th", t: { "More items …": { v: [""] } } }, { l: "tk", t: { "More items …": { v: [""] } } }, { l: "tr", t: { "More items …": { v: ["Diğer ögeler…"] } } }, { l: "ug", t: { "More items …": { v: [""] } } }, { l: "uk", t: { "More items …": { v: ["Більше об'єктів..."] } } }, { l: "ur_PK", t: { "More items …": { v: [""] } } }, { l: "uz", t: { "More items …": { v: [""] } } }, { l: "vi", t: { "More items …": { v: [""] } } }, { l: "zh_CN", t: { "More items …": { v: ["更多项目…"] } } }, { l: "zh_HK", t: { "More items …": { v: ["更多項目 …"] } } }, { l: "zh_TW", t: { "More items …": { v: ["更多項目……"] } } }, { l: "zu_ZA", t: { "More items …": { v: [""] } } }], V = [{ l: "af", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ar", t: { Next: { v: ["التالي"] }, "Pause slideshow": { v: ["تجميد عرض الشرائح"] }, Previous: { v: ["السابق"] }, "Start slideshow": { v: ["إبدإ العرض"] } } }, { l: "ast", t: { Next: { v: ["Siguiente"] }, "Pause slideshow": { v: ["Posar la presentación de diapositives"] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Aniciar la presentación de diapositives"] } } }, { l: "az", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "be", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "bg", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "bn_BD", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "br", t: { Next: { v: ["Da heul"] }, "Pause slideshow": { v: ["Arsav an diaporama"] }, Previous: { v: ["A-raok"] }, "Start slideshow": { v: ["Kregiñ an diaporama"] } } }, { l: "bs", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ca", t: { Next: { v: ["Següent"] }, "Pause slideshow": { v: ["Atura la presentació"] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Inicia la presentació"] } } }, { l: "cs", t: { Next: { v: ["Následující"] }, "Pause slideshow": { v: ["Pozastavit prezentaci"] }, Previous: { v: ["Předchozí"] }, "Start slideshow": { v: ["Spustit prezentaci"] } } }, { l: "cs_CZ", t: { Next: { v: ["Následující"] }, "Pause slideshow": { v: ["Pozastavit prezentaci"] }, Previous: { v: ["Předchozí"] }, "Start slideshow": { v: ["Spustit prezentaci"] } } }, { l: "cy_GB", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "da", t: { Next: { v: ["Videre"] }, "Pause slideshow": { v: ["Suspender fremvisning"] }, Previous: { v: ["Forrige"] }, "Start slideshow": { v: ["Start fremvisning"] } } }, { l: "de", t: { Next: { v: ["Weiter"] }, "Pause slideshow": { v: ["Diashow pausieren"] }, Previous: { v: ["Vorherige"] }, "Start slideshow": { v: ["Diashow starten"] } } }, { l: "de_DE", t: { Next: { v: ["Weiter"] }, "Pause slideshow": { v: ["Diashow pausieren"] }, Previous: { v: ["Vorherige"] }, "Start slideshow": { v: ["Diashow starten"] } } }, { l: "el", t: { Next: { v: ["Επόμενο"] }, "Pause slideshow": { v: ["Παύση προβολής διαφανειών"] }, Previous: { v: ["Προηγούμενο"] }, "Start slideshow": { v: ["Έναρξη προβολής διαφανειών"] } } }, { l: "en_GB", t: { Next: { v: ["Next"] }, "Pause slideshow": { v: ["Pause slideshow"] }, Previous: { v: ["Previous"] }, "Start slideshow": { v: ["Start slideshow"] } } }, { l: "eo", t: { Next: { v: ["Sekva"] }, "Pause slideshow": { v: ["Payzi bildprezenton"] }, Previous: { v: ["Antaŭa"] }, "Start slideshow": { v: ["Komenci bildprezenton"] } } }, { l: "es", t: { Next: { v: ["Siguiente"] }, "Pause slideshow": { v: ["Pausar la presentación "] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Iniciar la presentación"] } } }, { l: "es_419", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_AR", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_CL", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_CO", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_CR", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_DO", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_EC", t: { Next: { v: ["Siguiente"] }, "Pause slideshow": { v: ["Pausar presentación de diapositivas"] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Iniciar presentación de diapositivas"] } } }, { l: "es_GT", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_HN", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_MX", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_NI", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_PA", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_PE", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_PR", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_PY", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_SV", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "es_UY", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "et_EE", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "eu", t: { Next: { v: ["Hurrengoa"] }, "Pause slideshow": { v: ["Pausatu diaporama"] }, Previous: { v: ["Aurrekoa"] }, "Start slideshow": { v: ["Hasi diaporama"] } } }, { l: "fa", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "fi", t: { Next: { v: ["Seuraava"] }, "Pause slideshow": { v: ["Keskeytä diaesitys"] }, Previous: { v: ["Edellinen"] }, "Start slideshow": { v: ["Aloita diaesitys"] } } }, { l: "fo", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "fr", t: { Next: { v: ["Suivant"] }, "Pause slideshow": { v: ["Mettre le diaporama en pause"] }, Previous: { v: ["Précédent"] }, "Start slideshow": { v: ["Démarrer le diaporama"] } } }, { l: "gd", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "gl", t: { Next: { v: ["Seguinte"] }, "Pause slideshow": { v: ["Pausar o diaporama"] }, Previous: { v: ["Anterir"] }, "Start slideshow": { v: ["Iniciar o diaporama"] } } }, { l: "he", t: { Next: { v: ["הבא"] }, "Pause slideshow": { v: ["השהיית מצגת"] }, Previous: { v: ["הקודם"] }, "Start slideshow": { v: ["התחלת המצגת"] } } }, { l: "hi_IN", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "hr", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "hsb", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "hu", t: { Next: { v: ["Következő"] }, "Pause slideshow": { v: ["Diavetítés szüneteltetése"] }, Previous: { v: ["Előző"] }, "Start slideshow": { v: ["Diavetítés indítása"] } } }, { l: "hy", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ia", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "id", t: { Next: { v: ["Selanjutnya"] }, "Pause slideshow": { v: ["Jeda tayangan slide"] }, Previous: { v: ["Sebelumnya"] }, "Start slideshow": { v: ["Mulai salindia"] } } }, { l: "ig", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "is", t: { Next: { v: ["Næsta"] }, "Pause slideshow": { v: ["Gera hlé á skyggnusýningu"] }, Previous: { v: ["Fyrri"] }, "Start slideshow": { v: ["Byrja skyggnusýningu"] } } }, { l: "it", t: { Next: { v: ["Successivo"] }, "Pause slideshow": { v: ["Presentazione in pausa"] }, Previous: { v: ["Precedente"] }, "Start slideshow": { v: ["Avvia presentazione"] } } }, { l: "ja", t: { Next: { v: ["次"] }, "Pause slideshow": { v: ["スライドショーを一時停止"] }, Previous: { v: ["前"] }, "Start slideshow": { v: ["スライドショーを開始"] } } }, { l: "ka", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ka_GE", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "kab", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "kk", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "km", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "kn", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ko", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "la", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "lb", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "lo", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "lt_LT", t: { Next: { v: ["Kitas"] }, "Pause slideshow": { v: ["Pristabdyti skaidrių rodymą"] }, Previous: { v: ["Ankstesnis"] }, "Start slideshow": { v: ["Pradėti skaidrių rodymą"] } } }, { l: "lv", t: { Next: { v: ["Nākamais"] }, "Pause slideshow": { v: ["Pauzēt slaidrādi"] }, Previous: { v: ["Iepriekšējais"] }, "Start slideshow": { v: ["Sākt slaidrādi"] } } }, { l: "mk", t: { Next: { v: ["Следно"] }, "Pause slideshow": { v: ["Пузирај слајдшоу"] }, Previous: { v: ["Предходно"] }, "Start slideshow": { v: ["Стартувај слајдшоу"] } } }, { l: "mn", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "mr", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ms_MY", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "my", t: { Next: { v: ["နောက်သို့ဆက်ရန်"] }, "Pause slideshow": { v: ["စလိုက်ရှိုး ခေတ္တရပ်ရန်"] }, Previous: { v: ["ယခင်"] }, "Start slideshow": { v: ["စလိုက်ရှိုးအား စတင်ရန်"] } } }, { l: "nb", t: { Next: { v: ["Neste"] }, "Pause slideshow": { v: ["Pause lysbildefremvisning"] }, Previous: { v: ["Forrige"] }, "Start slideshow": { v: ["Start lysbildefremvisning"] } } }, { l: "ne", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "nl", t: { Next: { v: ["Volgende"] }, "Pause slideshow": { v: ["Pauzeer diavoorstelling"] }, Previous: { v: ["Vorige"] }, "Start slideshow": { v: ["Start diavoorstelling"] } } }, { l: "nn_NO", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "oc", t: { Next: { v: ["Seguent"] }, "Pause slideshow": { v: ["Metre en pausa lo diaporama"] }, Previous: { v: ["Precedent"] }, "Start slideshow": { v: ["Lançar lo diaporama"] } } }, { l: "pl", t: { Next: { v: ["Następny"] }, "Pause slideshow": { v: ["Wstrzymaj pokaz slajdów"] }, Previous: { v: ["Poprzedni"] }, "Start slideshow": { v: ["Rozpocznij pokaz slajdów"] } } }, { l: "ps", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "pt_BR", t: { Next: { v: ["Próximo"] }, "Pause slideshow": { v: ["Pausar apresentação de slides"] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Iniciar apresentação de slides"] } } }, { l: "pt_PT", t: { Next: { v: ["Seguinte"] }, "Pause slideshow": { v: ["Pausar diaporama"] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Iniciar diaporama"] } } }, { l: "ro", t: { Next: { v: ["Următorul"] }, "Pause slideshow": { v: ["Pauză prezentare de diapozitive"] }, Previous: { v: ["Anterior"] }, "Start slideshow": { v: ["Începeți prezentarea de diapozitive"] } } }, { l: "ru", t: { Next: { v: ["Следующее"] }, "Pause slideshow": { v: ["Приостановить показ слйдов"] }, Previous: { v: ["Предыдущее"] }, "Start slideshow": { v: ["Начать показ слайдов"] } } }, { l: "sc", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "si", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "sk", t: { Next: { v: ["Ďalší"] }, "Pause slideshow": { v: ["Pozastaviť prezentáciu"] }, Previous: { v: ["Predchádzajúci"] }, "Start slideshow": { v: ["Začať prezentáciu"] } } }, { l: "sl", t: { Next: { v: ["Naslednji"] }, "Pause slideshow": { v: ["Ustavi predstavitev"] }, Previous: { v: ["Predhodni"] }, "Start slideshow": { v: ["Začni predstavitev"] } } }, { l: "sq", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "sr", t: { Next: { v: ["Следеће"] }, "Pause slideshow": { v: ["Паузирај слајд шоу"] }, Previous: { v: ["Претходно"] }, "Start slideshow": { v: ["Покрени слајд шоу"] } } }, { l: "sr@latin", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "sv", t: { Next: { v: ["Nästa"] }, "Pause slideshow": { v: ["Pausa bildspelet"] }, Previous: { v: ["Föregående"] }, "Start slideshow": { v: ["Starta bildspelet"] } } }, { l: "sw", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "ta", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "th", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "tk", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "tr", t: { Next: { v: ["Sonraki"] }, "Pause slideshow": { v: ["Slayt sunumunu duraklat"] }, Previous: { v: ["Önceki"] }, "Start slideshow": { v: ["Slayt sunumunu başlat"] } } }, { l: "ug", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "uk", t: { Next: { v: ["Вперед"] }, "Pause slideshow": { v: ["Пауза у показі слайдів"] }, Previous: { v: ["Назад"] }, "Start slideshow": { v: ["Почати показ слайдів"] } } }, { l: "ur_PK", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "uz", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "vi", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }, { l: "zh_CN", t: { Next: { v: ["下一个"] }, "Pause slideshow": { v: ["暂停幻灯片"] }, Previous: { v: ["上一个"] }, "Start slideshow": { v: ["开始幻灯片"] } } }, { l: "zh_HK", t: { Next: { v: ["下一個"] }, "Pause slideshow": { v: ["暫停幻燈片"] }, Previous: { v: ["上一個"] }, "Start slideshow": { v: ["開始幻燈片"] } } }, { l: "zh_TW", t: { Next: { v: ["下一個"] }, "Pause slideshow": { v: ["暫停幻燈片"] }, Previous: { v: ["上一個"] }, "Start slideshow": { v: ["開始幻燈片"] } } }, { l: "zu_ZA", t: { Next: { v: [""] }, "Pause slideshow": { v: [""] }, Previous: { v: [""] }, "Start slideshow": { v: [""] } } }], L = [{ l: "af", t: { "No emoji found": { v: [""] } } }, { l: "ar", t: { "No emoji found": { v: ["لم يتم العثور على أي إيموجي emoji"] } } }, { l: "ast", t: { "No emoji found": { v: ["Nun s'atopó nengún fustaxe"] } } }, { l: "az", t: { "No emoji found": { v: [""] } } }, { l: "be", t: { "No emoji found": { v: [""] } } }, { l: "bg", t: { "No emoji found": { v: [""] } } }, { l: "bn_BD", t: { "No emoji found": { v: [""] } } }, { l: "br", t: { "No emoji found": { v: ["Emoji ebet kavet"] } } }, { l: "bs", t: { "No emoji found": { v: [""] } } }, { l: "ca", t: { "No emoji found": { v: ["No s'ha trobat cap emoji"] } } }, { l: "cs", t: { "No emoji found": { v: ["Nenalezeno žádné emoji"] } } }, { l: "cs_CZ", t: { "No emoji found": { v: ["Nenalezeno žádné emoji"] } } }, { l: "cy_GB", t: { "No emoji found": { v: [""] } } }, { l: "da", t: { "No emoji found": { v: ["Ingen emoji fundet"] } } }, { l: "de", t: { "No emoji found": { v: ["Kein Emoji gefunden"] } } }, { l: "de_DE", t: { "No emoji found": { v: ["Kein Emoji gefunden"] } } }, { l: "el", t: { "No emoji found": { v: ["Δεν βρέθηκε emoji"] } } }, { l: "en_GB", t: { "No emoji found": { v: ["No emoji found"] } } }, { l: "eo", t: { "No emoji found": { v: ["La emoĝio forestas"] } } }, { l: "es", t: { "No emoji found": { v: ["No se encontró ningún emoji"] } } }, { l: "es_419", t: { "No emoji found": { v: [""] } } }, { l: "es_AR", t: { "No emoji found": { v: [""] } } }, { l: "es_CL", t: { "No emoji found": { v: [""] } } }, { l: "es_CO", t: { "No emoji found": { v: [""] } } }, { l: "es_CR", t: { "No emoji found": { v: [""] } } }, { l: "es_DO", t: { "No emoji found": { v: [""] } } }, { l: "es_EC", t: { "No emoji found": { v: ["No se encontró ningún emoji"] } } }, { l: "es_GT", t: { "No emoji found": { v: [""] } } }, { l: "es_HN", t: { "No emoji found": { v: [""] } } }, { l: "es_MX", t: { "No emoji found": { v: [""] } } }, { l: "es_NI", t: { "No emoji found": { v: [""] } } }, { l: "es_PA", t: { "No emoji found": { v: [""] } } }, { l: "es_PE", t: { "No emoji found": { v: [""] } } }, { l: "es_PR", t: { "No emoji found": { v: [""] } } }, { l: "es_PY", t: { "No emoji found": { v: [""] } } }, { l: "es_SV", t: { "No emoji found": { v: [""] } } }, { l: "es_UY", t: { "No emoji found": { v: [""] } } }, { l: "et_EE", t: { "No emoji found": { v: [""] } } }, { l: "eu", t: { "No emoji found": { v: ["Ez da emojirik aurkitu"] } } }, { l: "fa", t: { "No emoji found": { v: [""] } } }, { l: "fi", t: { "No emoji found": { v: ["Emojia ei löytynyt"] } } }, { l: "fo", t: { "No emoji found": { v: [""] } } }, { l: "fr", t: { "No emoji found": { v: ["Pas d’émoji trouvé"] } } }, { l: "gd", t: { "No emoji found": { v: [""] } } }, { l: "gl", t: { "No emoji found": { v: ["Non se atopou ningún «emoji»"] } } }, { l: "he", t: { "No emoji found": { v: ["לא נמצא אמוג׳י"] } } }, { l: "hi_IN", t: { "No emoji found": { v: [""] } } }, { l: "hr", t: { "No emoji found": { v: [""] } } }, { l: "hsb", t: { "No emoji found": { v: [""] } } }, { l: "hu", t: { "No emoji found": { v: ["Nem található emodzsi"] } } }, { l: "hy", t: { "No emoji found": { v: [""] } } }, { l: "ia", t: { "No emoji found": { v: [""] } } }, { l: "id", t: { "No emoji found": { v: ["Tidak ada emoji yang ditemukan"] } } }, { l: "ig", t: { "No emoji found": { v: [""] } } }, { l: "is", t: { "No emoji found": { v: ["Ekkert tjáningartákn fannst"] } } }, { l: "it", t: { "No emoji found": { v: ["Nessun emoji trovato"] } } }, { l: "ja", t: { "No emoji found": { v: ["絵文字が見つかりません"] } } }, { l: "ka", t: { "No emoji found": { v: [""] } } }, { l: "ka_GE", t: { "No emoji found": { v: [""] } } }, { l: "kab", t: { "No emoji found": { v: [""] } } }, { l: "kk", t: { "No emoji found": { v: [""] } } }, { l: "km", t: { "No emoji found": { v: [""] } } }, { l: "kn", t: { "No emoji found": { v: [""] } } }, { l: "ko", t: { "No emoji found": { v: [""] } } }, { l: "la", t: { "No emoji found": { v: [""] } } }, { l: "lb", t: { "No emoji found": { v: [""] } } }, { l: "lo", t: { "No emoji found": { v: [""] } } }, { l: "lt_LT", t: { "No emoji found": { v: ["Nerasta jaustukų"] } } }, { l: "lv", t: { "No emoji found": { v: [""] } } }, { l: "mk", t: { "No emoji found": { v: ["Не се пронајдени емотикони"] } } }, { l: "mn", t: { "No emoji found": { v: [""] } } }, { l: "mr", t: { "No emoji found": { v: [""] } } }, { l: "ms_MY", t: { "No emoji found": { v: [""] } } }, { l: "my", t: { "No emoji found": { v: ["အီမိုဂျီ ရှာဖွေမတွေ့နိုင်ပါ"] } } }, { l: "nb", t: { "No emoji found": { v: ["Fant ingen emoji"] } } }, { l: "ne", t: { "No emoji found": { v: [""] } } }, { l: "nl", t: { "No emoji found": { v: ["Geen emoji gevonden"] } } }, { l: "nn_NO", t: { "No emoji found": { v: [""] } } }, { l: "oc", t: { "No emoji found": { v: [""] } } }, { l: "pl", t: { "No emoji found": { v: ["Nie znaleziono emoji"] } } }, { l: "ps", t: { "No emoji found": { v: [""] } } }, { l: "pt_BR", t: { "No emoji found": { v: ["Nenhum emoji encontrado"] } } }, { l: "pt_PT", t: { "No emoji found": { v: ["Nenhum emoji encontrado"] } } }, { l: "ro", t: { "No emoji found": { v: ["Nu s-a găsit niciun emoji"] } } }, { l: "ru", t: { "No emoji found": { v: ["Эмодзи не найдено"] } } }, { l: "sc", t: { "No emoji found": { v: [""] } } }, { l: "si", t: { "No emoji found": { v: [""] } } }, { l: "sk", t: { "No emoji found": { v: ["Nenašli sa žiadne emodži"] } } }, { l: "sl", t: { "No emoji found": { v: ["Ni najdenih izraznih ikon"] } } }, { l: "sq", t: { "No emoji found": { v: [""] } } }, { l: "sr", t: { "No emoji found": { v: ["Није пронађен ниједан емођи"] } } }, { l: "sr@latin", t: { "No emoji found": { v: [""] } } }, { l: "sv", t: { "No emoji found": { v: ["Hittade inga emojis"] } } }, { l: "sw", t: { "No emoji found": { v: [""] } } }, { l: "ta", t: { "No emoji found": { v: [""] } } }, { l: "th", t: { "No emoji found": { v: [""] } } }, { l: "tk", t: { "No emoji found": { v: [""] } } }, { l: "tr", t: { "No emoji found": { v: ["Herhangi bir emoji bulunamadı"] } } }, { l: "ug", t: { "No emoji found": { v: [""] } } }, { l: "uk", t: { "No emoji found": { v: ["Емоційки відсутні"] } } }, { l: "ur_PK", t: { "No emoji found": { v: [""] } } }, { l: "uz", t: { "No emoji found": { v: [""] } } }, { l: "vi", t: { "No emoji found": { v: [""] } } }, { l: "zh_CN", t: { "No emoji found": { v: ["表情未找到"] } } }, { l: "zh_HK", t: { "No emoji found": { v: ["未找到表情符號"] } } }, { l: "zh_TW", t: { "No emoji found": { v: ["未找到表情符號"] } } }, { l: "zu_ZA", t: { "No emoji found": { v: [""] } } }], I = [{ l: "af", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ar", t: { 'Open link to "{resourceName}"': { v: ['إفتَح الرابط إلى "{resourceName}"'] } } }, { l: "ast", t: { 'Open link to "{resourceName}"': { v: ["Abrir l'enllaz a «{resourceName}»"] } } }, { l: "az", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "be", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "bg", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "bn_BD", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "br", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "bs", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ca", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "cs", t: { 'Open link to "{resourceName}"': { v: ["Otevřít odkaz na „{resourceName}“"] } } }, { l: "cs_CZ", t: { 'Open link to "{resourceName}"': { v: ["Otevřít odkaz na „{resourceName}“"] } } }, { l: "cy_GB", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "da", t: { 'Open link to "{resourceName}"': { v: ['Åbn link til "{resourceName}"'] } } }, { l: "de", t: { 'Open link to "{resourceName}"': { v: ['Link zu "{resourceName}“ öffnen'] } } }, { l: "de_DE", t: { 'Open link to "{resourceName}"': { v: ['Link zu "{resourceName}“ öffnen'] } } }, { l: "el", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "en_GB", t: { 'Open link to "{resourceName}"': { v: ['Open link to "{resourceName}"'] } } }, { l: "eo", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es", t: { 'Open link to "{resourceName}"': { v: ['Abrir enlace a "{resourceName}"'] } } }, { l: "es_419", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_AR", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_CL", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_CO", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_CR", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_DO", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_EC", t: { 'Open link to "{resourceName}"': { v: ['Abrir enlace a "{resourceName}"'] } } }, { l: "es_GT", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_HN", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_MX", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_NI", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_PA", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_PE", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_PR", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_PY", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_SV", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "es_UY", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "et_EE", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "eu", t: { 'Open link to "{resourceName}"': { v: ['Ireki "{resourceName}" esteka'] } } }, { l: "fa", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "fi", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "fo", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "fr", t: { 'Open link to "{resourceName}"': { v: ['Ouvrir le lien vers "{resourceName}"'] } } }, { l: "gd", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "gl", t: { 'Open link to "{resourceName}"': { v: ["Abrir a ligazón a «{resourceName}»"] } } }, { l: "he", t: { 'Open link to "{resourceName}"': { v: ["פתיחת קישור אל „{resourceName}”"] } } }, { l: "hi_IN", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "hr", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "hsb", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "hu", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "hy", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ia", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "id", t: { 'Open link to "{resourceName}"': { v: ['Buka tautan ke "{resourceName}"'] } } }, { l: "ig", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "is", t: { 'Open link to "{resourceName}"': { v: ['Opna tengil í "{resourceName}"'] } } }, { l: "it", t: { 'Open link to "{resourceName}"': { v: ['Apri il link a "{resourceName}"'] } } }, { l: "ja", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ka", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ka_GE", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "kab", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "kk", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "km", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "kn", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ko", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "la", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "lb", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "lo", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "lt_LT", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "lv", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "mk", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "mn", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "mr", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ms_MY", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "my", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "nb", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ne", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "nl", t: { 'Open link to "{resourceName}"': { v: ['Open link naar "{resourceName}"'] } } }, { l: "nn_NO", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "oc", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "pl", t: { 'Open link to "{resourceName}"': { v: ['Otwórz link do "{resourceName}"'] } } }, { l: "ps", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "pt_BR", t: { 'Open link to "{resourceName}"': { v: ['Abrir i link para "{resourceName}"'] } } }, { l: "pt_PT", t: { 'Open link to "{resourceName}"': { v: ['Abrir link para "{resourceName}"'] } } }, { l: "ro", t: { 'Open link to "{resourceName}"': { v: ['Deschide linkul la  "{resourceName}"'] } } }, { l: "ru", t: { 'Open link to "{resourceName}"': { v: ['Открыть ссылку на "{resourceName}"'] } } }, { l: "sc", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "si", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "sk", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "sl", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "sq", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "sr", t: { 'Open link to "{resourceName}"': { v: ["Отвори линк на „{resourceName}”"] } } }, { l: "sr@latin", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "sv", t: { 'Open link to "{resourceName}"': { v: ['Öppna länken till "{resourceName}"'] } } }, { l: "sw", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "ta", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "th", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "tk", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "tr", t: { 'Open link to "{resourceName}"': { v: ["{resourceName} bağlantısını aç"] } } }, { l: "ug", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "uk", t: { 'Open link to "{resourceName}"': { v: ['Відкрити посилання на "{resourceName}"'] } } }, { l: "ur_PK", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "uz", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "vi", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "zh_CN", t: { 'Open link to "{resourceName}"': { v: [""] } } }, { l: "zh_HK", t: { 'Open link to "{resourceName}"': { v: ["開啟到「{resourceName}」的連結"] } } }, { l: "zh_TW", t: { 'Open link to "{resourceName}"': { v: ["開啟到「{resourceName}」的連結"] } } }, { l: "zu_ZA", t: { 'Open link to "{resourceName}"': { v: [""] } } }], Z = [{ l: "af", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ar", t: { "Pick a date": { v: ["إختَر التاريخ"] }, "Pick a date and a time": { v: ["إختَر التاريخ و الوقت"] }, "Pick a month": { v: ["إختَر الشهر"] }, "Pick a time": { v: ["إختَر الوقت"] }, "Pick a week": { v: ["إختَر الأسبوع"] }, "Pick a year": { v: ["إختَر السنة"] }, "Please select a time zone:": { v: ["الرجاء تحديد المنطقة الزمنية:"] } } }, { l: "ast", t: { "Pick a date": { v: ["Escueyi una data"] }, "Pick a date and a time": { v: ["Escueyi una data y hora"] }, "Pick a month": { v: ["Escueyi un mes"] }, "Pick a time": { v: ["Escueyi una hora"] }, "Pick a week": { v: ["Escueyi una selmana"] }, "Pick a year": { v: ["Escueyi un añu"] }, "Please select a time zone:": { v: ["Seleiciona un fusu horariu:"] } } }, { l: "az", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "be", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "bg", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "bn_BD", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "br", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "bs", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ca", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Seleccioneu una zona horària:"] } } }, { l: "cs", t: { "Pick a date": { v: ["Vybrat datum"] }, "Pick a date and a time": { v: ["Vybrat datum a čas"] }, "Pick a month": { v: ["Vybrat měsíc"] }, "Pick a time": { v: ["Vybrat čas"] }, "Pick a week": { v: ["Vybrat týden"] }, "Pick a year": { v: ["Vybrat rok"] }, "Please select a time zone:": { v: ["Vyberte časovou zónu:"] } } }, { l: "cs_CZ", t: { "Pick a date": { v: ["Vybrat datum"] }, "Pick a date and a time": { v: ["Vybrat datum a čas"] }, "Pick a month": { v: ["Vybrat měsíc"] }, "Pick a time": { v: ["Vybrat čas"] }, "Pick a week": { v: ["Vybrat týden"] }, "Pick a year": { v: ["Vybrat rok"] }, "Please select a time zone:": { v: ["Vyberte časovou zónu:"] } } }, { l: "cy_GB", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "da", t: { "Pick a date": { v: ["Vælg en dato"] }, "Pick a date and a time": { v: ["Vælg en dato og tidspunkt"] }, "Pick a month": { v: ["Vælg en måned"] }, "Pick a time": { v: ["Vælg et tidspunkt"] }, "Pick a week": { v: ["Vælg en uge"] }, "Pick a year": { v: ["Vælg et år"] }, "Please select a time zone:": { v: ["Vælg venligst en tidszone:"] } } }, { l: "de", t: { "Pick a date": { v: ["Ein Datum auswählen"] }, "Pick a date and a time": { v: ["Datum und Uhrzeit auswählen"] }, "Pick a month": { v: ["Einen Monat auswählen"] }, "Pick a time": { v: ["Eine Uhrzeit auswählen"] }, "Pick a week": { v: ["Eine Woche auswählen"] }, "Pick a year": { v: ["Ein Jahr auswählen"] }, "Please select a time zone:": { v: ["Bitte wähle eine Zeitzone:"] } } }, { l: "de_DE", t: { "Pick a date": { v: ["Ein Datum auswählen"] }, "Pick a date and a time": { v: ["Datum und Uhrzeit auswählen"] }, "Pick a month": { v: ["Einen Monat auswählen"] }, "Pick a time": { v: ["Eine Uhrzeit auswählen"] }, "Pick a week": { v: ["Eine Woche auswählen"] }, "Pick a year": { v: ["Ein Jahr auswählen"] }, "Please select a time zone:": { v: ["Bitte eine Zeitzone auswählen:"] } } }, { l: "el", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Παρακαλούμε επιλέξτε μια ζώνη ώρας:"] } } }, { l: "en_GB", t: { "Pick a date": { v: ["Pick a date"] }, "Pick a date and a time": { v: ["Pick a date and a time"] }, "Pick a month": { v: ["Pick a month"] }, "Pick a time": { v: ["Pick a time"] }, "Pick a week": { v: ["Pick a week"] }, "Pick a year": { v: ["Pick a year"] }, "Please select a time zone:": { v: ["Please select a time zone:"] } } }, { l: "eo", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es", t: { "Pick a date": { v: ["Seleccione una fecha"] }, "Pick a date and a time": { v: ["Seleccione una fecha y hora"] }, "Pick a month": { v: ["Seleccione un mes"] }, "Pick a time": { v: ["Seleccione una hora"] }, "Pick a week": { v: ["Seleccione una semana"] }, "Pick a year": { v: ["Seleccione un año"] }, "Please select a time zone:": { v: ["Por favor elija un huso horario:"] } } }, { l: "es_419", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_AR", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_CL", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_CO", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_CR", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_DO", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_EC", t: { "Pick a date": { v: ["Seleccionar una fecha"] }, "Pick a date and a time": { v: ["Seleccionar una fecha y una hora"] }, "Pick a month": { v: ["Seleccionar un mes"] }, "Pick a time": { v: ["Seleccionar una semana"] }, "Pick a week": { v: ["Seleccionar una semana"] }, "Pick a year": { v: ["Seleccionar un año"] }, "Please select a time zone:": { v: ["Por favor, selecciona una zona horaria:"] } } }, { l: "es_GT", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_HN", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_MX", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_NI", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_PA", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_PE", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_PR", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_PY", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_SV", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "es_UY", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "et_EE", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "eu", t: { "Pick a date": { v: ["Aukeratu data bat"] }, "Pick a date and a time": { v: ["Aukeratu data eta ordu bat"] }, "Pick a month": { v: ["Aukeratu hilabete bat"] }, "Pick a time": { v: ["Aukeratu ordu bat"] }, "Pick a week": { v: ["Aukeratu aste bat"] }, "Pick a year": { v: ["Aukeratu urte bat"] }, "Please select a time zone:": { v: ["Mesedez hautatu ordu-zona bat:"] } } }, { l: "fa", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "fi", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Valitse aikavyöhyke:"] } } }, { l: "fo", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "fr", t: { "Pick a date": { v: ["Sélectionner une date"] }, "Pick a date and a time": { v: ["Sélectionner une date et une heure"] }, "Pick a month": { v: ["Sélectionner un mois"] }, "Pick a time": { v: ["Sélectionner une heure"] }, "Pick a week": { v: ["Sélectionner une semaine"] }, "Pick a year": { v: ["Sélectionner une année"] }, "Please select a time zone:": { v: ["Sélectionnez un fuseau horaire : "] } } }, { l: "gd", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "gl", t: { "Pick a date": { v: ["Escolla unha data"] }, "Pick a date and a time": { v: ["Escolle unha data e unha hora"] }, "Pick a month": { v: ["Escolla un mes"] }, "Pick a time": { v: ["Escolla unha hora"] }, "Pick a week": { v: ["Escolla unha semana"] }, "Pick a year": { v: ["Escolla un ano"] }, "Please select a time zone:": { v: ["Escolla un fuso horario:"] } } }, { l: "he", t: { "Pick a date": { v: ["נא לבחור תאריך"] }, "Pick a date and a time": { v: ["נא לבחור תאריך ושעה"] }, "Pick a month": { v: ["נא לבחור חודש"] }, "Pick a time": { v: ["נא לבחור שעה"] }, "Pick a week": { v: ["נא לבחור שבוע"] }, "Pick a year": { v: ["נא לבחור שנה"] }, "Please select a time zone:": { v: ["נא לבחור אזור זמן:"] } } }, { l: "hi_IN", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "hr", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "hsb", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "hu", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Válasszon időzónát:"] } } }, { l: "hy", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ia", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "id", t: { "Pick a date": { v: ["Pilih tanggal"] }, "Pick a date and a time": { v: ["Pilih tanggal dan waktu"] }, "Pick a month": { v: ["Pilih bulan"] }, "Pick a time": { v: ["Pilih waktu"] }, "Pick a week": { v: ["Pilih pekan"] }, "Pick a year": { v: ["Pilih tahun"] }, "Please select a time zone:": { v: ["Mohon pilih zona waktu"] } } }, { l: "ig", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "is", t: { "Pick a date": { v: ["Veldu dagsetningu"] }, "Pick a date and a time": { v: ["Veldu dagsetningu og tíma"] }, "Pick a month": { v: ["Veldu mánuð"] }, "Pick a time": { v: ["Veldu tíma"] }, "Pick a week": { v: ["Veldu viku"] }, "Pick a year": { v: ["Veldu ár"] }, "Please select a time zone:": { v: ["Veldu tímabelti:"] } } }, { l: "it", t: { "Pick a date": { v: ["Scegli una data"] }, "Pick a date and a time": { v: ["Scegli una data e un orario"] }, "Pick a month": { v: ["Scegli un mese"] }, "Pick a time": { v: ["Scegli un momento"] }, "Pick a week": { v: ["Scegli una settimana"] }, "Pick a year": { v: ["Scegli un anno"] }, "Please select a time zone:": { v: ["Si prega di selezionare un fuso orario:"] } } }, { l: "ja", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["タイムゾーンを選んで下さい："] } } }, { l: "ka", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ka_GE", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "kab", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "kk", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "km", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "kn", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ko", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "la", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "lb", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "lo", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "lt_LT", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "lv", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "mk", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Изберете временска зона:"] } } }, { l: "mn", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "mr", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ms_MY", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "my", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["ဒေသစံတော်ချိန် ရွေးချယ်ပေးပါ"] } } }, { l: "nb", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Vennligst velg tidssone"] } } }, { l: "ne", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "nl", t: { "Pick a date": { v: ["Selecteer een datum"] }, "Pick a date and a time": { v: ["Selecteer een datum en tijd"] }, "Pick a month": { v: ["Selecteer een maand"] }, "Pick a time": { v: ["Selecteer een tijd"] }, "Pick a week": { v: ["Selecteer een week"] }, "Pick a year": { v: ["Selecteer een jaar"] }, "Please select a time zone:": { v: ["Selecteer een tijdzone:"] } } }, { l: "nn_NO", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "oc", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "pl", t: { "Pick a date": { v: ["Wybierz datę"] }, "Pick a date and a time": { v: ["Wybierz datę i godzinę"] }, "Pick a month": { v: ["Wybierz miesiąc"] }, "Pick a time": { v: ["Wybierz czas"] }, "Pick a week": { v: ["Wybierz tydzień"] }, "Pick a year": { v: ["Wybierz rok"] }, "Please select a time zone:": { v: ["Wybierz strefę czasową:"] } } }, { l: "ps", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "pt_BR", t: { "Pick a date": { v: ["Escolha uma data"] }, "Pick a date and a time": { v: ["Escolha uma data e um horário"] }, "Pick a month": { v: ["Escolha um mês"] }, "Pick a time": { v: ["Escolha um horário"] }, "Pick a week": { v: ["Escolha uma semana"] }, "Pick a year": { v: ["Escolha um ano"] }, "Please select a time zone:": { v: ["Selecione um fuso horário: "] } } }, { l: "pt_PT", t: { "Pick a date": { v: ["Escolha uma data"] }, "Pick a date and a time": { v: ["Escolha uma data e um horário"] }, "Pick a month": { v: ["Escolha um mês"] }, "Pick a time": { v: ["Escolha um horário"] }, "Pick a week": { v: ["Escolha uma semana"] }, "Pick a year": { v: ["Escolha um ano"] }, "Please select a time zone:": { v: ["Por favor, selecione um fuso horário: "] } } }, { l: "ro", t: { "Pick a date": { v: ["Selectați o dată"] }, "Pick a date and a time": { v: ["Selectați data și timpul"] }, "Pick a month": { v: ["Selectați o lună"] }, "Pick a time": { v: ["Selectați timpul"] }, "Pick a week": { v: ["Selectați o săptămână"] }, "Pick a year": { v: ["Selectați anul"] }, "Please select a time zone:": { v: ["Vă rugăm să selectați un fus orar:"] } } }, { l: "ru", t: { "Pick a date": { v: ["Выберите дату"] }, "Pick a date and a time": { v: ["Выберите дату и время"] }, "Pick a month": { v: ["Выберите месяц"] }, "Pick a time": { v: ["Выберите время"] }, "Pick a week": { v: ["Выберите неделю"] }, "Pick a year": { v: ["Выберите год"] }, "Please select a time zone:": { v: ["Пожалуйста, выберите часовой пояс:"] } } }, { l: "sc", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "si", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "sk", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["Prosím vyberte časovú zónu:"] } } }, { l: "sl", t: { "Pick a date": { v: ["Izbor datuma"] }, "Pick a date and a time": { v: ["Izbor datuma in časa"] }, "Pick a month": { v: ["Izbor meseca"] }, "Pick a time": { v: ["Izbor časa"] }, "Pick a week": { v: ["Izbor tedna"] }, "Pick a year": { v: ["Izbor leta"] }, "Please select a time zone:": { v: ["Izbor časovnega pasu:"] } } }, { l: "sq", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "sr", t: { "Pick a date": { v: ["Изаберите датум"] }, "Pick a date and a time": { v: ["Изаберите датум и време"] }, "Pick a month": { v: ["Изаберите месец"] }, "Pick a time": { v: ["Изаберите време"] }, "Pick a week": { v: ["Изаберите недељу"] }, "Pick a year": { v: ["Изаберите годину"] }, "Please select a time zone:": { v: ["Молимо вас да изаберете временску зону:"] } } }, { l: "sr@latin", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "sv", t: { "Pick a date": { v: ["Välj datum"] }, "Pick a date and a time": { v: ["Välj datum och tid"] }, "Pick a month": { v: ["Välj månad"] }, "Pick a time": { v: ["Välj tid"] }, "Pick a week": { v: ["Välj vecka"] }, "Pick a year": { v: ["Välj år"] }, "Please select a time zone:": { v: ["Välj tidszon:"] } } }, { l: "sw", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "ta", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "th", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "tk", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "tr", t: { "Pick a date": { v: ["Bir tarih seçin"] }, "Pick a date and a time": { v: ["Bir tarih ve saat seçin"] }, "Pick a month": { v: ["Bir ay seçin"] }, "Pick a time": { v: ["Bir saat seçin"] }, "Pick a week": { v: ["Bir hafta seçin"] }, "Pick a year": { v: ["Bir yıl seçin"] }, "Please select a time zone:": { v: ["Lütfen bir saat dilimi seçin:"] } } }, { l: "ug", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "uk", t: { "Pick a date": { v: ["Вибрати дату"] }, "Pick a date and a time": { v: ["Виберіть дату та час"] }, "Pick a month": { v: ["Виберіть місяць"] }, "Pick a time": { v: ["Виберіть час"] }, "Pick a week": { v: ["Виберіть тиждень"] }, "Pick a year": { v: ["Виберіть рік"] }, "Please select a time zone:": { v: ["Виберіть часовий пояс:"] } } }, { l: "ur_PK", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "uz", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "vi", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }, { l: "zh_CN", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: ["请选择一个时区："] } } }, { l: "zh_HK", t: { "Pick a date": { v: ["挑選日期"] }, "Pick a date and a time": { v: ["挑選日期與時間"] }, "Pick a month": { v: ["挑選月份"] }, "Pick a time": { v: ["挑選時間"] }, "Pick a week": { v: ["挑選星期"] }, "Pick a year": { v: ["挑選年份"] }, "Please select a time zone:": { v: ["請選擇時區："] } } }, { l: "zh_TW", t: { "Pick a date": { v: ["挑選日期"] }, "Pick a date and a time": { v: ["挑選日期與時間"] }, "Pick a month": { v: ["挑選月份"] }, "Pick a time": { v: ["挑選時間"] }, "Pick a week": { v: ["挑選星期"] }, "Pick a year": { v: ["挑選年份"] }, "Please select a time zone:": { v: ["請選取時區："] } } }, { l: "zu_ZA", t: { "Pick a date": { v: [""] }, "Pick a date and a time": { v: [""] }, "Pick a month": { v: [""] }, "Pick a time": { v: [""] }, "Pick a week": { v: [""] }, "Pick a year": { v: [""] }, "Please select a time zone:": { v: [""] } } }], K = [{ l: "af", t: { "Provider icon": { v: [""] } } }, { l: "ar", t: { "Provider icon": { v: ["أيقونة المُزوِّد"] } } }, { l: "ast", t: { "Provider icon": { v: ["Iconu del fornidor"] } } }, { l: "az", t: { "Provider icon": { v: [""] } } }, { l: "be", t: { "Provider icon": { v: [""] } } }, { l: "bg", t: { "Provider icon": { v: [""] } } }, { l: "bn_BD", t: { "Provider icon": { v: [""] } } }, { l: "br", t: { "Provider icon": { v: [""] } } }, { l: "bs", t: { "Provider icon": { v: [""] } } }, { l: "ca", t: { "Provider icon": { v: [""] } } }, { l: "cs", t: { "Provider icon": { v: ["Ikona poskytovatele"] } } }, { l: "cs_CZ", t: { "Provider icon": { v: ["Ikona poskytovatele"] } } }, { l: "cy_GB", t: { "Provider icon": { v: [""] } } }, { l: "da", t: { "Provider icon": { v: ["Udbyder ikon"] } } }, { l: "de", t: { "Provider icon": { v: ["Anbietersymbol"] } } }, { l: "de_DE", t: { "Provider icon": { v: ["Anbietersymbol"] } } }, { l: "el", t: { "Provider icon": { v: [""] } } }, { l: "en_GB", t: { "Provider icon": { v: ["Provider icon"] } } }, { l: "eo", t: { "Provider icon": { v: [""] } } }, { l: "es", t: { "Provider icon": { v: ["Ícono del proveedor"] } } }, { l: "es_419", t: { "Provider icon": { v: [""] } } }, { l: "es_AR", t: { "Provider icon": { v: [""] } } }, { l: "es_CL", t: { "Provider icon": { v: [""] } } }, { l: "es_CO", t: { "Provider icon": { v: [""] } } }, { l: "es_CR", t: { "Provider icon": { v: [""] } } }, { l: "es_DO", t: { "Provider icon": { v: [""] } } }, { l: "es_EC", t: { "Provider icon": { v: ["Ícono del proveedor"] } } }, { l: "es_GT", t: { "Provider icon": { v: [""] } } }, { l: "es_HN", t: { "Provider icon": { v: [""] } } }, { l: "es_MX", t: { "Provider icon": { v: [""] } } }, { l: "es_NI", t: { "Provider icon": { v: [""] } } }, { l: "es_PA", t: { "Provider icon": { v: [""] } } }, { l: "es_PE", t: { "Provider icon": { v: [""] } } }, { l: "es_PR", t: { "Provider icon": { v: [""] } } }, { l: "es_PY", t: { "Provider icon": { v: [""] } } }, { l: "es_SV", t: { "Provider icon": { v: [""] } } }, { l: "es_UY", t: { "Provider icon": { v: [""] } } }, { l: "et_EE", t: { "Provider icon": { v: [""] } } }, { l: "eu", t: { "Provider icon": { v: ["Hornitzailearen ikonoa"] } } }, { l: "fa", t: { "Provider icon": { v: [""] } } }, { l: "fi", t: { "Provider icon": { v: [""] } } }, { l: "fo", t: { "Provider icon": { v: [""] } } }, { l: "fr", t: { "Provider icon": { v: ["Icône du fournisseur"] } } }, { l: "gd", t: { "Provider icon": { v: [""] } } }, { l: "gl", t: { "Provider icon": { v: ["Icona do provedor"] } } }, { l: "he", t: { "Provider icon": { v: ["סמל ספק"] } } }, { l: "hi_IN", t: { "Provider icon": { v: [""] } } }, { l: "hr", t: { "Provider icon": { v: [""] } } }, { l: "hsb", t: { "Provider icon": { v: [""] } } }, { l: "hu", t: { "Provider icon": { v: [""] } } }, { l: "hy", t: { "Provider icon": { v: [""] } } }, { l: "ia", t: { "Provider icon": { v: [""] } } }, { l: "id", t: { "Provider icon": { v: ["Ikon penyedia"] } } }, { l: "ig", t: { "Provider icon": { v: [""] } } }, { l: "is", t: { "Provider icon": { v: ["Táknmynd þjónustuveitu"] } } }, { l: "it", t: { "Provider icon": { v: ["Icona del provider"] } } }, { l: "ja", t: { "Provider icon": { v: [""] } } }, { l: "ka", t: { "Provider icon": { v: [""] } } }, { l: "ka_GE", t: { "Provider icon": { v: [""] } } }, { l: "kab", t: { "Provider icon": { v: [""] } } }, { l: "kk", t: { "Provider icon": { v: [""] } } }, { l: "km", t: { "Provider icon": { v: [""] } } }, { l: "kn", t: { "Provider icon": { v: [""] } } }, { l: "ko", t: { "Provider icon": { v: [""] } } }, { l: "la", t: { "Provider icon": { v: [""] } } }, { l: "lb", t: { "Provider icon": { v: [""] } } }, { l: "lo", t: { "Provider icon": { v: [""] } } }, { l: "lt_LT", t: { "Provider icon": { v: [""] } } }, { l: "lv", t: { "Provider icon": { v: [""] } } }, { l: "mk", t: { "Provider icon": { v: [""] } } }, { l: "mn", t: { "Provider icon": { v: [""] } } }, { l: "mr", t: { "Provider icon": { v: [""] } } }, { l: "ms_MY", t: { "Provider icon": { v: [""] } } }, { l: "my", t: { "Provider icon": { v: [""] } } }, { l: "nb", t: { "Provider icon": { v: [""] } } }, { l: "ne", t: { "Provider icon": { v: [""] } } }, { l: "nl", t: { "Provider icon": { v: ["Provider icon"] } } }, { l: "nn_NO", t: { "Provider icon": { v: [""] } } }, { l: "oc", t: { "Provider icon": { v: [""] } } }, { l: "pl", t: { "Provider icon": { v: ["Dostawca ikony"] } } }, { l: "ps", t: { "Provider icon": { v: [""] } } }, { l: "pt_BR", t: { "Provider icon": { v: ["Ícone do provedor"] } } }, { l: "pt_PT", t: { "Provider icon": { v: ["Icon do fornecedor"] } } }, { l: "ro", t: { "Provider icon": { v: ["Provider pentru icon"] } } }, { l: "ru", t: { "Provider icon": { v: ["Значок поставщика"] } } }, { l: "sc", t: { "Provider icon": { v: [""] } } }, { l: "si", t: { "Provider icon": { v: [""] } } }, { l: "sk", t: { "Provider icon": { v: [""] } } }, { l: "sl", t: { "Provider icon": { v: [""] } } }, { l: "sq", t: { "Provider icon": { v: [""] } } }, { l: "sr", t: { "Provider icon": { v: ["Икона пружаоца"] } } }, { l: "sr@latin", t: { "Provider icon": { v: [""] } } }, { l: "sv", t: { "Provider icon": { v: ["Leverantörsikon"] } } }, { l: "sw", t: { "Provider icon": { v: [""] } } }, { l: "ta", t: { "Provider icon": { v: [""] } } }, { l: "th", t: { "Provider icon": { v: [""] } } }, { l: "tk", t: { "Provider icon": { v: [""] } } }, { l: "tr", t: { "Provider icon": { v: ["Sağlayıcı simgesi"] } } }, { l: "ug", t: { "Provider icon": { v: [""] } } }, { l: "uk", t: { "Provider icon": { v: ["Піктограма постачальника"] } } }, { l: "ur_PK", t: { "Provider icon": { v: [""] } } }, { l: "uz", t: { "Provider icon": { v: [""] } } }, { l: "vi", t: { "Provider icon": { v: [""] } } }, { l: "zh_CN", t: { "Provider icon": { v: [""] } } }, { l: "zh_HK", t: { "Provider icon": { v: ["提供者圖示"] } } }, { l: "zh_TW", t: { "Provider icon": { v: ["提供者圖示"] } } }, { l: "zu_ZA", t: { "Provider icon": { v: [""] } } }], W = [{ l: "af", t: {} }, { l: "ar", t: { "Related team resources": { v: ["موارد للفريق ذات صلة"] }, "View team": { v: ["عرض الفريق"] } } }, { l: "ast", t: {} }, { l: "az", t: {} }, { l: "be", t: {} }, { l: "bg", t: {} }, { l: "bn_BD", t: {} }, { l: "br", t: {} }, { l: "bs", t: {} }, { l: "ca", t: {} }, { l: "cs", t: {} }, { l: "cs_CZ", t: {} }, { l: "cy_GB", t: {} }, { l: "da", t: { "Related team resources": { v: ["Relaterede teamressourcer"] }, "View team": { v: ["Se teamet"] } } }, { l: "de", t: {} }, { l: "de_DE", t: { "Related team resources": { v: ["Verwandte Team-Ressourcen"] }, "View team": { v: ["Team anzeigen"] } } }, { l: "el", t: {} }, { l: "en_GB", t: {} }, { l: "eo", t: {} }, { l: "es", t: {} }, { l: "es_419", t: {} }, { l: "es_AR", t: {} }, { l: "es_CL", t: {} }, { l: "es_CO", t: {} }, { l: "es_CR", t: {} }, { l: "es_DO", t: {} }, { l: "es_EC", t: {} }, { l: "es_GT", t: {} }, { l: "es_HN", t: {} }, { l: "es_MX", t: {} }, { l: "es_NI", t: {} }, { l: "es_PA", t: {} }, { l: "es_PE", t: {} }, { l: "es_PR", t: {} }, { l: "es_PY", t: {} }, { l: "es_SV", t: {} }, { l: "es_UY", t: {} }, { l: "et_EE", t: {} }, { l: "eu", t: {} }, { l: "fa", t: {} }, { l: "fi", t: {} }, { l: "fo", t: {} }, { l: "fr", t: {} }, { l: "gd", t: {} }, { l: "gl", t: { "Related team resources": { v: ["Recursos de equipo relacionados"] }, "View team": { v: ["Ver o equipo"] } } }, { l: "he", t: {} }, { l: "hi_IN", t: {} }, { l: "hr", t: {} }, { l: "hsb", t: {} }, { l: "hu", t: {} }, { l: "hy", t: {} }, { l: "ia", t: {} }, { l: "id", t: {} }, { l: "ig", t: {} }, { l: "is", t: {} }, { l: "it", t: {} }, { l: "ja", t: {} }, { l: "ka", t: {} }, { l: "ka_GE", t: {} }, { l: "kab", t: {} }, { l: "kk", t: {} }, { l: "km", t: {} }, { l: "kn", t: {} }, { l: "ko", t: {} }, { l: "la", t: {} }, { l: "lb", t: {} }, { l: "lo", t: {} }, { l: "lt_LT", t: {} }, { l: "lv", t: {} }, { l: "mk", t: {} }, { l: "mn", t: {} }, { l: "mr", t: {} }, { l: "ms_MY", t: {} }, { l: "my", t: {} }, { l: "nb", t: {} }, { l: "ne", t: {} }, { l: "nl", t: {} }, { l: "nn_NO", t: {} }, { l: "oc", t: {} }, { l: "pl", t: {} }, { l: "ps", t: {} }, { l: "pt_BR", t: { "Related team resources": { v: ["Recursos de equipe relacionados"] }, "View team": { v: ["Ver equipe"] } } }, { l: "pt_PT", t: {} }, { l: "ro", t: {} }, { l: "ru", t: {} }, { l: "sc", t: {} }, { l: "si", t: {} }, { l: "sk", t: {} }, { l: "sl", t: {} }, { l: "sq", t: {} }, { l: "sr", t: {} }, { l: "sr@latin", t: {} }, { l: "sv", t: { "Related team resources": { v: ["Relaterade teamresurser"] }, "View team": { v: ["Visa team"] } } }, { l: "sw", t: {} }, { l: "ta", t: {} }, { l: "th", t: {} }, { l: "tk", t: {} }, { l: "tr", t: { "Related team resources": { v: ["İlgili takım kaynakları"] }, "View team": { v: ["Takımı görüntüle"] } } }, { l: "ug", t: {} }, { l: "uk", t: {} }, { l: "ur_PK", t: {} }, { l: "uz", t: {} }, { l: "vi", t: {} }, { l: "zh_CN", t: {} }, { l: "zh_HK", t: {} }, { l: "zh_TW", t: {} }, { l: "zu_ZA", t: {} }], Y = [{ l: "af", t: { Search: { v: [""] } } }, { l: "ar", t: { Search: { v: ["بحث"] } } }, { l: "ast", t: { Search: { v: ["Buscar"] } } }, { l: "az", t: { Search: { v: [""] } } }, { l: "be", t: { Search: { v: [""] } } }, { l: "bg", t: { Search: { v: [""] } } }, { l: "bn_BD", t: { Search: { v: [""] } } }, { l: "br", t: { Search: { v: ["Klask"] } } }, { l: "bs", t: { Search: { v: [""] } } }, { l: "ca", t: { Search: { v: ["Cerca"] } } }, { l: "cs", t: { Search: { v: ["Hledat"] } } }, { l: "cs_CZ", t: { Search: { v: ["Hledat"] } } }, { l: "cy_GB", t: { Search: { v: [""] } } }, { l: "da", t: { Search: { v: ["Søg"] } } }, { l: "de", t: { Search: { v: ["Suche"] } } }, { l: "de_DE", t: { Search: { v: ["Suche"] } } }, { l: "el", t: { Search: { v: ["Αναζήτηση"] } } }, { l: "en_GB", t: { Search: { v: ["Search"] } } }, { l: "eo", t: { Search: { v: ["Serĉi"] } } }, { l: "es", t: { Search: { v: ["Buscar"] } } }, { l: "es_419", t: { Search: { v: [""] } } }, { l: "es_AR", t: { Search: { v: [""] } } }, { l: "es_CL", t: { Search: { v: [""] } } }, { l: "es_CO", t: { Search: { v: [""] } } }, { l: "es_CR", t: { Search: { v: [""] } } }, { l: "es_DO", t: { Search: { v: [""] } } }, { l: "es_EC", t: { Search: { v: ["Buscar"] } } }, { l: "es_GT", t: { Search: { v: [""] } } }, { l: "es_HN", t: { Search: { v: [""] } } }, { l: "es_MX", t: { Search: { v: [""] } } }, { l: "es_NI", t: { Search: { v: [""] } } }, { l: "es_PA", t: { Search: { v: [""] } } }, { l: "es_PE", t: { Search: { v: [""] } } }, { l: "es_PR", t: { Search: { v: [""] } } }, { l: "es_PY", t: { Search: { v: [""] } } }, { l: "es_SV", t: { Search: { v: [""] } } }, { l: "es_UY", t: { Search: { v: [""] } } }, { l: "et_EE", t: { Search: { v: [""] } } }, { l: "eu", t: { Search: { v: ["Bilatu"] } } }, { l: "fa", t: { Search: { v: [""] } } }, { l: "fi", t: { Search: { v: ["Etsi"] } } }, { l: "fo", t: { Search: { v: [""] } } }, { l: "fr", t: { Search: { v: ["Chercher"] } } }, { l: "gd", t: { Search: { v: [""] } } }, { l: "gl", t: { Search: { v: ["Buscar"] } } }, { l: "he", t: { Search: { v: ["חיפוש"] } } }, { l: "hi_IN", t: { Search: { v: [""] } } }, { l: "hr", t: { Search: { v: [""] } } }, { l: "hsb", t: { Search: { v: [""] } } }, { l: "hu", t: { Search: { v: ["Keresés"] } } }, { l: "hy", t: { Search: { v: [""] } } }, { l: "ia", t: { Search: { v: [""] } } }, { l: "id", t: { Search: { v: ["Cari"] } } }, { l: "ig", t: { Search: { v: [""] } } }, { l: "is", t: { Search: { v: ["Leita"] } } }, { l: "it", t: { Search: { v: ["Cerca"] } } }, { l: "ja", t: { Search: { v: ["検索"] } } }, { l: "ka", t: { Search: { v: [""] } } }, { l: "ka_GE", t: { Search: { v: [""] } } }, { l: "kab", t: { Search: { v: [""] } } }, { l: "kk", t: { Search: { v: [""] } } }, { l: "km", t: { Search: { v: [""] } } }, { l: "kn", t: { Search: { v: [""] } } }, { l: "ko", t: { Search: { v: [""] } } }, { l: "la", t: { Search: { v: [""] } } }, { l: "lb", t: { Search: { v: [""] } } }, { l: "lo", t: { Search: { v: [""] } } }, { l: "lt_LT", t: { Search: { v: ["Ieškoti"] } } }, { l: "lv", t: { Search: { v: [""] } } }, { l: "mk", t: { Search: { v: ["Барај"] } } }, { l: "mn", t: { Search: { v: [""] } } }, { l: "mr", t: { Search: { v: [""] } } }, { l: "ms_MY", t: { Search: { v: [""] } } }, { l: "my", t: { Search: { v: ["ရှာဖွေရန်"] } } }, { l: "nb", t: { Search: { v: ["Søk"] } } }, { l: "ne", t: { Search: { v: [""] } } }, { l: "nl", t: { Search: { v: ["Zoeken"] } } }, { l: "nn_NO", t: { Search: { v: [""] } } }, { l: "oc", t: { Search: { v: [""] } } }, { l: "pl", t: { Search: { v: ["Szukaj"] } } }, { l: "ps", t: { Search: { v: [""] } } }, { l: "pt_BR", t: { Search: { v: ["Pesquisar"] } } }, { l: "pt_PT", t: { Search: { v: ["Pesquisar"] } } }, { l: "ro", t: { Search: { v: ["Căutare"] } } }, { l: "ru", t: { Search: { v: ["Поиск"] } } }, { l: "sc", t: { Search: { v: [""] } } }, { l: "si", t: { Search: { v: [""] } } }, { l: "sk", t: { Search: { v: ["Hľadať"] } } }, { l: "sl", t: { Search: { v: ["Iskanje"] } } }, { l: "sq", t: { Search: { v: [""] } } }, { l: "sr", t: { Search: { v: ["Претражи"] } } }, { l: "sr@latin", t: { Search: { v: [""] } } }, { l: "sv", t: { Search: { v: ["Sök"] } } }, { l: "sw", t: { Search: { v: [""] } } }, { l: "ta", t: { Search: { v: [""] } } }, { l: "th", t: { Search: { v: [""] } } }, { l: "tk", t: { Search: { v: [""] } } }, { l: "tr", t: { Search: { v: ["Arama"] } } }, { l: "ug", t: { Search: { v: [""] } } }, { l: "uk", t: { Search: { v: ["Пошук"] } } }, { l: "ur_PK", t: { Search: { v: [""] } } }, { l: "uz", t: { Search: { v: [""] } } }, { l: "vi", t: { Search: { v: [""] } } }, { l: "zh_CN", t: { Search: { v: ["搜索"] } } }, { l: "zh_HK", t: { Search: { v: ["搜尋"] } } }, { l: "zh_TW", t: { Search: { v: ["搜尋"] } } }, { l: "zu_ZA", t: { Search: { v: [""] } } }], X = [{ l: "af", t: { "Type to search time zone": { v: [""] } } }, { l: "ar", t: { "Search for time zone": { v: ["البحث عن منطقة زمنية"] }, "Type to search time zone": { v: ["أكتُب للبحث عن منطقة زمنية"] } } }, { l: "ast", t: { "Search for time zone": { v: ["Buscar fusos horarios"] }, "Type to search time zone": { v: ["Escribi pa buscar un fusu horariu"] } } }, { l: "az", t: { "Type to search time zone": { v: [""] } } }, { l: "be", t: { "Type to search time zone": { v: [""] } } }, { l: "bg", t: { "Type to search time zone": { v: [""] } } }, { l: "bn_BD", t: { "Type to search time zone": { v: [""] } } }, { l: "br", t: { "Type to search time zone": { v: [""] } } }, { l: "bs", t: { "Type to search time zone": { v: [""] } } }, { l: "ca", t: { "Type to search time zone": { v: ["Escriviu per cercar la zona horària"] } } }, { l: "cs", t: { "Type to search time zone": { v: ["Psaním vyhledejte časovou zónu"] } } }, { l: "cs_CZ", t: { "Search for time zone": { v: ["Vyhledat časové pásmo"] }, "Type to search time zone": { v: ["Psaním vyhledejte časovou zónu"] } } }, { l: "cy_GB", t: { "Type to search time zone": { v: [""] } } }, { l: "da", t: { "Search for time zone": { v: ["Søg efter tidszone"] }, "Type to search time zone": { v: ["Indtast for at søge efter tidszone"] } } }, { l: "de", t: { "Search for time zone": { v: ["Nach Zeitzone suchen"] }, "Type to search time zone": { v: ["Tippen, um Zeitzone zu suchen"] } } }, { l: "de_DE", t: { "Search for time zone": { v: ["Nach Zeitzone suchen"] }, "Type to search time zone": { v: ["Tippen, um eine Zeitzone zu suchen"] } } }, { l: "el", t: { "Type to search time zone": { v: ["Πληκτρολογήστε για αναζήτηση ζώνης ώρας"] } } }, { l: "en_GB", t: { "Search for time zone": { v: ["Search for time zone"] }, "Type to search time zone": { v: ["Type to search time zone"] } } }, { l: "eo", t: { "Type to search time zone": { v: [""] } } }, { l: "es", t: { "Search for time zone": { v: ["Buscar huso horario"] }, "Type to search time zone": { v: ["Escriba para buscar un huso horario"] } } }, { l: "es_419", t: { "Type to search time zone": { v: [""] } } }, { l: "es_AR", t: { "Type to search time zone": { v: [""] } } }, { l: "es_CL", t: { "Type to search time zone": { v: [""] } } }, { l: "es_CO", t: { "Type to search time zone": { v: [""] } } }, { l: "es_CR", t: { "Type to search time zone": { v: [""] } } }, { l: "es_DO", t: { "Type to search time zone": { v: [""] } } }, { l: "es_EC", t: { "Type to search time zone": { v: ["Escribe para buscar la zona horaria"] } } }, { l: "es_GT", t: { "Type to search time zone": { v: [""] } } }, { l: "es_HN", t: { "Type to search time zone": { v: [""] } } }, { l: "es_MX", t: { "Type to search time zone": { v: [""] } } }, { l: "es_NI", t: { "Type to search time zone": { v: [""] } } }, { l: "es_PA", t: { "Type to search time zone": { v: [""] } } }, { l: "es_PE", t: { "Type to search time zone": { v: [""] } } }, { l: "es_PR", t: { "Type to search time zone": { v: [""] } } }, { l: "es_PY", t: { "Type to search time zone": { v: [""] } } }, { l: "es_SV", t: { "Type to search time zone": { v: [""] } } }, { l: "es_UY", t: { "Type to search time zone": { v: [""] } } }, { l: "et_EE", t: { "Type to search time zone": { v: [""] } } }, { l: "eu", t: { "Type to search time zone": { v: ["Idatzi ordu-zona bat bilatzeko"] } } }, { l: "fa", t: { "Type to search time zone": { v: [""] } } }, { l: "fi", t: { "Type to search time zone": { v: ["Kirjoita etsiäksesi aikavyöhyke"] } } }, { l: "fo", t: { "Type to search time zone": { v: [""] } } }, { l: "fr", t: { "Search for time zone": { v: ["Rechercher le fuseau horaire"] }, "Type to search time zone": { v: ["Saisissez les premiers lettres pour rechercher un fuseau horaire"] } } }, { l: "gd", t: { "Type to search time zone": { v: [""] } } }, { l: "gl", t: { "Search for time zone": { v: ["Buscar por fuso horario"] }, "Type to search time zone": { v: ["Escriba para buscar o fuso horario"] } } }, { l: "he", t: { "Type to search time zone": { v: ["יש להקליד כדי לחפש אזור זמן"] } } }, { l: "hi_IN", t: { "Type to search time zone": { v: [""] } } }, { l: "hr", t: { "Type to search time zone": { v: [""] } } }, { l: "hsb", t: { "Type to search time zone": { v: [""] } } }, { l: "hu", t: { "Type to search time zone": { v: ["Gépeljen az időzóna kereséséhez"] } } }, { l: "hy", t: { "Type to search time zone": { v: [""] } } }, { l: "ia", t: { "Type to search time zone": { v: [""] } } }, { l: "id", t: { "Search for time zone": { v: ["Cari zona waktu"] }, "Type to search time zone": { v: ["Ketik untuk mencari zona waktu"] } } }, { l: "ig", t: { "Type to search time zone": { v: [""] } } }, { l: "is", t: { "Search for time zone": { v: ["Leita að tímabelti"] }, "Type to search time zone": { v: ["Skrifaðu til að leita að tímabelti"] } } }, { l: "it", t: { "Search for time zone": { v: ["Ricerca del fuso orario"] }, "Type to search time zone": { v: ["Digita per cercare un fuso orario"] } } }, { l: "ja", t: { "Type to search time zone": { v: ["タイムゾーン検索のため入力してください"] } } }, { l: "ka", t: { "Type to search time zone": { v: [""] } } }, { l: "ka_GE", t: { "Type to search time zone": { v: [""] } } }, { l: "kab", t: { "Type to search time zone": { v: [""] } } }, { l: "kk", t: { "Type to search time zone": { v: [""] } } }, { l: "km", t: { "Type to search time zone": { v: [""] } } }, { l: "kn", t: { "Type to search time zone": { v: [""] } } }, { l: "ko", t: { "Type to search time zone": { v: [""] } } }, { l: "la", t: { "Type to search time zone": { v: [""] } } }, { l: "lb", t: { "Type to search time zone": { v: [""] } } }, { l: "lo", t: { "Type to search time zone": { v: [""] } } }, { l: "lt_LT", t: { "Type to search time zone": { v: [""] } } }, { l: "lv", t: { "Type to search time zone": { v: [""] } } }, { l: "mk", t: { "Type to search time zone": { v: ["Напишете за да пребарате временска зона"] } } }, { l: "mn", t: { "Type to search time zone": { v: [""] } } }, { l: "mr", t: { "Type to search time zone": { v: [""] } } }, { l: "ms_MY", t: { "Type to search time zone": { v: [""] } } }, { l: "my", t: { "Type to search time zone": { v: ["ဒေသစံတော်ချိန်များ ရှာဖွေရန် စာရိုက်ပါ"] } } }, { l: "nb", t: { "Type to search time zone": { v: ["Tast for å søke etter tidssone"] } } }, { l: "ne", t: { "Type to search time zone": { v: [""] } } }, { l: "nl", t: { "Type to search time zone": { v: ["Type om een tijdzone te zoeken"] } } }, { l: "nn_NO", t: { "Type to search time zone": { v: [""] } } }, { l: "oc", t: { "Type to search time zone": { v: [""] } } }, { l: "pl", t: { "Search for time zone": { v: ["Szukaj strefy czasowej"] }, "Type to search time zone": { v: ["Wpisz, aby wyszukać strefę czasową"] } } }, { l: "ps", t: { "Type to search time zone": { v: [""] } } }, { l: "pt_BR", t: { "Search for time zone": { v: ["Pesquisar fuso horário"] }, "Type to search time zone": { v: ["Digite para pesquisar o fuso horário "] } } }, { l: "pt_PT", t: { "Type to search time zone": { v: ["Digite para pesquisar o fuso horário "] } } }, { l: "ro", t: { "Search for time zone": { v: ["Căutare zonă de timp"] }, "Type to search time zone": { v: ["Tastați pentru a căuta fusul orar"] } } }, { l: "ru", t: { "Type to search time zone": { v: ["Введите для поиска часового пояса"] } } }, { l: "sc", t: { "Type to search time zone": { v: [""] } } }, { l: "si", t: { "Type to search time zone": { v: [""] } } }, { l: "sk", t: { "Type to search time zone": { v: ["Začníte písať pre vyhľadávanie časovej zóny"] } } }, { l: "sl", t: { "Type to search time zone": { v: ["Vpišite niz za iskanje časovnega pasu"] } } }, { l: "sq", t: { "Type to search time zone": { v: [""] } } }, { l: "sr", t: { "Search for time zone": { v: ["Претрага временске зоне"] }, "Type to search time zone": { v: ["Куцајте да претражите временске зоне"] } } }, { l: "sr@latin", t: { "Type to search time zone": { v: [""] } } }, { l: "sv", t: { "Search for time zone": { v: ["Sök efter tidszon"] }, "Type to search time zone": { v: ["Skriv för att välja tidszon"] } } }, { l: "sw", t: { "Type to search time zone": { v: [""] } } }, { l: "ta", t: { "Type to search time zone": { v: [""] } } }, { l: "th", t: { "Type to search time zone": { v: [""] } } }, { l: "tk", t: { "Type to search time zone": { v: [""] } } }, { l: "tr", t: { "Search for time zone": { v: ["Saat dilimi ara"] }, "Type to search time zone": { v: ["Saat dilimi aramak için yazmaya başlayın"] } } }, { l: "ug", t: { "Type to search time zone": { v: [""] } } }, { l: "uk", t: { "Search for time zone": { v: ["Шукати часові зони"] }, "Type to search time zone": { v: ["Введіть для пошуку часовий пояс"] } } }, { l: "ur_PK", t: { "Type to search time zone": { v: [""] } } }, { l: "uz", t: { "Type to search time zone": { v: [""] } } }, { l: "vi", t: { "Type to search time zone": { v: [""] } } }, { l: "zh_CN", t: { "Type to search time zone": { v: ["打字以搜索时区"] } } }, { l: "zh_HK", t: { "Type to search time zone": { v: ["鍵入以搜索時區"] } } }, { l: "zh_TW", t: { "Type to search time zone": { v: ["輸入以搜尋時區"] } } }, { l: "zu_ZA", t: { "Type to search time zone": { v: [""] } } }], J = [{ l: "af", t: { "Select provider": { v: [""] } } }, { l: "ar", t: { "Select provider": { v: ["إختَر مٌزوِّداً"] } } }, { l: "ast", t: { "Select provider": { v: ["Seleicionar el fornidor"] } } }, { l: "az", t: { "Select provider": { v: [""] } } }, { l: "be", t: { "Select provider": { v: [""] } } }, { l: "bg", t: { "Select provider": { v: [""] } } }, { l: "bn_BD", t: { "Select provider": { v: [""] } } }, { l: "br", t: { "Select provider": { v: [""] } } }, { l: "bs", t: { "Select provider": { v: [""] } } }, { l: "ca", t: { "Select provider": { v: [""] } } }, { l: "cs", t: { "Select provider": { v: ["Vybrat poskytovatele"] } } }, { l: "cs_CZ", t: { "Select provider": { v: ["Vybrat poskytovatele"] } } }, { l: "cy_GB", t: { "Select provider": { v: [""] } } }, { l: "da", t: { "Select provider": { v: ["Vælg udbyder"] } } }, { l: "de", t: { "Select provider": { v: ["Anbieter auswählen"] } } }, { l: "de_DE", t: { "Select provider": { v: ["Anbieter auswählen"] } } }, { l: "el", t: { "Select provider": { v: [""] } } }, { l: "en_GB", t: { "Select provider": { v: ["Select provider"] } } }, { l: "eo", t: { "Select provider": { v: [""] } } }, { l: "es", t: { "Select provider": { v: ["Seleccione proveedor"] } } }, { l: "es_419", t: { "Select provider": { v: [""] } } }, { l: "es_AR", t: { "Select provider": { v: [""] } } }, { l: "es_CL", t: { "Select provider": { v: [""] } } }, { l: "es_CO", t: { "Select provider": { v: [""] } } }, { l: "es_CR", t: { "Select provider": { v: [""] } } }, { l: "es_DO", t: { "Select provider": { v: [""] } } }, { l: "es_EC", t: { "Select provider": { v: ["Seleccionar proveedor"] } } }, { l: "es_GT", t: { "Select provider": { v: [""] } } }, { l: "es_HN", t: { "Select provider": { v: [""] } } }, { l: "es_MX", t: { "Select provider": { v: [""] } } }, { l: "es_NI", t: { "Select provider": { v: [""] } } }, { l: "es_PA", t: { "Select provider": { v: [""] } } }, { l: "es_PE", t: { "Select provider": { v: [""] } } }, { l: "es_PR", t: { "Select provider": { v: [""] } } }, { l: "es_PY", t: { "Select provider": { v: [""] } } }, { l: "es_SV", t: { "Select provider": { v: [""] } } }, { l: "es_UY", t: { "Select provider": { v: [""] } } }, { l: "et_EE", t: { "Select provider": { v: [""] } } }, { l: "eu", t: { "Select provider": { v: ["Hautatu hornitzailea"] } } }, { l: "fa", t: { "Select provider": { v: [""] } } }, { l: "fi", t: { "Select provider": { v: [""] } } }, { l: "fo", t: { "Select provider": { v: [""] } } }, { l: "fr", t: { "Select provider": { v: ["Sélectionner un fournisseur"] } } }, { l: "gd", t: { "Select provider": { v: [""] } } }, { l: "gl", t: { "Select provider": { v: ["Seleccionar provedor"] } } }, { l: "he", t: { "Select provider": { v: ["בחירת ספק"] } } }, { l: "hi_IN", t: { "Select provider": { v: [""] } } }, { l: "hr", t: { "Select provider": { v: [""] } } }, { l: "hsb", t: { "Select provider": { v: [""] } } }, { l: "hu", t: { "Select provider": { v: [""] } } }, { l: "hy", t: { "Select provider": { v: [""] } } }, { l: "ia", t: { "Select provider": { v: [""] } } }, { l: "id", t: { "Select provider": { v: ["Pilih penyedia"] } } }, { l: "ig", t: { "Select provider": { v: [""] } } }, { l: "is", t: { "Select provider": { v: ["Veldu þjónustuveitu"] } } }, { l: "it", t: { "Select provider": { v: ["Selezionare il provider"] } } }, { l: "ja", t: { "Select provider": { v: [""] } } }, { l: "ka", t: { "Select provider": { v: [""] } } }, { l: "ka_GE", t: { "Select provider": { v: [""] } } }, { l: "kab", t: { "Select provider": { v: [""] } } }, { l: "kk", t: { "Select provider": { v: [""] } } }, { l: "km", t: { "Select provider": { v: [""] } } }, { l: "kn", t: { "Select provider": { v: [""] } } }, { l: "ko", t: { "Select provider": { v: [""] } } }, { l: "la", t: { "Select provider": { v: [""] } } }, { l: "lb", t: { "Select provider": { v: [""] } } }, { l: "lo", t: { "Select provider": { v: [""] } } }, { l: "lt_LT", t: { "Select provider": { v: [""] } } }, { l: "lv", t: { "Select provider": { v: [""] } } }, { l: "mk", t: { "Select provider": { v: [""] } } }, { l: "mn", t: { "Select provider": { v: [""] } } }, { l: "mr", t: { "Select provider": { v: [""] } } }, { l: "ms_MY", t: { "Select provider": { v: [""] } } }, { l: "my", t: { "Select provider": { v: [""] } } }, { l: "nb", t: { "Select provider": { v: [""] } } }, { l: "ne", t: { "Select provider": { v: [""] } } }, { l: "nl", t: { "Select provider": { v: ["Selecteer provider"] } } }, { l: "nn_NO", t: { "Select provider": { v: [""] } } }, { l: "oc", t: { "Select provider": { v: [""] } } }, { l: "pl", t: { "Select provider": { v: ["Wybierz dostawcę"] } } }, { l: "ps", t: { "Select provider": { v: [""] } } }, { l: "pt_BR", t: { "Select provider": { v: ["Selecione o provedor"] } } }, { l: "pt_PT", t: { "Select provider": { v: ["Escolha de fornecedor"] } } }, { l: "ro", t: { "Select provider": { v: ["Selectați providerul"] } } }, { l: "ru", t: { "Select provider": { v: ["Выбрать поставщика"] } } }, { l: "sc", t: { "Select provider": { v: [""] } } }, { l: "si", t: { "Select provider": { v: [""] } } }, { l: "sk", t: { "Select provider": { v: [""] } } }, { l: "sl", t: { "Select provider": { v: [""] } } }, { l: "sq", t: { "Select provider": { v: [""] } } }, { l: "sr", t: { "Select provider": { v: ["Изаберите пружаоца"] } } }, { l: "sr@latin", t: { "Select provider": { v: [""] } } }, { l: "sv", t: { "Select provider": { v: ["Välj leverantör"] } } }, { l: "sw", t: { "Select provider": { v: [""] } } }, { l: "ta", t: { "Select provider": { v: [""] } } }, { l: "th", t: { "Select provider": { v: [""] } } }, { l: "tk", t: { "Select provider": { v: [""] } } }, { l: "tr", t: { "Select provider": { v: ["Sağlayıcı seçin"] } } }, { l: "ug", t: { "Select provider": { v: [""] } } }, { l: "uk", t: { "Select provider": { v: ["Виберіть постачальника"] } } }, { l: "ur_PK", t: { "Select provider": { v: [""] } } }, { l: "uz", t: { "Select provider": { v: [""] } } }, { l: "vi", t: { "Select provider": { v: [""] } } }, { l: "zh_CN", t: { "Select provider": { v: [""] } } }, { l: "zh_HK", t: { "Select provider": { v: ["選擇提供者"] } } }, { l: "zh_TW", t: { "Select provider": { v: ["選取提供者"] } } }, { l: "zu_ZA", t: { "Select provider": { v: [""] } } }], Q = [{ l: "af", t: { Settings: { v: [""] } } }, { l: "ar", t: { Settings: { v: ["الإعدادات"] } } }, { l: "ast", t: { Settings: { v: ["Configuración"] } } }, { l: "az", t: { Settings: { v: [""] } } }, { l: "be", t: { Settings: { v: [""] } } }, { l: "bg", t: { Settings: { v: [""] } } }, { l: "bn_BD", t: { Settings: { v: [""] } } }, { l: "br", t: { Settings: { v: ["Arventennoù"] } } }, { l: "bs", t: { Settings: { v: [""] } } }, { l: "ca", t: { Settings: { v: ["Paràmetres"] } } }, { l: "cs", t: { Settings: { v: ["Nastavení"] } } }, { l: "cs_CZ", t: { Settings: { v: ["Nastavení"] } } }, { l: "cy_GB", t: { Settings: { v: [""] } } }, { l: "da", t: { Settings: { v: ["Indstillinger"] } } }, { l: "de", t: { Settings: { v: ["Einstellungen"] } } }, { l: "de_DE", t: { Settings: { v: ["Einstellungen"] } } }, { l: "el", t: { Settings: { v: ["Ρυθμίσεις"] } } }, { l: "en_GB", t: { Settings: { v: ["Settings"] } } }, { l: "eo", t: { Settings: { v: ["Agordo"] } } }, { l: "es", t: { Settings: { v: ["Ajustes"] } } }, { l: "es_419", t: { Settings: { v: [""] } } }, { l: "es_AR", t: { Settings: { v: [""] } } }, { l: "es_CL", t: { Settings: { v: [""] } } }, { l: "es_CO", t: { Settings: { v: [""] } } }, { l: "es_CR", t: { Settings: { v: [""] } } }, { l: "es_DO", t: { Settings: { v: [""] } } }, { l: "es_EC", t: { Settings: { v: ["Configuraciones"] } } }, { l: "es_GT", t: { Settings: { v: [""] } } }, { l: "es_HN", t: { Settings: { v: [""] } } }, { l: "es_MX", t: { Settings: { v: [""] } } }, { l: "es_NI", t: { Settings: { v: [""] } } }, { l: "es_PA", t: { Settings: { v: [""] } } }, { l: "es_PE", t: { Settings: { v: [""] } } }, { l: "es_PR", t: { Settings: { v: [""] } } }, { l: "es_PY", t: { Settings: { v: [""] } } }, { l: "es_SV", t: { Settings: { v: [""] } } }, { l: "es_UY", t: { Settings: { v: [""] } } }, { l: "et_EE", t: { Settings: { v: [""] } } }, { l: "eu", t: { Settings: { v: ["Ezarpenak"] } } }, { l: "fa", t: { Settings: { v: [""] } } }, { l: "fi", t: { Settings: { v: ["Asetukset"] } } }, { l: "fo", t: { Settings: { v: [""] } } }, { l: "fr", t: { Settings: { v: ["Paramètres"] } } }, { l: "gd", t: { Settings: { v: [""] } } }, { l: "gl", t: { Settings: { v: ["Axustes"] } } }, { l: "he", t: { Settings: { v: ["הגדרות"] } } }, { l: "hi_IN", t: { Settings: { v: [""] } } }, { l: "hr", t: { Settings: { v: [""] } } }, { l: "hsb", t: { Settings: { v: [""] } } }, { l: "hu", t: { Settings: { v: ["Beállítások"] } } }, { l: "hy", t: { Settings: { v: [""] } } }, { l: "ia", t: { Settings: { v: [""] } } }, { l: "id", t: { Settings: { v: ["Pengaturan"] } } }, { l: "ig", t: { Settings: { v: [""] } } }, { l: "is", t: { Settings: { v: ["Stillingar"] } } }, { l: "it", t: { Settings: { v: ["Impostazioni"] } } }, { l: "ja", t: { Settings: { v: ["設定"] } } }, { l: "ka", t: { Settings: { v: [""] } } }, { l: "ka_GE", t: { Settings: { v: [""] } } }, { l: "kab", t: { Settings: { v: [""] } } }, { l: "kk", t: { Settings: { v: [""] } } }, { l: "km", t: { Settings: { v: [""] } } }, { l: "kn", t: { Settings: { v: [""] } } }, { l: "ko", t: { Settings: { v: [""] } } }, { l: "la", t: { Settings: { v: [""] } } }, { l: "lb", t: { Settings: { v: [""] } } }, { l: "lo", t: { Settings: { v: [""] } } }, { l: "lt_LT", t: { Settings: { v: ["Nustatymai"] } } }, { l: "lv", t: { Settings: { v: ["Iestatījumi"] } } }, { l: "mk", t: { Settings: { v: ["Параметри"] } } }, { l: "mn", t: { Settings: { v: [""] } } }, { l: "mr", t: { Settings: { v: [""] } } }, { l: "ms_MY", t: { Settings: { v: [""] } } }, { l: "my", t: { Settings: { v: ["ချိန်ညှိချက်များ"] } } }, { l: "nb", t: { Settings: { v: ["Innstillinger"] } } }, { l: "ne", t: { Settings: { v: [""] } } }, { l: "nl", t: { Settings: { v: ["Instellingen"] } } }, { l: "nn_NO", t: { Settings: { v: [""] } } }, { l: "oc", t: { Settings: { v: ["Paramètres"] } } }, { l: "pl", t: { Settings: { v: ["Ustawienia"] } } }, { l: "ps", t: { Settings: { v: [""] } } }, { l: "pt_BR", t: { Settings: { v: ["Configurações"] } } }, { l: "pt_PT", t: { Settings: { v: ["Definições"] } } }, { l: "ro", t: { Settings: { v: ["Setări"] } } }, { l: "ru", t: { Settings: { v: ["Параметры"] } } }, { l: "sc", t: { Settings: { v: [""] } } }, { l: "si", t: { Settings: { v: [""] } } }, { l: "sk", t: { Settings: { v: ["Nastavenia"] } } }, { l: "sl", t: { Settings: { v: ["Nastavitve"] } } }, { l: "sq", t: { Settings: { v: [""] } } }, { l: "sr", t: { Settings: { v: ["Поставке"] } } }, { l: "sr@latin", t: { Settings: { v: [""] } } }, { l: "sv", t: { Settings: { v: ["Inställningar"] } } }, { l: "sw", t: { Settings: { v: [""] } } }, { l: "ta", t: { Settings: { v: [""] } } }, { l: "th", t: { Settings: { v: [""] } } }, { l: "tk", t: { Settings: { v: [""] } } }, { l: "tr", t: { Settings: { v: ["Ayarlar"] } } }, { l: "ug", t: { Settings: { v: [""] } } }, { l: "uk", t: { Settings: { v: ["Налаштування"] } } }, { l: "ur_PK", t: { Settings: { v: [""] } } }, { l: "uz", t: { Settings: { v: [""] } } }, { l: "vi", t: { Settings: { v: [""] } } }, { l: "zh_CN", t: { Settings: { v: ["设置"] } } }, { l: "zh_HK", t: { Settings: { v: ["設定"] } } }, { l: "zh_TW", t: { Settings: { v: ["設定"] } } }, { l: "zu_ZA", t: { Settings: { v: [""] } } }], $ = [{ l: "af", t: { "Settings navigation": { v: [""] } } }, { l: "ar", t: { "Settings navigation": { v: ["إعدادات التّصفُّح"] } } }, { l: "ast", t: { "Settings navigation": { v: ["Navegación pela configuración"] } } }, { l: "az", t: { "Settings navigation": { v: [""] } } }, { l: "be", t: { "Settings navigation": { v: [""] } } }, { l: "bg", t: { "Settings navigation": { v: [""] } } }, { l: "bn_BD", t: { "Settings navigation": { v: [""] } } }, { l: "br", t: { "Settings navigation": { v: [""] } } }, { l: "bs", t: { "Settings navigation": { v: [""] } } }, { l: "ca", t: { "Settings navigation": { v: ["Navegació d'opcions"] } } }, { l: "cs", t: { "Settings navigation": { v: ["Pohyb po nastavení"] } } }, { l: "cs_CZ", t: { "Settings navigation": { v: ["Pohyb po nastavení"] } } }, { l: "cy_GB", t: { "Settings navigation": { v: [""] } } }, { l: "da", t: { "Settings navigation": { v: ["Naviger i indstillinger"] } } }, { l: "de", t: { "Settings navigation": { v: ["Einstellungen für die Navigation"] } } }, { l: "de_DE", t: { "Settings navigation": { v: ["Einstellungen für die Navigation"] } } }, { l: "el", t: { "Settings navigation": { v: ["Πλοήγηση ρυθμίσεων"] } } }, { l: "en_GB", t: { "Settings navigation": { v: ["Settings navigation"] } } }, { l: "eo", t: { "Settings navigation": { v: ["Agorda navigado"] } } }, { l: "es", t: { "Settings navigation": { v: ["Navegación de ajustes"] } } }, { l: "es_419", t: { "Settings navigation": { v: [""] } } }, { l: "es_AR", t: { "Settings navigation": { v: [""] } } }, { l: "es_CL", t: { "Settings navigation": { v: [""] } } }, { l: "es_CO", t: { "Settings navigation": { v: [""] } } }, { l: "es_CR", t: { "Settings navigation": { v: [""] } } }, { l: "es_DO", t: { "Settings navigation": { v: [""] } } }, { l: "es_EC", t: { "Settings navigation": { v: ["Navegación de configuraciones"] } } }, { l: "es_GT", t: { "Settings navigation": { v: [""] } } }, { l: "es_HN", t: { "Settings navigation": { v: [""] } } }, { l: "es_MX", t: { "Settings navigation": { v: [""] } } }, { l: "es_NI", t: { "Settings navigation": { v: [""] } } }, { l: "es_PA", t: { "Settings navigation": { v: [""] } } }, { l: "es_PE", t: { "Settings navigation": { v: [""] } } }, { l: "es_PR", t: { "Settings navigation": { v: [""] } } }, { l: "es_PY", t: { "Settings navigation": { v: [""] } } }, { l: "es_SV", t: { "Settings navigation": { v: [""] } } }, { l: "es_UY", t: { "Settings navigation": { v: [""] } } }, { l: "et_EE", t: { "Settings navigation": { v: [""] } } }, { l: "eu", t: { "Settings navigation": { v: ["Nabigazio ezarpenak"] } } }, { l: "fa", t: { "Settings navigation": { v: [""] } } }, { l: "fi", t: { "Settings navigation": { v: ["Asetusnavigaatio"] } } }, { l: "fo", t: { "Settings navigation": { v: [""] } } }, { l: "fr", t: { "Settings navigation": { v: ["Navigation dans les paramètres"] } } }, { l: "gd", t: { "Settings navigation": { v: [""] } } }, { l: "gl", t: { "Settings navigation": { v: ["Navegación polos axustes"] } } }, { l: "he", t: { "Settings navigation": { v: ["ניווט בהגדרות"] } } }, { l: "hi_IN", t: { "Settings navigation": { v: [""] } } }, { l: "hr", t: { "Settings navigation": { v: [""] } } }, { l: "hsb", t: { "Settings navigation": { v: [""] } } }, { l: "hu", t: { "Settings navigation": { v: ["Navigáció a beállításokban"] } } }, { l: "hy", t: { "Settings navigation": { v: [""] } } }, { l: "ia", t: { "Settings navigation": { v: [""] } } }, { l: "id", t: { "Settings navigation": { v: ["Navigasi pengaturan"] } } }, { l: "ig", t: { "Settings navigation": { v: [""] } } }, { l: "is", t: { "Settings navigation": { v: ["Flakk um stillingar"] } } }, { l: "it", t: { "Settings navigation": { v: ["Navigazione delle impostazioni"] } } }, { l: "ja", t: { "Settings navigation": { v: ["ナビゲーション設定"] } } }, { l: "ka", t: { "Settings navigation": { v: [""] } } }, { l: "ka_GE", t: { "Settings navigation": { v: [""] } } }, { l: "kab", t: { "Settings navigation": { v: [""] } } }, { l: "kk", t: { "Settings navigation": { v: [""] } } }, { l: "km", t: { "Settings navigation": { v: [""] } } }, { l: "kn", t: { "Settings navigation": { v: [""] } } }, { l: "ko", t: { "Settings navigation": { v: [""] } } }, { l: "la", t: { "Settings navigation": { v: [""] } } }, { l: "lb", t: { "Settings navigation": { v: [""] } } }, { l: "lo", t: { "Settings navigation": { v: [""] } } }, { l: "lt_LT", t: { "Settings navigation": { v: ["Naršymas nustatymuose"] } } }, { l: "lv", t: { "Settings navigation": { v: [""] } } }, { l: "mk", t: { "Settings navigation": { v: ["Параметри за навигација"] } } }, { l: "mn", t: { "Settings navigation": { v: [""] } } }, { l: "mr", t: { "Settings navigation": { v: [""] } } }, { l: "ms_MY", t: { "Settings navigation": { v: [""] } } }, { l: "my", t: { "Settings navigation": { v: ["ချိန်ညှိချက်အညွှန်း"] } } }, { l: "nb", t: { "Settings navigation": { v: ["Navigasjonsinstillinger"] } } }, { l: "ne", t: { "Settings navigation": { v: [""] } } }, { l: "nl", t: { "Settings navigation": { v: ["Instellingen navigatie"] } } }, { l: "nn_NO", t: { "Settings navigation": { v: [""] } } }, { l: "oc", t: { "Settings navigation": { v: [""] } } }, { l: "pl", t: { "Settings navigation": { v: ["Ustawienia nawigacji"] } } }, { l: "ps", t: { "Settings navigation": { v: [""] } } }, { l: "pt_BR", t: { "Settings navigation": { v: ["Navegação de configurações"] } } }, { l: "pt_PT", t: { "Settings navigation": { v: ["Navegação de configurações"] } } }, { l: "ro", t: { "Settings navigation": { v: ["Navigare setări"] } } }, { l: "ru", t: { "Settings navigation": { v: ["Навигация по настройкам"] } } }, { l: "sc", t: { "Settings navigation": { v: [""] } } }, { l: "si", t: { "Settings navigation": { v: [""] } } }, { l: "sk", t: { "Settings navigation": { v: ["Navigácia v nastaveniach"] } } }, { l: "sl", t: { "Settings navigation": { v: ["Krmarjenje nastavitev"] } } }, { l: "sq", t: { "Settings navigation": { v: [""] } } }, { l: "sr", t: { "Settings navigation": { v: ["Кретање по подешавањима"] } } }, { l: "sr@latin", t: { "Settings navigation": { v: [""] } } }, { l: "sv", t: { "Settings navigation": { v: ["Inställningsmeny"] } } }, { l: "sw", t: { "Settings navigation": { v: [""] } } }, { l: "ta", t: { "Settings navigation": { v: [""] } } }, { l: "th", t: { "Settings navigation": { v: [""] } } }, { l: "tk", t: { "Settings navigation": { v: [""] } } }, { l: "tr", t: { "Settings navigation": { v: ["Gezinme ayarları"] } } }, { l: "ug", t: { "Settings navigation": { v: [""] } } }, { l: "uk", t: { "Settings navigation": { v: ["Навігація у налаштуваннях"] } } }, { l: "ur_PK", t: { "Settings navigation": { v: [""] } } }, { l: "uz", t: { "Settings navigation": { v: [""] } } }, { l: "vi", t: { "Settings navigation": { v: [""] } } }, { l: "zh_CN", t: { "Settings navigation": { v: ["设置向导"] } } }, { l: "zh_HK", t: { "Settings navigation": { v: ["設定值導覽"] } } }, { l: "zh_TW", t: { "Settings navigation": { v: ["設定值導覽"] } } }, { l: "zu_ZA", t: { "Settings navigation": { v: [""] } } }], ee = [{ l: "af", t: { Submit: { v: [""] } } }, { l: "ar", t: { Submit: { v: ["إرسال"] } } }, { l: "ast", t: { Submit: { v: ["Unviar"] } } }, { l: "az", t: { Submit: { v: [""] } } }, { l: "be", t: { Submit: { v: [""] } } }, { l: "bg", t: { Submit: { v: [""] } } }, { l: "bn_BD", t: { Submit: { v: [""] } } }, { l: "br", t: { Submit: { v: [""] } } }, { l: "bs", t: { Submit: { v: [""] } } }, { l: "ca", t: { Submit: { v: ["Envia"] } } }, { l: "cs", t: { Submit: { v: ["Odeslat"] } } }, { l: "cs_CZ", t: { Submit: { v: ["Odeslat"] } } }, { l: "cy_GB", t: { Submit: { v: [""] } } }, { l: "da", t: { Submit: { v: ["Send"] } } }, { l: "de", t: { Submit: { v: ["Einreichen"] } } }, { l: "de_DE", t: { Submit: { v: ["Einreichen"] } } }, { l: "el", t: { Submit: { v: ["Υποβολή"] } } }, { l: "en_GB", t: { Submit: { v: ["Submit"] } } }, { l: "eo", t: { Submit: { v: [""] } } }, { l: "es", t: { Submit: { v: ["Enviar"] } } }, { l: "es_419", t: { Submit: { v: [""] } } }, { l: "es_AR", t: { Submit: { v: [""] } } }, { l: "es_CL", t: { Submit: { v: [""] } } }, { l: "es_CO", t: { Submit: { v: [""] } } }, { l: "es_CR", t: { Submit: { v: [""] } } }, { l: "es_DO", t: { Submit: { v: [""] } } }, { l: "es_EC", t: { Submit: { v: ["Enviar"] } } }, { l: "es_GT", t: { Submit: { v: [""] } } }, { l: "es_HN", t: { Submit: { v: [""] } } }, { l: "es_MX", t: { Submit: { v: [""] } } }, { l: "es_NI", t: { Submit: { v: [""] } } }, { l: "es_PA", t: { Submit: { v: [""] } } }, { l: "es_PE", t: { Submit: { v: [""] } } }, { l: "es_PR", t: { Submit: { v: [""] } } }, { l: "es_PY", t: { Submit: { v: [""] } } }, { l: "es_SV", t: { Submit: { v: [""] } } }, { l: "es_UY", t: { Submit: { v: [""] } } }, { l: "et_EE", t: { Submit: { v: [""] } } }, { l: "eu", t: { Submit: { v: ["Bidali"] } } }, { l: "fa", t: { Submit: { v: [""] } } }, { l: "fi", t: { Submit: { v: ["Lähetä"] } } }, { l: "fo", t: { Submit: { v: [""] } } }, { l: "fr", t: { Submit: { v: ["Valider"] } } }, { l: "gd", t: { Submit: { v: [""] } } }, { l: "gl", t: { Submit: { v: ["Enviar"] } } }, { l: "he", t: { Submit: { v: ["הגשה"] } } }, { l: "hi_IN", t: { Submit: { v: [""] } } }, { l: "hr", t: { Submit: { v: [""] } } }, { l: "hsb", t: { Submit: { v: [""] } } }, { l: "hu", t: { Submit: { v: ["Beküldés"] } } }, { l: "hy", t: { Submit: { v: [""] } } }, { l: "ia", t: { Submit: { v: [""] } } }, { l: "id", t: { Submit: { v: ["Kirimkan"] } } }, { l: "ig", t: { Submit: { v: [""] } } }, { l: "is", t: { Submit: { v: ["Senda inn"] } } }, { l: "it", t: { Submit: { v: ["Invia"] } } }, { l: "ja", t: { Submit: { v: ["提出"] } } }, { l: "ka", t: { Submit: { v: [""] } } }, { l: "ka_GE", t: { Submit: { v: [""] } } }, { l: "kab", t: { Submit: { v: [""] } } }, { l: "kk", t: { Submit: { v: [""] } } }, { l: "km", t: { Submit: { v: [""] } } }, { l: "kn", t: { Submit: { v: [""] } } }, { l: "ko", t: { Submit: { v: [""] } } }, { l: "la", t: { Submit: { v: [""] } } }, { l: "lb", t: { Submit: { v: [""] } } }, { l: "lo", t: { Submit: { v: [""] } } }, { l: "lt_LT", t: { Submit: { v: ["Pateikti"] } } }, { l: "lv", t: { Submit: { v: [""] } } }, { l: "mk", t: { Submit: { v: ["Испрати"] } } }, { l: "mn", t: { Submit: { v: [""] } } }, { l: "mr", t: { Submit: { v: [""] } } }, { l: "ms_MY", t: { Submit: { v: [""] } } }, { l: "my", t: { Submit: { v: ["တင်သွင်းရန်"] } } }, { l: "nb", t: { Submit: { v: ["Send"] } } }, { l: "ne", t: { Submit: { v: [""] } } }, { l: "nl", t: { Submit: { v: ["Verwerken"] } } }, { l: "nn_NO", t: { Submit: { v: [""] } } }, { l: "oc", t: { Submit: { v: [""] } } }, { l: "pl", t: { Submit: { v: ["Wyślij"] } } }, { l: "ps", t: { Submit: { v: [""] } } }, { l: "pt_BR", t: { Submit: { v: ["Enviar"] } } }, { l: "pt_PT", t: { Submit: { v: ["Submeter"] } } }, { l: "ro", t: { Submit: { v: ["Trimiteți"] } } }, { l: "ru", t: { Submit: { v: ["Утвердить"] } } }, { l: "sc", t: { Submit: { v: [""] } } }, { l: "si", t: { Submit: { v: [""] } } }, { l: "sk", t: { Submit: { v: ["Odoslať"] } } }, { l: "sl", t: { Submit: { v: ["Pošlji"] } } }, { l: "sq", t: { Submit: { v: [""] } } }, { l: "sr", t: { Submit: { v: ["Поднеси"] } } }, { l: "sr@latin", t: { Submit: { v: [""] } } }, { l: "sv", t: { Submit: { v: ["Skicka"] } } }, { l: "sw", t: { Submit: { v: [""] } } }, { l: "ta", t: { Submit: { v: [""] } } }, { l: "th", t: { Submit: { v: [""] } } }, { l: "tk", t: { Submit: { v: [""] } } }, { l: "tr", t: { Submit: { v: ["Gönder"] } } }, { l: "ug", t: { Submit: { v: [""] } } }, { l: "uk", t: { Submit: { v: ["Надіслати"] } } }, { l: "ur_PK", t: { Submit: { v: [""] } } }, { l: "uz", t: { Submit: { v: [""] } } }, { l: "vi", t: { Submit: { v: [""] } } }, { l: "zh_CN", t: { Submit: { v: ["提交"] } } }, { l: "zh_HK", t: { Submit: { v: ["提交"] } } }, { l: "zh_TW", t: { Submit: { v: ["遞交"] } } }, { l: "zu_ZA", t: { Submit: { v: [""] } } }], te = [{ l: "af", t: { "Unable to search the group": { v: [""] } } }, { l: "ar", t: { "Unable to search the group": { v: ["تعذّر البحث في المجموعة"] } } }, { l: "ast", t: { "Unable to search the group": { v: ["Nun ye posible buscar el grupu"] } } }, { l: "az", t: { "Unable to search the group": { v: [""] } } }, { l: "be", t: { "Unable to search the group": { v: [""] } } }, { l: "bg", t: { "Unable to search the group": { v: [""] } } }, { l: "bn_BD", t: { "Unable to search the group": { v: [""] } } }, { l: "br", t: { "Unable to search the group": { v: ["Dibosupl eo klask ar strollad"] } } }, { l: "bs", t: { "Unable to search the group": { v: [""] } } }, { l: "ca", t: { "Unable to search the group": { v: ["No es pot cercar el grup"] } } }, { l: "cs", t: { "Unable to search the group": { v: ["Nedaří se hledat skupinu"] } } }, { l: "cs_CZ", t: { "Unable to search the group": { v: ["Nedaří se hledat skupinu"] } } }, { l: "cy_GB", t: { "Unable to search the group": { v: [""] } } }, { l: "da", t: { "Unable to search the group": { v: ["Kan ikke søge på denne gruppe"] } } }, { l: "de", t: { "Unable to search the group": { v: ["Die Gruppe konnte nicht durchsucht werden."] } } }, { l: "de_DE", t: { "Unable to search the group": { v: ["Die Gruppe kann nicht durchsucht werden"] } } }, { l: "el", t: { "Unable to search the group": { v: ["Δεν είναι δυνατή η αναζήτηση της ομάδας"] } } }, { l: "en_GB", t: { "Unable to search the group": { v: ["Unable to search the group"] } } }, { l: "eo", t: { "Unable to search the group": { v: ["Ne eblas serĉi en la grupo"] } } }, { l: "es", t: { "Unable to search the group": { v: ["No es posible buscar en el grupo"] } } }, { l: "es_419", t: { "Unable to search the group": { v: [""] } } }, { l: "es_AR", t: { "Unable to search the group": { v: [""] } } }, { l: "es_CL", t: { "Unable to search the group": { v: [""] } } }, { l: "es_CO", t: { "Unable to search the group": { v: [""] } } }, { l: "es_CR", t: { "Unable to search the group": { v: [""] } } }, { l: "es_DO", t: { "Unable to search the group": { v: [""] } } }, { l: "es_EC", t: { "Unable to search the group": { v: ["No se puede buscar en el grupo"] } } }, { l: "es_GT", t: { "Unable to search the group": { v: [""] } } }, { l: "es_HN", t: { "Unable to search the group": { v: [""] } } }, { l: "es_MX", t: { "Unable to search the group": { v: [""] } } }, { l: "es_NI", t: { "Unable to search the group": { v: [""] } } }, { l: "es_PA", t: { "Unable to search the group": { v: [""] } } }, { l: "es_PE", t: { "Unable to search the group": { v: [""] } } }, { l: "es_PR", t: { "Unable to search the group": { v: [""] } } }, { l: "es_PY", t: { "Unable to search the group": { v: [""] } } }, { l: "es_SV", t: { "Unable to search the group": { v: [""] } } }, { l: "es_UY", t: { "Unable to search the group": { v: [""] } } }, { l: "et_EE", t: { "Unable to search the group": { v: [""] } } }, { l: "eu", t: { "Unable to search the group": { v: ["Ezin izan da taldea bilatu"] } } }, { l: "fa", t: { "Unable to search the group": { v: [""] } } }, { l: "fi", t: { "Unable to search the group": { v: ["Ryhmää ei voi hakea"] } } }, { l: "fo", t: { "Unable to search the group": { v: [""] } } }, { l: "fr", t: { "Unable to search the group": { v: ["Impossible de chercher le groupe"] } } }, { l: "gd", t: { "Unable to search the group": { v: [""] } } }, { l: "gl", t: { "Unable to search the group": { v: ["Non foi posíbel buscar o grupo"] } } }, { l: "he", t: { "Unable to search the group": { v: ["לא ניתן לחפש בקבוצה"] } } }, { l: "hi_IN", t: { "Unable to search the group": { v: [""] } } }, { l: "hr", t: { "Unable to search the group": { v: [""] } } }, { l: "hsb", t: { "Unable to search the group": { v: [""] } } }, { l: "hu", t: { "Unable to search the group": { v: ["A csoport nem kereshető"] } } }, { l: "hy", t: { "Unable to search the group": { v: [""] } } }, { l: "ia", t: { "Unable to search the group": { v: [""] } } }, { l: "id", t: { "Unable to search the group": { v: ["Tidak dapat mencari dalam grup"] } } }, { l: "ig", t: { "Unable to search the group": { v: [""] } } }, { l: "is", t: { "Unable to search the group": { v: ["Get ekki leitað í hópnum"] } } }, { l: "it", t: { "Unable to search the group": { v: ["Impossibile cercare il gruppo"] } } }, { l: "ja", t: { "Unable to search the group": { v: ["グループを検索できません"] } } }, { l: "ka", t: { "Unable to search the group": { v: [""] } } }, { l: "ka_GE", t: { "Unable to search the group": { v: [""] } } }, { l: "kab", t: { "Unable to search the group": { v: [""] } } }, { l: "kk", t: { "Unable to search the group": { v: [""] } } }, { l: "km", t: { "Unable to search the group": { v: [""] } } }, { l: "kn", t: { "Unable to search the group": { v: [""] } } }, { l: "ko", t: { "Unable to search the group": { v: [""] } } }, { l: "la", t: { "Unable to search the group": { v: [""] } } }, { l: "lb", t: { "Unable to search the group": { v: [""] } } }, { l: "lo", t: { "Unable to search the group": { v: [""] } } }, { l: "lt_LT", t: { "Unable to search the group": { v: ["Nepavyko atlikti paiešką grupėje"] } } }, { l: "lv", t: { "Unable to search the group": { v: [""] } } }, { l: "mk", t: { "Unable to search the group": { v: ["Неможе да се принајде групата"] } } }, { l: "mn", t: { "Unable to search the group": { v: [""] } } }, { l: "mr", t: { "Unable to search the group": { v: [""] } } }, { l: "ms_MY", t: { "Unable to search the group": { v: [""] } } }, { l: "my", t: { "Unable to search the group": { v: ["အဖွဲ့အား ရှာဖွေ၍ မရနိုင်ပါ"] } } }, { l: "nb", t: { "Unable to search the group": { v: ["Kunne ikke søke i gruppen"] } } }, { l: "ne", t: { "Unable to search the group": { v: [""] } } }, { l: "nl", t: { "Unable to search the group": { v: ["Kan niet zoeken in de groep"] } } }, { l: "nn_NO", t: { "Unable to search the group": { v: [""] } } }, { l: "oc", t: { "Unable to search the group": { v: [""] } } }, { l: "pl", t: { "Unable to search the group": { v: ["Nie można przeszukać grupy"] } } }, { l: "ps", t: { "Unable to search the group": { v: [""] } } }, { l: "pt_BR", t: { "Unable to search the group": { v: ["Não foi possível pesquisar o grupo"] } } }, { l: "pt_PT", t: { "Unable to search the group": { v: ["Não é possível pesquisar o grupo"] } } }, { l: "ro", t: { "Unable to search the group": { v: ["Imposibilitatea de a căuta în grup"] } } }, { l: "ru", t: { "Unable to search the group": { v: ["Невозможно найти группу"] } } }, { l: "sc", t: { "Unable to search the group": { v: [""] } } }, { l: "si", t: { "Unable to search the group": { v: [""] } } }, { l: "sk", t: { "Unable to search the group": { v: ["Skupinu sa nepodarilo nájsť"] } } }, { l: "sl", t: { "Unable to search the group": { v: ["Ni mogoče iskati po skupini"] } } }, { l: "sq", t: { "Unable to search the group": { v: [""] } } }, { l: "sr", t: { "Unable to search the group": { v: ["Група не може да се претражи"] } } }, { l: "sr@latin", t: { "Unable to search the group": { v: [""] } } }, { l: "sv", t: { "Unable to search the group": { v: ["Kunde inte söka i gruppen"] } } }, { l: "sw", t: { "Unable to search the group": { v: [""] } } }, { l: "ta", t: { "Unable to search the group": { v: [""] } } }, { l: "th", t: { "Unable to search the group": { v: [""] } } }, { l: "tk", t: { "Unable to search the group": { v: [""] } } }, { l: "tr", t: { "Unable to search the group": { v: ["Grupta arama yapılamadı"] } } }, { l: "ug", t: { "Unable to search the group": { v: [""] } } }, { l: "uk", t: { "Unable to search the group": { v: ["Неможливо шукати в групі"] } } }, { l: "ur_PK", t: { "Unable to search the group": { v: [""] } } }, { l: "uz", t: { "Unable to search the group": { v: [""] } } }, { l: "vi", t: { "Unable to search the group": { v: [""] } } }, { l: "zh_CN", t: { "Unable to search the group": { v: ["无法搜索分组"] } } }, { l: "zh_HK", t: { "Unable to search the group": { v: ["無法搜尋群組"] } } }, { l: "zh_TW", t: { "Unable to search the group": { v: ["無法搜尋群組"] } } }, { l: "zu_ZA", t: { "Unable to search the group": { v: [""] } } }], ae = [{ l: "af", t: { "Undo changes": { v: [""] } } }, { l: "ar", t: { "Undo changes": { v: ["تراجَع عن التغييرات"] } } }, { l: "ast", t: { "Undo changes": { v: ["Desfacer los cambeos"] } } }, { l: "az", t: { "Undo changes": { v: [""] } } }, { l: "be", t: { "Undo changes": { v: [""] } } }, { l: "bg", t: { "Undo changes": { v: [""] } } }, { l: "bn_BD", t: { "Undo changes": { v: [""] } } }, { l: "br", t: { "Undo changes": { v: [""] } } }, { l: "bs", t: { "Undo changes": { v: [""] } } }, { l: "ca", t: { "Undo changes": { v: ["Desfés els canvis"] } } }, { l: "cs", t: { "Undo changes": { v: ["Vzít změny zpět"] } } }, { l: "cs_CZ", t: { "Undo changes": { v: ["Vzít změny zpět"] } } }, { l: "cy_GB", t: { "Undo changes": { v: [""] } } }, { l: "da", t: { "Undo changes": { v: ["Fortryd ændringer"] } } }, { l: "de", t: { "Undo changes": { v: ["Änderungen rückgängig machen"] } } }, { l: "de_DE", t: { "Undo changes": { v: ["Änderungen rückgängig machen"] } } }, { l: "el", t: { "Undo changes": { v: ["Αναίρεση Αλλαγών"] } } }, { l: "en_GB", t: { "Undo changes": { v: ["Undo changes"] } } }, { l: "eo", t: { "Undo changes": { v: [""] } } }, { l: "es", t: { "Undo changes": { v: ["Deshacer cambios"] } } }, { l: "es_419", t: { "Undo changes": { v: [""] } } }, { l: "es_AR", t: { "Undo changes": { v: [""] } } }, { l: "es_CL", t: { "Undo changes": { v: [""] } } }, { l: "es_CO", t: { "Undo changes": { v: [""] } } }, { l: "es_CR", t: { "Undo changes": { v: [""] } } }, { l: "es_DO", t: { "Undo changes": { v: [""] } } }, { l: "es_EC", t: { "Undo changes": { v: ["Deshacer cambios"] } } }, { l: "es_GT", t: { "Undo changes": { v: [""] } } }, { l: "es_HN", t: { "Undo changes": { v: [""] } } }, { l: "es_MX", t: { "Undo changes": { v: [""] } } }, { l: "es_NI", t: { "Undo changes": { v: [""] } } }, { l: "es_PA", t: { "Undo changes": { v: [""] } } }, { l: "es_PE", t: { "Undo changes": { v: [""] } } }, { l: "es_PR", t: { "Undo changes": { v: [""] } } }, { l: "es_PY", t: { "Undo changes": { v: [""] } } }, { l: "es_SV", t: { "Undo changes": { v: [""] } } }, { l: "es_UY", t: { "Undo changes": { v: [""] } } }, { l: "et_EE", t: { "Undo changes": { v: [""] } } }, { l: "eu", t: { "Undo changes": { v: ["Aldaketak desegin"] } } }, { l: "fa", t: { "Undo changes": { v: [""] } } }, { l: "fi", t: { "Undo changes": { v: ["Kumoa muutokset"] } } }, { l: "fo", t: { "Undo changes": { v: [""] } } }, { l: "fr", t: { "Undo changes": { v: ["Annuler les changements"] } } }, { l: "gd", t: { "Undo changes": { v: [""] } } }, { l: "gl", t: { "Undo changes": { v: ["Desfacer os cambios"] } } }, { l: "he", t: { "Undo changes": { v: ["ביטול שינויים"] } } }, { l: "hi_IN", t: { "Undo changes": { v: [""] } } }, { l: "hr", t: { "Undo changes": { v: [""] } } }, { l: "hsb", t: { "Undo changes": { v: [""] } } }, { l: "hu", t: { "Undo changes": { v: ["Változtatások visszavonása"] } } }, { l: "hy", t: { "Undo changes": { v: [""] } } }, { l: "ia", t: { "Undo changes": { v: [""] } } }, { l: "id", t: { "Undo changes": { v: ["Urungkan perubahan"] } } }, { l: "ig", t: { "Undo changes": { v: [""] } } }, { l: "is", t: { "Undo changes": { v: ["Afturkalla breytingar"] } } }, { l: "it", t: { "Undo changes": { v: ["Cancella i cambiamenti"] } } }, { l: "ja", t: { "Undo changes": { v: ["変更を取り消し"] } } }, { l: "ka", t: { "Undo changes": { v: [""] } } }, { l: "ka_GE", t: { "Undo changes": { v: [""] } } }, { l: "kab", t: { "Undo changes": { v: [""] } } }, { l: "kk", t: { "Undo changes": { v: [""] } } }, { l: "km", t: { "Undo changes": { v: [""] } } }, { l: "kn", t: { "Undo changes": { v: [""] } } }, { l: "ko", t: { "Undo changes": { v: [""] } } }, { l: "la", t: { "Undo changes": { v: [""] } } }, { l: "lb", t: { "Undo changes": { v: [""] } } }, { l: "lo", t: { "Undo changes": { v: [""] } } }, { l: "lt_LT", t: { "Undo changes": { v: [""] } } }, { l: "lv", t: { "Undo changes": { v: [""] } } }, { l: "mk", t: { "Undo changes": { v: ["Врати ги промените"] } } }, { l: "mn", t: { "Undo changes": { v: [""] } } }, { l: "mr", t: { "Undo changes": { v: [""] } } }, { l: "ms_MY", t: { "Undo changes": { v: [""] } } }, { l: "my", t: { "Undo changes": { v: [""] } } }, { l: "nb", t: { "Undo changes": { v: ["Tilbakestill endringer"] } } }, { l: "ne", t: { "Undo changes": { v: [""] } } }, { l: "nl", t: { "Undo changes": { v: ["Wijzigingen ongedaan maken"] } } }, { l: "nn_NO", t: { "Undo changes": { v: [""] } } }, { l: "oc", t: { "Undo changes": { v: [""] } } }, { l: "pl", t: { "Undo changes": { v: ["Cofnij zmiany"] } } }, { l: "ps", t: { "Undo changes": { v: [""] } } }, { l: "pt_BR", t: { "Undo changes": { v: ["Desfazer modificações"] } } }, { l: "pt_PT", t: { "Undo changes": { v: ["Anular alterações"] } } }, { l: "ro", t: { "Undo changes": { v: ["Anularea modificărilor"] } } }, { l: "ru", t: { "Undo changes": { v: ["Отменить изменения"] } } }, { l: "sc", t: { "Undo changes": { v: [""] } } }, { l: "si", t: { "Undo changes": { v: [""] } } }, { l: "sk", t: { "Undo changes": { v: ["Vrátiť zmeny"] } } }, { l: "sl", t: { "Undo changes": { v: ["Razveljavi spremembe"] } } }, { l: "sq", t: { "Undo changes": { v: [""] } } }, { l: "sr", t: { "Undo changes": { v: ["Поништи измене"] } } }, { l: "sr@latin", t: { "Undo changes": { v: [""] } } }, { l: "sv", t: { "Undo changes": { v: ["Ångra ändringar"] } } }, { l: "sw", t: { "Undo changes": { v: [""] } } }, { l: "ta", t: { "Undo changes": { v: [""] } } }, { l: "th", t: { "Undo changes": { v: [""] } } }, { l: "tk", t: { "Undo changes": { v: [""] } } }, { l: "tr", t: { "Undo changes": { v: ["Değişiklikleri geri al"] } } }, { l: "ug", t: { "Undo changes": { v: [""] } } }, { l: "uk", t: { "Undo changes": { v: ["Скасувати зміни"] } } }, { l: "ur_PK", t: { "Undo changes": { v: [""] } } }, { l: "uz", t: { "Undo changes": { v: [""] } } }, { l: "vi", t: { "Undo changes": { v: [""] } } }, { l: "zh_CN", t: { "Undo changes": { v: ["撤销更改"] } } }, { l: "zh_HK", t: { "Undo changes": { v: ["取消更改"] } } }, { l: "zh_TW", t: { "Undo changes": { v: ["還原變更"] } } }, { l: "zu_ZA", t: { "Undo changes": { v: [""] } } }], se = [{ l: "af", t: {} }, { l: "ar", t: { "User status: {status}": { v: ["حالة المستخدِم: {status}"] } } }, { l: "ast", t: { "User status: {status}": { v: ["Estáu del usuariu: {status}"] } } }, { l: "az", t: {} }, { l: "be", t: {} }, { l: "bg", t: {} }, { l: "bn_BD", t: {} }, { l: "br", t: {} }, { l: "bs", t: {} }, { l: "ca", t: {} }, { l: "cs", t: {} }, { l: "cs_CZ", t: { "User status: {status}": { v: ["Stav uživatele: {status}"] } } }, { l: "cy_GB", t: {} }, { l: "da", t: { "User status: {status}": { v: ["Brugerstatus: {status}"] } } }, { l: "de", t: { "User status: {status}": { v: ["Benutzerstatus: {status}"] } } }, { l: "de_DE", t: { "User status: {status}": { v: ["Benutzerstatus: {status}"] } } }, { l: "el", t: {} }, { l: "en_GB", t: { "User status: {status}": { v: ["User status: {status}"] } } }, { l: "eo", t: {} }, { l: "es", t: { "User status: {status}": { v: ["Estatus del usuario: {status}"] } } }, { l: "es_419", t: {} }, { l: "es_AR", t: {} }, { l: "es_CL", t: {} }, { l: "es_CO", t: {} }, { l: "es_CR", t: {} }, { l: "es_DO", t: {} }, { l: "es_EC", t: {} }, { l: "es_GT", t: {} }, { l: "es_HN", t: {} }, { l: "es_MX", t: {} }, { l: "es_NI", t: {} }, { l: "es_PA", t: {} }, { l: "es_PE", t: {} }, { l: "es_PR", t: {} }, { l: "es_PY", t: {} }, { l: "es_SV", t: {} }, { l: "es_UY", t: {} }, { l: "et_EE", t: {} }, { l: "eu", t: {} }, { l: "fa", t: {} }, { l: "fi", t: {} }, { l: "fo", t: {} }, { l: "fr", t: { "User status: {status}": { v: ["Statut de l'utilisateur : {status}"] } } }, { l: "gd", t: {} }, { l: "gl", t: { "User status: {status}": { v: ["Estado do usuario: {status}"] } } }, { l: "he", t: {} }, { l: "hi_IN", t: {} }, { l: "hr", t: {} }, { l: "hsb", t: {} }, { l: "hu", t: {} }, { l: "hy", t: {} }, { l: "ia", t: {} }, { l: "id", t: { "User status: {status}": { v: ["Status pengguna: {status}"] } } }, { l: "ig", t: {} }, { l: "is", t: { "User status: {status}": { v: ["Staða notanda: {status}"] } } }, { l: "it", t: { "User status: {status}": { v: ["Stato dell'utente: {status}"] } } }, { l: "ja", t: {} }, { l: "ka", t: {} }, { l: "ka_GE", t: {} }, { l: "kab", t: {} }, { l: "kk", t: {} }, { l: "km", t: {} }, { l: "kn", t: {} }, { l: "ko", t: {} }, { l: "la", t: {} }, { l: "lb", t: {} }, { l: "lo", t: {} }, { l: "lt_LT", t: {} }, { l: "lv", t: {} }, { l: "mk", t: {} }, { l: "mn", t: {} }, { l: "mr", t: {} }, { l: "ms_MY", t: {} }, { l: "my", t: {} }, { l: "nb", t: {} }, { l: "ne", t: {} }, { l: "nl", t: { "User status: {status}": { v: ["Gebruikers status: {status}"] } } }, { l: "nn_NO", t: {} }, { l: "oc", t: {} }, { l: "pl", t: { "User status: {status}": { v: ["Status użytkownika: {status}"] } } }, { l: "ps", t: {} }, { l: "pt_BR", t: { "User status: {status}": { v: ["Status do usuário: {status}"] } } }, { l: "pt_PT", t: {} }, { l: "ro", t: { "User status: {status}": { v: ["Status utilizator: {status}"] } } }, { l: "ru", t: { "User status: {status}": { v: ["Статус пользователя: {status}"] } } }, { l: "sc", t: {} }, { l: "si", t: {} }, { l: "sk", t: {} }, { l: "sl", t: {} }, { l: "sq", t: {} }, { l: "sr", t: { "User status: {status}": { v: ["Статус корисника: {status}"] } } }, { l: "sr@latin", t: {} }, { l: "sv", t: { "User status: {status}": { v: ["Användarstatus: {status}"] } } }, { l: "sw", t: {} }, { l: "ta", t: {} }, { l: "th", t: {} }, { l: "tk", t: {} }, { l: "tr", t: { "User status: {status}": { v: ["Kullanıcı durumu: {status}"] } } }, { l: "ug", t: {} }, { l: "uk", t: { "User status: {status}": { v: ["Статус користувача: {status}"] } } }, { l: "ur_PK", t: {} }, { l: "uz", t: {} }, { l: "vi", t: {} }, { l: "zh_CN", t: {} }, { l: "zh_HK", t: { "User status: {status}": { v: ["用戶狀態：{status}"] } } }, { l: "zh_TW", t: {} }, { l: "zu_ZA", t: {} }];



/***/ }),

/***/ 3490:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   n: () => (/* binding */ v)
/* harmony export */ });
function v(r, a, d, h, i, t, f, u) {
  var e = typeof r == "function" ? r.options : r;
  a && (e.render = a, e.staticRenderFns = d, e._compiled = !0), h && (e.functional = !0), t && (e._scopeId = "data-v-" + t);
  var o;
  if (f ? (o = function(n) {
    n = n || // cached call
    this.$vnode && this.$vnode.ssrContext || // stateful
    this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, !n && typeof __VUE_SSR_CONTEXT__ < "u" && (n = __VUE_SSR_CONTEXT__), i && i.call(this, n), n && n._registeredComponents && n._registeredComponents.add(f);
  }, e._ssrRegister = o) : i && (o = u ? function() {
    i.call(
      this,
      (e.functional ? this.parent : this).$root.$options.shadowRoot
    );
  } : i), o)
    if (e.functional) {
      e._injectStyles = o;
      var l = e.render;
      e.render = function(p, _) {
        return o.call(_), l(p, _);
      };
    } else {
      var s = e.beforeCreate;
      e.beforeCreate = s ? [].concat(s, o) : [o];
    }
  return {
    exports: r,
    options: e
  };
}



/***/ }),

/***/ 9724:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: () => (/* binding */ n)
/* harmony export */ });
/**
 * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const n = function() {
  return Object.assign(window, { _nc_focus_trap: window._nc_focus_trap || [] }), window._nc_focus_trap;
};



/***/ }),

/***/ 3073:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  X2F: () => (/* binding */ onClickOutside),
  YC1: () => (/* binding */ useActiveElement),
  hcC: () => (/* binding */ useBattery),
  ZDG: () => (/* binding */ useBrowserLocation),
  iDZ: () => (/* binding */ useClipboard),
  C6J: () => (/* binding */ useDark),
  uqd: () => (/* binding */ useDeviceMotion),
  QPX: () => (/* binding */ useDeviceOrientation),
  JCr: () => (/* binding */ useDevicePixelRatio),
  hXn: () => (/* binding */ useDevicesList),
  fho: () => (/* binding */ useDocumentVisibility),
  PMY: () => (/* binding */ useDraggable),
  SSU: () => (/* binding */ useElementBounding),
  Lhy: () => (/* binding */ useElementSize),
  ITo: () => (/* binding */ useElementVisibility),
  X68: () => (/* binding */ useEyeDropper),
  HrR: () => (/* binding */ useFullscreen),
  mJX: () => (/* binding */ useGeolocation),
  UQV: () => (/* binding */ useIdle),
  BLq: () => (/* binding */ useIntersectionObserver),
  NTS: () => (/* binding */ useMouse),
  eef: () => (/* binding */ useMouseInElement),
  NXY: () => (/* binding */ useMousePressed),
  AEG: () => (/* binding */ useNetwork),
  cBR: () => (/* binding */ useNow),
  onz: () => (/* binding */ useObjectUrl),
  vYo: () => (/* binding */ useOffsetPagination),
  LmP: () => (/* binding */ useOnline),
  ObO: () => (/* binding */ usePageLeave),
  RcE: () => (/* binding */ usePointer),
  CB: () => (/* binding */ usePointerLock),
  tDD: () => (/* binding */ usePreferredColorScheme),
  l34: () => (/* binding */ usePreferredContrast),
  Nk8: () => (/* binding */ usePreferredDark),
  eeI: () => (/* binding */ usePreferredLanguages),
  pf5: () => (/* binding */ usePreferredReducedMotion),
  wYm: () => (/* binding */ useResizeObserver),
  rXt: () => (/* binding */ useStorage),
  o__: () => (/* binding */ useSwipe),
  uN2: () => (/* binding */ useTimeAgo),
  wH9: () => (/* binding */ useTimestamp),
  niW: () => (/* binding */ useVirtualList),
  esz: () => (/* binding */ useWindowFocus),
  lWr: () => (/* binding */ useWindowSize)
});

// UNUSED EXPORTS: DefaultMagicKeysAliasMap, StorageSerializers, TransitionPresets, assert, asyncComputed, autoResetRef, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsMasterCss, breakpointsPrimeFlex, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, breakpointsVuetifyV2, breakpointsVuetifyV3, bypassFilter, camelize, clamp, cloneFnJSON, computedAsync, computedEager, computedInject, computedWithControl, containsProp, controlledComputed, controlledRef, createEventHook, createFetch, createFilterWrapper, createGlobalState, createInjectionState, createReactiveFn, createReusableTemplate, createSharedComposable, createSingletonPromise, createTemplatePromise, createUnrefFn, customStorageEventName, debounceFilter, debouncedRef, debouncedWatch, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, directiveHooks, eagerComputed, executeTransition, extendRef, formatDate, formatTimeAgo, get, getLifeCycleTarget, getSSRHandler, hasOwn, hyphenate, identity, ignorableWatch, increaseWithUnit, injectLocal, invoke, isClient, isDef, isDefined, isIOS, isObject, isWorker, makeDestructurable, mapGamepadToXbox360Controller, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, pausableFilter, pausableWatch, promiseTimeout, provideLocal, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, setSSRHandler, syncRef, syncRefs, templateRef, throttleFilter, throttledRef, throttledWatch, timestamp, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, unrefElement, until, useAnimate, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useAsyncQueue, useAsyncState, useBase64, useBluetooth, useBreakpoints, useBroadcastChannel, useCached, useClipboardItems, useCloned, useColorMode, useConfirmDialog, useCounter, useCssVar, useCurrentElement, useCycleList, useDateFormat, useDebounce, useDebounceFn, useDebouncedRefHistory, useDisplayMedia, useDropZone, useElementByPoint, useElementHover, useEventBus, useEventListener, useEventSource, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useGamepad, useImage, useInfiniteScroll, useInterval, useIntervalFn, useKeyModifier, useLastChanged, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMutationObserver, useNavigatorLanguage, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointerSwipe, usePrevious, useRafFn, useRefHistory, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorageAsync, useStyleTag, useSupported, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottle, useThrottleFn, useThrottledRefHistory, useTimeout, useTimeoutFn, useTimeoutPoll, useTitle, useToNumber, useToString, useToggle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowScroll, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever

// EXTERNAL MODULE: ./node_modules/@vueuse/shared/index.mjs + 1 modules
var shared = __webpack_require__(9271);
// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
;// CONCATENATED MODULE: ./node_modules/@vueuse/core/node_modules/vue-demi/lib/index.mjs



var lib_isVue2 = true
var lib_isVue3 = false
var Vue2 = (/* unused pure expression or super */ null && (Vue))
var warn = vue_runtime_esm/* default */.Ay.util.warn

function install() {}

// createApp polyfill
function createApp(rootComponent, rootProps) {
  var vm
  var provide = {}
  var app = {
    config: Vue.config,
    use: Vue.use.bind(Vue),
    mixin: Vue.mixin.bind(Vue),
    component: Vue.component.bind(Vue),
    provide: function (key, value) {
      provide[key] = value
      return this
    },
    directive: function (name, dir) {
      if (dir) {
        Vue.directive(name, dir)
        return app
      } else {
        return Vue.directive(name)
      }
    },
    mount: function (el, hydrating) {
      if (!vm) {
        vm = new Vue(Object.assign({ propsData: rootProps }, rootComponent, { provide: Object.assign(provide, rootComponent.provide) }))
        vm.$mount(el, hydrating)
        return vm
      } else {
        return vm
      }
    },
    unmount: function () {
      if (vm) {
        vm.$destroy()
        vm = undefined
      }
    },
  }
  return app
}



// Vue 3 components mock
function createMockComponent(name) {
  return {
    setup() {
      throw new Error('[vue-demi] ' + name + ' is not supported in Vue 2. It\'s provided to avoid compiler errors.')
    }
  }
}
var lib_Fragment = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Fragment')))
var Transition = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Transition')))
var lib_TransitionGroup = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('TransitionGroup')))
var Teleport = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Teleport')))
var Suspense = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Suspense')))
var KeepAlive = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('KeepAlive')))



// Not implemented https://github.com/vuejs/core/pull/8111, falls back to getCurrentInstance()
function hasInjectionContext() {
  return !!getCurrentInstance()
}

;// CONCATENATED MODULE: ./node_modules/@vueuse/core/index.mjs




function computedAsync(evaluationCallback, initialState, optionsOrRef) {
  let options;
  if (isRef(optionsOrRef)) {
    options = {
      evaluating: optionsOrRef
    };
  } else {
    options = optionsOrRef || {};
  }
  const {
    lazy = false,
    evaluating = void 0,
    shallow = true,
    onError = noop
  } = options;
  const started = ref(!lazy);
  const current = shallow ? shallowRef(initialState) : ref(initialState);
  let counter = 0;
  watchEffect(async (onInvalidate) => {
    if (!started.value)
      return;
    counter++;
    const counterAtBeginning = counter;
    let hasFinished = false;
    if (evaluating) {
      Promise.resolve().then(() => {
        evaluating.value = true;
      });
    }
    try {
      const result = await evaluationCallback((cancelCallback) => {
        onInvalidate(() => {
          if (evaluating)
            evaluating.value = false;
          if (!hasFinished)
            cancelCallback();
        });
      });
      if (counterAtBeginning === counter)
        current.value = result;
    } catch (e) {
      onError(e);
    } finally {
      if (evaluating && counterAtBeginning === counter)
        evaluating.value = false;
      hasFinished = true;
    }
  });
  if (lazy) {
    return computed(() => {
      started.value = true;
      return current.value;
    });
  } else {
    return current;
  }
}

function computedInject(key, options, defaultSource, treatDefaultAsFactory) {
  let source = inject(key);
  if (defaultSource)
    source = inject(key, defaultSource);
  if (treatDefaultAsFactory)
    source = inject(key, defaultSource, treatDefaultAsFactory);
  if (typeof options === "function") {
    return computed((ctx) => options(source, ctx));
  } else {
    return computed({
      get: (ctx) => options.get(source, ctx),
      set: options.set
    });
  }
}

function createReusableTemplate(options = {}) {
  if (!isVue3 && !version.startsWith("2.7.")) {
    if (false)
      {}
    return;
  }
  const {
    inheritAttrs = true
  } = options;
  const render = shallowRef();
  const define = /* #__PURE__ */ defineComponent({
    setup(_, { slots }) {
      return () => {
        render.value = slots.default;
      };
    }
  });
  const reuse = /* #__PURE__ */ defineComponent({
    inheritAttrs,
    setup(_, { attrs, slots }) {
      return () => {
        var _a;
        if (!render.value && "production" !== "production")
          {}
        const vnode = (_a = render.value) == null ? void 0 : _a.call(render, { ...keysToCamelKebabCase(attrs), $slots: slots });
        return inheritAttrs && (vnode == null ? void 0 : vnode.length) === 1 ? vnode[0] : vnode;
      };
    }
  });
  return makeDestructurable(
    { define, reuse },
    [define, reuse]
  );
}
function keysToCamelKebabCase(obj) {
  const newObj = {};
  for (const key in obj)
    newObj[camelize(key)] = obj[key];
  return newObj;
}

function createTemplatePromise(options = {}) {
  if (!isVue3) {
    if (false)
      {}
    return;
  }
  let index = 0;
  const instances = ref([]);
  function create(...args) {
    const props = shallowReactive({
      key: index++,
      args,
      promise: void 0,
      resolve: () => {
      },
      reject: () => {
      },
      isResolving: false,
      options
    });
    instances.value.push(props);
    props.promise = new Promise((_resolve, _reject) => {
      props.resolve = (v) => {
        props.isResolving = true;
        return _resolve(v);
      };
      props.reject = _reject;
    }).finally(() => {
      props.promise = void 0;
      const index2 = instances.value.indexOf(props);
      if (index2 !== -1)
        instances.value.splice(index2, 1);
    });
    return props.promise;
  }
  function start(...args) {
    if (options.singleton && instances.value.length > 0)
      return instances.value[0].promise;
    return create(...args);
  }
  const component = /* #__PURE__ */ defineComponent((_, { slots }) => {
    const renderList = () => instances.value.map((props) => {
      var _a;
      return h(Fragment, { key: props.key }, (_a = slots.default) == null ? void 0 : _a.call(slots, props));
    });
    if (options.transition)
      return () => h(TransitionGroup, options.transition, renderList);
    return renderList;
  });
  component.start = start;
  return component;
}

function createUnrefFn(fn) {
  return function(...args) {
    return fn.apply(this, args.map((i) => toValue(i)));
  };
}

function unrefElement(elRef) {
  var _a;
  const plain = (0,shared/* toValue */.BA)(elRef);
  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;
}

const defaultWindow = shared/* isClient */.oc ? window : void 0;
const defaultDocument = shared/* isClient */.oc ? window.document : void 0;
const defaultNavigator = shared/* isClient */.oc ? window.navigator : void 0;
const defaultLocation = shared/* isClient */.oc ? window.location : void 0;

function useEventListener(...args) {
  let target;
  let events;
  let listeners;
  let options;
  if (typeof args[0] === "string" || Array.isArray(args[0])) {
    [events, listeners, options] = args;
    target = defaultWindow;
  } else {
    [target, events, listeners, options] = args;
  }
  if (!target)
    return shared/* noop */.lQ;
  if (!Array.isArray(events))
    events = [events];
  if (!Array.isArray(listeners))
    listeners = [listeners];
  const cleanups = [];
  const cleanup = () => {
    cleanups.forEach((fn) => fn());
    cleanups.length = 0;
  };
  const register = (el, event, listener, options2) => {
    el.addEventListener(event, listener, options2);
    return () => el.removeEventListener(event, listener, options2);
  };
  const stopWatch = (0,vue_runtime_esm/* watch */.wB)(
    () => [unrefElement(target), (0,shared/* toValue */.BA)(options)],
    ([el, options2]) => {
      cleanup();
      if (!el)
        return;
      const optionsClone = (0,shared/* isObject */.Gv)(options2) ? { ...options2 } : options2;
      cleanups.push(
        ...events.flatMap((event) => {
          return listeners.map((listener) => register(el, event, listener, optionsClone));
        })
      );
    },
    { immediate: true, flush: "post" }
  );
  const stop = () => {
    stopWatch();
    cleanup();
  };
  (0,shared/* tryOnScopeDispose */.Uo)(stop);
  return stop;
}

let _iOSWorkaround = false;
function onClickOutside(target, handler, options = {}) {
  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;
  if (!window)
    return shared/* noop */.lQ;
  if (shared/* isIOS */.un && !_iOSWorkaround) {
    _iOSWorkaround = true;
    Array.from(window.document.body.children).forEach((el) => el.addEventListener("click", shared/* noop */.lQ));
    window.document.documentElement.addEventListener("click", shared/* noop */.lQ);
  }
  let shouldListen = true;
  const shouldIgnore = (event) => {
    return ignore.some((target2) => {
      if (typeof target2 === "string") {
        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));
      } else {
        const el = unrefElement(target2);
        return el && (event.target === el || event.composedPath().includes(el));
      }
    });
  };
  const listener = (event) => {
    const el = unrefElement(target);
    if (!el || el === event.target || event.composedPath().includes(el))
      return;
    if (event.detail === 0)
      shouldListen = !shouldIgnore(event);
    if (!shouldListen) {
      shouldListen = true;
      return;
    }
    handler(event);
  };
  const cleanup = [
    useEventListener(window, "click", listener, { passive: true, capture }),
    useEventListener(window, "pointerdown", (e) => {
      const el = unrefElement(target);
      shouldListen = !shouldIgnore(e) && !!(el && !e.composedPath().includes(el));
    }, { passive: true }),
    detectIframe && useEventListener(window, "blur", (event) => {
      setTimeout(() => {
        var _a;
        const el = unrefElement(target);
        if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === "IFRAME" && !(el == null ? void 0 : el.contains(window.document.activeElement)))
          handler(event);
      }, 0);
    })
  ].filter(Boolean);
  const stop = () => cleanup.forEach((fn) => fn());
  return stop;
}

function createKeyPredicate(keyFilter) {
  if (typeof keyFilter === "function")
    return keyFilter;
  else if (typeof keyFilter === "string")
    return (event) => event.key === keyFilter;
  else if (Array.isArray(keyFilter))
    return (event) => keyFilter.includes(event.key);
  return () => true;
}
function onKeyStroke(...args) {
  let key;
  let handler;
  let options = {};
  if (args.length === 3) {
    key = args[0];
    handler = args[1];
    options = args[2];
  } else if (args.length === 2) {
    if (typeof args[1] === "object") {
      key = true;
      handler = args[0];
      options = args[1];
    } else {
      key = args[0];
      handler = args[1];
    }
  } else {
    key = true;
    handler = args[0];
  }
  const {
    target = defaultWindow,
    eventName = "keydown",
    passive = false,
    dedupe = false
  } = options;
  const predicate = createKeyPredicate(key);
  const listener = (e) => {
    if (e.repeat && toValue(dedupe))
      return;
    if (predicate(e))
      handler(e);
  };
  return useEventListener(target, eventName, listener, passive);
}
function onKeyDown(key, handler, options = {}) {
  return onKeyStroke(key, handler, { ...options, eventName: "keydown" });
}
function onKeyPressed(key, handler, options = {}) {
  return onKeyStroke(key, handler, { ...options, eventName: "keypress" });
}
function onKeyUp(key, handler, options = {}) {
  return onKeyStroke(key, handler, { ...options, eventName: "keyup" });
}

const DEFAULT_DELAY = 500;
const DEFAULT_THRESHOLD = 10;
function onLongPress(target, handler, options) {
  var _a, _b;
  const elementRef = computed(() => unrefElement(target));
  let timeout;
  let posStart;
  function clear() {
    if (timeout) {
      clearTimeout(timeout);
      timeout = void 0;
    }
    posStart = void 0;
  }
  function onDown(ev) {
    var _a2, _b2, _c, _d;
    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)
      return;
    clear();
    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)
      ev.preventDefault();
    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)
      ev.stopPropagation();
    posStart = {
      x: ev.x,
      y: ev.y
    };
    timeout = setTimeout(
      () => handler(ev),
      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY
    );
  }
  function onMove(ev) {
    var _a2, _b2, _c, _d;
    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)
      return;
    if (!posStart || (options == null ? void 0 : options.distanceThreshold) === false)
      return;
    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)
      ev.preventDefault();
    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)
      ev.stopPropagation();
    const dx = ev.x - posStart.x;
    const dy = ev.y - posStart.y;
    const distance = Math.sqrt(dx * dx + dy * dy);
    if (distance >= ((_d = options == null ? void 0 : options.distanceThreshold) != null ? _d : DEFAULT_THRESHOLD))
      clear();
  }
  const listenerOptions = {
    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,
    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once
  };
  const cleanup = [
    useEventListener(elementRef, "pointerdown", onDown, listenerOptions),
    useEventListener(elementRef, "pointermove", onMove, listenerOptions),
    useEventListener(elementRef, ["pointerup", "pointerleave"], clear, listenerOptions)
  ];
  const stop = () => cleanup.forEach((fn) => fn());
  return stop;
}

function isFocusedElementEditable() {
  const { activeElement, body } = document;
  if (!activeElement)
    return false;
  if (activeElement === body)
    return false;
  switch (activeElement.tagName) {
    case "INPUT":
    case "TEXTAREA":
      return true;
  }
  return activeElement.hasAttribute("contenteditable");
}
function isTypedCharValid({
  keyCode,
  metaKey,
  ctrlKey,
  altKey
}) {
  if (metaKey || ctrlKey || altKey)
    return false;
  if (keyCode >= 48 && keyCode <= 57)
    return true;
  if (keyCode >= 65 && keyCode <= 90)
    return true;
  if (keyCode >= 97 && keyCode <= 122)
    return true;
  return false;
}
function onStartTyping(callback, options = {}) {
  const { document: document2 = defaultDocument } = options;
  const keydown = (event) => {
    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);
  };
  if (document2)
    useEventListener(document2, "keydown", keydown, { passive: true });
}

function templateRef(key, initialValue = null) {
  const instance = getCurrentInstance();
  let _trigger = () => {
  };
  const element = customRef((track, trigger) => {
    _trigger = trigger;
    return {
      get() {
        var _a, _b;
        track();
        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;
      },
      set() {
      }
    };
  });
  tryOnMounted(_trigger);
  onUpdated(_trigger);
  return element;
}

function useActiveElement(options = {}) {
  var _a;
  const {
    window = defaultWindow,
    deep = true
  } = options;
  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;
  const getDeepActiveElement = () => {
    var _a2;
    let element = document == null ? void 0 : document.activeElement;
    if (deep) {
      while (element == null ? void 0 : element.shadowRoot)
        element = (_a2 = element == null ? void 0 : element.shadowRoot) == null ? void 0 : _a2.activeElement;
    }
    return element;
  };
  const activeElement = (0,vue_runtime_esm/* ref */.KR)();
  const trigger = () => {
    activeElement.value = getDeepActiveElement();
  };
  if (window) {
    useEventListener(window, "blur", (event) => {
      if (event.relatedTarget !== null)
        return;
      trigger();
    }, true);
    useEventListener(window, "focus", trigger, true);
  }
  trigger();
  return activeElement;
}

function useMounted() {
  const isMounted = (0,vue_runtime_esm/* ref */.KR)(false);
  const instance = (0,vue_runtime_esm/* getCurrentInstance */.nI)();
  if (instance) {
    (0,vue_runtime_esm/* onMounted */.sV)(() => {
      isMounted.value = true;
    }, lib_isVue2 ? null : instance);
  }
  return isMounted;
}

function useSupported(callback) {
  const isMounted = useMounted();
  return (0,vue_runtime_esm/* computed */.EW)(() => {
    isMounted.value;
    return Boolean(callback());
  });
}

function useRafFn(fn, options = {}) {
  const {
    immediate = true,
    fpsLimit = void 0,
    window = defaultWindow
  } = options;
  const isActive = (0,vue_runtime_esm/* ref */.KR)(false);
  const intervalLimit = fpsLimit ? 1e3 / fpsLimit : null;
  let previousFrameTimestamp = 0;
  let rafId = null;
  function loop(timestamp) {
    if (!isActive.value || !window)
      return;
    if (!previousFrameTimestamp)
      previousFrameTimestamp = timestamp;
    const delta = timestamp - previousFrameTimestamp;
    if (intervalLimit && delta < intervalLimit) {
      rafId = window.requestAnimationFrame(loop);
      return;
    }
    previousFrameTimestamp = timestamp;
    fn({ delta, timestamp });
    rafId = window.requestAnimationFrame(loop);
  }
  function resume() {
    if (!isActive.value && window) {
      isActive.value = true;
      previousFrameTimestamp = 0;
      rafId = window.requestAnimationFrame(loop);
    }
  }
  function pause() {
    isActive.value = false;
    if (rafId != null && window) {
      window.cancelAnimationFrame(rafId);
      rafId = null;
    }
  }
  if (immediate)
    resume();
  (0,shared/* tryOnScopeDispose */.Uo)(pause);
  return {
    isActive: (0,vue_runtime_esm/* readonly */.tB)(isActive),
    pause,
    resume
  };
}

function useAnimate(target, keyframes, options) {
  let config;
  let animateOptions;
  if (isObject(options)) {
    config = options;
    animateOptions = objectOmit(options, ["window", "immediate", "commitStyles", "persist", "onReady", "onError"]);
  } else {
    config = { duration: options };
    animateOptions = options;
  }
  const {
    window = defaultWindow,
    immediate = true,
    commitStyles,
    persist,
    playbackRate: _playbackRate = 1,
    onReady,
    onError = (e) => {
      console.error(e);
    }
  } = config;
  const isSupported = useSupported(() => window && HTMLElement && "animate" in HTMLElement.prototype);
  const animate = shallowRef(void 0);
  const store = shallowReactive({
    startTime: null,
    currentTime: null,
    timeline: null,
    playbackRate: _playbackRate,
    pending: false,
    playState: immediate ? "idle" : "paused",
    replaceState: "active"
  });
  const pending = computed(() => store.pending);
  const playState = computed(() => store.playState);
  const replaceState = computed(() => store.replaceState);
  const startTime = computed({
    get() {
      return store.startTime;
    },
    set(value) {
      store.startTime = value;
      if (animate.value)
        animate.value.startTime = value;
    }
  });
  const currentTime = computed({
    get() {
      return store.currentTime;
    },
    set(value) {
      store.currentTime = value;
      if (animate.value) {
        animate.value.currentTime = value;
        syncResume();
      }
    }
  });
  const timeline = computed({
    get() {
      return store.timeline;
    },
    set(value) {
      store.timeline = value;
      if (animate.value)
        animate.value.timeline = value;
    }
  });
  const playbackRate = computed({
    get() {
      return store.playbackRate;
    },
    set(value) {
      store.playbackRate = value;
      if (animate.value)
        animate.value.playbackRate = value;
    }
  });
  const play = () => {
    if (animate.value) {
      try {
        animate.value.play();
        syncResume();
      } catch (e) {
        syncPause();
        onError(e);
      }
    } else {
      update();
    }
  };
  const pause = () => {
    var _a;
    try {
      (_a = animate.value) == null ? void 0 : _a.pause();
      syncPause();
    } catch (e) {
      onError(e);
    }
  };
  const reverse = () => {
    var _a;
    !animate.value && update();
    try {
      (_a = animate.value) == null ? void 0 : _a.reverse();
      syncResume();
    } catch (e) {
      syncPause();
      onError(e);
    }
  };
  const finish = () => {
    var _a;
    try {
      (_a = animate.value) == null ? void 0 : _a.finish();
      syncPause();
    } catch (e) {
      onError(e);
    }
  };
  const cancel = () => {
    var _a;
    try {
      (_a = animate.value) == null ? void 0 : _a.cancel();
      syncPause();
    } catch (e) {
      onError(e);
    }
  };
  watch(() => unrefElement(target), (el) => {
    el && update();
  });
  watch(() => keyframes, (value) => {
    !animate.value && update();
    if (!unrefElement(target) && animate.value) {
      animate.value.effect = new KeyframeEffect(
        unrefElement(target),
        toValue(value),
        animateOptions
      );
    }
  }, { deep: true });
  tryOnMounted(() => {
    nextTick(() => update(true));
  });
  tryOnScopeDispose(cancel);
  function update(init) {
    const el = unrefElement(target);
    if (!isSupported.value || !el)
      return;
    if (!animate.value)
      animate.value = el.animate(toValue(keyframes), animateOptions);
    if (commitStyles)
      animate.value.commitStyles();
    if (persist)
      animate.value.persist();
    if (_playbackRate !== 1)
      animate.value.playbackRate = _playbackRate;
    if (init && !immediate)
      animate.value.pause();
    else
      syncResume();
    onReady == null ? void 0 : onReady(animate.value);
  }
  useEventListener(animate, ["cancel", "finish", "remove"], syncPause);
  const { resume: resumeRef, pause: pauseRef } = useRafFn(() => {
    if (!animate.value)
      return;
    store.pending = animate.value.pending;
    store.playState = animate.value.playState;
    store.replaceState = animate.value.replaceState;
    store.startTime = animate.value.startTime;
    store.currentTime = animate.value.currentTime;
    store.timeline = animate.value.timeline;
    store.playbackRate = animate.value.playbackRate;
  }, { immediate: false });
  function syncResume() {
    if (isSupported.value)
      resumeRef();
  }
  function syncPause() {
    if (isSupported.value && window)
      window.requestAnimationFrame(pauseRef);
  }
  return {
    isSupported,
    animate,
    // actions
    play,
    pause,
    reverse,
    finish,
    cancel,
    // state
    pending,
    playState,
    replaceState,
    startTime,
    currentTime,
    timeline,
    playbackRate
  };
}

function useAsyncQueue(tasks, options) {
  const {
    interrupt = true,
    onError = noop,
    onFinished = noop,
    signal
  } = options || {};
  const promiseState = {
    aborted: "aborted",
    fulfilled: "fulfilled",
    pending: "pending",
    rejected: "rejected"
  };
  const initialResult = Array.from(Array.from({ length: tasks.length }), () => ({ state: promiseState.pending, data: null }));
  const result = reactive(initialResult);
  const activeIndex = ref(-1);
  if (!tasks || tasks.length === 0) {
    onFinished();
    return {
      activeIndex,
      result
    };
  }
  function updateResult(state, res) {
    activeIndex.value++;
    result[activeIndex.value].data = res;
    result[activeIndex.value].state = state;
  }
  tasks.reduce((prev, curr) => {
    return prev.then((prevRes) => {
      var _a;
      if (signal == null ? void 0 : signal.aborted) {
        updateResult(promiseState.aborted, new Error("aborted"));
        return;
      }
      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {
        onFinished();
        return;
      }
      const done = curr(prevRes).then((currentRes) => {
        updateResult(promiseState.fulfilled, currentRes);
        activeIndex.value === tasks.length - 1 && onFinished();
        return currentRes;
      });
      if (!signal)
        return done;
      return Promise.race([done, whenAborted(signal)]);
    }).catch((e) => {
      if (signal == null ? void 0 : signal.aborted) {
        updateResult(promiseState.aborted, e);
        return e;
      }
      updateResult(promiseState.rejected, e);
      onError();
      return e;
    });
  }, Promise.resolve());
  return {
    activeIndex,
    result
  };
}
function whenAborted(signal) {
  return new Promise((resolve, reject) => {
    const error = new Error("aborted");
    if (signal.aborted)
      reject(error);
    else
      signal.addEventListener("abort", () => reject(error), { once: true });
  });
}

function useAsyncState(promise, initialState, options) {
  const {
    immediate = true,
    delay = 0,
    onError = noop,
    onSuccess = noop,
    resetOnExecute = true,
    shallow = true,
    throwError
  } = options != null ? options : {};
  const state = shallow ? shallowRef(initialState) : ref(initialState);
  const isReady = ref(false);
  const isLoading = ref(false);
  const error = shallowRef(void 0);
  async function execute(delay2 = 0, ...args) {
    if (resetOnExecute)
      state.value = initialState;
    error.value = void 0;
    isReady.value = false;
    isLoading.value = true;
    if (delay2 > 0)
      await promiseTimeout(delay2);
    const _promise = typeof promise === "function" ? promise(...args) : promise;
    try {
      const data = await _promise;
      state.value = data;
      isReady.value = true;
      onSuccess(data);
    } catch (e) {
      error.value = e;
      onError(e);
      if (throwError)
        throw e;
    } finally {
      isLoading.value = false;
    }
    return state.value;
  }
  if (immediate)
    execute(delay);
  const shell = {
    state,
    isReady,
    isLoading,
    error,
    execute
  };
  function waitUntilIsLoaded() {
    return new Promise((resolve, reject) => {
      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);
    });
  }
  return {
    ...shell,
    then(onFulfilled, onRejected) {
      return waitUntilIsLoaded().then(onFulfilled, onRejected);
    }
  };
}

const defaults = {
  array: (v) => JSON.stringify(v),
  object: (v) => JSON.stringify(v),
  set: (v) => JSON.stringify(Array.from(v)),
  map: (v) => JSON.stringify(Object.fromEntries(v)),
  null: () => ""
};
function getDefaultSerialization(target) {
  if (!target)
    return defaults.null;
  if (target instanceof Map)
    return defaults.map;
  else if (target instanceof Set)
    return defaults.set;
  else if (Array.isArray(target))
    return defaults.array;
  else
    return defaults.object;
}

function useBase64(target, options) {
  const base64 = ref("");
  const promise = ref();
  function execute() {
    if (!isClient)
      return;
    promise.value = new Promise((resolve, reject) => {
      try {
        const _target = toValue(target);
        if (_target == null) {
          resolve("");
        } else if (typeof _target === "string") {
          resolve(blobToBase64(new Blob([_target], { type: "text/plain" })));
        } else if (_target instanceof Blob) {
          resolve(blobToBase64(_target));
        } else if (_target instanceof ArrayBuffer) {
          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));
        } else if (_target instanceof HTMLCanvasElement) {
          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));
        } else if (_target instanceof HTMLImageElement) {
          const img = _target.cloneNode(false);
          img.crossOrigin = "Anonymous";
          imgLoaded(img).then(() => {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");
            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));
          }).catch(reject);
        } else if (typeof _target === "object") {
          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);
          const serialized = _serializeFn(_target);
          return resolve(blobToBase64(new Blob([serialized], { type: "application/json" })));
        } else {
          reject(new Error("target is unsupported types"));
        }
      } catch (error) {
        reject(error);
      }
    });
    promise.value.then((res) => base64.value = res);
    return promise.value;
  }
  if (isRef(target) || typeof target === "function")
    watch(target, execute, { immediate: true });
  else
    execute();
  return {
    base64,
    promise,
    execute
  };
}
function imgLoaded(img) {
  return new Promise((resolve, reject) => {
    if (!img.complete) {
      img.onload = () => {
        resolve();
      };
      img.onerror = reject;
    } else {
      resolve();
    }
  });
}
function blobToBase64(blob) {
  return new Promise((resolve, reject) => {
    const fr = new FileReader();
    fr.onload = (e) => {
      resolve(e.target.result);
    };
    fr.onerror = reject;
    fr.readAsDataURL(blob);
  });
}

function useBattery(options = {}) {
  const { navigator = defaultNavigator } = options;
  const events = ["chargingchange", "chargingtimechange", "dischargingtimechange", "levelchange"];
  const isSupported = useSupported(() => navigator && "getBattery" in navigator && typeof navigator.getBattery === "function");
  const charging = (0,vue_runtime_esm/* ref */.KR)(false);
  const chargingTime = (0,vue_runtime_esm/* ref */.KR)(0);
  const dischargingTime = (0,vue_runtime_esm/* ref */.KR)(0);
  const level = (0,vue_runtime_esm/* ref */.KR)(1);
  let battery;
  function updateBatteryInfo() {
    charging.value = this.charging;
    chargingTime.value = this.chargingTime || 0;
    dischargingTime.value = this.dischargingTime || 0;
    level.value = this.level;
  }
  if (isSupported.value) {
    navigator.getBattery().then((_battery) => {
      battery = _battery;
      updateBatteryInfo.call(battery);
      useEventListener(battery, events, updateBatteryInfo, { passive: true });
    });
  }
  return {
    isSupported,
    charging,
    chargingTime,
    dischargingTime,
    level
  };
}

function useBluetooth(options) {
  let {
    acceptAllDevices = false
  } = options || {};
  const {
    filters = void 0,
    optionalServices = void 0,
    navigator = defaultNavigator
  } = options || {};
  const isSupported = useSupported(() => navigator && "bluetooth" in navigator);
  const device = shallowRef(void 0);
  const error = shallowRef(null);
  watch(device, () => {
    connectToBluetoothGATTServer();
  });
  async function requestDevice() {
    if (!isSupported.value)
      return;
    error.value = null;
    if (filters && filters.length > 0)
      acceptAllDevices = false;
    try {
      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({
        acceptAllDevices,
        filters,
        optionalServices
      }));
    } catch (err) {
      error.value = err;
    }
  }
  const server = ref();
  const isConnected = computed(() => {
    var _a;
    return ((_a = server.value) == null ? void 0 : _a.connected) || false;
  });
  async function connectToBluetoothGATTServer() {
    error.value = null;
    if (device.value && device.value.gatt) {
      device.value.addEventListener("gattserverdisconnected", () => {
      });
      try {
        server.value = await device.value.gatt.connect();
      } catch (err) {
        error.value = err;
      }
    }
  }
  tryOnMounted(() => {
    var _a;
    if (device.value)
      (_a = device.value.gatt) == null ? void 0 : _a.connect();
  });
  tryOnScopeDispose(() => {
    var _a;
    if (device.value)
      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();
  });
  return {
    isSupported,
    isConnected,
    // Device:
    device,
    requestDevice,
    // Server:
    server,
    // Errors:
    error
  };
}

function useMediaQuery(query, options = {}) {
  const { window = defaultWindow } = options;
  const isSupported = useSupported(() => window && "matchMedia" in window && typeof window.matchMedia === "function");
  let mediaQuery;
  const matches = (0,vue_runtime_esm/* ref */.KR)(false);
  const handler = (event) => {
    matches.value = event.matches;
  };
  const cleanup = () => {
    if (!mediaQuery)
      return;
    if ("removeEventListener" in mediaQuery)
      mediaQuery.removeEventListener("change", handler);
    else
      mediaQuery.removeListener(handler);
  };
  const stopWatch = (0,vue_runtime_esm/* watchEffect */.nT)(() => {
    if (!isSupported.value)
      return;
    cleanup();
    mediaQuery = window.matchMedia((0,shared/* toValue */.BA)(query));
    if ("addEventListener" in mediaQuery)
      mediaQuery.addEventListener("change", handler);
    else
      mediaQuery.addListener(handler);
    matches.value = mediaQuery.matches;
  });
  (0,shared/* tryOnScopeDispose */.Uo)(() => {
    stopWatch();
    cleanup();
    mediaQuery = void 0;
  });
  return matches;
}

const breakpointsTailwind = {
  "sm": 640,
  "md": 768,
  "lg": 1024,
  "xl": 1280,
  "2xl": 1536
};
const breakpointsBootstrapV5 = {
  xs: 0,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1400
};
const breakpointsVuetifyV2 = {
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1264,
  xl: 1904
};
const breakpointsVuetifyV3 = {
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1280,
  xl: 1920,
  xxl: 2560
};
const breakpointsVuetify = (/* unused pure expression or super */ null && (breakpointsVuetifyV2));
const breakpointsAntDesign = {
  xs: 480,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1600
};
const breakpointsQuasar = {
  xs: 0,
  sm: 600,
  md: 1024,
  lg: 1440,
  xl: 1920
};
const breakpointsSematic = {
  mobileS: 320,
  mobileM: 375,
  mobileL: 425,
  tablet: 768,
  laptop: 1024,
  laptopL: 1440,
  desktop4K: 2560
};
const breakpointsMasterCss = {
  "3xs": 360,
  "2xs": 480,
  "xs": 600,
  "sm": 768,
  "md": 1024,
  "lg": 1280,
  "xl": 1440,
  "2xl": 1600,
  "3xl": 1920,
  "4xl": 2560
};
const breakpointsPrimeFlex = {
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200
};

function useBreakpoints(breakpoints, options = {}) {
  function getValue(k, delta) {
    let v = toValue(breakpoints[toValue(k)]);
    if (delta != null)
      v = increaseWithUnit(v, delta);
    if (typeof v === "number")
      v = `${v}px`;
    return v;
  }
  const { window = defaultWindow, strategy = "min-width" } = options;
  function match(query) {
    if (!window)
      return false;
    return window.matchMedia(query).matches;
  }
  const greaterOrEqual = (k) => {
    return useMediaQuery(() => `(min-width: ${getValue(k)})`, options);
  };
  const smallerOrEqual = (k) => {
    return useMediaQuery(() => `(max-width: ${getValue(k)})`, options);
  };
  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {
    Object.defineProperty(shortcuts, k, {
      get: () => strategy === "min-width" ? greaterOrEqual(k) : smallerOrEqual(k),
      enumerable: true,
      configurable: true
    });
    return shortcuts;
  }, {});
  function current() {
    const points = Object.keys(breakpoints).map((i) => [i, greaterOrEqual(i)]);
    return computed(() => points.filter(([, v]) => v.value).map(([k]) => k));
  }
  return Object.assign(shortcutMethods, {
    greaterOrEqual,
    smallerOrEqual,
    greater(k) {
      return useMediaQuery(() => `(min-width: ${getValue(k, 0.1)})`, options);
    },
    smaller(k) {
      return useMediaQuery(() => `(max-width: ${getValue(k, -0.1)})`, options);
    },
    between(a, b) {
      return useMediaQuery(() => `(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);
    },
    isGreater(k) {
      return match(`(min-width: ${getValue(k, 0.1)})`);
    },
    isGreaterOrEqual(k) {
      return match(`(min-width: ${getValue(k)})`);
    },
    isSmaller(k) {
      return match(`(max-width: ${getValue(k, -0.1)})`);
    },
    isSmallerOrEqual(k) {
      return match(`(max-width: ${getValue(k)})`);
    },
    isInBetween(a, b) {
      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);
    },
    current,
    active() {
      const bps = current();
      return computed(() => bps.value.length === 0 ? "" : bps.value.at(-1));
    }
  });
}

function useBroadcastChannel(options) {
  const {
    name,
    window = defaultWindow
  } = options;
  const isSupported = useSupported(() => window && "BroadcastChannel" in window);
  const isClosed = ref(false);
  const channel = ref();
  const data = ref();
  const error = shallowRef(null);
  const post = (data2) => {
    if (channel.value)
      channel.value.postMessage(data2);
  };
  const close = () => {
    if (channel.value)
      channel.value.close();
    isClosed.value = true;
  };
  if (isSupported.value) {
    tryOnMounted(() => {
      error.value = null;
      channel.value = new BroadcastChannel(name);
      channel.value.addEventListener("message", (e) => {
        data.value = e.data;
      }, { passive: true });
      channel.value.addEventListener("messageerror", (e) => {
        error.value = e;
      }, { passive: true });
      channel.value.addEventListener("close", () => {
        isClosed.value = true;
      });
    });
  }
  tryOnScopeDispose(() => {
    close();
  });
  return {
    isSupported,
    channel,
    data,
    post,
    close,
    error,
    isClosed
  };
}

const WRITABLE_PROPERTIES = [
  "hash",
  "host",
  "hostname",
  "href",
  "pathname",
  "port",
  "protocol",
  "search"
];
function useBrowserLocation(options = {}) {
  const { window = defaultWindow } = options;
  const refs = Object.fromEntries(
    WRITABLE_PROPERTIES.map((key) => [key, (0,vue_runtime_esm/* ref */.KR)()])
  );
  for (const [key, ref2] of (0,shared/* objectEntries */.WP)(refs)) {
    (0,vue_runtime_esm/* watch */.wB)(ref2, (value) => {
      if (!(window == null ? void 0 : window.location) || window.location[key] === value)
        return;
      window.location[key] = value;
    });
  }
  const buildState = (trigger) => {
    var _a;
    const { state: state2, length } = (window == null ? void 0 : window.history) || {};
    const { origin } = (window == null ? void 0 : window.location) || {};
    for (const key of WRITABLE_PROPERTIES)
      refs[key].value = (_a = window == null ? void 0 : window.location) == null ? void 0 : _a[key];
    return (0,vue_runtime_esm/* reactive */.Kh)({
      trigger,
      state: state2,
      length,
      origin,
      ...refs
    });
  };
  const state = (0,vue_runtime_esm/* ref */.KR)(buildState("load"));
  if (window) {
    useEventListener(window, "popstate", () => state.value = buildState("popstate"), { passive: true });
    useEventListener(window, "hashchange", () => state.value = buildState("hashchange"), { passive: true });
  }
  return state;
}

function useCached(refValue, comparator = (a, b) => a === b, watchOptions) {
  const cachedValue = ref(refValue.value);
  watch(() => refValue.value, (value) => {
    if (!comparator(value, cachedValue.value))
      cachedValue.value = value;
  }, watchOptions);
  return cachedValue;
}

function usePermission(permissionDesc, options = {}) {
  const {
    controls = false,
    navigator = defaultNavigator
  } = options;
  const isSupported = useSupported(() => navigator && "permissions" in navigator);
  let permissionStatus;
  const desc = typeof permissionDesc === "string" ? { name: permissionDesc } : permissionDesc;
  const state = (0,vue_runtime_esm/* ref */.KR)();
  const onChange = () => {
    if (permissionStatus)
      state.value = permissionStatus.state;
  };
  const query = (0,shared/* createSingletonPromise */.Jv)(async () => {
    if (!isSupported.value)
      return;
    if (!permissionStatus) {
      try {
        permissionStatus = await navigator.permissions.query(desc);
        useEventListener(permissionStatus, "change", onChange);
        onChange();
      } catch (e) {
        state.value = "prompt";
      }
    }
    return permissionStatus;
  });
  query();
  if (controls) {
    return {
      state,
      isSupported,
      query
    };
  } else {
    return state;
  }
}

function useClipboard(options = {}) {
  const {
    navigator = defaultNavigator,
    read = false,
    source,
    copiedDuring = 1500,
    legacy = false
  } = options;
  const isClipboardApiSupported = useSupported(() => navigator && "clipboard" in navigator);
  const permissionRead = usePermission("clipboard-read");
  const permissionWrite = usePermission("clipboard-write");
  const isSupported = (0,vue_runtime_esm/* computed */.EW)(() => isClipboardApiSupported.value || legacy);
  const text = (0,vue_runtime_esm/* ref */.KR)("");
  const copied = (0,vue_runtime_esm/* ref */.KR)(false);
  const timeout = (0,shared/* useTimeoutFn */.TO)(() => copied.value = false, copiedDuring);
  function updateText() {
    if (isClipboardApiSupported.value && isAllowed(permissionRead.value)) {
      navigator.clipboard.readText().then((value) => {
        text.value = value;
      });
    } else {
      text.value = legacyRead();
    }
  }
  if (isSupported.value && read)
    useEventListener(["copy", "cut"], updateText);
  async function copy(value = (0,shared/* toValue */.BA)(source)) {
    if (isSupported.value && value != null) {
      if (isClipboardApiSupported.value && isAllowed(permissionWrite.value))
        await navigator.clipboard.writeText(value);
      else
        legacyCopy(value);
      text.value = value;
      copied.value = true;
      timeout.start();
    }
  }
  function legacyCopy(value) {
    const ta = document.createElement("textarea");
    ta.value = value != null ? value : "";
    ta.style.position = "absolute";
    ta.style.opacity = "0";
    document.body.appendChild(ta);
    ta.select();
    document.execCommand("copy");
    ta.remove();
  }
  function legacyRead() {
    var _a, _b, _c;
    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : "";
  }
  function isAllowed(status) {
    return status === "granted" || status === "prompt";
  }
  return {
    isSupported,
    text,
    copied,
    copy
  };
}

function useClipboardItems(options = {}) {
  const {
    navigator = defaultNavigator,
    read = false,
    source,
    copiedDuring = 1500
  } = options;
  const isSupported = useSupported(() => navigator && "clipboard" in navigator);
  const content = ref([]);
  const copied = ref(false);
  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);
  function updateContent() {
    if (isSupported.value) {
      navigator.clipboard.read().then((items) => {
        content.value = items;
      });
    }
  }
  if (isSupported.value && read)
    useEventListener(["copy", "cut"], updateContent);
  async function copy(value = toValue(source)) {
    if (isSupported.value && value != null) {
      await navigator.clipboard.write(value);
      content.value = value;
      copied.value = true;
      timeout.start();
    }
  }
  return {
    isSupported,
    content,
    copied,
    copy
  };
}

function cloneFnJSON(source) {
  return JSON.parse(JSON.stringify(source));
}
function useCloned(source, options = {}) {
  const cloned = ref({});
  const {
    manual,
    clone = cloneFnJSON,
    // watch options
    deep = true,
    immediate = true
  } = options;
  function sync() {
    cloned.value = clone(toValue(source));
  }
  if (!manual && (isRef(source) || typeof source === "function")) {
    watch(source, sync, {
      ...options,
      deep,
      immediate
    });
  } else {
    sync();
  }
  return { cloned, sync };
}

const _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
const globalKey = "__vueuse_ssr_handlers__";
const handlers = /* @__PURE__ */ getHandlers();
function getHandlers() {
  if (!(globalKey in _global))
    _global[globalKey] = _global[globalKey] || {};
  return _global[globalKey];
}
function getSSRHandler(key, fallback) {
  return handlers[key] || fallback;
}
function setSSRHandler(key, fn) {
  handlers[key] = fn;
}

function guessSerializerType(rawInit) {
  return rawInit == null ? "any" : rawInit instanceof Set ? "set" : rawInit instanceof Map ? "map" : rawInit instanceof Date ? "date" : typeof rawInit === "boolean" ? "boolean" : typeof rawInit === "string" ? "string" : typeof rawInit === "object" ? "object" : !Number.isNaN(rawInit) ? "number" : "any";
}

const StorageSerializers = {
  boolean: {
    read: (v) => v === "true",
    write: (v) => String(v)
  },
  object: {
    read: (v) => JSON.parse(v),
    write: (v) => JSON.stringify(v)
  },
  number: {
    read: (v) => Number.parseFloat(v),
    write: (v) => String(v)
  },
  any: {
    read: (v) => v,
    write: (v) => String(v)
  },
  string: {
    read: (v) => v,
    write: (v) => String(v)
  },
  map: {
    read: (v) => new Map(JSON.parse(v)),
    write: (v) => JSON.stringify(Array.from(v.entries()))
  },
  set: {
    read: (v) => new Set(JSON.parse(v)),
    write: (v) => JSON.stringify(Array.from(v))
  },
  date: {
    read: (v) => new Date(v),
    write: (v) => v.toISOString()
  }
};
const customStorageEventName = "vueuse-storage";
function useStorage(key, defaults, storage, options = {}) {
  var _a;
  const {
    flush = "pre",
    deep = true,
    listenToStorageChanges = true,
    writeDefaults = true,
    mergeDefaults = false,
    shallow,
    window = defaultWindow,
    eventFilter,
    onError = (e) => {
      console.error(e);
    },
    initOnMounted
  } = options;
  const data = (shallow ? vue_runtime_esm/* shallowRef */.IJ : vue_runtime_esm/* ref */.KR)(typeof defaults === "function" ? defaults() : defaults);
  if (!storage) {
    try {
      storage = getSSRHandler("getDefaultStorage", () => {
        var _a2;
        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;
      })();
    } catch (e) {
      onError(e);
    }
  }
  if (!storage)
    return data;
  const rawInit = (0,shared/* toValue */.BA)(defaults);
  const type = guessSerializerType(rawInit);
  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];
  const { pause: pauseWatch, resume: resumeWatch } = (0,shared/* pausableWatch */.Hr)(
    data,
    () => write(data.value),
    { flush, deep, eventFilter }
  );
  if (window && listenToStorageChanges) {
    (0,shared/* tryOnMounted */.rd)(() => {
      useEventListener(window, "storage", update);
      useEventListener(window, customStorageEventName, updateFromCustomEvent);
      if (initOnMounted)
        update();
    });
  }
  if (!initOnMounted)
    update();
  function dispatchWriteEvent(oldValue, newValue) {
    if (window) {
      window.dispatchEvent(new CustomEvent(customStorageEventName, {
        detail: {
          key,
          oldValue,
          newValue,
          storageArea: storage
        }
      }));
    }
  }
  function write(v) {
    try {
      const oldValue = storage.getItem(key);
      if (v == null) {
        dispatchWriteEvent(oldValue, null);
        storage.removeItem(key);
      } else {
        const serialized = serializer.write(v);
        if (oldValue !== serialized) {
          storage.setItem(key, serialized);
          dispatchWriteEvent(oldValue, serialized);
        }
      }
    } catch (e) {
      onError(e);
    }
  }
  function read(event) {
    const rawValue = event ? event.newValue : storage.getItem(key);
    if (rawValue == null) {
      if (writeDefaults && rawInit != null)
        storage.setItem(key, serializer.write(rawInit));
      return rawInit;
    } else if (!event && mergeDefaults) {
      const value = serializer.read(rawValue);
      if (typeof mergeDefaults === "function")
        return mergeDefaults(value, rawInit);
      else if (type === "object" && !Array.isArray(value))
        return { ...rawInit, ...value };
      return value;
    } else if (typeof rawValue !== "string") {
      return rawValue;
    } else {
      return serializer.read(rawValue);
    }
  }
  function update(event) {
    if (event && event.storageArea !== storage)
      return;
    if (event && event.key == null) {
      data.value = rawInit;
      return;
    }
    if (event && event.key !== key)
      return;
    pauseWatch();
    try {
      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))
        data.value = read(event);
    } catch (e) {
      onError(e);
    } finally {
      if (event)
        (0,vue_runtime_esm/* nextTick */.dY)(resumeWatch);
      else
        resumeWatch();
    }
  }
  function updateFromCustomEvent(event) {
    update(event.detail);
  }
  return data;
}

function usePreferredDark(options) {
  return useMediaQuery("(prefers-color-scheme: dark)", options);
}

function useColorMode(options = {}) {
  const {
    selector = "html",
    attribute = "class",
    initialValue = "auto",
    window = defaultWindow,
    storage,
    storageKey = "vueuse-color-scheme",
    listenToStorageChanges = true,
    storageRef,
    emitAuto,
    disableTransition = true
  } = options;
  const modes = {
    auto: "",
    light: "light",
    dark: "dark",
    ...options.modes || {}
  };
  const preferredDark = usePreferredDark({ window });
  const system = (0,vue_runtime_esm/* computed */.EW)(() => preferredDark.value ? "dark" : "light");
  const store = storageRef || (storageKey == null ? (0,shared/* toRef */.lW)(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));
  const state = (0,vue_runtime_esm/* computed */.EW)(() => store.value === "auto" ? system.value : store.value);
  const updateHTMLAttrs = getSSRHandler(
    "updateHTMLAttrs",
    (selector2, attribute2, value) => {
      const el = typeof selector2 === "string" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);
      if (!el)
        return;
      let style;
      if (disableTransition) {
        style = window.document.createElement("style");
        const styleString = "*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
        style.appendChild(document.createTextNode(styleString));
        window.document.head.appendChild(style);
      }
      if (attribute2 === "class") {
        const current = value.split(/\s/g);
        Object.values(modes).flatMap((i) => (i || "").split(/\s/g)).filter(Boolean).forEach((v) => {
          if (current.includes(v))
            el.classList.add(v);
          else
            el.classList.remove(v);
        });
      } else {
        el.setAttribute(attribute2, value);
      }
      if (disableTransition) {
        window.getComputedStyle(style).opacity;
        document.head.removeChild(style);
      }
    }
  );
  function defaultOnChanged(mode) {
    var _a;
    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);
  }
  function onChanged(mode) {
    if (options.onChanged)
      options.onChanged(mode, defaultOnChanged);
    else
      defaultOnChanged(mode);
  }
  (0,vue_runtime_esm/* watch */.wB)(state, onChanged, { flush: "post", immediate: true });
  (0,shared/* tryOnMounted */.rd)(() => onChanged(state.value));
  const auto = (0,vue_runtime_esm/* computed */.EW)({
    get() {
      return emitAuto ? store.value : state.value;
    },
    set(v) {
      store.value = v;
    }
  });
  try {
    return Object.assign(auto, { store, system, state });
  } catch (e) {
    return auto;
  }
}

function useConfirmDialog(revealed = ref(false)) {
  const confirmHook = createEventHook();
  const cancelHook = createEventHook();
  const revealHook = createEventHook();
  let _resolve = noop;
  const reveal = (data) => {
    revealHook.trigger(data);
    revealed.value = true;
    return new Promise((resolve) => {
      _resolve = resolve;
    });
  };
  const confirm = (data) => {
    revealed.value = false;
    confirmHook.trigger(data);
    _resolve({ data, isCanceled: false });
  };
  const cancel = (data) => {
    revealed.value = false;
    cancelHook.trigger(data);
    _resolve({ data, isCanceled: true });
  };
  return {
    isRevealed: computed(() => revealed.value),
    reveal,
    confirm,
    cancel,
    onReveal: revealHook.on,
    onConfirm: confirmHook.on,
    onCancel: cancelHook.on
  };
}

function useMutationObserver(target, callback, options = {}) {
  const { window = defaultWindow, ...mutationOptions } = options;
  let observer;
  const isSupported = useSupported(() => window && "MutationObserver" in window);
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const targets = (0,vue_runtime_esm/* computed */.EW)(() => {
    const value = (0,shared/* toValue */.BA)(target);
    const items = (Array.isArray(value) ? value : [value]).map(unrefElement).filter(shared/* notNullish */.d6);
    return new Set(items);
  });
  const stopWatch = (0,vue_runtime_esm/* watch */.wB)(
    () => targets.value,
    (targets2) => {
      cleanup();
      if (isSupported.value && window && targets2.size) {
        observer = new MutationObserver(callback);
        targets2.forEach((el) => observer.observe(el, mutationOptions));
      }
    },
    { immediate: true, flush: "post" }
  );
  const takeRecords = () => {
    return observer == null ? void 0 : observer.takeRecords();
  };
  const stop = () => {
    cleanup();
    stopWatch();
  };
  (0,shared/* tryOnScopeDispose */.Uo)(stop);
  return {
    isSupported,
    stop,
    takeRecords
  };
}

function useCssVar(prop, target, options = {}) {
  const { window = defaultWindow, initialValue = "", observe = false } = options;
  const variable = ref(initialValue);
  const elRef = computed(() => {
    var _a;
    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);
  });
  function updateCssVar() {
    var _a;
    const key = toValue(prop);
    const el = toValue(elRef);
    if (el && window) {
      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();
      variable.value = value || initialValue;
    }
  }
  if (observe) {
    useMutationObserver(elRef, updateCssVar, {
      attributeFilter: ["style", "class"],
      window
    });
  }
  watch(
    [elRef, () => toValue(prop)],
    updateCssVar,
    { immediate: true }
  );
  watch(
    variable,
    (val) => {
      var _a;
      if ((_a = elRef.value) == null ? void 0 : _a.style)
        elRef.value.style.setProperty(toValue(prop), val);
    }
  );
  return variable;
}

function useCurrentElement(rootComponent) {
  const vm = getCurrentInstance();
  const currentElement = computedWithControl(
    () => null,
    () => rootComponent ? unrefElement(rootComponent) : vm.proxy.$el
  );
  onUpdated(currentElement.trigger);
  onMounted(currentElement.trigger);
  return currentElement;
}

function useCycleList(list, options) {
  const state = shallowRef(getInitialValue());
  const listRef = toRef(list);
  const index = computed({
    get() {
      var _a;
      const targetList = listRef.value;
      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, targetList) : targetList.indexOf(state.value);
      if (index2 < 0)
        index2 = (_a = options == null ? void 0 : options.fallbackIndex) != null ? _a : 0;
      return index2;
    },
    set(v) {
      set(v);
    }
  });
  function set(i) {
    const targetList = listRef.value;
    const length = targetList.length;
    const index2 = (i % length + length) % length;
    const value = targetList[index2];
    state.value = value;
    return value;
  }
  function shift(delta = 1) {
    return set(index.value + delta);
  }
  function next(n = 1) {
    return shift(n);
  }
  function prev(n = 1) {
    return shift(-n);
  }
  function getInitialValue() {
    var _a, _b;
    return (_b = toValue((_a = options == null ? void 0 : options.initialValue) != null ? _a : toValue(list)[0])) != null ? _b : void 0;
  }
  watch(listRef, () => set(index.value));
  return {
    state,
    index,
    next,
    prev,
    go: set
  };
}

function useDark(options = {}) {
  const {
    valueDark = "dark",
    valueLight = "",
    window = defaultWindow
  } = options;
  const mode = useColorMode({
    ...options,
    onChanged: (mode2, defaultHandler) => {
      var _a;
      if (options.onChanged)
        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === "dark", defaultHandler, mode2);
      else
        defaultHandler(mode2);
    },
    modes: {
      dark: valueDark,
      light: valueLight
    }
  });
  const system = (0,vue_runtime_esm/* computed */.EW)(() => {
    if (mode.system) {
      return mode.system.value;
    } else {
      const preferredDark = usePreferredDark({ window });
      return preferredDark.value ? "dark" : "light";
    }
  });
  const isDark = (0,vue_runtime_esm/* computed */.EW)({
    get() {
      return mode.value === "dark";
    },
    set(v) {
      const modeVal = v ? "dark" : "light";
      if (system.value === modeVal)
        mode.value = "auto";
      else
        mode.value = modeVal;
    }
  });
  return isDark;
}

function fnBypass(v) {
  return v;
}
function fnSetSource(source, value) {
  return source.value = value;
}
function defaultDump(clone) {
  return clone ? typeof clone === "function" ? clone : cloneFnJSON : fnBypass;
}
function defaultParse(clone) {
  return clone ? typeof clone === "function" ? clone : cloneFnJSON : fnBypass;
}
function useManualRefHistory(source, options = {}) {
  const {
    clone = false,
    dump = defaultDump(clone),
    parse = defaultParse(clone),
    setSource = fnSetSource
  } = options;
  function _createHistoryRecord() {
    return markRaw({
      snapshot: dump(source.value),
      timestamp: timestamp()
    });
  }
  const last = ref(_createHistoryRecord());
  const undoStack = ref([]);
  const redoStack = ref([]);
  const _setSource = (record) => {
    setSource(source, parse(record.snapshot));
    last.value = record;
  };
  const commit = () => {
    undoStack.value.unshift(last.value);
    last.value = _createHistoryRecord();
    if (options.capacity && undoStack.value.length > options.capacity)
      undoStack.value.splice(options.capacity, Number.POSITIVE_INFINITY);
    if (redoStack.value.length)
      redoStack.value.splice(0, redoStack.value.length);
  };
  const clear = () => {
    undoStack.value.splice(0, undoStack.value.length);
    redoStack.value.splice(0, redoStack.value.length);
  };
  const undo = () => {
    const state = undoStack.value.shift();
    if (state) {
      redoStack.value.unshift(last.value);
      _setSource(state);
    }
  };
  const redo = () => {
    const state = redoStack.value.shift();
    if (state) {
      undoStack.value.unshift(last.value);
      _setSource(state);
    }
  };
  const reset = () => {
    _setSource(last.value);
  };
  const history = computed(() => [last.value, ...undoStack.value]);
  const canUndo = computed(() => undoStack.value.length > 0);
  const canRedo = computed(() => redoStack.value.length > 0);
  return {
    source,
    undoStack,
    redoStack,
    last,
    history,
    canUndo,
    canRedo,
    clear,
    commit,
    reset,
    undo,
    redo
  };
}

function useRefHistory(source, options = {}) {
  const {
    deep = false,
    flush = "pre",
    eventFilter
  } = options;
  const {
    eventFilter: composedFilter,
    pause,
    resume: resumeTracking,
    isActive: isTracking
  } = pausableFilter(eventFilter);
  const {
    ignoreUpdates,
    ignorePrevAsyncUpdates,
    stop
  } = watchIgnorable(
    source,
    commit,
    { deep, flush, eventFilter: composedFilter }
  );
  function setSource(source2, value) {
    ignorePrevAsyncUpdates();
    ignoreUpdates(() => {
      source2.value = value;
    });
  }
  const manualHistory = useManualRefHistory(source, { ...options, clone: options.clone || deep, setSource });
  const { clear, commit: manualCommit } = manualHistory;
  function commit() {
    ignorePrevAsyncUpdates();
    manualCommit();
  }
  function resume(commitNow) {
    resumeTracking();
    if (commitNow)
      commit();
  }
  function batch(fn) {
    let canceled = false;
    const cancel = () => canceled = true;
    ignoreUpdates(() => {
      fn(cancel);
    });
    if (!canceled)
      commit();
  }
  function dispose() {
    stop();
    clear();
  }
  return {
    ...manualHistory,
    isTracking,
    pause,
    resume,
    commit,
    batch,
    dispose
  };
}

function useDebouncedRefHistory(source, options = {}) {
  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;
  const history = useRefHistory(source, { ...options, eventFilter: filter });
  return {
    ...history
  };
}

function useDeviceMotion(options = {}) {
  const {
    window = defaultWindow,
    eventFilter = shared/* bypassFilter */.zg
  } = options;
  const acceleration = (0,vue_runtime_esm/* ref */.KR)({ x: null, y: null, z: null });
  const rotationRate = (0,vue_runtime_esm/* ref */.KR)({ alpha: null, beta: null, gamma: null });
  const interval = (0,vue_runtime_esm/* ref */.KR)(0);
  const accelerationIncludingGravity = (0,vue_runtime_esm/* ref */.KR)({
    x: null,
    y: null,
    z: null
  });
  if (window) {
    const onDeviceMotion = (0,shared/* createFilterWrapper */.sq)(
      eventFilter,
      (event) => {
        acceleration.value = event.acceleration;
        accelerationIncludingGravity.value = event.accelerationIncludingGravity;
        rotationRate.value = event.rotationRate;
        interval.value = event.interval;
      }
    );
    useEventListener(window, "devicemotion", onDeviceMotion);
  }
  return {
    acceleration,
    accelerationIncludingGravity,
    rotationRate,
    interval
  };
}

function useDeviceOrientation(options = {}) {
  const { window = defaultWindow } = options;
  const isSupported = useSupported(() => window && "DeviceOrientationEvent" in window);
  const isAbsolute = (0,vue_runtime_esm/* ref */.KR)(false);
  const alpha = (0,vue_runtime_esm/* ref */.KR)(null);
  const beta = (0,vue_runtime_esm/* ref */.KR)(null);
  const gamma = (0,vue_runtime_esm/* ref */.KR)(null);
  if (window && isSupported.value) {
    useEventListener(window, "deviceorientation", (event) => {
      isAbsolute.value = event.absolute;
      alpha.value = event.alpha;
      beta.value = event.beta;
      gamma.value = event.gamma;
    });
  }
  return {
    isSupported,
    isAbsolute,
    alpha,
    beta,
    gamma
  };
}

function useDevicePixelRatio(options = {}) {
  const {
    window = defaultWindow
  } = options;
  const pixelRatio = (0,vue_runtime_esm/* ref */.KR)(1);
  if (window) {
    let observe2 = function() {
      pixelRatio.value = window.devicePixelRatio;
      cleanup2();
      media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);
      media.addEventListener("change", observe2, { once: true });
    }, cleanup2 = function() {
      media == null ? void 0 : media.removeEventListener("change", observe2);
    };
    let media;
    observe2();
    (0,shared/* tryOnScopeDispose */.Uo)(cleanup2);
  }
  return { pixelRatio };
}

function useDevicesList(options = {}) {
  const {
    navigator = defaultNavigator,
    requestPermissions = false,
    constraints = { audio: true, video: true },
    onUpdated
  } = options;
  const devices = (0,vue_runtime_esm/* ref */.KR)([]);
  const videoInputs = (0,vue_runtime_esm/* computed */.EW)(() => devices.value.filter((i) => i.kind === "videoinput"));
  const audioInputs = (0,vue_runtime_esm/* computed */.EW)(() => devices.value.filter((i) => i.kind === "audioinput"));
  const audioOutputs = (0,vue_runtime_esm/* computed */.EW)(() => devices.value.filter((i) => i.kind === "audiooutput"));
  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);
  const permissionGranted = (0,vue_runtime_esm/* ref */.KR)(false);
  let stream;
  async function update() {
    if (!isSupported.value)
      return;
    devices.value = await navigator.mediaDevices.enumerateDevices();
    onUpdated == null ? void 0 : onUpdated(devices.value);
    if (stream) {
      stream.getTracks().forEach((t) => t.stop());
      stream = null;
    }
  }
  async function ensurePermissions() {
    if (!isSupported.value)
      return false;
    if (permissionGranted.value)
      return true;
    const { state, query } = usePermission("camera", { controls: true });
    await query();
    if (state.value !== "granted") {
      stream = await navigator.mediaDevices.getUserMedia(constraints);
      update();
      permissionGranted.value = true;
    } else {
      permissionGranted.value = true;
    }
    return permissionGranted.value;
  }
  if (isSupported.value) {
    if (requestPermissions)
      ensurePermissions();
    useEventListener(navigator.mediaDevices, "devicechange", update);
    update();
  }
  return {
    devices,
    ensurePermissions,
    permissionGranted,
    videoInputs,
    audioInputs,
    audioOutputs,
    isSupported
  };
}

function useDisplayMedia(options = {}) {
  var _a;
  const enabled = ref((_a = options.enabled) != null ? _a : false);
  const video = options.video;
  const audio = options.audio;
  const { navigator = defaultNavigator } = options;
  const isSupported = useSupported(() => {
    var _a2;
    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;
  });
  const constraint = { audio, video };
  const stream = shallowRef();
  async function _start() {
    if (!isSupported.value || stream.value)
      return;
    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);
    return stream.value;
  }
  async function _stop() {
    var _a2;
    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());
    stream.value = void 0;
  }
  function stop() {
    _stop();
    enabled.value = false;
  }
  async function start() {
    await _start();
    if (stream.value)
      enabled.value = true;
    return stream.value;
  }
  watch(
    enabled,
    (v) => {
      if (v)
        _start();
      else
        _stop();
    },
    { immediate: true }
  );
  return {
    isSupported,
    stream,
    start,
    stop,
    enabled
  };
}

function useDocumentVisibility(options = {}) {
  const { document = defaultDocument } = options;
  if (!document)
    return (0,vue_runtime_esm/* ref */.KR)("visible");
  const visibility = (0,vue_runtime_esm/* ref */.KR)(document.visibilityState);
  useEventListener(document, "visibilitychange", () => {
    visibility.value = document.visibilityState;
  });
  return visibility;
}

function useDraggable(target, options = {}) {
  var _a, _b;
  const {
    pointerTypes,
    preventDefault,
    stopPropagation,
    exact,
    onMove,
    onEnd,
    onStart,
    initialValue,
    axis = "both",
    draggingElement = defaultWindow,
    containerElement,
    handle: draggingHandle = target
  } = options;
  const position = (0,vue_runtime_esm/* ref */.KR)(
    (_a = (0,shared/* toValue */.BA)(initialValue)) != null ? _a : { x: 0, y: 0 }
  );
  const pressedDelta = (0,vue_runtime_esm/* ref */.KR)();
  const filterEvent = (e) => {
    if (pointerTypes)
      return pointerTypes.includes(e.pointerType);
    return true;
  };
  const handleEvent = (e) => {
    if ((0,shared/* toValue */.BA)(preventDefault))
      e.preventDefault();
    if ((0,shared/* toValue */.BA)(stopPropagation))
      e.stopPropagation();
  };
  const start = (e) => {
    var _a2;
    if ((0,shared/* toValue */.BA)(options.disabled) || !filterEvent(e))
      return;
    if ((0,shared/* toValue */.BA)(exact) && e.target !== (0,shared/* toValue */.BA)(target))
      return;
    const container = (0,shared/* toValue */.BA)(containerElement);
    const containerRect = (_a2 = container == null ? void 0 : container.getBoundingClientRect) == null ? void 0 : _a2.call(container);
    const targetRect = (0,shared/* toValue */.BA)(target).getBoundingClientRect();
    const pos = {
      x: e.clientX - (container ? targetRect.left - containerRect.left + container.scrollLeft : targetRect.left),
      y: e.clientY - (container ? targetRect.top - containerRect.top + container.scrollTop : targetRect.top)
    };
    if ((onStart == null ? void 0 : onStart(pos, e)) === false)
      return;
    pressedDelta.value = pos;
    handleEvent(e);
  };
  const move = (e) => {
    if ((0,shared/* toValue */.BA)(options.disabled) || !filterEvent(e))
      return;
    if (!pressedDelta.value)
      return;
    const container = (0,shared/* toValue */.BA)(containerElement);
    const targetRect = (0,shared/* toValue */.BA)(target).getBoundingClientRect();
    let { x, y } = position.value;
    if (axis === "x" || axis === "both") {
      x = e.clientX - pressedDelta.value.x;
      if (container)
        x = Math.min(Math.max(0, x), container.scrollWidth - targetRect.width);
    }
    if (axis === "y" || axis === "both") {
      y = e.clientY - pressedDelta.value.y;
      if (container)
        y = Math.min(Math.max(0, y), container.scrollHeight - targetRect.height);
    }
    position.value = {
      x,
      y
    };
    onMove == null ? void 0 : onMove(position.value, e);
    handleEvent(e);
  };
  const end = (e) => {
    if ((0,shared/* toValue */.BA)(options.disabled) || !filterEvent(e))
      return;
    if (!pressedDelta.value)
      return;
    pressedDelta.value = void 0;
    onEnd == null ? void 0 : onEnd(position.value, e);
    handleEvent(e);
  };
  if (shared/* isClient */.oc) {
    const config = { capture: (_b = options.capture) != null ? _b : true };
    useEventListener(draggingHandle, "pointerdown", start, config);
    useEventListener(draggingElement, "pointermove", move, config);
    useEventListener(draggingElement, "pointerup", end, config);
  }
  return {
    ...(0,shared/* toRefs */.QW)(position),
    position,
    isDragging: (0,vue_runtime_esm/* computed */.EW)(() => !!pressedDelta.value),
    style: (0,vue_runtime_esm/* computed */.EW)(
      () => `left:${position.value.x}px;top:${position.value.y}px;`
    )
  };
}

function useDropZone(target, options = {}) {
  const isOverDropZone = ref(false);
  const files = shallowRef(null);
  let counter = 0;
  let isDataTypeIncluded = true;
  if (isClient) {
    const _options = typeof options === "function" ? { onDrop: options } : options;
    const getFiles = (event) => {
      var _a, _b;
      const list = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);
      return files.value = list.length === 0 ? null : list;
    };
    useEventListener(target, "dragenter", (event) => {
      var _a, _b;
      const types = Array.from(((_a = event == null ? void 0 : event.dataTransfer) == null ? void 0 : _a.items) || []).map((i) => i.kind === "file" ? i.type : null).filter(notNullish);
      if (_options.dataTypes && event.dataTransfer) {
        const dataTypes = unref(_options.dataTypes);
        isDataTypeIncluded = typeof dataTypes === "function" ? dataTypes(types) : dataTypes ? dataTypes.some((item) => types.includes(item)) : true;
        if (!isDataTypeIncluded)
          return;
      }
      event.preventDefault();
      counter += 1;
      isOverDropZone.value = true;
      (_b = _options.onEnter) == null ? void 0 : _b.call(_options, getFiles(event), event);
    });
    useEventListener(target, "dragover", (event) => {
      var _a;
      if (!isDataTypeIncluded)
        return;
      event.preventDefault();
      (_a = _options.onOver) == null ? void 0 : _a.call(_options, getFiles(event), event);
    });
    useEventListener(target, "dragleave", (event) => {
      var _a;
      if (!isDataTypeIncluded)
        return;
      event.preventDefault();
      counter -= 1;
      if (counter === 0)
        isOverDropZone.value = false;
      (_a = _options.onLeave) == null ? void 0 : _a.call(_options, getFiles(event), event);
    });
    useEventListener(target, "drop", (event) => {
      var _a;
      event.preventDefault();
      counter = 0;
      isOverDropZone.value = false;
      (_a = _options.onDrop) == null ? void 0 : _a.call(_options, getFiles(event), event);
    });
  }
  return {
    files,
    isOverDropZone
  };
}

function useResizeObserver(target, callback, options = {}) {
  const { window = defaultWindow, ...observerOptions } = options;
  let observer;
  const isSupported = useSupported(() => window && "ResizeObserver" in window);
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const targets = (0,vue_runtime_esm/* computed */.EW)(() => Array.isArray(target) ? target.map((el) => unrefElement(el)) : [unrefElement(target)]);
  const stopWatch = (0,vue_runtime_esm/* watch */.wB)(
    targets,
    (els) => {
      cleanup();
      if (isSupported.value && window) {
        observer = new ResizeObserver(callback);
        for (const _el of els)
          _el && observer.observe(_el, observerOptions);
      }
    },
    { immediate: true, flush: "post" }
  );
  const stop = () => {
    cleanup();
    stopWatch();
  };
  (0,shared/* tryOnScopeDispose */.Uo)(stop);
  return {
    isSupported,
    stop
  };
}

function useElementBounding(target, options = {}) {
  const {
    reset = true,
    windowResize = true,
    windowScroll = true,
    immediate = true
  } = options;
  const height = (0,vue_runtime_esm/* ref */.KR)(0);
  const bottom = (0,vue_runtime_esm/* ref */.KR)(0);
  const left = (0,vue_runtime_esm/* ref */.KR)(0);
  const right = (0,vue_runtime_esm/* ref */.KR)(0);
  const top = (0,vue_runtime_esm/* ref */.KR)(0);
  const width = (0,vue_runtime_esm/* ref */.KR)(0);
  const x = (0,vue_runtime_esm/* ref */.KR)(0);
  const y = (0,vue_runtime_esm/* ref */.KR)(0);
  function update() {
    const el = unrefElement(target);
    if (!el) {
      if (reset) {
        height.value = 0;
        bottom.value = 0;
        left.value = 0;
        right.value = 0;
        top.value = 0;
        width.value = 0;
        x.value = 0;
        y.value = 0;
      }
      return;
    }
    const rect = el.getBoundingClientRect();
    height.value = rect.height;
    bottom.value = rect.bottom;
    left.value = rect.left;
    right.value = rect.right;
    top.value = rect.top;
    width.value = rect.width;
    x.value = rect.x;
    y.value = rect.y;
  }
  useResizeObserver(target, update);
  (0,vue_runtime_esm/* watch */.wB)(() => unrefElement(target), (ele) => !ele && update());
  useMutationObserver(target, update, {
    attributeFilter: ["style", "class"]
  });
  if (windowScroll)
    useEventListener("scroll", update, { capture: true, passive: true });
  if (windowResize)
    useEventListener("resize", update, { passive: true });
  (0,shared/* tryOnMounted */.rd)(() => {
    if (immediate)
      update();
  });
  return {
    height,
    bottom,
    left,
    right,
    top,
    width,
    x,
    y,
    update
  };
}

function useElementByPoint(options) {
  const {
    x,
    y,
    document = defaultDocument,
    multiple,
    interval = "requestAnimationFrame",
    immediate = true
  } = options;
  const isSupported = useSupported(() => {
    if (toValue(multiple))
      return document && "elementsFromPoint" in document;
    return document && "elementFromPoint" in document;
  });
  const element = ref(null);
  const cb = () => {
    var _a, _b;
    element.value = toValue(multiple) ? (_a = document == null ? void 0 : document.elementsFromPoint(toValue(x), toValue(y))) != null ? _a : [] : (_b = document == null ? void 0 : document.elementFromPoint(toValue(x), toValue(y))) != null ? _b : null;
  };
  const controls = interval === "requestAnimationFrame" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });
  return {
    isSupported,
    element,
    ...controls
  };
}

function useElementHover(el, options = {}) {
  const {
    delayEnter = 0,
    delayLeave = 0,
    window = defaultWindow
  } = options;
  const isHovered = ref(false);
  let timer;
  const toggle = (entering) => {
    const delay = entering ? delayEnter : delayLeave;
    if (timer) {
      clearTimeout(timer);
      timer = void 0;
    }
    if (delay)
      timer = setTimeout(() => isHovered.value = entering, delay);
    else
      isHovered.value = entering;
  };
  if (!window)
    return isHovered;
  useEventListener(el, "mouseenter", () => toggle(true), { passive: true });
  useEventListener(el, "mouseleave", () => toggle(false), { passive: true });
  return isHovered;
}

function useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {
  const { window = defaultWindow, box = "content-box" } = options;
  const isSVG = (0,vue_runtime_esm/* computed */.EW)(() => {
    var _a, _b;
    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes("svg");
  });
  const width = (0,vue_runtime_esm/* ref */.KR)(initialSize.width);
  const height = (0,vue_runtime_esm/* ref */.KR)(initialSize.height);
  const { stop: stop1 } = useResizeObserver(
    target,
    ([entry]) => {
      const boxSize = box === "border-box" ? entry.borderBoxSize : box === "content-box" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;
      if (window && isSVG.value) {
        const $elem = unrefElement(target);
        if ($elem) {
          const styles = window.getComputedStyle($elem);
          width.value = Number.parseFloat(styles.width);
          height.value = Number.parseFloat(styles.height);
        }
      } else {
        if (boxSize) {
          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];
          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);
          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);
        } else {
          width.value = entry.contentRect.width;
          height.value = entry.contentRect.height;
        }
      }
    },
    options
  );
  (0,shared/* tryOnMounted */.rd)(() => {
    const ele = unrefElement(target);
    if (ele) {
      width.value = "offsetWidth" in ele ? ele.offsetWidth : initialSize.width;
      height.value = "offsetHeight" in ele ? ele.offsetHeight : initialSize.height;
    }
  });
  const stop2 = (0,vue_runtime_esm/* watch */.wB)(
    () => unrefElement(target),
    (ele) => {
      width.value = ele ? initialSize.width : 0;
      height.value = ele ? initialSize.height : 0;
    }
  );
  function stop() {
    stop1();
    stop2();
  }
  return {
    width,
    height,
    stop
  };
}

function useIntersectionObserver(target, callback, options = {}) {
  const {
    root,
    rootMargin = "0px",
    threshold = 0.1,
    window = defaultWindow,
    immediate = true
  } = options;
  const isSupported = useSupported(() => window && "IntersectionObserver" in window);
  const targets = (0,vue_runtime_esm/* computed */.EW)(() => {
    const _target = (0,shared/* toValue */.BA)(target);
    return (Array.isArray(_target) ? _target : [_target]).map(unrefElement).filter(shared/* notNullish */.d6);
  });
  let cleanup = shared/* noop */.lQ;
  const isActive = (0,vue_runtime_esm/* ref */.KR)(immediate);
  const stopWatch = isSupported.value ? (0,vue_runtime_esm/* watch */.wB)(
    () => [targets.value, unrefElement(root), isActive.value],
    ([targets2, root2]) => {
      cleanup();
      if (!isActive.value)
        return;
      if (!targets2.length)
        return;
      const observer = new IntersectionObserver(
        callback,
        {
          root: unrefElement(root2),
          rootMargin,
          threshold
        }
      );
      targets2.forEach((el) => el && observer.observe(el));
      cleanup = () => {
        observer.disconnect();
        cleanup = shared/* noop */.lQ;
      };
    },
    { immediate, flush: "post" }
  ) : shared/* noop */.lQ;
  const stop = () => {
    cleanup();
    stopWatch();
    isActive.value = false;
  };
  (0,shared/* tryOnScopeDispose */.Uo)(stop);
  return {
    isSupported,
    isActive,
    pause() {
      cleanup();
      isActive.value = false;
    },
    resume() {
      isActive.value = true;
    },
    stop
  };
}

function useElementVisibility(element, options = {}) {
  const { window = defaultWindow, scrollTarget, threshold = 0 } = options;
  const elementIsVisible = (0,vue_runtime_esm/* ref */.KR)(false);
  useIntersectionObserver(
    element,
    (intersectionObserverEntries) => {
      let isIntersecting = elementIsVisible.value;
      let latestTime = 0;
      for (const entry of intersectionObserverEntries) {
        if (entry.time >= latestTime) {
          latestTime = entry.time;
          isIntersecting = entry.isIntersecting;
        }
      }
      elementIsVisible.value = isIntersecting;
    },
    {
      root: scrollTarget,
      window,
      threshold
    }
  );
  return elementIsVisible;
}

const events = /* @__PURE__ */ new Map();

function useEventBus(key) {
  const scope = getCurrentScope();
  function on(listener) {
    var _a;
    const listeners = events.get(key) || /* @__PURE__ */ new Set();
    listeners.add(listener);
    events.set(key, listeners);
    const _off = () => off(listener);
    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);
    return _off;
  }
  function once(listener) {
    function _listener(...args) {
      off(_listener);
      listener(...args);
    }
    return on(_listener);
  }
  function off(listener) {
    const listeners = events.get(key);
    if (!listeners)
      return;
    listeners.delete(listener);
    if (!listeners.size)
      reset();
  }
  function reset() {
    events.delete(key);
  }
  function emit(event, payload) {
    var _a;
    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));
  }
  return { on, once, off, emit, reset };
}

function resolveNestedOptions$1(options) {
  if (options === true)
    return {};
  return options;
}
function useEventSource(url, events = [], options = {}) {
  const event = ref(null);
  const data = ref(null);
  const status = ref("CONNECTING");
  const eventSource = ref(null);
  const error = shallowRef(null);
  const urlRef = toRef(url);
  let explicitlyClosed = false;
  let retried = 0;
  const {
    withCredentials = false,
    immediate = true
  } = options;
  const close = () => {
    if (isClient && eventSource.value) {
      eventSource.value.close();
      eventSource.value = null;
      status.value = "CLOSED";
      explicitlyClosed = true;
    }
  };
  const _init = () => {
    if (explicitlyClosed || typeof urlRef.value === "undefined")
      return;
    const es = new EventSource(urlRef.value, { withCredentials });
    status.value = "CONNECTING";
    eventSource.value = es;
    es.onopen = () => {
      status.value = "OPEN";
      error.value = null;
    };
    es.onerror = (e) => {
      status.value = "CLOSED";
      error.value = e;
      if (es.readyState === 2 && !explicitlyClosed && options.autoReconnect) {
        es.close();
        const {
          retries = -1,
          delay = 1e3,
          onFailed
        } = resolveNestedOptions$1(options.autoReconnect);
        retried += 1;
        if (typeof retries === "number" && (retries < 0 || retried < retries))
          setTimeout(_init, delay);
        else if (typeof retries === "function" && retries())
          setTimeout(_init, delay);
        else
          onFailed == null ? void 0 : onFailed();
      }
    };
    es.onmessage = (e) => {
      event.value = null;
      data.value = e.data;
    };
    for (const event_name of events) {
      useEventListener(es, event_name, (e) => {
        event.value = event_name;
        data.value = e.data || null;
      });
    }
  };
  const open = () => {
    if (!isClient)
      return;
    close();
    explicitlyClosed = false;
    retried = 0;
    _init();
  };
  if (immediate)
    watch(urlRef, open, { immediate: true });
  tryOnScopeDispose(close);
  return {
    eventSource,
    event,
    data,
    status,
    error,
    open,
    close
  };
}

function useEyeDropper(options = {}) {
  const { initialValue = "" } = options;
  const isSupported = useSupported(() => typeof window !== "undefined" && "EyeDropper" in window);
  const sRGBHex = (0,vue_runtime_esm/* ref */.KR)(initialValue);
  async function open(openOptions) {
    if (!isSupported.value)
      return;
    const eyeDropper = new window.EyeDropper();
    const result = await eyeDropper.open(openOptions);
    sRGBHex.value = result.sRGBHex;
    return result;
  }
  return { isSupported, sRGBHex, open };
}

function useFavicon(newIcon = null, options = {}) {
  const {
    baseUrl = "",
    rel = "icon",
    document = defaultDocument
  } = options;
  const favicon = toRef(newIcon);
  const applyIcon = (icon) => {
    const elements = document == null ? void 0 : document.head.querySelectorAll(`link[rel*="${rel}"]`);
    if (!elements || elements.length === 0) {
      const link = document == null ? void 0 : document.createElement("link");
      if (link) {
        link.rel = rel;
        link.href = `${baseUrl}${icon}`;
        link.type = `image/${icon.split(".").pop()}`;
        document == null ? void 0 : document.head.append(link);
      }
      return;
    }
    elements == null ? void 0 : elements.forEach((el) => el.href = `${baseUrl}${icon}`);
  };
  watch(
    favicon,
    (i, o) => {
      if (typeof i === "string" && i !== o)
        applyIcon(i);
    },
    { immediate: true }
  );
  return favicon;
}

const payloadMapping = {
  json: "application/json",
  text: "text/plain"
};
function isFetchOptions(obj) {
  return obj && containsProp(obj, "immediate", "refetch", "initialData", "timeout", "beforeFetch", "afterFetch", "onFetchError", "fetch", "updateDataOnError");
}
function isAbsoluteURL(url) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}
function headersToObject(headers) {
  if (typeof Headers !== "undefined" && headers instanceof Headers)
    return Object.fromEntries(headers.entries());
  return headers;
}
function combineCallbacks(combination, ...callbacks) {
  if (combination === "overwrite") {
    return async (ctx) => {
      const callback = callbacks[callbacks.length - 1];
      if (callback)
        return { ...ctx, ...await callback(ctx) };
      return ctx;
    };
  } else {
    return async (ctx) => {
      for (const callback of callbacks) {
        if (callback)
          ctx = { ...ctx, ...await callback(ctx) };
      }
      return ctx;
    };
  }
}
function createFetch(config = {}) {
  const _combination = config.combination || "chain";
  const _options = config.options || {};
  const _fetchOptions = config.fetchOptions || {};
  function useFactoryFetch(url, ...args) {
    const computedUrl = computed(() => {
      const baseUrl = toValue(config.baseUrl);
      const targetUrl = toValue(url);
      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;
    });
    let options = _options;
    let fetchOptions = _fetchOptions;
    if (args.length > 0) {
      if (isFetchOptions(args[0])) {
        options = {
          ...options,
          ...args[0],
          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),
          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),
          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)
        };
      } else {
        fetchOptions = {
          ...fetchOptions,
          ...args[0],
          headers: {
            ...headersToObject(fetchOptions.headers) || {},
            ...headersToObject(args[0].headers) || {}
          }
        };
      }
    }
    if (args.length > 1 && isFetchOptions(args[1])) {
      options = {
        ...options,
        ...args[1],
        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),
        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),
        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)
      };
    }
    return useFetch(computedUrl, fetchOptions, options);
  }
  return useFactoryFetch;
}
function useFetch(url, ...args) {
  var _a;
  const supportsAbort = typeof AbortController === "function";
  let fetchOptions = {};
  let options = {
    immediate: true,
    refetch: false,
    timeout: 0,
    updateDataOnError: false
  };
  const config = {
    method: "GET",
    type: "text",
    payload: void 0
  };
  if (args.length > 0) {
    if (isFetchOptions(args[0]))
      options = { ...options, ...args[0] };
    else
      fetchOptions = args[0];
  }
  if (args.length > 1) {
    if (isFetchOptions(args[1]))
      options = { ...options, ...args[1] };
  }
  const {
    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,
    initialData,
    timeout
  } = options;
  const responseEvent = createEventHook();
  const errorEvent = createEventHook();
  const finallyEvent = createEventHook();
  const isFinished = ref(false);
  const isFetching = ref(false);
  const aborted = ref(false);
  const statusCode = ref(null);
  const response = shallowRef(null);
  const error = shallowRef(null);
  const data = shallowRef(initialData || null);
  const canAbort = computed(() => supportsAbort && isFetching.value);
  let controller;
  let timer;
  const abort = () => {
    if (supportsAbort) {
      controller == null ? void 0 : controller.abort();
      controller = new AbortController();
      controller.signal.onabort = () => aborted.value = true;
      fetchOptions = {
        ...fetchOptions,
        signal: controller.signal
      };
    }
  };
  const loading = (isLoading) => {
    isFetching.value = isLoading;
    isFinished.value = !isLoading;
  };
  if (timeout)
    timer = useTimeoutFn(abort, timeout, { immediate: false });
  let executeCounter = 0;
  const execute = async (throwOnFailed = false) => {
    var _a2, _b;
    abort();
    loading(true);
    error.value = null;
    statusCode.value = null;
    aborted.value = false;
    executeCounter += 1;
    const currentExecuteCounter = executeCounter;
    const defaultFetchOptions = {
      method: config.method,
      headers: {}
    };
    if (config.payload) {
      const headers = headersToObject(defaultFetchOptions.headers);
      const payload = toValue(config.payload);
      if (!config.payloadType && payload && Object.getPrototypeOf(payload) === Object.prototype && !(payload instanceof FormData))
        config.payloadType = "json";
      if (config.payloadType)
        headers["Content-Type"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;
      defaultFetchOptions.body = config.payloadType === "json" ? JSON.stringify(payload) : payload;
    }
    let isCanceled = false;
    const context = {
      url: toValue(url),
      options: {
        ...defaultFetchOptions,
        ...fetchOptions
      },
      cancel: () => {
        isCanceled = true;
      }
    };
    if (options.beforeFetch)
      Object.assign(context, await options.beforeFetch(context));
    if (isCanceled || !fetch) {
      loading(false);
      return Promise.resolve(null);
    }
    let responseData = null;
    if (timer)
      timer.start();
    return fetch(
      context.url,
      {
        ...defaultFetchOptions,
        ...context.options,
        headers: {
          ...headersToObject(defaultFetchOptions.headers),
          ...headersToObject((_b = context.options) == null ? void 0 : _b.headers)
        }
      }
    ).then(async (fetchResponse) => {
      response.value = fetchResponse;
      statusCode.value = fetchResponse.status;
      responseData = await fetchResponse.clone()[config.type]();
      if (!fetchResponse.ok) {
        data.value = initialData || null;
        throw new Error(fetchResponse.statusText);
      }
      if (options.afterFetch) {
        ({ data: responseData } = await options.afterFetch({
          data: responseData,
          response: fetchResponse
        }));
      }
      data.value = responseData;
      responseEvent.trigger(fetchResponse);
      return fetchResponse;
    }).catch(async (fetchError) => {
      let errorData = fetchError.message || fetchError.name;
      if (options.onFetchError) {
        ({ error: errorData, data: responseData } = await options.onFetchError({
          data: responseData,
          error: fetchError,
          response: response.value
        }));
      }
      error.value = errorData;
      if (options.updateDataOnError)
        data.value = responseData;
      errorEvent.trigger(fetchError);
      if (throwOnFailed)
        throw fetchError;
      return null;
    }).finally(() => {
      if (currentExecuteCounter === executeCounter)
        loading(false);
      if (timer)
        timer.stop();
      finallyEvent.trigger(null);
    });
  };
  const refetch = toRef(options.refetch);
  watch(
    [
      refetch,
      toRef(url)
    ],
    ([refetch2]) => refetch2 && execute(),
    { deep: true }
  );
  const shell = {
    isFinished: readonly(isFinished),
    isFetching: readonly(isFetching),
    statusCode,
    response,
    error,
    data,
    canAbort,
    aborted,
    abort,
    execute,
    onFetchResponse: responseEvent.on,
    onFetchError: errorEvent.on,
    onFetchFinally: finallyEvent.on,
    // method
    get: setMethod("GET"),
    put: setMethod("PUT"),
    post: setMethod("POST"),
    delete: setMethod("DELETE"),
    patch: setMethod("PATCH"),
    head: setMethod("HEAD"),
    options: setMethod("OPTIONS"),
    // type
    json: setType("json"),
    text: setType("text"),
    blob: setType("blob"),
    arrayBuffer: setType("arrayBuffer"),
    formData: setType("formData")
  };
  function setMethod(method) {
    return (payload, payloadType) => {
      if (!isFetching.value) {
        config.method = method;
        config.payload = payload;
        config.payloadType = payloadType;
        if (isRef(config.payload)) {
          watch(
            [
              refetch,
              toRef(config.payload)
            ],
            ([refetch2]) => refetch2 && execute(),
            { deep: true }
          );
        }
        return {
          ...shell,
          then(onFulfilled, onRejected) {
            return waitUntilFinished().then(onFulfilled, onRejected);
          }
        };
      }
      return void 0;
    };
  }
  function waitUntilFinished() {
    return new Promise((resolve, reject) => {
      until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));
    });
  }
  function setType(type) {
    return () => {
      if (!isFetching.value) {
        config.type = type;
        return {
          ...shell,
          then(onFulfilled, onRejected) {
            return waitUntilFinished().then(onFulfilled, onRejected);
          }
        };
      }
      return void 0;
    };
  }
  if (options.immediate)
    Promise.resolve().then(() => execute());
  return {
    ...shell,
    then(onFulfilled, onRejected) {
      return waitUntilFinished().then(onFulfilled, onRejected);
    }
  };
}
function joinPaths(start, end) {
  if (!start.endsWith("/") && !end.startsWith("/"))
    return `${start}/${end}`;
  return `${start}${end}`;
}

const DEFAULT_OPTIONS = {
  multiple: true,
  accept: "*",
  reset: false,
  directory: false
};
function useFileDialog(options = {}) {
  const {
    document = defaultDocument
  } = options;
  const files = ref(null);
  const { on: onChange, trigger } = createEventHook();
  let input;
  if (document) {
    input = document.createElement("input");
    input.type = "file";
    input.onchange = (event) => {
      const result = event.target;
      files.value = result.files;
      trigger(files.value);
    };
  }
  const reset = () => {
    files.value = null;
    if (input) {
      input.value = "";
      trigger(null);
    }
  };
  const open = (localOptions) => {
    if (!input)
      return;
    const _options = {
      ...DEFAULT_OPTIONS,
      ...options,
      ...localOptions
    };
    input.multiple = _options.multiple;
    input.accept = _options.accept;
    input.webkitdirectory = _options.directory;
    if (hasOwn(_options, "capture"))
      input.capture = _options.capture;
    if (_options.reset)
      reset();
    input.click();
  };
  return {
    files: readonly(files),
    open,
    reset,
    onChange
  };
}

function useFileSystemAccess(options = {}) {
  const {
    window: _window = defaultWindow,
    dataType = "Text"
  } = options;
  const window = _window;
  const isSupported = useSupported(() => window && "showSaveFilePicker" in window && "showOpenFilePicker" in window);
  const fileHandle = ref();
  const data = ref();
  const file = ref();
  const fileName = computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : "";
  });
  const fileMIME = computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : "";
  });
  const fileSize = computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;
  });
  const fileLastModified = computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;
  });
  async function open(_options = {}) {
    if (!isSupported.value)
      return;
    const [handle] = await window.showOpenFilePicker({ ...toValue(options), ..._options });
    fileHandle.value = handle;
    await updateData();
  }
  async function create(_options = {}) {
    if (!isSupported.value)
      return;
    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });
    data.value = void 0;
    await updateData();
  }
  async function save(_options = {}) {
    if (!isSupported.value)
      return;
    if (!fileHandle.value)
      return saveAs(_options);
    if (data.value) {
      const writableStream = await fileHandle.value.createWritable();
      await writableStream.write(data.value);
      await writableStream.close();
    }
    await updateFile();
  }
  async function saveAs(_options = {}) {
    if (!isSupported.value)
      return;
    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });
    if (data.value) {
      const writableStream = await fileHandle.value.createWritable();
      await writableStream.write(data.value);
      await writableStream.close();
    }
    await updateFile();
  }
  async function updateFile() {
    var _a;
    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());
  }
  async function updateData() {
    var _a, _b;
    await updateFile();
    const type = toValue(dataType);
    if (type === "Text")
      data.value = await ((_a = file.value) == null ? void 0 : _a.text());
    else if (type === "ArrayBuffer")
      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());
    else if (type === "Blob")
      data.value = file.value;
  }
  watch(() => toValue(dataType), updateData);
  return {
    isSupported,
    data,
    file,
    fileName,
    fileMIME,
    fileSize,
    fileLastModified,
    open,
    create,
    save,
    saveAs,
    updateData
  };
}

function useFocus(target, options = {}) {
  const { initialValue = false, focusVisible = false } = options;
  const innerFocused = ref(false);
  const targetElement = computed(() => unrefElement(target));
  useEventListener(targetElement, "focus", (event) => {
    var _a, _b;
    if (!focusVisible || ((_b = (_a = event.target).matches) == null ? void 0 : _b.call(_a, ":focus-visible")))
      innerFocused.value = true;
  });
  useEventListener(targetElement, "blur", () => innerFocused.value = false);
  const focused = computed({
    get: () => innerFocused.value,
    set(value) {
      var _a, _b;
      if (!value && innerFocused.value)
        (_a = targetElement.value) == null ? void 0 : _a.blur();
      else if (value && !innerFocused.value)
        (_b = targetElement.value) == null ? void 0 : _b.focus();
    }
  });
  watch(
    targetElement,
    () => {
      focused.value = initialValue;
    },
    { immediate: true, flush: "post" }
  );
  return { focused };
}

function useFocusWithin(target, options = {}) {
  const activeElement = useActiveElement(options);
  const targetElement = computed(() => unrefElement(target));
  const focused = computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);
  return { focused };
}

function useFps(options) {
  var _a;
  const fps = ref(0);
  if (typeof performance === "undefined")
    return fps;
  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;
  let last = performance.now();
  let ticks = 0;
  useRafFn(() => {
    ticks += 1;
    if (ticks >= every) {
      const now = performance.now();
      const diff = now - last;
      fps.value = Math.round(1e3 / (diff / ticks));
      last = now;
      ticks = 0;
    }
  });
  return fps;
}

const eventHandlers = [
  "fullscreenchange",
  "webkitfullscreenchange",
  "webkitendfullscreen",
  "mozfullscreenchange",
  "MSFullscreenChange"
];
function useFullscreen(target, options = {}) {
  const {
    document = defaultDocument,
    autoExit = false
  } = options;
  const targetRef = (0,vue_runtime_esm/* computed */.EW)(() => {
    var _a;
    return (_a = unrefElement(target)) != null ? _a : document == null ? void 0 : document.querySelector("html");
  });
  const isFullscreen = (0,vue_runtime_esm/* ref */.KR)(false);
  const requestMethod = (0,vue_runtime_esm/* computed */.EW)(() => {
    return [
      "requestFullscreen",
      "webkitRequestFullscreen",
      "webkitEnterFullscreen",
      "webkitEnterFullScreen",
      "webkitRequestFullScreen",
      "mozRequestFullScreen",
      "msRequestFullscreen"
    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);
  });
  const exitMethod = (0,vue_runtime_esm/* computed */.EW)(() => {
    return [
      "exitFullscreen",
      "webkitExitFullscreen",
      "webkitExitFullScreen",
      "webkitCancelFullScreen",
      "mozCancelFullScreen",
      "msExitFullscreen"
    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);
  });
  const fullscreenEnabled = (0,vue_runtime_esm/* computed */.EW)(() => {
    return [
      "fullScreen",
      "webkitIsFullScreen",
      "webkitDisplayingFullscreen",
      "mozFullScreen",
      "msFullscreenElement"
    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);
  });
  const fullscreenElementMethod = [
    "fullscreenElement",
    "webkitFullscreenElement",
    "mozFullScreenElement",
    "msFullscreenElement"
  ].find((m) => document && m in document);
  const isSupported = useSupported(() => targetRef.value && document && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0);
  const isCurrentElementFullScreen = () => {
    if (fullscreenElementMethod)
      return (document == null ? void 0 : document[fullscreenElementMethod]) === targetRef.value;
    return false;
  };
  const isElementFullScreen = () => {
    if (fullscreenEnabled.value) {
      if (document && document[fullscreenEnabled.value] != null) {
        return document[fullscreenEnabled.value];
      } else {
        const target2 = targetRef.value;
        if ((target2 == null ? void 0 : target2[fullscreenEnabled.value]) != null) {
          return Boolean(target2[fullscreenEnabled.value]);
        }
      }
    }
    return false;
  };
  async function exit() {
    if (!isSupported.value || !isFullscreen.value)
      return;
    if (exitMethod.value) {
      if ((document == null ? void 0 : document[exitMethod.value]) != null) {
        await document[exitMethod.value]();
      } else {
        const target2 = targetRef.value;
        if ((target2 == null ? void 0 : target2[exitMethod.value]) != null)
          await target2[exitMethod.value]();
      }
    }
    isFullscreen.value = false;
  }
  async function enter() {
    if (!isSupported.value || isFullscreen.value)
      return;
    if (isElementFullScreen())
      await exit();
    const target2 = targetRef.value;
    if (requestMethod.value && (target2 == null ? void 0 : target2[requestMethod.value]) != null) {
      await target2[requestMethod.value]();
      isFullscreen.value = true;
    }
  }
  async function toggle() {
    await (isFullscreen.value ? exit() : enter());
  }
  const handlerCallback = () => {
    const isElementFullScreenValue = isElementFullScreen();
    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())
      isFullscreen.value = isElementFullScreenValue;
  };
  useEventListener(document, eventHandlers, handlerCallback, false);
  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, false);
  if (autoExit)
    (0,shared/* tryOnScopeDispose */.Uo)(exit);
  return {
    isSupported,
    isFullscreen,
    enter,
    exit,
    toggle
  };
}

function mapGamepadToXbox360Controller(gamepad) {
  return computed(() => {
    if (gamepad.value) {
      return {
        buttons: {
          a: gamepad.value.buttons[0],
          b: gamepad.value.buttons[1],
          x: gamepad.value.buttons[2],
          y: gamepad.value.buttons[3]
        },
        bumper: {
          left: gamepad.value.buttons[4],
          right: gamepad.value.buttons[5]
        },
        triggers: {
          left: gamepad.value.buttons[6],
          right: gamepad.value.buttons[7]
        },
        stick: {
          left: {
            horizontal: gamepad.value.axes[0],
            vertical: gamepad.value.axes[1],
            button: gamepad.value.buttons[10]
          },
          right: {
            horizontal: gamepad.value.axes[2],
            vertical: gamepad.value.axes[3],
            button: gamepad.value.buttons[11]
          }
        },
        dpad: {
          up: gamepad.value.buttons[12],
          down: gamepad.value.buttons[13],
          left: gamepad.value.buttons[14],
          right: gamepad.value.buttons[15]
        },
        back: gamepad.value.buttons[8],
        start: gamepad.value.buttons[9]
      };
    }
    return null;
  });
}
function useGamepad(options = {}) {
  const {
    navigator = defaultNavigator
  } = options;
  const isSupported = useSupported(() => navigator && "getGamepads" in navigator);
  const gamepads = ref([]);
  const onConnectedHook = createEventHook();
  const onDisconnectedHook = createEventHook();
  const stateFromGamepad = (gamepad) => {
    const hapticActuators = [];
    const vibrationActuator = "vibrationActuator" in gamepad ? gamepad.vibrationActuator : null;
    if (vibrationActuator)
      hapticActuators.push(vibrationActuator);
    if (gamepad.hapticActuators)
      hapticActuators.push(...gamepad.hapticActuators);
    return {
      ...gamepad,
      id: gamepad.id,
      hapticActuators,
      axes: gamepad.axes.map((axes) => axes),
      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value })),
      index: gamepad.index
    };
  };
  const updateGamepadState = () => {
    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];
    for (const gamepad of _gamepads) {
      if (gamepad && gamepads.value[gamepad.index])
        gamepads.value[gamepad.index] = stateFromGamepad(gamepad);
    }
  };
  const { isActive, pause, resume } = useRafFn(updateGamepadState);
  const onGamepadConnected = (gamepad) => {
    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {
      gamepads.value.push(stateFromGamepad(gamepad));
      onConnectedHook.trigger(gamepad.index);
    }
    resume();
  };
  const onGamepadDisconnected = (gamepad) => {
    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);
    onDisconnectedHook.trigger(gamepad.index);
  };
  useEventListener("gamepadconnected", (e) => onGamepadConnected(e.gamepad));
  useEventListener("gamepaddisconnected", (e) => onGamepadDisconnected(e.gamepad));
  tryOnMounted(() => {
    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];
    for (const gamepad of _gamepads) {
      if (gamepad && gamepads.value[gamepad.index])
        onGamepadConnected(gamepad);
    }
  });
  pause();
  return {
    isSupported,
    onConnected: onConnectedHook.on,
    onDisconnected: onDisconnectedHook.on,
    gamepads,
    pause,
    resume,
    isActive
  };
}

function useGeolocation(options = {}) {
  const {
    enableHighAccuracy = true,
    maximumAge = 3e4,
    timeout = 27e3,
    navigator = defaultNavigator,
    immediate = true
  } = options;
  const isSupported = useSupported(() => navigator && "geolocation" in navigator);
  const locatedAt = (0,vue_runtime_esm/* ref */.KR)(null);
  const error = (0,vue_runtime_esm/* shallowRef */.IJ)(null);
  const coords = (0,vue_runtime_esm/* ref */.KR)({
    accuracy: 0,
    latitude: Number.POSITIVE_INFINITY,
    longitude: Number.POSITIVE_INFINITY,
    altitude: null,
    altitudeAccuracy: null,
    heading: null,
    speed: null
  });
  function updatePosition(position) {
    locatedAt.value = position.timestamp;
    coords.value = position.coords;
    error.value = null;
  }
  let watcher;
  function resume() {
    if (isSupported.value) {
      watcher = navigator.geolocation.watchPosition(
        updatePosition,
        (err) => error.value = err,
        {
          enableHighAccuracy,
          maximumAge,
          timeout
        }
      );
    }
  }
  if (immediate)
    resume();
  function pause() {
    if (watcher && navigator)
      navigator.geolocation.clearWatch(watcher);
  }
  (0,shared/* tryOnScopeDispose */.Uo)(() => {
    pause();
  });
  return {
    isSupported,
    coords,
    locatedAt,
    error,
    resume,
    pause
  };
}

const defaultEvents$1 = ["mousemove", "mousedown", "resize", "keydown", "touchstart", "wheel"];
const oneMinute = 6e4;
function useIdle(timeout = oneMinute, options = {}) {
  const {
    initialState = false,
    listenForVisibilityChange = true,
    events = defaultEvents$1,
    window = defaultWindow,
    eventFilter = (0,shared/* throttleFilter */.r6)(50)
  } = options;
  const idle = (0,vue_runtime_esm/* ref */.KR)(initialState);
  const lastActive = (0,vue_runtime_esm/* ref */.KR)((0,shared/* timestamp */.vE)());
  let timer;
  const reset = () => {
    idle.value = false;
    clearTimeout(timer);
    timer = setTimeout(() => idle.value = true, timeout);
  };
  const onEvent = (0,shared/* createFilterWrapper */.sq)(
    eventFilter,
    () => {
      lastActive.value = (0,shared/* timestamp */.vE)();
      reset();
    }
  );
  if (window) {
    const document = window.document;
    for (const event of events)
      useEventListener(window, event, onEvent, { passive: true });
    if (listenForVisibilityChange) {
      useEventListener(document, "visibilitychange", () => {
        if (!document.hidden)
          onEvent();
      });
    }
    reset();
  }
  return {
    idle,
    lastActive,
    reset
  };
}

async function loadImage(options) {
  return new Promise((resolve, reject) => {
    const img = new Image();
    const { src, srcset, sizes, class: clazz, loading, crossorigin, referrerPolicy } = options;
    img.src = src;
    if (srcset)
      img.srcset = srcset;
    if (sizes)
      img.sizes = sizes;
    if (clazz)
      img.className = clazz;
    if (loading)
      img.loading = loading;
    if (crossorigin)
      img.crossOrigin = crossorigin;
    if (referrerPolicy)
      img.referrerPolicy = referrerPolicy;
    img.onload = () => resolve(img);
    img.onerror = reject;
  });
}
function useImage(options, asyncStateOptions = {}) {
  const state = useAsyncState(
    () => loadImage(toValue(options)),
    void 0,
    {
      resetOnExecute: true,
      ...asyncStateOptions
    }
  );
  watch(
    () => toValue(options),
    () => state.execute(asyncStateOptions.delay),
    { deep: true }
  );
  return state;
}

const ARRIVED_STATE_THRESHOLD_PIXELS = 1;
function useScroll(element, options = {}) {
  const {
    throttle = 0,
    idle = 200,
    onStop = noop,
    onScroll = noop,
    offset = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    },
    eventListenerOptions = {
      capture: false,
      passive: true
    },
    behavior = "auto",
    window = defaultWindow,
    onError = (e) => {
      console.error(e);
    }
  } = options;
  const internalX = ref(0);
  const internalY = ref(0);
  const x = computed({
    get() {
      return internalX.value;
    },
    set(x2) {
      scrollTo(x2, void 0);
    }
  });
  const y = computed({
    get() {
      return internalY.value;
    },
    set(y2) {
      scrollTo(void 0, y2);
    }
  });
  function scrollTo(_x, _y) {
    var _a, _b, _c;
    if (!window)
      return;
    const _element = toValue(element);
    if (!_element)
      return;
    (_c = _element instanceof Document ? window.document.body : _element) == null ? void 0 : _c.scrollTo({
      top: (_a = toValue(_y)) != null ? _a : y.value,
      left: (_b = toValue(_x)) != null ? _b : x.value,
      behavior: toValue(behavior)
    });
  }
  const isScrolling = ref(false);
  const arrivedState = reactive({
    left: true,
    right: false,
    top: true,
    bottom: false
  });
  const directions = reactive({
    left: false,
    right: false,
    top: false,
    bottom: false
  });
  const onScrollEnd = (e) => {
    if (!isScrolling.value)
      return;
    isScrolling.value = false;
    directions.left = false;
    directions.right = false;
    directions.top = false;
    directions.bottom = false;
    onStop(e);
  };
  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);
  const setArrivedState = (target) => {
    var _a;
    if (!window)
      return;
    const el = ((_a = target == null ? void 0 : target.document) == null ? void 0 : _a.documentElement) || (target == null ? void 0 : target.documentElement) || unrefElement(target);
    const { display, flexDirection } = getComputedStyle(el);
    const scrollLeft = el.scrollLeft;
    directions.left = scrollLeft < internalX.value;
    directions.right = scrollLeft > internalX.value;
    const left = Math.abs(scrollLeft) <= (offset.left || 0);
    const right = Math.abs(scrollLeft) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;
    if (display === "flex" && flexDirection === "row-reverse") {
      arrivedState.left = right;
      arrivedState.right = left;
    } else {
      arrivedState.left = left;
      arrivedState.right = right;
    }
    internalX.value = scrollLeft;
    let scrollTop = el.scrollTop;
    if (target === window.document && !scrollTop)
      scrollTop = window.document.body.scrollTop;
    directions.top = scrollTop < internalY.value;
    directions.bottom = scrollTop > internalY.value;
    const top = Math.abs(scrollTop) <= (offset.top || 0);
    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;
    if (display === "flex" && flexDirection === "column-reverse") {
      arrivedState.top = bottom;
      arrivedState.bottom = top;
    } else {
      arrivedState.top = top;
      arrivedState.bottom = bottom;
    }
    internalY.value = scrollTop;
  };
  const onScrollHandler = (e) => {
    var _a;
    if (!window)
      return;
    const eventTarget = (_a = e.target.documentElement) != null ? _a : e.target;
    setArrivedState(eventTarget);
    isScrolling.value = true;
    onScrollEndDebounced(e);
    onScroll(e);
  };
  useEventListener(
    element,
    "scroll",
    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,
    eventListenerOptions
  );
  tryOnMounted(() => {
    try {
      const _element = toValue(element);
      if (!_element)
        return;
      setArrivedState(_element);
    } catch (e) {
      onError(e);
    }
  });
  useEventListener(
    element,
    "scrollend",
    onScrollEnd,
    eventListenerOptions
  );
  return {
    x,
    y,
    isScrolling,
    arrivedState,
    directions,
    measure() {
      const _element = toValue(element);
      if (window && _element)
        setArrivedState(_element);
    }
  };
}

function resolveElement(el) {
  if (typeof Window !== "undefined" && el instanceof Window)
    return el.document.documentElement;
  if (typeof Document !== "undefined" && el instanceof Document)
    return el.documentElement;
  return el;
}

function useInfiniteScroll(element, onLoadMore, options = {}) {
  var _a;
  const {
    direction = "bottom",
    interval = 100,
    canLoadMore = () => true
  } = options;
  const state = reactive(useScroll(
    element,
    {
      ...options,
      offset: {
        [direction]: (_a = options.distance) != null ? _a : 0,
        ...options.offset
      }
    }
  ));
  const promise = ref();
  const isLoading = computed(() => !!promise.value);
  const observedElement = computed(() => {
    return resolveElement(toValue(element));
  });
  const isElementVisible = useElementVisibility(observedElement);
  function checkAndLoad() {
    state.measure();
    if (!observedElement.value || !isElementVisible.value || !canLoadMore(observedElement.value))
      return;
    const { scrollHeight, clientHeight, scrollWidth, clientWidth } = observedElement.value;
    const isNarrower = direction === "bottom" || direction === "top" ? scrollHeight <= clientHeight : scrollWidth <= clientWidth;
    if (state.arrivedState[direction] || isNarrower) {
      if (!promise.value) {
        promise.value = Promise.all([
          onLoadMore(state),
          new Promise((resolve) => setTimeout(resolve, interval))
        ]).finally(() => {
          promise.value = null;
          nextTick(() => checkAndLoad());
        });
      }
    }
  }
  watch(
    () => [state.arrivedState[direction], isElementVisible.value],
    checkAndLoad,
    { immediate: true }
  );
  return {
    isLoading
  };
}

const defaultEvents = (/* unused pure expression or super */ null && (["mousedown", "mouseup", "keydown", "keyup"]));
function useKeyModifier(modifier, options = {}) {
  const {
    events = defaultEvents,
    document = defaultDocument,
    initial = null
  } = options;
  const state = ref(initial);
  if (document) {
    events.forEach((listenerEvent) => {
      useEventListener(document, listenerEvent, (evt) => {
        if (typeof evt.getModifierState === "function")
          state.value = evt.getModifierState(modifier);
      });
    });
  }
  return state;
}

function useLocalStorage(key, initialValue, options = {}) {
  const { window = defaultWindow } = options;
  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);
}

const DefaultMagicKeysAliasMap = {
  ctrl: "control",
  command: "meta",
  cmd: "meta",
  option: "alt",
  up: "arrowup",
  down: "arrowdown",
  left: "arrowleft",
  right: "arrowright"
};

function useMagicKeys(options = {}) {
  const {
    reactive: useReactive = false,
    target = defaultWindow,
    aliasMap = DefaultMagicKeysAliasMap,
    passive = true,
    onEventFired = noop
  } = options;
  const current = reactive(/* @__PURE__ */ new Set());
  const obj = {
    toJSON() {
      return {};
    },
    current
  };
  const refs = useReactive ? reactive(obj) : obj;
  const metaDeps = /* @__PURE__ */ new Set();
  const usedKeys = /* @__PURE__ */ new Set();
  function setRefs(key, value) {
    if (key in refs) {
      if (useReactive)
        refs[key] = value;
      else
        refs[key].value = value;
    }
  }
  function reset() {
    current.clear();
    for (const key of usedKeys)
      setRefs(key, false);
  }
  function updateRefs(e, value) {
    var _a, _b;
    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();
    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();
    const values = [code, key].filter(Boolean);
    if (key) {
      if (value)
        current.add(key);
      else
        current.delete(key);
    }
    for (const key2 of values) {
      usedKeys.add(key2);
      setRefs(key2, value);
    }
    if (key === "meta" && !value) {
      metaDeps.forEach((key2) => {
        current.delete(key2);
        setRefs(key2, false);
      });
      metaDeps.clear();
    } else if (typeof e.getModifierState === "function" && e.getModifierState("Meta") && value) {
      [...current, ...values].forEach((key2) => metaDeps.add(key2));
    }
  }
  useEventListener(target, "keydown", (e) => {
    updateRefs(e, true);
    return onEventFired(e);
  }, { passive });
  useEventListener(target, "keyup", (e) => {
    updateRefs(e, false);
    return onEventFired(e);
  }, { passive });
  useEventListener("blur", reset, { passive: true });
  useEventListener("focus", reset, { passive: true });
  const proxy = new Proxy(
    refs,
    {
      get(target2, prop, rec) {
        if (typeof prop !== "string")
          return Reflect.get(target2, prop, rec);
        prop = prop.toLowerCase();
        if (prop in aliasMap)
          prop = aliasMap[prop];
        if (!(prop in refs)) {
          if (/[+_-]/.test(prop)) {
            const keys = prop.split(/[+_-]/g).map((i) => i.trim());
            refs[prop] = computed(() => keys.every((key) => toValue(proxy[key])));
          } else {
            refs[prop] = ref(false);
          }
        }
        const r = Reflect.get(target2, prop, rec);
        return useReactive ? toValue(r) : r;
      }
    }
  );
  return proxy;
}

function usingElRef(source, cb) {
  if (toValue(source))
    cb(toValue(source));
}
function timeRangeToArray(timeRanges) {
  let ranges = [];
  for (let i = 0; i < timeRanges.length; ++i)
    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];
  return ranges;
}
function tracksToArray(tracks) {
  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));
}
const defaultOptions = {
  src: "",
  tracks: []
};
function useMediaControls(target, options = {}) {
  options = {
    ...defaultOptions,
    ...options
  };
  const {
    document = defaultDocument
  } = options;
  const currentTime = ref(0);
  const duration = ref(0);
  const seeking = ref(false);
  const volume = ref(1);
  const waiting = ref(false);
  const ended = ref(false);
  const playing = ref(false);
  const rate = ref(1);
  const stalled = ref(false);
  const buffered = ref([]);
  const tracks = ref([]);
  const selectedTrack = ref(-1);
  const isPictureInPicture = ref(false);
  const muted = ref(false);
  const supportsPictureInPicture = document && "pictureInPictureEnabled" in document;
  const sourceErrorEvent = createEventHook();
  const disableTrack = (track) => {
    usingElRef(target, (el) => {
      if (track) {
        const id = typeof track === "number" ? track : track.id;
        el.textTracks[id].mode = "disabled";
      } else {
        for (let i = 0; i < el.textTracks.length; ++i)
          el.textTracks[i].mode = "disabled";
      }
      selectedTrack.value = -1;
    });
  };
  const enableTrack = (track, disableTracks = true) => {
    usingElRef(target, (el) => {
      const id = typeof track === "number" ? track : track.id;
      if (disableTracks)
        disableTrack();
      el.textTracks[id].mode = "showing";
      selectedTrack.value = id;
    });
  };
  const togglePictureInPicture = () => {
    return new Promise((resolve, reject) => {
      usingElRef(target, async (el) => {
        if (supportsPictureInPicture) {
          if (!isPictureInPicture.value) {
            el.requestPictureInPicture().then(resolve).catch(reject);
          } else {
            document.exitPictureInPicture().then(resolve).catch(reject);
          }
        }
      });
    });
  };
  watchEffect(() => {
    if (!document)
      return;
    const el = toValue(target);
    if (!el)
      return;
    const src = toValue(options.src);
    let sources = [];
    if (!src)
      return;
    if (typeof src === "string")
      sources = [{ src }];
    else if (Array.isArray(src))
      sources = src;
    else if (isObject(src))
      sources = [src];
    el.querySelectorAll("source").forEach((e) => {
      e.removeEventListener("error", sourceErrorEvent.trigger);
      e.remove();
    });
    sources.forEach(({ src: src2, type }) => {
      const source = document.createElement("source");
      source.setAttribute("src", src2);
      source.setAttribute("type", type || "");
      source.addEventListener("error", sourceErrorEvent.trigger);
      el.appendChild(source);
    });
    el.load();
  });
  tryOnScopeDispose(() => {
    const el = toValue(target);
    if (!el)
      return;
    el.querySelectorAll("source").forEach((e) => e.removeEventListener("error", sourceErrorEvent.trigger));
  });
  watch([target, volume], () => {
    const el = toValue(target);
    if (!el)
      return;
    el.volume = volume.value;
  });
  watch([target, muted], () => {
    const el = toValue(target);
    if (!el)
      return;
    el.muted = muted.value;
  });
  watch([target, rate], () => {
    const el = toValue(target);
    if (!el)
      return;
    el.playbackRate = rate.value;
  });
  watchEffect(() => {
    if (!document)
      return;
    const textTracks = toValue(options.tracks);
    const el = toValue(target);
    if (!textTracks || !textTracks.length || !el)
      return;
    el.querySelectorAll("track").forEach((e) => e.remove());
    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {
      const track = document.createElement("track");
      track.default = isDefault || false;
      track.kind = kind;
      track.label = label;
      track.src = src;
      track.srclang = srcLang;
      if (track.default)
        selectedTrack.value = i;
      el.appendChild(track);
    });
  });
  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {
    const el = toValue(target);
    if (!el)
      return;
    el.currentTime = time;
  });
  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {
    const el = toValue(target);
    if (!el)
      return;
    isPlaying ? el.play() : el.pause();
  });
  useEventListener(target, "timeupdate", () => ignoreCurrentTimeUpdates(() => currentTime.value = toValue(target).currentTime));
  useEventListener(target, "durationchange", () => duration.value = toValue(target).duration);
  useEventListener(target, "progress", () => buffered.value = timeRangeToArray(toValue(target).buffered));
  useEventListener(target, "seeking", () => seeking.value = true);
  useEventListener(target, "seeked", () => seeking.value = false);
  useEventListener(target, ["waiting", "loadstart"], () => {
    waiting.value = true;
    ignorePlayingUpdates(() => playing.value = false);
  });
  useEventListener(target, "loadeddata", () => waiting.value = false);
  useEventListener(target, "playing", () => {
    waiting.value = false;
    ended.value = false;
    ignorePlayingUpdates(() => playing.value = true);
  });
  useEventListener(target, "ratechange", () => rate.value = toValue(target).playbackRate);
  useEventListener(target, "stalled", () => stalled.value = true);
  useEventListener(target, "ended", () => ended.value = true);
  useEventListener(target, "pause", () => ignorePlayingUpdates(() => playing.value = false));
  useEventListener(target, "play", () => ignorePlayingUpdates(() => playing.value = true));
  useEventListener(target, "enterpictureinpicture", () => isPictureInPicture.value = true);
  useEventListener(target, "leavepictureinpicture", () => isPictureInPicture.value = false);
  useEventListener(target, "volumechange", () => {
    const el = toValue(target);
    if (!el)
      return;
    volume.value = el.volume;
    muted.value = el.muted;
  });
  const listeners = [];
  const stop = watch([target], () => {
    const el = toValue(target);
    if (!el)
      return;
    stop();
    listeners[0] = useEventListener(el.textTracks, "addtrack", () => tracks.value = tracksToArray(el.textTracks));
    listeners[1] = useEventListener(el.textTracks, "removetrack", () => tracks.value = tracksToArray(el.textTracks));
    listeners[2] = useEventListener(el.textTracks, "change", () => tracks.value = tracksToArray(el.textTracks));
  });
  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));
  return {
    currentTime,
    duration,
    waiting,
    seeking,
    ended,
    stalled,
    buffered,
    playing,
    rate,
    // Volume
    volume,
    muted,
    // Tracks
    tracks,
    selectedTrack,
    enableTrack,
    disableTrack,
    // Picture in Picture
    supportsPictureInPicture,
    togglePictureInPicture,
    isPictureInPicture,
    // Events
    onSourceError: sourceErrorEvent.on
  };
}

function getMapVue2Compat() {
  const data = shallowReactive({});
  return {
    get: (key) => data[key],
    set: (key, value) => set(data, key, value),
    has: (key) => hasOwn(data, key),
    delete: (key) => del(data, key),
    clear: () => {
      Object.keys(data).forEach((key) => {
        del(data, key);
      });
    }
  };
}
function useMemoize(resolver, options) {
  const initCache = () => {
    if (options == null ? void 0 : options.cache)
      return shallowReactive(options.cache);
    if (isVue2)
      return getMapVue2Compat();
    return shallowReactive(/* @__PURE__ */ new Map());
  };
  const cache = initCache();
  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);
  const _loadData = (key, ...args) => {
    cache.set(key, resolver(...args));
    return cache.get(key);
  };
  const loadData = (...args) => _loadData(generateKey(...args), ...args);
  const deleteData = (...args) => {
    cache.delete(generateKey(...args));
  };
  const clearData = () => {
    cache.clear();
  };
  const memoized = (...args) => {
    const key = generateKey(...args);
    if (cache.has(key))
      return cache.get(key);
    return _loadData(key, ...args);
  };
  memoized.load = loadData;
  memoized.delete = deleteData;
  memoized.clear = clearData;
  memoized.generateKey = generateKey;
  memoized.cache = cache;
  return memoized;
}

function useMemory(options = {}) {
  const memory = ref();
  const isSupported = useSupported(() => typeof performance !== "undefined" && "memory" in performance);
  if (isSupported.value) {
    const { interval = 1e3 } = options;
    useIntervalFn(() => {
      memory.value = performance.memory;
    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });
  }
  return { isSupported, memory };
}

const UseMouseBuiltinExtractors = {
  page: (event) => [event.pageX, event.pageY],
  client: (event) => [event.clientX, event.clientY],
  screen: (event) => [event.screenX, event.screenY],
  movement: (event) => event instanceof Touch ? null : [event.movementX, event.movementY]
};
function useMouse(options = {}) {
  const {
    type = "page",
    touch = true,
    resetOnTouchEnds = false,
    initialValue = { x: 0, y: 0 },
    window = defaultWindow,
    target = window,
    scroll = true,
    eventFilter
  } = options;
  let _prevMouseEvent = null;
  const x = (0,vue_runtime_esm/* ref */.KR)(initialValue.x);
  const y = (0,vue_runtime_esm/* ref */.KR)(initialValue.y);
  const sourceType = (0,vue_runtime_esm/* ref */.KR)(null);
  const extractor = typeof type === "function" ? type : UseMouseBuiltinExtractors[type];
  const mouseHandler = (event) => {
    const result = extractor(event);
    _prevMouseEvent = event;
    if (result) {
      [x.value, y.value] = result;
      sourceType.value = "mouse";
    }
  };
  const touchHandler = (event) => {
    if (event.touches.length > 0) {
      const result = extractor(event.touches[0]);
      if (result) {
        [x.value, y.value] = result;
        sourceType.value = "touch";
      }
    }
  };
  const scrollHandler = () => {
    if (!_prevMouseEvent || !window)
      return;
    const pos = extractor(_prevMouseEvent);
    if (_prevMouseEvent instanceof MouseEvent && pos) {
      x.value = pos[0] + window.scrollX;
      y.value = pos[1] + window.scrollY;
    }
  };
  const reset = () => {
    x.value = initialValue.x;
    y.value = initialValue.y;
  };
  const mouseHandlerWrapper = eventFilter ? (event) => eventFilter(() => mouseHandler(event), {}) : (event) => mouseHandler(event);
  const touchHandlerWrapper = eventFilter ? (event) => eventFilter(() => touchHandler(event), {}) : (event) => touchHandler(event);
  const scrollHandlerWrapper = eventFilter ? () => eventFilter(() => scrollHandler(), {}) : () => scrollHandler();
  if (target) {
    const listenerOptions = { passive: true };
    useEventListener(target, ["mousemove", "dragover"], mouseHandlerWrapper, listenerOptions);
    if (touch && type !== "movement") {
      useEventListener(target, ["touchstart", "touchmove"], touchHandlerWrapper, listenerOptions);
      if (resetOnTouchEnds)
        useEventListener(target, "touchend", reset, listenerOptions);
    }
    if (scroll && type === "page")
      useEventListener(window, "scroll", scrollHandlerWrapper, { passive: true });
  }
  return {
    x,
    y,
    sourceType
  };
}

function useMouseInElement(target, options = {}) {
  const {
    handleOutside = true,
    window = defaultWindow
  } = options;
  const type = options.type || "page";
  const { x, y, sourceType } = useMouse(options);
  const targetRef = (0,vue_runtime_esm/* ref */.KR)(target != null ? target : window == null ? void 0 : window.document.body);
  const elementX = (0,vue_runtime_esm/* ref */.KR)(0);
  const elementY = (0,vue_runtime_esm/* ref */.KR)(0);
  const elementPositionX = (0,vue_runtime_esm/* ref */.KR)(0);
  const elementPositionY = (0,vue_runtime_esm/* ref */.KR)(0);
  const elementHeight = (0,vue_runtime_esm/* ref */.KR)(0);
  const elementWidth = (0,vue_runtime_esm/* ref */.KR)(0);
  const isOutside = (0,vue_runtime_esm/* ref */.KR)(true);
  let stop = () => {
  };
  if (window) {
    stop = (0,vue_runtime_esm/* watch */.wB)(
      [targetRef, x, y],
      () => {
        const el = unrefElement(targetRef);
        if (!el)
          return;
        const {
          left,
          top,
          width,
          height
        } = el.getBoundingClientRect();
        elementPositionX.value = left + (type === "page" ? window.pageXOffset : 0);
        elementPositionY.value = top + (type === "page" ? window.pageYOffset : 0);
        elementHeight.value = height;
        elementWidth.value = width;
        const elX = x.value - elementPositionX.value;
        const elY = y.value - elementPositionY.value;
        isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;
        if (handleOutside || !isOutside.value) {
          elementX.value = elX;
          elementY.value = elY;
        }
      },
      { immediate: true }
    );
    useEventListener(document, "mouseleave", () => {
      isOutside.value = true;
    });
  }
  return {
    x,
    y,
    sourceType,
    elementX,
    elementY,
    elementPositionX,
    elementPositionY,
    elementHeight,
    elementWidth,
    isOutside,
    stop
  };
}

function useMousePressed(options = {}) {
  const {
    touch = true,
    drag = true,
    capture = false,
    initialValue = false,
    window = defaultWindow
  } = options;
  const pressed = (0,vue_runtime_esm/* ref */.KR)(initialValue);
  const sourceType = (0,vue_runtime_esm/* ref */.KR)(null);
  if (!window) {
    return {
      pressed,
      sourceType
    };
  }
  const onPressed = (srcType) => () => {
    pressed.value = true;
    sourceType.value = srcType;
  };
  const onReleased = () => {
    pressed.value = false;
    sourceType.value = null;
  };
  const target = (0,vue_runtime_esm/* computed */.EW)(() => unrefElement(options.target) || window);
  useEventListener(target, "mousedown", onPressed("mouse"), { passive: true, capture });
  useEventListener(window, "mouseleave", onReleased, { passive: true, capture });
  useEventListener(window, "mouseup", onReleased, { passive: true, capture });
  if (drag) {
    useEventListener(target, "dragstart", onPressed("mouse"), { passive: true, capture });
    useEventListener(window, "drop", onReleased, { passive: true, capture });
    useEventListener(window, "dragend", onReleased, { passive: true, capture });
  }
  if (touch) {
    useEventListener(target, "touchstart", onPressed("touch"), { passive: true, capture });
    useEventListener(window, "touchend", onReleased, { passive: true, capture });
    useEventListener(window, "touchcancel", onReleased, { passive: true, capture });
  }
  return {
    pressed,
    sourceType
  };
}

function useNavigatorLanguage(options = {}) {
  const { window = defaultWindow } = options;
  const navigator = window == null ? void 0 : window.navigator;
  const isSupported = useSupported(() => navigator && "language" in navigator);
  const language = ref(navigator == null ? void 0 : navigator.language);
  useEventListener(window, "languagechange", () => {
    if (navigator)
      language.value = navigator.language;
  });
  return {
    isSupported,
    language
  };
}

function useNetwork(options = {}) {
  const { window = defaultWindow } = options;
  const navigator = window == null ? void 0 : window.navigator;
  const isSupported = useSupported(() => navigator && "connection" in navigator);
  const isOnline = (0,vue_runtime_esm/* ref */.KR)(true);
  const saveData = (0,vue_runtime_esm/* ref */.KR)(false);
  const offlineAt = (0,vue_runtime_esm/* ref */.KR)(void 0);
  const onlineAt = (0,vue_runtime_esm/* ref */.KR)(void 0);
  const downlink = (0,vue_runtime_esm/* ref */.KR)(void 0);
  const downlinkMax = (0,vue_runtime_esm/* ref */.KR)(void 0);
  const rtt = (0,vue_runtime_esm/* ref */.KR)(void 0);
  const effectiveType = (0,vue_runtime_esm/* ref */.KR)(void 0);
  const type = (0,vue_runtime_esm/* ref */.KR)("unknown");
  const connection = isSupported.value && navigator.connection;
  function updateNetworkInformation() {
    if (!navigator)
      return;
    isOnline.value = navigator.onLine;
    offlineAt.value = isOnline.value ? void 0 : Date.now();
    onlineAt.value = isOnline.value ? Date.now() : void 0;
    if (connection) {
      downlink.value = connection.downlink;
      downlinkMax.value = connection.downlinkMax;
      effectiveType.value = connection.effectiveType;
      rtt.value = connection.rtt;
      saveData.value = connection.saveData;
      type.value = connection.type;
    }
  }
  if (window) {
    useEventListener(window, "offline", () => {
      isOnline.value = false;
      offlineAt.value = Date.now();
    });
    useEventListener(window, "online", () => {
      isOnline.value = true;
      onlineAt.value = Date.now();
    });
  }
  if (connection)
    useEventListener(connection, "change", updateNetworkInformation, false);
  updateNetworkInformation();
  return {
    isSupported,
    isOnline,
    saveData,
    offlineAt,
    onlineAt,
    downlink,
    downlinkMax,
    effectiveType,
    rtt,
    type
  };
}

function useNow(options = {}) {
  const {
    controls: exposeControls = false,
    interval = "requestAnimationFrame"
  } = options;
  const now = (0,vue_runtime_esm/* ref */.KR)(/* @__PURE__ */ new Date());
  const update = () => now.value = /* @__PURE__ */ new Date();
  const controls = interval === "requestAnimationFrame" ? useRafFn(update, { immediate: true }) : (0,shared/* useIntervalFn */.Rg)(update, interval, { immediate: true });
  if (exposeControls) {
    return {
      now,
      ...controls
    };
  } else {
    return now;
  }
}

function useObjectUrl(object) {
  const url = (0,vue_runtime_esm/* ref */.KR)();
  const release = () => {
    if (url.value)
      URL.revokeObjectURL(url.value);
    url.value = void 0;
  };
  (0,vue_runtime_esm/* watch */.wB)(
    () => (0,shared/* toValue */.BA)(object),
    (newObject) => {
      release();
      if (newObject)
        url.value = URL.createObjectURL(newObject);
    },
    { immediate: true }
  );
  (0,shared/* tryOnScopeDispose */.Uo)(release);
  return (0,vue_runtime_esm/* readonly */.tB)(url);
}

function useClamp(value, min, max) {
  if (typeof value === "function" || (0,vue_runtime_esm/* isReadonly */.Tm)(value))
    return (0,vue_runtime_esm/* computed */.EW)(() => (0,shared/* clamp */.qE)((0,shared/* toValue */.BA)(value), (0,shared/* toValue */.BA)(min), (0,shared/* toValue */.BA)(max)));
  const _value = (0,vue_runtime_esm/* ref */.KR)(value);
  return (0,vue_runtime_esm/* computed */.EW)({
    get() {
      return _value.value = (0,shared/* clamp */.qE)(_value.value, (0,shared/* toValue */.BA)(min), (0,shared/* toValue */.BA)(max));
    },
    set(value2) {
      _value.value = (0,shared/* clamp */.qE)(value2, (0,shared/* toValue */.BA)(min), (0,shared/* toValue */.BA)(max));
    }
  });
}

function useOffsetPagination(options) {
  const {
    total = Number.POSITIVE_INFINITY,
    pageSize = 10,
    page = 1,
    onPageChange = shared/* noop */.lQ,
    onPageSizeChange = shared/* noop */.lQ,
    onPageCountChange = shared/* noop */.lQ
  } = options;
  const currentPageSize = useClamp(pageSize, 1, Number.POSITIVE_INFINITY);
  const pageCount = (0,vue_runtime_esm/* computed */.EW)(() => Math.max(
    1,
    Math.ceil((0,shared/* toValue */.BA)(total) / (0,shared/* toValue */.BA)(currentPageSize))
  ));
  const currentPage = useClamp(page, 1, pageCount);
  const isFirstPage = (0,vue_runtime_esm/* computed */.EW)(() => currentPage.value === 1);
  const isLastPage = (0,vue_runtime_esm/* computed */.EW)(() => currentPage.value === pageCount.value);
  if ((0,vue_runtime_esm/* isRef */.i9)(page)) {
    (0,shared/* syncRef */.Dk)(page, currentPage, {
      direction: (0,vue_runtime_esm/* isReadonly */.Tm)(page) ? "ltr" : "both"
    });
  }
  if ((0,vue_runtime_esm/* isRef */.i9)(pageSize)) {
    (0,shared/* syncRef */.Dk)(pageSize, currentPageSize, {
      direction: (0,vue_runtime_esm/* isReadonly */.Tm)(pageSize) ? "ltr" : "both"
    });
  }
  function prev() {
    currentPage.value--;
  }
  function next() {
    currentPage.value++;
  }
  const returnValue = {
    currentPage,
    currentPageSize,
    pageCount,
    isFirstPage,
    isLastPage,
    prev,
    next
  };
  (0,vue_runtime_esm/* watch */.wB)(currentPage, () => {
    onPageChange((0,vue_runtime_esm/* reactive */.Kh)(returnValue));
  });
  (0,vue_runtime_esm/* watch */.wB)(currentPageSize, () => {
    onPageSizeChange((0,vue_runtime_esm/* reactive */.Kh)(returnValue));
  });
  (0,vue_runtime_esm/* watch */.wB)(pageCount, () => {
    onPageCountChange((0,vue_runtime_esm/* reactive */.Kh)(returnValue));
  });
  return returnValue;
}

function useOnline(options = {}) {
  const { isOnline } = useNetwork(options);
  return isOnline;
}

function usePageLeave(options = {}) {
  const { window = defaultWindow } = options;
  const isLeft = (0,vue_runtime_esm/* ref */.KR)(false);
  const handler = (event) => {
    if (!window)
      return;
    event = event || window.event;
    const from = event.relatedTarget || event.toElement;
    isLeft.value = !from;
  };
  if (window) {
    useEventListener(window, "mouseout", handler, { passive: true });
    useEventListener(window.document, "mouseleave", handler, { passive: true });
    useEventListener(window.document, "mouseenter", handler, { passive: true });
  }
  return isLeft;
}

function useScreenOrientation(options = {}) {
  const {
    window = defaultWindow
  } = options;
  const isSupported = useSupported(() => window && "screen" in window && "orientation" in window.screen);
  const screenOrientation = isSupported.value ? window.screen.orientation : {};
  const orientation = ref(screenOrientation.type);
  const angle = ref(screenOrientation.angle || 0);
  if (isSupported.value) {
    useEventListener(window, "orientationchange", () => {
      orientation.value = screenOrientation.type;
      angle.value = screenOrientation.angle;
    });
  }
  const lockOrientation = (type) => {
    if (isSupported.value && typeof screenOrientation.lock === "function")
      return screenOrientation.lock(type);
    return Promise.reject(new Error("Not supported"));
  };
  const unlockOrientation = () => {
    if (isSupported.value && typeof screenOrientation.unlock === "function")
      screenOrientation.unlock();
  };
  return {
    isSupported,
    orientation,
    angle,
    lockOrientation,
    unlockOrientation
  };
}

function useParallax(target, options = {}) {
  const {
    deviceOrientationTiltAdjust = (i) => i,
    deviceOrientationRollAdjust = (i) => i,
    mouseTiltAdjust = (i) => i,
    mouseRollAdjust = (i) => i,
    window = defaultWindow
  } = options;
  const orientation = reactive(useDeviceOrientation({ window }));
  const screenOrientation = reactive(useScreenOrientation({ window }));
  const {
    elementX: x,
    elementY: y,
    elementWidth: width,
    elementHeight: height
  } = useMouseInElement(target, { handleOutside: false, window });
  const source = computed(() => {
    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))
      return "deviceOrientation";
    return "mouse";
  });
  const roll = computed(() => {
    if (source.value === "deviceOrientation") {
      let value;
      switch (screenOrientation.orientation) {
        case "landscape-primary":
          value = orientation.gamma / 90;
          break;
        case "landscape-secondary":
          value = -orientation.gamma / 90;
          break;
        case "portrait-primary":
          value = -orientation.beta / 90;
          break;
        case "portrait-secondary":
          value = orientation.beta / 90;
          break;
        default:
          value = -orientation.beta / 90;
      }
      return deviceOrientationRollAdjust(value);
    } else {
      const value = -(y.value - height.value / 2) / height.value;
      return mouseRollAdjust(value);
    }
  });
  const tilt = computed(() => {
    if (source.value === "deviceOrientation") {
      let value;
      switch (screenOrientation.orientation) {
        case "landscape-primary":
          value = orientation.beta / 90;
          break;
        case "landscape-secondary":
          value = -orientation.beta / 90;
          break;
        case "portrait-primary":
          value = orientation.gamma / 90;
          break;
        case "portrait-secondary":
          value = -orientation.gamma / 90;
          break;
        default:
          value = orientation.gamma / 90;
      }
      return deviceOrientationTiltAdjust(value);
    } else {
      const value = (x.value - width.value / 2) / width.value;
      return mouseTiltAdjust(value);
    }
  });
  return { roll, tilt, source };
}

function useParentElement(element = useCurrentElement()) {
  const parentElement = shallowRef();
  const update = () => {
    const el = unrefElement(element);
    if (el)
      parentElement.value = el.parentElement;
  };
  tryOnMounted(update);
  watch(() => toValue(element), update);
  return parentElement;
}

function usePerformanceObserver(options, callback) {
  const {
    window = defaultWindow,
    immediate = true,
    ...performanceOptions
  } = options;
  const isSupported = useSupported(() => window && "PerformanceObserver" in window);
  let observer;
  const stop = () => {
    observer == null ? void 0 : observer.disconnect();
  };
  const start = () => {
    if (isSupported.value) {
      stop();
      observer = new PerformanceObserver(callback);
      observer.observe(performanceOptions);
    }
  };
  tryOnScopeDispose(stop);
  if (immediate)
    start();
  return {
    isSupported,
    start,
    stop
  };
}

const defaultState = {
  x: 0,
  y: 0,
  pointerId: 0,
  pressure: 0,
  tiltX: 0,
  tiltY: 0,
  width: 0,
  height: 0,
  twist: 0,
  pointerType: null
};
const keys = /* @__PURE__ */ Object.keys(defaultState);
function usePointer(options = {}) {
  const {
    target = defaultWindow
  } = options;
  const isInside = (0,vue_runtime_esm/* ref */.KR)(false);
  const state = (0,vue_runtime_esm/* ref */.KR)(options.initialValue || {});
  Object.assign(state.value, defaultState, state.value);
  const handler = (event) => {
    isInside.value = true;
    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))
      return;
    state.value = (0,shared/* objectPick */.je)(event, keys, false);
  };
  if (target) {
    const listenerOptions = { passive: true };
    useEventListener(target, ["pointerdown", "pointermove", "pointerup"], handler, listenerOptions);
    useEventListener(target, "pointerleave", () => isInside.value = false, listenerOptions);
  }
  return {
    ...(0,shared/* toRefs */.QW)(state),
    isInside
  };
}

function usePointerLock(target, options = {}) {
  const { document = defaultDocument } = options;
  const isSupported = useSupported(() => document && "pointerLockElement" in document);
  const element = (0,vue_runtime_esm/* ref */.KR)();
  const triggerElement = (0,vue_runtime_esm/* ref */.KR)();
  let targetElement;
  if (isSupported.value) {
    useEventListener(document, "pointerlockchange", () => {
      var _a;
      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;
      if (targetElement && currentElement === targetElement) {
        element.value = document.pointerLockElement;
        if (!element.value)
          targetElement = triggerElement.value = null;
      }
    });
    useEventListener(document, "pointerlockerror", () => {
      var _a;
      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;
      if (targetElement && currentElement === targetElement) {
        const action = document.pointerLockElement ? "release" : "acquire";
        throw new Error(`Failed to ${action} pointer lock.`);
      }
    });
  }
  async function lock(e) {
    var _a;
    if (!isSupported.value)
      throw new Error("Pointer Lock API is not supported by your browser.");
    triggerElement.value = e instanceof Event ? e.currentTarget : null;
    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);
    if (!targetElement)
      throw new Error("Target element undefined.");
    targetElement.requestPointerLock();
    return await (0,shared/* until */.TG)(element).toBe(targetElement);
  }
  async function unlock() {
    if (!element.value)
      return false;
    document.exitPointerLock();
    await (0,shared/* until */.TG)(element).toBeNull();
    return true;
  }
  return {
    isSupported,
    element,
    triggerElement,
    lock,
    unlock
  };
}

function usePointerSwipe(target, options = {}) {
  const targetRef = toRef(target);
  const {
    threshold = 50,
    onSwipe,
    onSwipeEnd,
    onSwipeStart,
    disableTextSelect = false
  } = options;
  const posStart = reactive({ x: 0, y: 0 });
  const updatePosStart = (x, y) => {
    posStart.x = x;
    posStart.y = y;
  };
  const posEnd = reactive({ x: 0, y: 0 });
  const updatePosEnd = (x, y) => {
    posEnd.x = x;
    posEnd.y = y;
  };
  const distanceX = computed(() => posStart.x - posEnd.x);
  const distanceY = computed(() => posStart.y - posEnd.y);
  const { max, abs } = Math;
  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);
  const isSwiping = ref(false);
  const isPointerDown = ref(false);
  const direction = computed(() => {
    if (!isThresholdExceeded.value)
      return "none";
    if (abs(distanceX.value) > abs(distanceY.value)) {
      return distanceX.value > 0 ? "left" : "right";
    } else {
      return distanceY.value > 0 ? "up" : "down";
    }
  });
  const eventIsAllowed = (e) => {
    var _a, _b, _c;
    const isReleasingButton = e.buttons === 0;
    const isPrimaryButton = e.buttons === 1;
    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;
  };
  const stops = [
    useEventListener(target, "pointerdown", (e) => {
      if (!eventIsAllowed(e))
        return;
      isPointerDown.value = true;
      const eventTarget = e.target;
      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);
      const { clientX: x, clientY: y } = e;
      updatePosStart(x, y);
      updatePosEnd(x, y);
      onSwipeStart == null ? void 0 : onSwipeStart(e);
    }),
    useEventListener(target, "pointermove", (e) => {
      if (!eventIsAllowed(e))
        return;
      if (!isPointerDown.value)
        return;
      const { clientX: x, clientY: y } = e;
      updatePosEnd(x, y);
      if (!isSwiping.value && isThresholdExceeded.value)
        isSwiping.value = true;
      if (isSwiping.value)
        onSwipe == null ? void 0 : onSwipe(e);
    }),
    useEventListener(target, "pointerup", (e) => {
      if (!eventIsAllowed(e))
        return;
      if (isSwiping.value)
        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);
      isPointerDown.value = false;
      isSwiping.value = false;
    })
  ];
  tryOnMounted(() => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty("touch-action", "none");
    if (disableTextSelect) {
      (_d = (_c = targetRef.value) == null ? void 0 : _c.style) == null ? void 0 : _d.setProperty("-webkit-user-select", "none");
      (_f = (_e = targetRef.value) == null ? void 0 : _e.style) == null ? void 0 : _f.setProperty("-ms-user-select", "none");
      (_h = (_g = targetRef.value) == null ? void 0 : _g.style) == null ? void 0 : _h.setProperty("user-select", "none");
    }
  });
  const stop = () => stops.forEach((s) => s());
  return {
    isSwiping: readonly(isSwiping),
    direction: readonly(direction),
    posStart: readonly(posStart),
    posEnd: readonly(posEnd),
    distanceX,
    distanceY,
    stop
  };
}

function usePreferredColorScheme(options) {
  const isLight = useMediaQuery("(prefers-color-scheme: light)", options);
  const isDark = useMediaQuery("(prefers-color-scheme: dark)", options);
  return (0,vue_runtime_esm/* computed */.EW)(() => {
    if (isDark.value)
      return "dark";
    if (isLight.value)
      return "light";
    return "no-preference";
  });
}

function usePreferredContrast(options) {
  const isMore = useMediaQuery("(prefers-contrast: more)", options);
  const isLess = useMediaQuery("(prefers-contrast: less)", options);
  const isCustom = useMediaQuery("(prefers-contrast: custom)", options);
  return (0,vue_runtime_esm/* computed */.EW)(() => {
    if (isMore.value)
      return "more";
    if (isLess.value)
      return "less";
    if (isCustom.value)
      return "custom";
    return "no-preference";
  });
}

function usePreferredLanguages(options = {}) {
  const { window = defaultWindow } = options;
  if (!window)
    return (0,vue_runtime_esm/* ref */.KR)(["en"]);
  const navigator = window.navigator;
  const value = (0,vue_runtime_esm/* ref */.KR)(navigator.languages);
  useEventListener(window, "languagechange", () => {
    value.value = navigator.languages;
  });
  return value;
}

function usePreferredReducedMotion(options) {
  const isReduced = useMediaQuery("(prefers-reduced-motion: reduce)", options);
  return (0,vue_runtime_esm/* computed */.EW)(() => {
    if (isReduced.value)
      return "reduce";
    return "no-preference";
  });
}

function usePrevious(value, initialValue) {
  const previous = shallowRef(initialValue);
  watch(
    toRef(value),
    (_, oldValue) => {
      previous.value = oldValue;
    },
    { flush: "sync" }
  );
  return readonly(previous);
}

const topVarName = "--vueuse-safe-area-top";
const rightVarName = "--vueuse-safe-area-right";
const bottomVarName = "--vueuse-safe-area-bottom";
const leftVarName = "--vueuse-safe-area-left";
function useScreenSafeArea() {
  const top = ref("");
  const right = ref("");
  const bottom = ref("");
  const left = ref("");
  if (isClient) {
    const topCssVar = useCssVar(topVarName);
    const rightCssVar = useCssVar(rightVarName);
    const bottomCssVar = useCssVar(bottomVarName);
    const leftCssVar = useCssVar(leftVarName);
    topCssVar.value = "env(safe-area-inset-top, 0px)";
    rightCssVar.value = "env(safe-area-inset-right, 0px)";
    bottomCssVar.value = "env(safe-area-inset-bottom, 0px)";
    leftCssVar.value = "env(safe-area-inset-left, 0px)";
    update();
    useEventListener("resize", useDebounceFn(update));
  }
  function update() {
    top.value = getValue(topVarName);
    right.value = getValue(rightVarName);
    bottom.value = getValue(bottomVarName);
    left.value = getValue(leftVarName);
  }
  return {
    top,
    right,
    bottom,
    left,
    update
  };
}
function getValue(position) {
  return getComputedStyle(document.documentElement).getPropertyValue(position);
}

function useScriptTag(src, onLoaded = noop, options = {}) {
  const {
    immediate = true,
    manual = false,
    type = "text/javascript",
    async = true,
    crossOrigin,
    referrerPolicy,
    noModule,
    defer,
    document = defaultDocument,
    attrs = {}
  } = options;
  const scriptTag = ref(null);
  let _promise = null;
  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {
    const resolveWithElement = (el2) => {
      scriptTag.value = el2;
      resolve(el2);
      return el2;
    };
    if (!document) {
      resolve(false);
      return;
    }
    let shouldAppend = false;
    let el = document.querySelector(`script[src="${toValue(src)}"]`);
    if (!el) {
      el = document.createElement("script");
      el.type = type;
      el.async = async;
      el.src = toValue(src);
      if (defer)
        el.defer = defer;
      if (crossOrigin)
        el.crossOrigin = crossOrigin;
      if (noModule)
        el.noModule = noModule;
      if (referrerPolicy)
        el.referrerPolicy = referrerPolicy;
      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));
      shouldAppend = true;
    } else if (el.hasAttribute("data-loaded")) {
      resolveWithElement(el);
    }
    el.addEventListener("error", (event) => reject(event));
    el.addEventListener("abort", (event) => reject(event));
    el.addEventListener("load", () => {
      el.setAttribute("data-loaded", "true");
      onLoaded(el);
      resolveWithElement(el);
    });
    if (shouldAppend)
      el = document.head.appendChild(el);
    if (!waitForScriptLoad)
      resolveWithElement(el);
  });
  const load = (waitForScriptLoad = true) => {
    if (!_promise)
      _promise = loadScript(waitForScriptLoad);
    return _promise;
  };
  const unload = () => {
    if (!document)
      return;
    _promise = null;
    if (scriptTag.value)
      scriptTag.value = null;
    const el = document.querySelector(`script[src="${toValue(src)}"]`);
    if (el)
      document.head.removeChild(el);
  };
  if (immediate && !manual)
    tryOnMounted(load);
  if (!manual)
    tryOnUnmounted(unload);
  return { scriptTag, load, unload };
}

function checkOverflowScroll(ele) {
  const style = window.getComputedStyle(ele);
  if (style.overflowX === "scroll" || style.overflowY === "scroll" || style.overflowX === "auto" && ele.clientWidth < ele.scrollWidth || style.overflowY === "auto" && ele.clientHeight < ele.scrollHeight) {
    return true;
  } else {
    const parent = ele.parentNode;
    if (!parent || parent.tagName === "BODY")
      return false;
    return checkOverflowScroll(parent);
  }
}
function preventDefault(rawEvent) {
  const e = rawEvent || window.event;
  const _target = e.target;
  if (checkOverflowScroll(_target))
    return false;
  if (e.touches.length > 1)
    return true;
  if (e.preventDefault)
    e.preventDefault();
  return false;
}
const elInitialOverflow = /* @__PURE__ */ new WeakMap();
function useScrollLock(element, initialState = false) {
  const isLocked = ref(initialState);
  let stopTouchMoveListener = null;
  watch(toRef(element), (el) => {
    const target = resolveElement(toValue(el));
    if (target) {
      const ele = target;
      if (!elInitialOverflow.get(ele))
        elInitialOverflow.set(ele, ele.style.overflow);
      if (isLocked.value)
        ele.style.overflow = "hidden";
    }
  }, {
    immediate: true
  });
  const lock = () => {
    const el = resolveElement(toValue(element));
    if (!el || isLocked.value)
      return;
    if (isIOS) {
      stopTouchMoveListener = useEventListener(
        el,
        "touchmove",
        (e) => {
          preventDefault(e);
        },
        { passive: false }
      );
    }
    el.style.overflow = "hidden";
    isLocked.value = true;
  };
  const unlock = () => {
    var _a;
    const el = resolveElement(toValue(element));
    if (!el || !isLocked.value)
      return;
    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());
    el.style.overflow = (_a = elInitialOverflow.get(el)) != null ? _a : "";
    elInitialOverflow.delete(el);
    isLocked.value = false;
  };
  tryOnScopeDispose(unlock);
  return computed({
    get() {
      return isLocked.value;
    },
    set(v) {
      if (v)
        lock();
      else
        unlock();
    }
  });
}

function useSessionStorage(key, initialValue, options = {}) {
  const { window = defaultWindow } = options;
  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);
}

function useShare(shareOptions = {}, options = {}) {
  const { navigator = defaultNavigator } = options;
  const _navigator = navigator;
  const isSupported = useSupported(() => _navigator && "canShare" in _navigator);
  const share = async (overrideOptions = {}) => {
    if (isSupported.value) {
      const data = {
        ...toValue(shareOptions),
        ...toValue(overrideOptions)
      };
      let granted = true;
      if (data.files && _navigator.canShare)
        granted = _navigator.canShare({ files: data.files });
      if (granted)
        return _navigator.share(data);
    }
  };
  return {
    isSupported,
    share
  };
}

const defaultSortFn = (source, compareFn) => source.sort(compareFn);
const defaultCompare = (a, b) => a - b;
function useSorted(...args) {
  var _a, _b, _c, _d;
  const [source] = args;
  let compareFn = defaultCompare;
  let options = {};
  if (args.length === 2) {
    if (typeof args[1] === "object") {
      options = args[1];
      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;
    } else {
      compareFn = (_b = args[1]) != null ? _b : defaultCompare;
    }
  } else if (args.length > 2) {
    compareFn = (_c = args[1]) != null ? _c : defaultCompare;
    options = (_d = args[2]) != null ? _d : {};
  }
  const {
    dirty = false,
    sortFn = defaultSortFn
  } = options;
  if (!dirty)
    return computed(() => sortFn([...toValue(source)], compareFn));
  watchEffect(() => {
    const result = sortFn(toValue(source), compareFn);
    if (isRef(source))
      source.value = result;
    else
      source.splice(0, source.length, ...result);
  });
  return source;
}

function useSpeechRecognition(options = {}) {
  const {
    interimResults = true,
    continuous = true,
    window = defaultWindow
  } = options;
  const lang = toRef(options.lang || "en-US");
  const isListening = ref(false);
  const isFinal = ref(false);
  const result = ref("");
  const error = shallowRef(void 0);
  const toggle = (value = !isListening.value) => {
    isListening.value = value;
  };
  const start = () => {
    isListening.value = true;
  };
  const stop = () => {
    isListening.value = false;
  };
  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);
  const isSupported = useSupported(() => SpeechRecognition);
  let recognition;
  if (isSupported.value) {
    recognition = new SpeechRecognition();
    recognition.continuous = continuous;
    recognition.interimResults = interimResults;
    recognition.lang = toValue(lang);
    recognition.onstart = () => {
      isFinal.value = false;
    };
    watch(lang, (lang2) => {
      if (recognition && !isListening.value)
        recognition.lang = lang2;
    });
    recognition.onresult = (event) => {
      const transcript = Array.from(event.results).map((result2) => {
        isFinal.value = result2.isFinal;
        return result2[0];
      }).map((result2) => result2.transcript).join("");
      result.value = transcript;
      error.value = void 0;
    };
    recognition.onerror = (event) => {
      error.value = event;
    };
    recognition.onend = () => {
      isListening.value = false;
      recognition.lang = toValue(lang);
    };
    watch(isListening, () => {
      if (isListening.value)
        recognition.start();
      else
        recognition.stop();
    });
  }
  tryOnScopeDispose(() => {
    isListening.value = false;
  });
  return {
    isSupported,
    isListening,
    isFinal,
    recognition,
    result,
    error,
    toggle,
    start,
    stop
  };
}

function useSpeechSynthesis(text, options = {}) {
  const {
    pitch = 1,
    rate = 1,
    volume = 1,
    window = defaultWindow
  } = options;
  const synth = window && window.speechSynthesis;
  const isSupported = useSupported(() => synth);
  const isPlaying = ref(false);
  const status = ref("init");
  const spokenText = toRef(text || "");
  const lang = toRef(options.lang || "en-US");
  const error = shallowRef(void 0);
  const toggle = (value = !isPlaying.value) => {
    isPlaying.value = value;
  };
  const bindEventsForUtterance = (utterance2) => {
    utterance2.lang = toValue(lang);
    utterance2.voice = toValue(options.voice) || null;
    utterance2.pitch = toValue(pitch);
    utterance2.rate = toValue(rate);
    utterance2.volume = volume;
    utterance2.onstart = () => {
      isPlaying.value = true;
      status.value = "play";
    };
    utterance2.onpause = () => {
      isPlaying.value = false;
      status.value = "pause";
    };
    utterance2.onresume = () => {
      isPlaying.value = true;
      status.value = "play";
    };
    utterance2.onend = () => {
      isPlaying.value = false;
      status.value = "end";
    };
    utterance2.onerror = (event) => {
      error.value = event;
    };
  };
  const utterance = computed(() => {
    isPlaying.value = false;
    status.value = "init";
    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);
    bindEventsForUtterance(newUtterance);
    return newUtterance;
  });
  const speak = () => {
    synth.cancel();
    utterance && synth.speak(utterance.value);
  };
  const stop = () => {
    synth.cancel();
    isPlaying.value = false;
  };
  if (isSupported.value) {
    bindEventsForUtterance(utterance.value);
    watch(lang, (lang2) => {
      if (utterance.value && !isPlaying.value)
        utterance.value.lang = lang2;
    });
    if (options.voice) {
      watch(options.voice, () => {
        synth.cancel();
      });
    }
    watch(isPlaying, () => {
      if (isPlaying.value)
        synth.resume();
      else
        synth.pause();
    });
  }
  tryOnScopeDispose(() => {
    isPlaying.value = false;
  });
  return {
    isSupported,
    isPlaying,
    status,
    utterance,
    error,
    stop,
    toggle,
    speak
  };
}

function useStepper(steps, initialStep) {
  const stepsRef = ref(steps);
  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));
  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));
  const current = computed(() => at(index.value));
  const isFirst = computed(() => index.value === 0);
  const isLast = computed(() => index.value === stepNames.value.length - 1);
  const next = computed(() => stepNames.value[index.value + 1]);
  const previous = computed(() => stepNames.value[index.value - 1]);
  function at(index2) {
    if (Array.isArray(stepsRef.value))
      return stepsRef.value[index2];
    return stepsRef.value[stepNames.value[index2]];
  }
  function get(step) {
    if (!stepNames.value.includes(step))
      return;
    return at(stepNames.value.indexOf(step));
  }
  function goTo(step) {
    if (stepNames.value.includes(step))
      index.value = stepNames.value.indexOf(step);
  }
  function goToNext() {
    if (isLast.value)
      return;
    index.value++;
  }
  function goToPrevious() {
    if (isFirst.value)
      return;
    index.value--;
  }
  function goBackTo(step) {
    if (isAfter(step))
      goTo(step);
  }
  function isNext(step) {
    return stepNames.value.indexOf(step) === index.value + 1;
  }
  function isPrevious(step) {
    return stepNames.value.indexOf(step) === index.value - 1;
  }
  function isCurrent(step) {
    return stepNames.value.indexOf(step) === index.value;
  }
  function isBefore(step) {
    return index.value < stepNames.value.indexOf(step);
  }
  function isAfter(step) {
    return index.value > stepNames.value.indexOf(step);
  }
  return {
    steps: stepsRef,
    stepNames,
    index,
    current,
    next,
    previous,
    isFirst,
    isLast,
    at,
    get,
    goTo,
    goToNext,
    goToPrevious,
    goBackTo,
    isNext,
    isPrevious,
    isCurrent,
    isBefore,
    isAfter
  };
}

function useStorageAsync(key, initialValue, storage, options = {}) {
  var _a;
  const {
    flush = "pre",
    deep = true,
    listenToStorageChanges = true,
    writeDefaults = true,
    mergeDefaults = false,
    shallow,
    window = defaultWindow,
    eventFilter,
    onError = (e) => {
      console.error(e);
    }
  } = options;
  const rawInit = toValue(initialValue);
  const type = guessSerializerType(rawInit);
  const data = (shallow ? shallowRef : ref)(initialValue);
  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];
  if (!storage) {
    try {
      storage = getSSRHandler("getDefaultStorageAsync", () => {
        var _a2;
        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;
      })();
    } catch (e) {
      onError(e);
    }
  }
  async function read(event) {
    if (!storage || event && event.key !== key)
      return;
    try {
      const rawValue = event ? event.newValue : await storage.getItem(key);
      if (rawValue == null) {
        data.value = rawInit;
        if (writeDefaults && rawInit !== null)
          await storage.setItem(key, await serializer.write(rawInit));
      } else if (mergeDefaults) {
        const value = await serializer.read(rawValue);
        if (typeof mergeDefaults === "function")
          data.value = mergeDefaults(value, rawInit);
        else if (type === "object" && !Array.isArray(value))
          data.value = { ...rawInit, ...value };
        else
          data.value = value;
      } else {
        data.value = await serializer.read(rawValue);
      }
    } catch (e) {
      onError(e);
    }
  }
  read();
  if (window && listenToStorageChanges)
    useEventListener(window, "storage", (e) => Promise.resolve().then(() => read(e)));
  if (storage) {
    watchWithFilter(
      data,
      async () => {
        try {
          if (data.value == null)
            await storage.removeItem(key);
          else
            await storage.setItem(key, await serializer.write(data.value));
        } catch (e) {
          onError(e);
        }
      },
      {
        flush,
        deep,
        eventFilter
      }
    );
  }
  return data;
}

let _id = 0;
function useStyleTag(css, options = {}) {
  const isLoaded = ref(false);
  const {
    document = defaultDocument,
    immediate = true,
    manual = false,
    id = `vueuse_styletag_${++_id}`
  } = options;
  const cssRef = ref(css);
  let stop = () => {
  };
  const load = () => {
    if (!document)
      return;
    const el = document.getElementById(id) || document.createElement("style");
    if (!el.isConnected) {
      el.id = id;
      if (options.media)
        el.media = options.media;
      document.head.appendChild(el);
    }
    if (isLoaded.value)
      return;
    stop = watch(
      cssRef,
      (value) => {
        el.textContent = value;
      },
      { immediate: true }
    );
    isLoaded.value = true;
  };
  const unload = () => {
    if (!document || !isLoaded.value)
      return;
    stop();
    document.head.removeChild(document.getElementById(id));
    isLoaded.value = false;
  };
  if (immediate && !manual)
    tryOnMounted(load);
  if (!manual)
    tryOnScopeDispose(unload);
  return {
    id,
    css: cssRef,
    unload,
    load,
    isLoaded: readonly(isLoaded)
  };
}

function useSwipe(target, options = {}) {
  const {
    threshold = 50,
    onSwipe,
    onSwipeEnd,
    onSwipeStart,
    passive = true,
    window = defaultWindow
  } = options;
  const coordsStart = (0,vue_runtime_esm/* reactive */.Kh)({ x: 0, y: 0 });
  const coordsEnd = (0,vue_runtime_esm/* reactive */.Kh)({ x: 0, y: 0 });
  const diffX = (0,vue_runtime_esm/* computed */.EW)(() => coordsStart.x - coordsEnd.x);
  const diffY = (0,vue_runtime_esm/* computed */.EW)(() => coordsStart.y - coordsEnd.y);
  const { max, abs } = Math;
  const isThresholdExceeded = (0,vue_runtime_esm/* computed */.EW)(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);
  const isSwiping = (0,vue_runtime_esm/* ref */.KR)(false);
  const direction = (0,vue_runtime_esm/* computed */.EW)(() => {
    if (!isThresholdExceeded.value)
      return "none";
    if (abs(diffX.value) > abs(diffY.value)) {
      return diffX.value > 0 ? "left" : "right";
    } else {
      return diffY.value > 0 ? "up" : "down";
    }
  });
  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];
  const updateCoordsStart = (x, y) => {
    coordsStart.x = x;
    coordsStart.y = y;
  };
  const updateCoordsEnd = (x, y) => {
    coordsEnd.x = x;
    coordsEnd.y = y;
  };
  let listenerOptions;
  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);
  if (!passive)
    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };
  else
    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };
  const onTouchEnd = (e) => {
    if (isSwiping.value)
      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);
    isSwiping.value = false;
  };
  const stops = [
    useEventListener(target, "touchstart", (e) => {
      if (e.touches.length !== 1)
        return;
      if (listenerOptions.capture && !listenerOptions.passive)
        e.preventDefault();
      const [x, y] = getTouchEventCoords(e);
      updateCoordsStart(x, y);
      updateCoordsEnd(x, y);
      onSwipeStart == null ? void 0 : onSwipeStart(e);
    }, listenerOptions),
    useEventListener(target, "touchmove", (e) => {
      if (e.touches.length !== 1)
        return;
      const [x, y] = getTouchEventCoords(e);
      updateCoordsEnd(x, y);
      if (!isSwiping.value && isThresholdExceeded.value)
        isSwiping.value = true;
      if (isSwiping.value)
        onSwipe == null ? void 0 : onSwipe(e);
    }, listenerOptions),
    useEventListener(target, ["touchend", "touchcancel"], onTouchEnd, listenerOptions)
  ];
  const stop = () => stops.forEach((s) => s());
  return {
    isPassiveEventSupported,
    isSwiping,
    direction,
    coordsStart,
    coordsEnd,
    lengthX: diffX,
    lengthY: diffY,
    stop
  };
}
function checkPassiveEventSupport(document) {
  if (!document)
    return false;
  let supportsPassive = false;
  const optionsBlock = {
    get passive() {
      supportsPassive = true;
      return false;
    }
  };
  document.addEventListener("x", shared/* noop */.lQ, optionsBlock);
  document.removeEventListener("x", shared/* noop */.lQ);
  return supportsPassive;
}

function useTemplateRefsList() {
  const refs = ref([]);
  refs.value.set = (el) => {
    if (el)
      refs.value.push(el);
  };
  onBeforeUpdate(() => {
    refs.value.length = 0;
  });
  return refs;
}

function useTextDirection(options = {}) {
  const {
    document = defaultDocument,
    selector = "html",
    observe = false,
    initialValue = "ltr"
  } = options;
  function getValue() {
    var _a, _b;
    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute("dir")) != null ? _b : initialValue;
  }
  const dir = ref(getValue());
  tryOnMounted(() => dir.value = getValue());
  if (observe && document) {
    useMutationObserver(
      document.querySelector(selector),
      () => dir.value = getValue(),
      { attributes: true }
    );
  }
  return computed({
    get() {
      return dir.value;
    },
    set(v) {
      var _a, _b;
      dir.value = v;
      if (!document)
        return;
      if (dir.value)
        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute("dir", dir.value);
      else
        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute("dir");
    }
  });
}

function getRangesFromSelection(selection) {
  var _a;
  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;
  return Array.from({ length: rangeCount }, (_, i) => selection.getRangeAt(i));
}
function useTextSelection(options = {}) {
  const {
    window = defaultWindow
  } = options;
  const selection = ref(null);
  const text = computed(() => {
    var _a, _b;
    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : "";
  });
  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);
  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));
  function onSelectionChange() {
    selection.value = null;
    if (window)
      selection.value = window.getSelection();
  }
  if (window)
    useEventListener(window.document, "selectionchange", onSelectionChange);
  return {
    text,
    rects,
    ranges,
    selection
  };
}

function useTextareaAutosize(options) {
  var _a;
  const textarea = ref(options == null ? void 0 : options.element);
  const input = ref(options == null ? void 0 : options.input);
  const styleProp = (_a = options == null ? void 0 : options.styleProp) != null ? _a : "height";
  const textareaScrollHeight = ref(1);
  function triggerResize() {
    var _a2, _b;
    if (!textarea.value)
      return;
    let height = "";
    textarea.value.style[styleProp] = "1px";
    textareaScrollHeight.value = (_a2 = textarea.value) == null ? void 0 : _a2.scrollHeight;
    if (options == null ? void 0 : options.styleTarget)
      toValue(options.styleTarget).style[styleProp] = `${textareaScrollHeight.value}px`;
    else
      height = `${textareaScrollHeight.value}px`;
    textarea.value.style[styleProp] = height;
    (_b = options == null ? void 0 : options.onResize) == null ? void 0 : _b.call(options);
  }
  watch([input, textarea], () => nextTick(triggerResize), { immediate: true });
  useResizeObserver(textarea, () => triggerResize());
  if (options == null ? void 0 : options.watch)
    watch(options.watch, triggerResize, { immediate: true, deep: true });
  return {
    textarea,
    input,
    triggerResize
  };
}

function useThrottledRefHistory(source, options = {}) {
  const { throttle = 200, trailing = true } = options;
  const filter = throttleFilter(throttle, trailing);
  const history = useRefHistory(source, { ...options, eventFilter: filter });
  return {
    ...history
  };
}

const DEFAULT_UNITS = [
  { max: 6e4, value: 1e3, name: "second" },
  { max: 276e4, value: 6e4, name: "minute" },
  { max: 72e6, value: 36e5, name: "hour" },
  { max: 5184e5, value: 864e5, name: "day" },
  { max: 24192e5, value: 6048e5, name: "week" },
  { max: 28512e6, value: 2592e6, name: "month" },
  { max: Number.POSITIVE_INFINITY, value: 31536e6, name: "year" }
];
const DEFAULT_MESSAGES = {
  justNow: "just now",
  past: (n) => n.match(/\d/) ? `${n} ago` : n,
  future: (n) => n.match(/\d/) ? `in ${n}` : n,
  month: (n, past) => n === 1 ? past ? "last month" : "next month" : `${n} month${n > 1 ? "s" : ""}`,
  year: (n, past) => n === 1 ? past ? "last year" : "next year" : `${n} year${n > 1 ? "s" : ""}`,
  day: (n, past) => n === 1 ? past ? "yesterday" : "tomorrow" : `${n} day${n > 1 ? "s" : ""}`,
  week: (n, past) => n === 1 ? past ? "last week" : "next week" : `${n} week${n > 1 ? "s" : ""}`,
  hour: (n) => `${n} hour${n > 1 ? "s" : ""}`,
  minute: (n) => `${n} minute${n > 1 ? "s" : ""}`,
  second: (n) => `${n} second${n > 1 ? "s" : ""}`,
  invalid: ""
};
function DEFAULT_FORMATTER(date) {
  return date.toISOString().slice(0, 10);
}
function useTimeAgo(time, options = {}) {
  const {
    controls: exposeControls = false,
    updateInterval = 3e4
  } = options;
  const { now, ...controls } = useNow({ interval: updateInterval, controls: true });
  const timeAgo = (0,vue_runtime_esm/* computed */.EW)(() => formatTimeAgo(new Date((0,shared/* toValue */.BA)(time)), options, (0,shared/* toValue */.BA)(now)));
  if (exposeControls) {
    return {
      timeAgo,
      ...controls
    };
  } else {
    return timeAgo;
  }
}
function formatTimeAgo(from, options = {}, now = Date.now()) {
  var _a;
  const {
    max,
    messages = DEFAULT_MESSAGES,
    fullDateFormatter = DEFAULT_FORMATTER,
    units = DEFAULT_UNITS,
    showSecond = false,
    rounding = "round"
  } = options;
  const roundFn = typeof rounding === "number" ? (n) => +n.toFixed(rounding) : Math[rounding];
  const diff = +now - +from;
  const absDiff = Math.abs(diff);
  function getValue(diff2, unit) {
    return roundFn(Math.abs(diff2) / unit.value);
  }
  function format(diff2, unit) {
    const val = getValue(diff2, unit);
    const past = diff2 > 0;
    const str = applyFormat(unit.name, val, past);
    return applyFormat(past ? "past" : "future", str, past);
  }
  function applyFormat(name, val, isPast) {
    const formatter = messages[name];
    if (typeof formatter === "function")
      return formatter(val, isPast);
    return formatter.replace("{0}", val.toString());
  }
  if (absDiff < 6e4 && !showSecond)
    return messages.justNow;
  if (typeof max === "number" && absDiff > max)
    return fullDateFormatter(new Date(from));
  if (typeof max === "string") {
    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;
    if (unitMax && absDiff > unitMax)
      return fullDateFormatter(new Date(from));
  }
  for (const [idx, unit] of units.entries()) {
    const val = getValue(diff, unit);
    if (val <= 0 && units[idx - 1])
      return format(diff, units[idx - 1]);
    if (absDiff < unit.max)
      return format(diff, unit);
  }
  return messages.invalid;
}

function useTimeoutPoll(fn, interval, timeoutPollOptions) {
  const { start } = useTimeoutFn(loop, interval, { immediate: false });
  const isActive = ref(false);
  async function loop() {
    if (!isActive.value)
      return;
    await fn();
    start();
  }
  function resume() {
    if (!isActive.value) {
      isActive.value = true;
      loop();
    }
  }
  function pause() {
    isActive.value = false;
  }
  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)
    resume();
  tryOnScopeDispose(pause);
  return {
    isActive,
    pause,
    resume
  };
}

function useTimestamp(options = {}) {
  const {
    controls: exposeControls = false,
    offset = 0,
    immediate = true,
    interval = "requestAnimationFrame",
    callback
  } = options;
  const ts = (0,vue_runtime_esm/* ref */.KR)((0,shared/* timestamp */.vE)() + offset);
  const update = () => ts.value = (0,shared/* timestamp */.vE)() + offset;
  const cb = callback ? () => {
    update();
    callback(ts.value);
  } : update;
  const controls = interval === "requestAnimationFrame" ? useRafFn(cb, { immediate }) : (0,shared/* useIntervalFn */.Rg)(cb, interval, { immediate });
  if (exposeControls) {
    return {
      timestamp: ts,
      ...controls
    };
  } else {
    return ts;
  }
}

function useTitle(newTitle = null, options = {}) {
  var _a, _b, _c;
  const {
    document = defaultDocument,
    restoreOnUnmount = (t) => t
  } = options;
  const originalTitle = (_a = document == null ? void 0 : document.title) != null ? _a : "";
  const title = toRef((_b = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _b : null);
  const isReadonly = newTitle && typeof newTitle === "function";
  function format(t) {
    if (!("titleTemplate" in options))
      return t;
    const template = options.titleTemplate || "%s";
    return typeof template === "function" ? template(t) : toValue(template).replace(/%s/g, t);
  }
  watch(
    title,
    (t, o) => {
      if (t !== o && document)
        document.title = format(typeof t === "string" ? t : "");
    },
    { immediate: true }
  );
  if (options.observe && !options.titleTemplate && document && !isReadonly) {
    useMutationObserver(
      (_c = document.head) == null ? void 0 : _c.querySelector("title"),
      () => {
        if (document && document.title !== title.value)
          title.value = format(document.title);
      },
      { childList: true }
    );
  }
  tryOnBeforeUnmount(() => {
    if (restoreOnUnmount) {
      const restoredTitle = restoreOnUnmount(originalTitle, title.value || "");
      if (restoredTitle != null && document)
        document.title = restoredTitle;
    }
  });
  return title;
}

const _TransitionPresets = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
const TransitionPresets = /* @__PURE__ */ Object.assign({}, { linear: shared/* identity */.D_ }, _TransitionPresets);
function createEasingFunction([p0, p1, p2, p3]) {
  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;
  const b = (a1, a2) => 3 * a2 - 6 * a1;
  const c = (a1) => 3 * a1;
  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;
  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);
  const getTforX = (x) => {
    let aGuessT = x;
    for (let i = 0; i < 4; ++i) {
      const currentSlope = getSlope(aGuessT, p0, p2);
      if (currentSlope === 0)
        return aGuessT;
      const currentX = calcBezier(aGuessT, p0, p2) - x;
      aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
  };
  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);
}
function lerp(a, b, alpha) {
  return a + alpha * (b - a);
}
function toVec(t) {
  return (typeof t === "number" ? [t] : t) || [];
}
function executeTransition(source, from, to, options = {}) {
  var _a, _b;
  const fromVal = toValue(from);
  const toVal = toValue(to);
  const v1 = toVec(fromVal);
  const v2 = toVec(toVal);
  const duration = (_a = toValue(options.duration)) != null ? _a : 1e3;
  const startedAt = Date.now();
  const endAt = Date.now() + duration;
  const trans = typeof options.transition === "function" ? options.transition : (_b = toValue(options.transition)) != null ? _b : identity;
  const ease = typeof trans === "function" ? trans : createEasingFunction(trans);
  return new Promise((resolve) => {
    source.value = fromVal;
    const tick = () => {
      var _a2;
      if ((_a2 = options.abort) == null ? void 0 : _a2.call(options)) {
        resolve();
        return;
      }
      const now = Date.now();
      const alpha = ease((now - startedAt) / duration);
      const arr = toVec(source.value).map((n, i) => lerp(v1[i], v2[i], alpha));
      if (Array.isArray(source.value))
        source.value = arr.map((n, i) => {
          var _a3, _b2;
          return lerp((_a3 = v1[i]) != null ? _a3 : 0, (_b2 = v2[i]) != null ? _b2 : 0, alpha);
        });
      else if (typeof source.value === "number")
        source.value = arr[0];
      if (now < endAt) {
        requestAnimationFrame(tick);
      } else {
        source.value = toVal;
        resolve();
      }
    };
    tick();
  });
}
function useTransition(source, options = {}) {
  let currentId = 0;
  const sourceVal = () => {
    const v = toValue(source);
    return typeof v === "number" ? v : v.map(toValue);
  };
  const outputRef = ref(sourceVal());
  watch(sourceVal, async (to) => {
    var _a, _b;
    if (toValue(options.disabled))
      return;
    const id = ++currentId;
    if (options.delay)
      await promiseTimeout(toValue(options.delay));
    if (id !== currentId)
      return;
    const toVal = Array.isArray(to) ? to.map(toValue) : toValue(to);
    (_a = options.onStarted) == null ? void 0 : _a.call(options);
    await executeTransition(outputRef, outputRef.value, toVal, {
      ...options,
      abort: () => {
        var _a2;
        return id !== currentId || ((_a2 = options.abort) == null ? void 0 : _a2.call(options));
      }
    });
    (_b = options.onFinished) == null ? void 0 : _b.call(options);
  }, { deep: true });
  watch(() => toValue(options.disabled), (disabled) => {
    if (disabled) {
      currentId++;
      outputRef.value = sourceVal();
    }
  });
  tryOnScopeDispose(() => {
    currentId++;
  });
  return computed(() => toValue(options.disabled) ? sourceVal() : outputRef.value);
}

function useUrlSearchParams(mode = "history", options = {}) {
  const {
    initialValue = {},
    removeNullishValues = true,
    removeFalsyValues = false,
    write: enableWrite = true,
    window = defaultWindow
  } = options;
  if (!window)
    return reactive(initialValue);
  const state = reactive({});
  function getRawParams() {
    if (mode === "history") {
      return window.location.search || "";
    } else if (mode === "hash") {
      const hash = window.location.hash || "";
      const index = hash.indexOf("?");
      return index > 0 ? hash.slice(index) : "";
    } else {
      return (window.location.hash || "").replace(/^#/, "");
    }
  }
  function constructQuery(params) {
    const stringified = params.toString();
    if (mode === "history")
      return `${stringified ? `?${stringified}` : ""}${window.location.hash || ""}`;
    if (mode === "hash-params")
      return `${window.location.search || ""}${stringified ? `#${stringified}` : ""}`;
    const hash = window.location.hash || "#";
    const index = hash.indexOf("?");
    if (index > 0)
      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : ""}`;
    return `${hash}${stringified ? `?${stringified}` : ""}`;
  }
  function read() {
    return new URLSearchParams(getRawParams());
  }
  function updateState(params) {
    const unusedKeys = new Set(Object.keys(state));
    for (const key of params.keys()) {
      const paramsForKey = params.getAll(key);
      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || "";
      unusedKeys.delete(key);
    }
    Array.from(unusedKeys).forEach((key) => delete state[key]);
  }
  const { pause, resume } = pausableWatch(
    state,
    () => {
      const params = new URLSearchParams("");
      Object.keys(state).forEach((key) => {
        const mapEntry = state[key];
        if (Array.isArray(mapEntry))
          mapEntry.forEach((value) => params.append(key, value));
        else if (removeNullishValues && mapEntry == null)
          params.delete(key);
        else if (removeFalsyValues && !mapEntry)
          params.delete(key);
        else
          params.set(key, mapEntry);
      });
      write(params);
    },
    { deep: true }
  );
  function write(params, shouldUpdate) {
    pause();
    if (shouldUpdate)
      updateState(params);
    window.history.replaceState(
      window.history.state,
      window.document.title,
      window.location.pathname + constructQuery(params)
    );
    resume();
  }
  function onChanged() {
    if (!enableWrite)
      return;
    write(read(), true);
  }
  useEventListener(window, "popstate", onChanged, false);
  if (mode !== "history")
    useEventListener(window, "hashchange", onChanged, false);
  const initial = read();
  if (initial.keys().next().value)
    updateState(initial);
  else
    Object.assign(state, initialValue);
  return state;
}

function useUserMedia(options = {}) {
  var _a, _b;
  const enabled = ref((_a = options.enabled) != null ? _a : false);
  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);
  const constraints = ref(options.constraints);
  const { navigator = defaultNavigator } = options;
  const isSupported = useSupported(() => {
    var _a2;
    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;
  });
  const stream = shallowRef();
  function getDeviceOptions(type) {
    switch (type) {
      case "video": {
        if (constraints.value)
          return constraints.value.video || false;
        break;
      }
      case "audio": {
        if (constraints.value)
          return constraints.value.audio || false;
        break;
      }
    }
  }
  async function _start() {
    if (!isSupported.value || stream.value)
      return;
    stream.value = await navigator.mediaDevices.getUserMedia({
      video: getDeviceOptions("video"),
      audio: getDeviceOptions("audio")
    });
    return stream.value;
  }
  function _stop() {
    var _a2;
    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());
    stream.value = void 0;
  }
  function stop() {
    _stop();
    enabled.value = false;
  }
  async function start() {
    await _start();
    if (stream.value)
      enabled.value = true;
    return stream.value;
  }
  async function restart() {
    _stop();
    return await start();
  }
  watch(
    enabled,
    (v) => {
      if (v)
        _start();
      else
        _stop();
    },
    { immediate: true }
  );
  watch(
    constraints,
    () => {
      if (autoSwitch.value && stream.value)
        restart();
    },
    { immediate: true }
  );
  tryOnScopeDispose(() => {
    stop();
  });
  return {
    isSupported,
    stream,
    start,
    stop,
    restart,
    constraints,
    enabled,
    autoSwitch
  };
}

function useVModel(props, key, emit, options = {}) {
  var _a, _b, _c, _d, _e;
  const {
    clone = false,
    passive = false,
    eventName,
    deep = false,
    defaultValue,
    shouldEmit
  } = options;
  const vm = getCurrentInstance();
  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));
  let event = eventName;
  if (!key) {
    if (isVue2) {
      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;
      key = (modelOptions == null ? void 0 : modelOptions.value) || "value";
      if (!eventName)
        event = (modelOptions == null ? void 0 : modelOptions.event) || "input";
    } else {
      key = "modelValue";
    }
  }
  event = event || `update:${key.toString()}`;
  const cloneFn = (val) => !clone ? val : typeof clone === "function" ? clone(val) : cloneFnJSON(val);
  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;
  const triggerEmit = (value) => {
    if (shouldEmit) {
      if (shouldEmit(value))
        _emit(event, value);
    } else {
      _emit(event, value);
    }
  };
  if (passive) {
    const initialValue = getValue();
    const proxy = ref(initialValue);
    let isUpdating = false;
    watch(
      () => props[key],
      (v) => {
        if (!isUpdating) {
          isUpdating = true;
          proxy.value = cloneFn(v);
          nextTick(() => isUpdating = false);
        }
      }
    );
    watch(
      proxy,
      (v) => {
        if (!isUpdating && (v !== props[key] || deep))
          triggerEmit(v);
      },
      { deep }
    );
    return proxy;
  } else {
    return computed({
      get() {
        return getValue();
      },
      set(value) {
        triggerEmit(value);
      }
    });
  }
}

function useVModels(props, emit, options = {}) {
  const ret = {};
  for (const key in props) {
    ret[key] = useVModel(
      props,
      key,
      emit,
      options
    );
  }
  return ret;
}

function useVibrate(options) {
  const {
    pattern = [],
    interval = 0,
    navigator = defaultNavigator
  } = options || {};
  const isSupported = useSupported(() => typeof navigator !== "undefined" && "vibrate" in navigator);
  const patternRef = toRef(pattern);
  let intervalControls;
  const vibrate = (pattern2 = patternRef.value) => {
    if (isSupported.value)
      navigator.vibrate(pattern2);
  };
  const stop = () => {
    if (isSupported.value)
      navigator.vibrate(0);
    intervalControls == null ? void 0 : intervalControls.pause();
  };
  if (interval > 0) {
    intervalControls = useIntervalFn(
      vibrate,
      interval,
      {
        immediate: false,
        immediateCallback: false
      }
    );
  }
  return {
    isSupported,
    pattern,
    intervalControls,
    vibrate,
    stop
  };
}

function useVirtualList(list, options) {
  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = "itemHeight" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);
  return {
    list: currentList,
    scrollTo,
    containerProps: {
      ref: containerRef,
      onScroll: () => {
        calculateRange();
      },
      style: containerStyle
    },
    wrapperProps
  };
}
function useVirtualListResources(list) {
  const containerRef = (0,vue_runtime_esm/* ref */.KR)(null);
  const size = useElementSize(containerRef);
  const currentList = (0,vue_runtime_esm/* ref */.KR)([]);
  const source = (0,vue_runtime_esm/* shallowRef */.IJ)(list);
  const state = (0,vue_runtime_esm/* ref */.KR)({ start: 0, end: 10 });
  return { state, source, currentList, size, containerRef };
}
function createGetViewCapacity(state, source, itemSize) {
  return (containerSize) => {
    if (typeof itemSize === "number")
      return Math.ceil(containerSize / itemSize);
    const { start = 0 } = state.value;
    let sum = 0;
    let capacity = 0;
    for (let i = start; i < source.value.length; i++) {
      const size = itemSize(i);
      sum += size;
      capacity = i;
      if (sum > containerSize)
        break;
    }
    return capacity - start;
  };
}
function createGetOffset(source, itemSize) {
  return (scrollDirection) => {
    if (typeof itemSize === "number")
      return Math.floor(scrollDirection / itemSize) + 1;
    let sum = 0;
    let offset = 0;
    for (let i = 0; i < source.value.length; i++) {
      const size = itemSize(i);
      sum += size;
      if (sum >= scrollDirection) {
        offset = i;
        break;
      }
    }
    return offset + 1;
  };
}
function createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {
  return () => {
    const element = containerRef.value;
    if (element) {
      const offset = getOffset(type === "vertical" ? element.scrollTop : element.scrollLeft);
      const viewCapacity = getViewCapacity(type === "vertical" ? element.clientHeight : element.clientWidth);
      const from = offset - overscan;
      const to = offset + viewCapacity + overscan;
      state.value = {
        start: from < 0 ? 0 : from,
        end: to > source.value.length ? source.value.length : to
      };
      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({
        data: ele,
        index: index + state.value.start
      }));
    }
  };
}
function createGetDistance(itemSize, source) {
  return (index) => {
    if (typeof itemSize === "number") {
      const size2 = index * itemSize;
      return size2;
    }
    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);
    return size;
  };
}
function useWatchForSizes(size, list, calculateRange) {
  (0,vue_runtime_esm/* watch */.wB)([size.width, size.height, list], () => {
    calculateRange();
  });
}
function createComputedTotalSize(itemSize, source) {
  return (0,vue_runtime_esm/* computed */.EW)(() => {
    if (typeof itemSize === "number")
      return source.value.length * itemSize;
    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);
  });
}
const scrollToDictionaryForElementScrollKey = {
  horizontal: "scrollLeft",
  vertical: "scrollTop"
};
function createScrollTo(type, calculateRange, getDistance, containerRef) {
  return (index) => {
    if (containerRef.value) {
      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);
      calculateRange();
    }
  };
}
function useHorizontalVirtualList(options, list) {
  const resources = useVirtualListResources(list);
  const { state, source, currentList, size, containerRef } = resources;
  const containerStyle = { overflowX: "auto" };
  const { itemWidth, overscan = 5 } = options;
  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);
  const getOffset = createGetOffset(source, itemWidth);
  const calculateRange = createCalculateRange("horizontal", overscan, getOffset, getViewCapacity, resources);
  const getDistanceLeft = createGetDistance(itemWidth, source);
  const offsetLeft = (0,vue_runtime_esm/* computed */.EW)(() => getDistanceLeft(state.value.start));
  const totalWidth = createComputedTotalSize(itemWidth, source);
  useWatchForSizes(size, list, calculateRange);
  const scrollTo = createScrollTo("horizontal", calculateRange, getDistanceLeft, containerRef);
  const wrapperProps = (0,vue_runtime_esm/* computed */.EW)(() => {
    return {
      style: {
        height: "100%",
        width: `${totalWidth.value - offsetLeft.value}px`,
        marginLeft: `${offsetLeft.value}px`,
        display: "flex"
      }
    };
  });
  return {
    scrollTo,
    calculateRange,
    wrapperProps,
    containerStyle,
    currentList,
    containerRef
  };
}
function useVerticalVirtualList(options, list) {
  const resources = useVirtualListResources(list);
  const { state, source, currentList, size, containerRef } = resources;
  const containerStyle = { overflowY: "auto" };
  const { itemHeight, overscan = 5 } = options;
  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);
  const getOffset = createGetOffset(source, itemHeight);
  const calculateRange = createCalculateRange("vertical", overscan, getOffset, getViewCapacity, resources);
  const getDistanceTop = createGetDistance(itemHeight, source);
  const offsetTop = (0,vue_runtime_esm/* computed */.EW)(() => getDistanceTop(state.value.start));
  const totalHeight = createComputedTotalSize(itemHeight, source);
  useWatchForSizes(size, list, calculateRange);
  const scrollTo = createScrollTo("vertical", calculateRange, getDistanceTop, containerRef);
  const wrapperProps = (0,vue_runtime_esm/* computed */.EW)(() => {
    return {
      style: {
        width: "100%",
        height: `${totalHeight.value - offsetTop.value}px`,
        marginTop: `${offsetTop.value}px`
      }
    };
  });
  return {
    calculateRange,
    scrollTo,
    containerStyle,
    wrapperProps,
    currentList,
    containerRef
  };
}

function useWakeLock(options = {}) {
  const {
    navigator = defaultNavigator,
    document = defaultDocument
  } = options;
  let wakeLock;
  const isSupported = useSupported(() => navigator && "wakeLock" in navigator);
  const isActive = ref(false);
  async function onVisibilityChange() {
    if (!isSupported.value || !wakeLock)
      return;
    if (document && document.visibilityState === "visible")
      wakeLock = await navigator.wakeLock.request("screen");
    isActive.value = !wakeLock.released;
  }
  if (document)
    useEventListener(document, "visibilitychange", onVisibilityChange, { passive: true });
  async function request(type) {
    if (!isSupported.value)
      return;
    wakeLock = await navigator.wakeLock.request(type);
    isActive.value = !wakeLock.released;
  }
  async function release() {
    if (!isSupported.value || !wakeLock)
      return;
    await wakeLock.release();
    isActive.value = !wakeLock.released;
    wakeLock = null;
  }
  return {
    isSupported,
    isActive,
    request,
    release
  };
}

function useWebNotification(options = {}) {
  const {
    window = defaultWindow,
    requestPermissions: _requestForPermissions = true
  } = options;
  const defaultWebNotificationOptions = options;
  const isSupported = useSupported(() => !!window && "Notification" in window);
  const permissionGranted = ref(isSupported.value && "permission" in Notification && Notification.permission === "granted");
  const notification = ref(null);
  const ensurePermissions = async () => {
    if (!isSupported.value)
      return;
    if (!permissionGranted.value && Notification.permission !== "denied") {
      const result = await Notification.requestPermission();
      if (result === "granted")
        permissionGranted.value = true;
    }
    return permissionGranted.value;
  };
  const { on: onClick, trigger: clickTrigger } = createEventHook();
  const { on: onShow, trigger: showTrigger } = createEventHook();
  const { on: onError, trigger: errorTrigger } = createEventHook();
  const { on: onClose, trigger: closeTrigger } = createEventHook();
  const show = async (overrides) => {
    if (!isSupported.value || !permissionGranted.value)
      return;
    const options2 = Object.assign({}, defaultWebNotificationOptions, overrides);
    notification.value = new Notification(options2.title || "", options2);
    notification.value.onclick = clickTrigger;
    notification.value.onshow = showTrigger;
    notification.value.onerror = errorTrigger;
    notification.value.onclose = closeTrigger;
    return notification.value;
  };
  const close = () => {
    if (notification.value)
      notification.value.close();
    notification.value = null;
  };
  if (_requestForPermissions)
    tryOnMounted(ensurePermissions);
  tryOnScopeDispose(close);
  if (isSupported.value && window) {
    const document = window.document;
    useEventListener(document, "visibilitychange", (e) => {
      e.preventDefault();
      if (document.visibilityState === "visible") {
        close();
      }
    });
  }
  return {
    isSupported,
    notification,
    ensurePermissions,
    permissionGranted,
    show,
    close,
    onClick,
    onShow,
    onError,
    onClose
  };
}

const DEFAULT_PING_MESSAGE = "ping";
function resolveNestedOptions(options) {
  if (options === true)
    return {};
  return options;
}
function useWebSocket(url, options = {}) {
  const {
    onConnected,
    onDisconnected,
    onError,
    onMessage,
    immediate = true,
    autoClose = true,
    protocols = []
  } = options;
  const data = ref(null);
  const status = ref("CLOSED");
  const wsRef = ref();
  const urlRef = toRef(url);
  let heartbeatPause;
  let heartbeatResume;
  let explicitlyClosed = false;
  let retried = 0;
  let bufferedData = [];
  let pongTimeoutWait;
  const _sendBuffer = () => {
    if (bufferedData.length && wsRef.value && status.value === "OPEN") {
      for (const buffer of bufferedData)
        wsRef.value.send(buffer);
      bufferedData = [];
    }
  };
  const resetHeartbeat = () => {
    clearTimeout(pongTimeoutWait);
    pongTimeoutWait = void 0;
  };
  const close = (code = 1e3, reason) => {
    if (!isClient || !wsRef.value)
      return;
    explicitlyClosed = true;
    resetHeartbeat();
    heartbeatPause == null ? void 0 : heartbeatPause();
    wsRef.value.close(code, reason);
    wsRef.value = void 0;
  };
  const send = (data2, useBuffer = true) => {
    if (!wsRef.value || status.value !== "OPEN") {
      if (useBuffer)
        bufferedData.push(data2);
      return false;
    }
    _sendBuffer();
    wsRef.value.send(data2);
    return true;
  };
  const _init = () => {
    if (explicitlyClosed || typeof urlRef.value === "undefined")
      return;
    const ws = new WebSocket(urlRef.value, protocols);
    wsRef.value = ws;
    status.value = "CONNECTING";
    ws.onopen = () => {
      status.value = "OPEN";
      onConnected == null ? void 0 : onConnected(ws);
      heartbeatResume == null ? void 0 : heartbeatResume();
      _sendBuffer();
    };
    ws.onclose = (ev) => {
      status.value = "CLOSED";
      onDisconnected == null ? void 0 : onDisconnected(ws, ev);
      if (!explicitlyClosed && options.autoReconnect) {
        const {
          retries = -1,
          delay = 1e3,
          onFailed
        } = resolveNestedOptions(options.autoReconnect);
        retried += 1;
        if (typeof retries === "number" && (retries < 0 || retried < retries))
          setTimeout(_init, delay);
        else if (typeof retries === "function" && retries())
          setTimeout(_init, delay);
        else
          onFailed == null ? void 0 : onFailed();
      }
    };
    ws.onerror = (e) => {
      onError == null ? void 0 : onError(ws, e);
    };
    ws.onmessage = (e) => {
      if (options.heartbeat) {
        resetHeartbeat();
        const {
          message = DEFAULT_PING_MESSAGE
        } = resolveNestedOptions(options.heartbeat);
        if (e.data === message)
          return;
      }
      data.value = e.data;
      onMessage == null ? void 0 : onMessage(ws, e);
    };
  };
  if (options.heartbeat) {
    const {
      message = DEFAULT_PING_MESSAGE,
      interval = 1e3,
      pongTimeout = 1e3
    } = resolveNestedOptions(options.heartbeat);
    const { pause, resume } = useIntervalFn(
      () => {
        send(message, false);
        if (pongTimeoutWait != null)
          return;
        pongTimeoutWait = setTimeout(() => {
          close();
          explicitlyClosed = false;
        }, pongTimeout);
      },
      interval,
      { immediate: false }
    );
    heartbeatPause = pause;
    heartbeatResume = resume;
  }
  if (autoClose) {
    if (isClient)
      useEventListener("beforeunload", () => close());
    tryOnScopeDispose(close);
  }
  const open = () => {
    if (!isClient && !isWorker)
      return;
    close();
    explicitlyClosed = false;
    retried = 0;
    _init();
  };
  if (immediate)
    open();
  return {
    data,
    status,
    close,
    send,
    open,
    ws: wsRef
  };
}

function useWebWorker(arg0, workerOptions, options) {
  const {
    window = defaultWindow
  } = options != null ? options : {};
  const data = ref(null);
  const worker = shallowRef();
  const post = (...args) => {
    if (!worker.value)
      return;
    worker.value.postMessage(...args);
  };
  const terminate = function terminate2() {
    if (!worker.value)
      return;
    worker.value.terminate();
  };
  if (window) {
    if (typeof arg0 === "string")
      worker.value = new Worker(arg0, workerOptions);
    else if (typeof arg0 === "function")
      worker.value = arg0();
    else
      worker.value = arg0;
    worker.value.onmessage = (e) => {
      data.value = e.data;
    };
    tryOnScopeDispose(() => {
      if (worker.value)
        worker.value.terminate();
    });
  }
  return {
    data,
    post,
    terminate,
    worker
  };
}

function jobRunner(userFunc) {
  return (e) => {
    const userFuncArgs = e.data[0];
    return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {
      postMessage(["SUCCESS", result]);
    }).catch((error) => {
      postMessage(["ERROR", error]);
    });
  };
}

function depsParser(deps) {
  if (deps.length === 0)
    return "";
  const depsString = deps.map((dep) => `'${dep}'`).toString();
  return `importScripts(${depsString})`;
}

function createWorkerBlobUrl(fn, deps) {
  const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;
  const blob = new Blob([blobCode], { type: "text/javascript" });
  const url = URL.createObjectURL(blob);
  return url;
}

function useWebWorkerFn(fn, options = {}) {
  const {
    dependencies = [],
    timeout,
    window = defaultWindow
  } = options;
  const worker = ref();
  const workerStatus = ref("PENDING");
  const promise = ref({});
  const timeoutId = ref();
  const workerTerminate = (status = "PENDING") => {
    if (worker.value && worker.value._url && window) {
      worker.value.terminate();
      URL.revokeObjectURL(worker.value._url);
      promise.value = {};
      worker.value = void 0;
      window.clearTimeout(timeoutId.value);
      workerStatus.value = status;
    }
  };
  workerTerminate();
  tryOnScopeDispose(workerTerminate);
  const generateWorker = () => {
    const blobUrl = createWorkerBlobUrl(fn, dependencies);
    const newWorker = new Worker(blobUrl);
    newWorker._url = blobUrl;
    newWorker.onmessage = (e) => {
      const { resolve = () => {
      }, reject = () => {
      } } = promise.value;
      const [status, result] = e.data;
      switch (status) {
        case "SUCCESS":
          resolve(result);
          workerTerminate(status);
          break;
        default:
          reject(result);
          workerTerminate("ERROR");
          break;
      }
    };
    newWorker.onerror = (e) => {
      const { reject = () => {
      } } = promise.value;
      e.preventDefault();
      reject(e);
      workerTerminate("ERROR");
    };
    if (timeout) {
      timeoutId.value = setTimeout(
        () => workerTerminate("TIMEOUT_EXPIRED"),
        timeout
      );
    }
    return newWorker;
  };
  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {
    promise.value = {
      resolve,
      reject
    };
    worker.value && worker.value.postMessage([[...fnArgs]]);
    workerStatus.value = "RUNNING";
  });
  const workerFn = (...fnArgs) => {
    if (workerStatus.value === "RUNNING") {
      console.error(
        "[useWebWorkerFn] You can only run one instance of the worker at a time."
      );
      return Promise.reject();
    }
    worker.value = generateWorker();
    return callWorker(...fnArgs);
  };
  return {
    workerFn,
    workerStatus,
    workerTerminate
  };
}

function useWindowFocus(options = {}) {
  const { window = defaultWindow } = options;
  if (!window)
    return (0,vue_runtime_esm/* ref */.KR)(false);
  const focused = (0,vue_runtime_esm/* ref */.KR)(window.document.hasFocus());
  useEventListener(window, "blur", () => {
    focused.value = false;
  });
  useEventListener(window, "focus", () => {
    focused.value = true;
  });
  return focused;
}

function useWindowScroll(options = {}) {
  const { window = defaultWindow, behavior = "auto" } = options;
  if (!window) {
    return {
      x: ref(0),
      y: ref(0)
    };
  }
  const internalX = ref(window.scrollX);
  const internalY = ref(window.scrollY);
  const x = computed({
    get() {
      return internalX.value;
    },
    set(x2) {
      scrollTo({ left: x2, behavior });
    }
  });
  const y = computed({
    get() {
      return internalY.value;
    },
    set(y2) {
      scrollTo({ top: y2, behavior });
    }
  });
  useEventListener(
    window,
    "scroll",
    () => {
      internalX.value = window.scrollX;
      internalY.value = window.scrollY;
    },
    {
      capture: false,
      passive: true
    }
  );
  return { x, y };
}

function useWindowSize(options = {}) {
  const {
    window = defaultWindow,
    initialWidth = Number.POSITIVE_INFINITY,
    initialHeight = Number.POSITIVE_INFINITY,
    listenOrientation = true,
    includeScrollbar = true
  } = options;
  const width = (0,vue_runtime_esm/* ref */.KR)(initialWidth);
  const height = (0,vue_runtime_esm/* ref */.KR)(initialHeight);
  const update = () => {
    if (window) {
      if (includeScrollbar) {
        width.value = window.innerWidth;
        height.value = window.innerHeight;
      } else {
        width.value = window.document.documentElement.clientWidth;
        height.value = window.document.documentElement.clientHeight;
      }
    }
  };
  update();
  (0,shared/* tryOnMounted */.rd)(update);
  useEventListener("resize", update, { passive: true });
  if (listenOrientation) {
    const matches = useMediaQuery("(orientation: portrait)");
    (0,vue_runtime_esm/* watch */.wB)(matches, () => update());
  }
  return { width, height };
}




/***/ }),

/***/ 9271:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  zg: () => (/* binding */ bypassFilter),
  qE: () => (/* binding */ clamp),
  sq: () => (/* binding */ createFilterWrapper),
  Jv: () => (/* binding */ createSingletonPromise),
  C$: () => (/* binding */ directiveHooks),
  D_: () => (/* binding */ identity),
  oc: () => (/* binding */ isClient),
  un: () => (/* binding */ isIOS),
  Gv: () => (/* binding */ isObject),
  lQ: () => (/* binding */ noop),
  d6: () => (/* binding */ notNullish),
  WP: () => (/* binding */ objectEntries),
  je: () => (/* binding */ objectPick),
  Hr: () => (/* binding */ watchPausable),
  he: () => (/* binding */ promiseTimeout),
  Dk: () => (/* binding */ syncRef),
  r6: () => (/* binding */ throttleFilter),
  vE: () => (/* binding */ timestamp),
  lW: () => (/* binding */ toRef),
  QW: () => (/* binding */ toRefs),
  BA: () => (/* binding */ toValue),
  rd: () => (/* binding */ tryOnMounted),
  Uo: () => (/* binding */ tryOnScopeDispose),
  TG: () => (/* binding */ until),
  Q0: () => (/* binding */ useDebounceFn),
  Rg: () => (/* binding */ useIntervalFn),
  k3: () => (/* binding */ useThrottleFn),
  TO: () => (/* binding */ useTimeoutFn),
  eY: () => (/* binding */ useToggle)
});

// UNUSED EXPORTS: assert, autoResetRef, camelize, computedEager, computedWithControl, containsProp, controlledComputed, controlledRef, createEventHook, createGlobalState, createInjectionState, createReactiveFn, createSharedComposable, debounceFilter, debouncedRef, debouncedWatch, eagerComputed, extendRef, formatDate, get, getLifeCycleTarget, hasOwn, hyphenate, ignorableWatch, increaseWithUnit, injectLocal, invoke, isDef, isDefined, isWorker, makeDestructurable, normalizeDate, now, objectOmit, pausableFilter, provideLocal, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRefs, throttledRef, throttledWatch, toReactive, tryOnBeforeMount, tryOnBeforeUnmount, tryOnUnmounted, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, useDebounce, useInterval, useLastChanged, useThrottle, useTimeout, useToNumber, useToString, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
;// CONCATENATED MODULE: ./node_modules/@vueuse/shared/node_modules/vue-demi/lib/index.mjs



var lib_isVue2 = true
var lib_isVue3 = false
var Vue2 = (/* unused pure expression or super */ null && (Vue))
var warn = vue_runtime_esm/* default */.Ay.util.warn

function install() {}

// createApp polyfill
function createApp(rootComponent, rootProps) {
  var vm
  var provide = {}
  var app = {
    config: Vue.config,
    use: Vue.use.bind(Vue),
    mixin: Vue.mixin.bind(Vue),
    component: Vue.component.bind(Vue),
    provide: function (key, value) {
      provide[key] = value
      return this
    },
    directive: function (name, dir) {
      if (dir) {
        Vue.directive(name, dir)
        return app
      } else {
        return Vue.directive(name)
      }
    },
    mount: function (el, hydrating) {
      if (!vm) {
        vm = new Vue(Object.assign({ propsData: rootProps }, rootComponent, { provide: Object.assign(provide, rootComponent.provide) }))
        vm.$mount(el, hydrating)
        return vm
      } else {
        return vm
      }
    },
    unmount: function () {
      if (vm) {
        vm.$destroy()
        vm = undefined
      }
    },
  }
  return app
}



// Vue 3 components mock
function createMockComponent(name) {
  return {
    setup() {
      throw new Error('[vue-demi] ' + name + ' is not supported in Vue 2. It\'s provided to avoid compiler errors.')
    }
  }
}
var Fragment = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Fragment')))
var Transition = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Transition')))
var TransitionGroup = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('TransitionGroup')))
var Teleport = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Teleport')))
var Suspense = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('Suspense')))
var KeepAlive = /*#__PURE__*/ (/* unused pure expression or super */ null && (createMockComponent('KeepAlive')))



// Not implemented https://github.com/vuejs/core/pull/8111, falls back to getCurrentInstance()
function hasInjectionContext() {
  return !!getCurrentInstance()
}

;// CONCATENATED MODULE: ./node_modules/@vueuse/shared/index.mjs


function computedEager(fn, options) {
  var _a;
  const result = shallowRef();
  watchEffect(() => {
    result.value = fn();
  }, {
    ...options,
    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : "sync"
  });
  return readonly(result);
}

function computedWithControl(source, fn) {
  let v = void 0;
  let track;
  let trigger;
  const dirty = ref(true);
  const update = () => {
    dirty.value = true;
    trigger();
  };
  watch(source, update, { flush: "sync" });
  const get = typeof fn === "function" ? fn : fn.get;
  const set = typeof fn === "function" ? void 0 : fn.set;
  const result = customRef((_track, _trigger) => {
    track = _track;
    trigger = _trigger;
    return {
      get() {
        if (dirty.value) {
          v = get();
          dirty.value = false;
        }
        track();
        return v;
      },
      set(v2) {
        set == null ? void 0 : set(v2);
      }
    };
  });
  if (Object.isExtensible(result))
    result.trigger = update;
  return result;
}

function tryOnScopeDispose(fn) {
  if ((0,vue_runtime_esm/* getCurrentScope */.o5)()) {
    (0,vue_runtime_esm/* onScopeDispose */.jr)(fn);
    return true;
  }
  return false;
}

function createEventHook() {
  const fns = /* @__PURE__ */ new Set();
  const off = (fn) => {
    fns.delete(fn);
  };
  const on = (fn) => {
    fns.add(fn);
    const offFn = () => off(fn);
    tryOnScopeDispose(offFn);
    return {
      off: offFn
    };
  };
  const trigger = (...args) => {
    return Promise.all(Array.from(fns).map((fn) => fn(...args)));
  };
  return {
    on,
    off,
    trigger
  };
}

function createGlobalState(stateFactory) {
  let initialized = false;
  let state;
  const scope = effectScope(true);
  return (...args) => {
    if (!initialized) {
      state = scope.run(() => stateFactory(...args));
      initialized = true;
    }
    return state;
  };
}

const localProvidedStateMap = /* @__PURE__ */ new WeakMap();

const provideLocal = (key, value) => {
  var _a;
  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;
  if (instance == null)
    throw new Error("provideLocal must be called in setup");
  if (!localProvidedStateMap.has(instance))
    localProvidedStateMap.set(instance, /* @__PURE__ */ Object.create(null));
  const localProvidedState = localProvidedStateMap.get(instance);
  localProvidedState[key] = value;
  provide(key, value);
};

const injectLocal = (...args) => {
  var _a;
  const key = args[0];
  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;
  if (instance == null)
    throw new Error("injectLocal must be called in setup");
  if (localProvidedStateMap.has(instance) && key in localProvidedStateMap.get(instance))
    return localProvidedStateMap.get(instance)[key];
  return inject(...args);
};

function createInjectionState(composable, options) {
  const key = (options == null ? void 0 : options.injectionKey) || Symbol(composable.name || "InjectionState");
  const useProvidingState = (...args) => {
    const state = composable(...args);
    provideLocal(key, state);
    return state;
  };
  const useInjectedState = () => injectLocal(key);
  return [useProvidingState, useInjectedState];
}

function createSharedComposable(composable) {
  let subscribers = 0;
  let state;
  let scope;
  const dispose = () => {
    subscribers -= 1;
    if (scope && subscribers <= 0) {
      scope.stop();
      state = void 0;
      scope = void 0;
    }
  };
  return (...args) => {
    subscribers += 1;
    if (!state) {
      scope = effectScope(true);
      state = scope.run(() => composable(...args));
    }
    tryOnScopeDispose(dispose);
    return state;
  };
}

function extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {
  if (!isVue3 && !version.startsWith("2.7.")) {
    if (false)
      {}
    return;
  }
  for (const [key, value] of Object.entries(extend)) {
    if (key === "value")
      continue;
    if (isRef(value) && unwrap) {
      Object.defineProperty(ref, key, {
        get() {
          return value.value;
        },
        set(v) {
          value.value = v;
        },
        enumerable
      });
    } else {
      Object.defineProperty(ref, key, { value, enumerable });
    }
  }
  return ref;
}

function get(obj, key) {
  if (key == null)
    return unref(obj);
  return unref(obj)[key];
}

function isDefined(v) {
  return unref(v) != null;
}

function makeDestructurable(obj, arr) {
  if (typeof Symbol !== "undefined") {
    const clone = { ...obj };
    Object.defineProperty(clone, Symbol.iterator, {
      enumerable: false,
      value() {
        let index = 0;
        return {
          next: () => ({
            value: arr[index++],
            done: index > arr.length
          })
        };
      }
    });
    return clone;
  } else {
    return Object.assign([...arr], obj);
  }
}

function toValue(r) {
  return typeof r === "function" ? r() : (0,vue_runtime_esm/* unref */.R1)(r);
}
const resolveUnref = (/* unused pure expression or super */ null && (toValue));

function reactify(fn, options) {
  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue;
  return function(...args) {
    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));
  };
}

function reactifyObject(obj, optionsOrKeys = {}) {
  let keys = [];
  let options;
  if (Array.isArray(optionsOrKeys)) {
    keys = optionsOrKeys;
  } else {
    options = optionsOrKeys;
    const { includeOwnProperties = true } = optionsOrKeys;
    keys.push(...Object.keys(obj));
    if (includeOwnProperties)
      keys.push(...Object.getOwnPropertyNames(obj));
  }
  return Object.fromEntries(
    keys.map((key) => {
      const value = obj[key];
      return [
        key,
        typeof value === "function" ? reactify(value.bind(obj), options) : value
      ];
    })
  );
}

function toReactive(objectRef) {
  if (!isRef(objectRef))
    return reactive(objectRef);
  const proxy = new Proxy({}, {
    get(_, p, receiver) {
      return unref(Reflect.get(objectRef.value, p, receiver));
    },
    set(_, p, value) {
      if (isRef(objectRef.value[p]) && !isRef(value))
        objectRef.value[p].value = value;
      else
        objectRef.value[p] = value;
      return true;
    },
    deleteProperty(_, p) {
      return Reflect.deleteProperty(objectRef.value, p);
    },
    has(_, p) {
      return Reflect.has(objectRef.value, p);
    },
    ownKeys() {
      return Object.keys(objectRef.value);
    },
    getOwnPropertyDescriptor() {
      return {
        enumerable: true,
        configurable: true
      };
    }
  });
  return reactive(proxy);
}

function reactiveComputed(fn) {
  return toReactive(computed(fn));
}

function reactiveOmit(obj, ...keys) {
  const flatKeys = keys.flat();
  const predicate = flatKeys[0];
  return reactiveComputed(() => typeof predicate === "function" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));
}

const isClient = typeof window !== "undefined" && typeof document !== "undefined";
const isWorker = typeof WorkerGlobalScope !== "undefined" && globalThis instanceof WorkerGlobalScope;
const isDef = (val) => typeof val !== "undefined";
const notNullish = (val) => val != null;
const assert = (condition, ...infos) => {
  if (!condition)
    console.warn(...infos);
};
const shared_toString = Object.prototype.toString;
const isObject = (val) => shared_toString.call(val) === "[object Object]";
const now = () => Date.now();
const timestamp = () => +Date.now();
const clamp = (n, min, max) => Math.min(max, Math.max(min, n));
const noop = () => {
};
const rand = (min, max) => {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min;
};
const hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);
const isIOS = /* @__PURE__ */ getIsIOS();
function getIsIOS() {
  var _a, _b;
  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && (/iP(ad|hone|od)/.test(window.navigator.userAgent) || ((_b = window == null ? void 0 : window.navigator) == null ? void 0 : _b.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));
}

function createFilterWrapper(filter, fn) {
  function wrapper(...args) {
    return new Promise((resolve, reject) => {
      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);
    });
  }
  return wrapper;
}
const bypassFilter = (invoke) => {
  return invoke();
};
function debounceFilter(ms, options = {}) {
  let timer;
  let maxTimer;
  let lastRejector = noop;
  const _clearTimeout = (timer2) => {
    clearTimeout(timer2);
    lastRejector();
    lastRejector = noop;
  };
  const filter = (invoke) => {
    const duration = toValue(ms);
    const maxDuration = toValue(options.maxWait);
    if (timer)
      _clearTimeout(timer);
    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {
      if (maxTimer) {
        _clearTimeout(maxTimer);
        maxTimer = null;
      }
      return Promise.resolve(invoke());
    }
    return new Promise((resolve, reject) => {
      lastRejector = options.rejectOnCancel ? reject : resolve;
      if (maxDuration && !maxTimer) {
        maxTimer = setTimeout(() => {
          if (timer)
            _clearTimeout(timer);
          maxTimer = null;
          resolve(invoke());
        }, maxDuration);
      }
      timer = setTimeout(() => {
        if (maxTimer)
          _clearTimeout(maxTimer);
        maxTimer = null;
        resolve(invoke());
      }, duration);
    });
  };
  return filter;
}
function throttleFilter(...args) {
  let lastExec = 0;
  let timer;
  let isLeading = true;
  let lastRejector = noop;
  let lastValue;
  let ms;
  let trailing;
  let leading;
  let rejectOnCancel;
  if (!(0,vue_runtime_esm/* isRef */.i9)(args[0]) && typeof args[0] === "object")
    ({ delay: ms, trailing = true, leading = true, rejectOnCancel = false } = args[0]);
  else
    [ms, trailing = true, leading = true, rejectOnCancel = false] = args;
  const clear = () => {
    if (timer) {
      clearTimeout(timer);
      timer = void 0;
      lastRejector();
      lastRejector = noop;
    }
  };
  const filter = (_invoke) => {
    const duration = toValue(ms);
    const elapsed = Date.now() - lastExec;
    const invoke = () => {
      return lastValue = _invoke();
    };
    clear();
    if (duration <= 0) {
      lastExec = Date.now();
      return invoke();
    }
    if (elapsed > duration && (leading || !isLeading)) {
      lastExec = Date.now();
      invoke();
    } else if (trailing) {
      lastValue = new Promise((resolve, reject) => {
        lastRejector = rejectOnCancel ? reject : resolve;
        timer = setTimeout(() => {
          lastExec = Date.now();
          isLeading = true;
          resolve(invoke());
          clear();
        }, Math.max(0, duration - elapsed));
      });
    }
    if (!leading && !timer)
      timer = setTimeout(() => isLeading = true, duration);
    isLeading = false;
    return lastValue;
  };
  return filter;
}
function pausableFilter(extendFilter = bypassFilter) {
  const isActive = (0,vue_runtime_esm/* ref */.KR)(true);
  function pause() {
    isActive.value = false;
  }
  function resume() {
    isActive.value = true;
  }
  const eventFilter = (...args) => {
    if (isActive.value)
      extendFilter(...args);
  };
  return { isActive: (0,vue_runtime_esm/* readonly */.tB)(isActive), pause, resume, eventFilter };
}

const directiveHooks = {
  mounted: lib_isVue3 ? "mounted" : "inserted",
  updated: lib_isVue3 ? "updated" : "componentUpdated",
  unmounted: lib_isVue3 ? "unmounted" : "unbind"
};

function cacheStringFunction(fn) {
  const cache = /* @__PURE__ */ Object.create(null);
  return (str) => {
    const hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}
const hyphenateRE = /\B([A-Z])/g;
const hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, "-$1").toLowerCase());
const camelizeRE = /-(\w)/g;
const camelize = cacheStringFunction((str) => {
  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : "");
});

function promiseTimeout(ms, throwOnTimeout = false, reason = "Timeout") {
  return new Promise((resolve, reject) => {
    if (throwOnTimeout)
      setTimeout(() => reject(reason), ms);
    else
      setTimeout(resolve, ms);
  });
}
function identity(arg) {
  return arg;
}
function createSingletonPromise(fn) {
  let _promise;
  function wrapper() {
    if (!_promise)
      _promise = fn();
    return _promise;
  }
  wrapper.reset = async () => {
    const _prev = _promise;
    _promise = void 0;
    if (_prev)
      await _prev;
  };
  return wrapper;
}
function invoke(fn) {
  return fn();
}
function containsProp(obj, ...props) {
  return props.some((k) => k in obj);
}
function increaseWithUnit(target, delta) {
  var _a;
  if (typeof target === "number")
    return target + delta;
  const value = ((_a = target.match(/^-?[0-9]+\.?[0-9]*/)) == null ? void 0 : _a[0]) || "";
  const unit = target.slice(value.length);
  const result = Number.parseFloat(value) + delta;
  if (Number.isNaN(result))
    return target;
  return result + unit;
}
function objectPick(obj, keys, omitUndefined = false) {
  return keys.reduce((n, k) => {
    if (k in obj) {
      if (!omitUndefined || obj[k] !== void 0)
        n[k] = obj[k];
    }
    return n;
  }, {});
}
function objectOmit(obj, keys, omitUndefined = false) {
  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {
    return (!omitUndefined || value !== void 0) && !keys.includes(key);
  }));
}
function objectEntries(obj) {
  return Object.entries(obj);
}
function getLifeCycleTarget(target) {
  return target || (0,vue_runtime_esm/* getCurrentInstance */.nI)();
}

function toRef(...args) {
  if (args.length !== 1)
    return (0,vue_runtime_esm/* toRef */.lW)(...args);
  const r = args[0];
  return typeof r === "function" ? (0,vue_runtime_esm/* readonly */.tB)((0,vue_runtime_esm/* customRef */.rY)(() => ({ get: r, set: noop }))) : (0,vue_runtime_esm/* ref */.KR)(r);
}
const resolveRef = (/* unused pure expression or super */ null && (toRef));

function reactivePick(obj, ...keys) {
  const flatKeys = keys.flat();
  const predicate = flatKeys[0];
  return reactiveComputed(() => typeof predicate === "function" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));
}

function refAutoReset(defaultValue, afterMs = 1e4) {
  return customRef((track, trigger) => {
    let value = toValue(defaultValue);
    let timer;
    const resetAfter = () => setTimeout(() => {
      value = toValue(defaultValue);
      trigger();
    }, toValue(afterMs));
    tryOnScopeDispose(() => {
      clearTimeout(timer);
    });
    return {
      get() {
        track();
        return value;
      },
      set(newValue) {
        value = newValue;
        trigger();
        clearTimeout(timer);
        timer = resetAfter();
      }
    };
  });
}

function useDebounceFn(fn, ms = 200, options = {}) {
  return createFilterWrapper(
    debounceFilter(ms, options),
    fn
  );
}

function refDebounced(value, ms = 200, options = {}) {
  const debounced = ref(value.value);
  const updater = useDebounceFn(() => {
    debounced.value = value.value;
  }, ms, options);
  watch(value, () => updater());
  return debounced;
}

function refDefault(source, defaultValue) {
  return computed({
    get() {
      var _a;
      return (_a = source.value) != null ? _a : defaultValue;
    },
    set(value) {
      source.value = value;
    }
  });
}

function useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {
  return createFilterWrapper(
    throttleFilter(ms, trailing, leading, rejectOnCancel),
    fn
  );
}

function refThrottled(value, delay = 200, trailing = true, leading = true) {
  if (delay <= 0)
    return value;
  const throttled = ref(value.value);
  const updater = useThrottleFn(() => {
    throttled.value = value.value;
  }, delay, trailing, leading);
  watch(value, () => updater());
  return throttled;
}

function refWithControl(initial, options = {}) {
  let source = initial;
  let track;
  let trigger;
  const ref = customRef((_track, _trigger) => {
    track = _track;
    trigger = _trigger;
    return {
      get() {
        return get();
      },
      set(v) {
        set(v);
      }
    };
  });
  function get(tracking = true) {
    if (tracking)
      track();
    return source;
  }
  function set(value, triggering = true) {
    var _a, _b;
    if (value === source)
      return;
    const old = source;
    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)
      return;
    source = value;
    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);
    if (triggering)
      trigger();
  }
  const untrackedGet = () => get(false);
  const silentSet = (v) => set(v, false);
  const peek = () => get(false);
  const lay = (v) => set(v, false);
  return extendRef(
    ref,
    {
      get,
      set,
      untrackedGet,
      silentSet,
      peek,
      lay
    },
    { enumerable: true }
  );
}
const controlledRef = (/* unused pure expression or super */ null && (refWithControl));

function set(...args) {
  if (args.length === 2) {
    const [ref, value] = args;
    ref.value = value;
  }
  if (args.length === 3) {
    if (isVue2) {
      set$1(...args);
    } else {
      const [target, key, value] = args;
      target[key] = value;
    }
  }
}

function watchWithFilter(source, cb, options = {}) {
  const {
    eventFilter = bypassFilter,
    ...watchOptions
  } = options;
  return (0,vue_runtime_esm/* watch */.wB)(
    source,
    createFilterWrapper(
      eventFilter,
      cb
    ),
    watchOptions
  );
}

function watchPausable(source, cb, options = {}) {
  const {
    eventFilter: filter,
    ...watchOptions
  } = options;
  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);
  const stop = watchWithFilter(
    source,
    cb,
    {
      ...watchOptions,
      eventFilter
    }
  );
  return { stop, pause, resume, isActive };
}

function syncRef(left, right, ...[options]) {
  const {
    flush = "sync",
    deep = false,
    immediate = true,
    direction = "both",
    transform = {}
  } = options || {};
  const watchers = [];
  const transformLTR = "ltr" in transform && transform.ltr || ((v) => v);
  const transformRTL = "rtl" in transform && transform.rtl || ((v) => v);
  if (direction === "both" || direction === "ltr") {
    watchers.push(watchPausable(
      left,
      (newValue) => {
        watchers.forEach((w) => w.pause());
        right.value = transformLTR(newValue);
        watchers.forEach((w) => w.resume());
      },
      { flush, deep, immediate }
    ));
  }
  if (direction === "both" || direction === "rtl") {
    watchers.push(watchPausable(
      right,
      (newValue) => {
        watchers.forEach((w) => w.pause());
        left.value = transformRTL(newValue);
        watchers.forEach((w) => w.resume());
      },
      { flush, deep, immediate }
    ));
  }
  const stop = () => {
    watchers.forEach((w) => w.stop());
  };
  return stop;
}

function syncRefs(source, targets, options = {}) {
  const {
    flush = "sync",
    deep = false,
    immediate = true
  } = options;
  if (!Array.isArray(targets))
    targets = [targets];
  return watch(
    source,
    (newValue) => targets.forEach((target) => target.value = newValue),
    { flush, deep, immediate }
  );
}

function toRefs(objectRef, options = {}) {
  if (!(0,vue_runtime_esm/* isRef */.i9)(objectRef))
    return (0,vue_runtime_esm/* toRefs */.QW)(objectRef);
  const result = Array.isArray(objectRef.value) ? Array.from({ length: objectRef.value.length }) : {};
  for (const key in objectRef.value) {
    result[key] = (0,vue_runtime_esm/* customRef */.rY)(() => ({
      get() {
        return objectRef.value[key];
      },
      set(v) {
        var _a;
        const replaceRef = (_a = toValue(options.replaceRef)) != null ? _a : true;
        if (replaceRef) {
          if (Array.isArray(objectRef.value)) {
            const copy = [...objectRef.value];
            copy[key] = v;
            objectRef.value = copy;
          } else {
            const newObject = { ...objectRef.value, [key]: v };
            Object.setPrototypeOf(newObject, Object.getPrototypeOf(objectRef.value));
            objectRef.value = newObject;
          }
        } else {
          objectRef.value[key] = v;
        }
      }
    }));
  }
  return result;
}

function tryOnBeforeMount(fn, sync = true, target) {
  const instance = getLifeCycleTarget(target);
  if (instance)
    onBeforeMount(fn, target);
  else if (sync)
    fn();
  else
    nextTick(fn);
}

function tryOnBeforeUnmount(fn, target) {
  const instance = getLifeCycleTarget(target);
  if (instance)
    onBeforeUnmount(fn, target);
}

function tryOnMounted(fn, sync = true, target) {
  const instance = getLifeCycleTarget();
  if (instance)
    (0,vue_runtime_esm/* onMounted */.sV)(fn, target);
  else if (sync)
    fn();
  else
    (0,vue_runtime_esm/* nextTick */.dY)(fn);
}

function tryOnUnmounted(fn, target) {
  const instance = getLifeCycleTarget(target);
  if (instance)
    onUnmounted(fn, target);
}

function createUntil(r, isNot = false) {
  function toMatch(condition, { flush = "sync", deep = false, timeout, throwOnTimeout } = {}) {
    let stop = null;
    const watcher = new Promise((resolve) => {
      stop = (0,vue_runtime_esm/* watch */.wB)(
        r,
        (v) => {
          if (condition(v) !== isNot) {
            stop == null ? void 0 : stop();
            resolve(v);
          }
        },
        {
          flush,
          deep,
          immediate: true
        }
      );
    });
    const promises = [watcher];
    if (timeout != null) {
      promises.push(
        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => stop == null ? void 0 : stop())
      );
    }
    return Promise.race(promises);
  }
  function toBe(value, options) {
    if (!(0,vue_runtime_esm/* isRef */.i9)(value))
      return toMatch((v) => v === value, options);
    const { flush = "sync", deep = false, timeout, throwOnTimeout } = options != null ? options : {};
    let stop = null;
    const watcher = new Promise((resolve) => {
      stop = (0,vue_runtime_esm/* watch */.wB)(
        [r, value],
        ([v1, v2]) => {
          if (isNot !== (v1 === v2)) {
            stop == null ? void 0 : stop();
            resolve(v1);
          }
        },
        {
          flush,
          deep,
          immediate: true
        }
      );
    });
    const promises = [watcher];
    if (timeout != null) {
      promises.push(
        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => {
          stop == null ? void 0 : stop();
          return toValue(r);
        })
      );
    }
    return Promise.race(promises);
  }
  function toBeTruthy(options) {
    return toMatch((v) => Boolean(v), options);
  }
  function toBeNull(options) {
    return toBe(null, options);
  }
  function toBeUndefined(options) {
    return toBe(void 0, options);
  }
  function toBeNaN(options) {
    return toMatch(Number.isNaN, options);
  }
  function toContains(value, options) {
    return toMatch((v) => {
      const array = Array.from(v);
      return array.includes(value) || array.includes(toValue(value));
    }, options);
  }
  function changed(options) {
    return changedTimes(1, options);
  }
  function changedTimes(n = 1, options) {
    let count = -1;
    return toMatch(() => {
      count += 1;
      return count >= n;
    }, options);
  }
  if (Array.isArray(toValue(r))) {
    const instance = {
      toMatch,
      toContains,
      changed,
      changedTimes,
      get not() {
        return createUntil(r, !isNot);
      }
    };
    return instance;
  } else {
    const instance = {
      toMatch,
      toBe,
      toBeTruthy,
      toBeNull,
      toBeNaN,
      toBeUndefined,
      changed,
      changedTimes,
      get not() {
        return createUntil(r, !isNot);
      }
    };
    return instance;
  }
}
function until(r) {
  return createUntil(r);
}

function defaultComparator(value, othVal) {
  return value === othVal;
}
function useArrayDifference(...args) {
  var _a;
  const list = args[0];
  const values = args[1];
  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;
  if (typeof compareFn === "string") {
    const key = compareFn;
    compareFn = (value, othVal) => value[key] === othVal[key];
  }
  return computed(() => toValue(list).filter((x) => toValue(values).findIndex((y) => compareFn(x, y)) === -1));
}

function useArrayEvery(list, fn) {
  return computed(() => toValue(list).every((element, index, array) => fn(toValue(element), index, array)));
}

function useArrayFilter(list, fn) {
  return computed(() => toValue(list).map((i) => toValue(i)).filter(fn));
}

function useArrayFind(list, fn) {
  return computed(() => toValue(
    toValue(list).find((element, index, array) => fn(toValue(element), index, array))
  ));
}

function useArrayFindIndex(list, fn) {
  return computed(() => toValue(list).findIndex((element, index, array) => fn(toValue(element), index, array)));
}

function findLast(arr, cb) {
  let index = arr.length;
  while (index-- > 0) {
    if (cb(arr[index], index, arr))
      return arr[index];
  }
  return void 0;
}
function useArrayFindLast(list, fn) {
  return computed(() => toValue(
    !Array.prototype.findLast ? findLast(toValue(list), (element, index, array) => fn(toValue(element), index, array)) : toValue(list).findLast((element, index, array) => fn(toValue(element), index, array))
  ));
}

function isArrayIncludesOptions(obj) {
  return isObject(obj) && containsProp(obj, "formIndex", "comparator");
}
function useArrayIncludes(...args) {
  var _a;
  const list = args[0];
  const value = args[1];
  let comparator = args[2];
  let formIndex = 0;
  if (isArrayIncludesOptions(comparator)) {
    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;
    comparator = comparator.comparator;
  }
  if (typeof comparator === "string") {
    const key = comparator;
    comparator = (element, value2) => element[key] === toValue(value2);
  }
  comparator = comparator != null ? comparator : (element, value2) => element === toValue(value2);
  return computed(() => toValue(list).slice(formIndex).some((element, index, array) => comparator(
    toValue(element),
    toValue(value),
    index,
    toValue(array)
  )));
}

function useArrayJoin(list, separator) {
  return computed(() => toValue(list).map((i) => toValue(i)).join(toValue(separator)));
}

function useArrayMap(list, fn) {
  return computed(() => toValue(list).map((i) => toValue(i)).map(fn));
}

function useArrayReduce(list, reducer, ...args) {
  const reduceCallback = (sum, value, index) => reducer(toValue(sum), toValue(value), index);
  return computed(() => {
    const resolved = toValue(list);
    return args.length ? resolved.reduce(reduceCallback, toValue(args[0])) : resolved.reduce(reduceCallback);
  });
}

function useArraySome(list, fn) {
  return computed(() => toValue(list).some((element, index, array) => fn(toValue(element), index, array)));
}

function uniq(array) {
  return Array.from(new Set(array));
}
function uniqueElementsBy(array, fn) {
  return array.reduce((acc, v) => {
    if (!acc.some((x) => fn(v, x, array)))
      acc.push(v);
    return acc;
  }, []);
}
function useArrayUnique(list, compareFn) {
  return computed(() => {
    const resolvedList = toValue(list).map((element) => toValue(element));
    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);
  });
}

function useCounter(initialValue = 0, options = {}) {
  let _initialValue = unref(initialValue);
  const count = ref(initialValue);
  const {
    max = Number.POSITIVE_INFINITY,
    min = Number.NEGATIVE_INFINITY
  } = options;
  const inc = (delta = 1) => count.value = Math.max(Math.min(max, count.value + delta), min);
  const dec = (delta = 1) => count.value = Math.min(Math.max(min, count.value - delta), max);
  const get = () => count.value;
  const set = (val) => count.value = Math.max(min, Math.min(max, val));
  const reset = (val = _initialValue) => {
    _initialValue = val;
    return set(val);
  };
  return { count, inc, dec, get, set, reset };
}

const REGEX_PARSE = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/;
const REGEX_FORMAT = /[YMDHhms]o|\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;
function defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {
  let m = hours < 12 ? "AM" : "PM";
  if (hasPeriod)
    m = m.split("").reduce((acc, curr) => acc += `${curr}.`, "");
  return isLowercase ? m.toLowerCase() : m;
}
function formatOrdinal(num) {
  const suffixes = ["th", "st", "nd", "rd"];
  const v = num % 100;
  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);
}
function formatDate(date, formatStr, options = {}) {
  var _a;
  const years = date.getFullYear();
  const month = date.getMonth();
  const days = date.getDate();
  const hours = date.getHours();
  const minutes = date.getMinutes();
  const seconds = date.getSeconds();
  const milliseconds = date.getMilliseconds();
  const day = date.getDay();
  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;
  const matches = {
    Yo: () => formatOrdinal(years),
    YY: () => String(years).slice(-2),
    YYYY: () => years,
    M: () => month + 1,
    Mo: () => formatOrdinal(month + 1),
    MM: () => `${month + 1}`.padStart(2, "0"),
    MMM: () => date.toLocaleDateString(options.locales, { month: "short" }),
    MMMM: () => date.toLocaleDateString(options.locales, { month: "long" }),
    D: () => String(days),
    Do: () => formatOrdinal(days),
    DD: () => `${days}`.padStart(2, "0"),
    H: () => String(hours),
    Ho: () => formatOrdinal(hours),
    HH: () => `${hours}`.padStart(2, "0"),
    h: () => `${hours % 12 || 12}`.padStart(1, "0"),
    ho: () => formatOrdinal(hours % 12 || 12),
    hh: () => `${hours % 12 || 12}`.padStart(2, "0"),
    m: () => String(minutes),
    mo: () => formatOrdinal(minutes),
    mm: () => `${minutes}`.padStart(2, "0"),
    s: () => String(seconds),
    so: () => formatOrdinal(seconds),
    ss: () => `${seconds}`.padStart(2, "0"),
    SSS: () => `${milliseconds}`.padStart(3, "0"),
    d: () => day,
    dd: () => date.toLocaleDateString(options.locales, { weekday: "narrow" }),
    ddd: () => date.toLocaleDateString(options.locales, { weekday: "short" }),
    dddd: () => date.toLocaleDateString(options.locales, { weekday: "long" }),
    A: () => meridiem(hours, minutes),
    AA: () => meridiem(hours, minutes, false, true),
    a: () => meridiem(hours, minutes, true),
    aa: () => meridiem(hours, minutes, true, true)
  };
  return formatStr.replace(REGEX_FORMAT, (match, $1) => {
    var _a2, _b;
    return (_b = $1 != null ? $1 : (_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) != null ? _b : match;
  });
}
function normalizeDate(date) {
  if (date === null)
    return new Date(Number.NaN);
  if (date === void 0)
    return /* @__PURE__ */ new Date();
  if (date instanceof Date)
    return new Date(date);
  if (typeof date === "string" && !/Z$/i.test(date)) {
    const d = date.match(REGEX_PARSE);
    if (d) {
      const m = d[2] - 1 || 0;
      const ms = (d[7] || "0").substring(0, 3);
      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);
    }
  }
  return new Date(date);
}
function useDateFormat(date, formatStr = "HH:mm:ss", options = {}) {
  return computed(() => formatDate(normalizeDate(toValue(date)), toValue(formatStr), options));
}

function useIntervalFn(cb, interval = 1e3, options = {}) {
  const {
    immediate = true,
    immediateCallback = false
  } = options;
  let timer = null;
  const isActive = (0,vue_runtime_esm/* ref */.KR)(false);
  function clean() {
    if (timer) {
      clearInterval(timer);
      timer = null;
    }
  }
  function pause() {
    isActive.value = false;
    clean();
  }
  function resume() {
    const intervalValue = toValue(interval);
    if (intervalValue <= 0)
      return;
    isActive.value = true;
    if (immediateCallback)
      cb();
    clean();
    timer = setInterval(cb, intervalValue);
  }
  if (immediate && isClient)
    resume();
  if ((0,vue_runtime_esm/* isRef */.i9)(interval) || typeof interval === "function") {
    const stopWatch = (0,vue_runtime_esm/* watch */.wB)(interval, () => {
      if (isActive.value && isClient)
        resume();
    });
    tryOnScopeDispose(stopWatch);
  }
  tryOnScopeDispose(pause);
  return {
    isActive,
    pause,
    resume
  };
}

function useInterval(interval = 1e3, options = {}) {
  const {
    controls: exposeControls = false,
    immediate = true,
    callback
  } = options;
  const counter = ref(0);
  const update = () => counter.value += 1;
  const reset = () => {
    counter.value = 0;
  };
  const controls = useIntervalFn(
    callback ? () => {
      update();
      callback(counter.value);
    } : update,
    interval,
    { immediate }
  );
  if (exposeControls) {
    return {
      counter,
      reset,
      ...controls
    };
  } else {
    return counter;
  }
}

function useLastChanged(source, options = {}) {
  var _a;
  const ms = ref((_a = options.initialValue) != null ? _a : null);
  watch(
    source,
    () => ms.value = timestamp(),
    options
  );
  return ms;
}

function useTimeoutFn(cb, interval, options = {}) {
  const {
    immediate = true
  } = options;
  const isPending = (0,vue_runtime_esm/* ref */.KR)(false);
  let timer = null;
  function clear() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function stop() {
    isPending.value = false;
    clear();
  }
  function start(...args) {
    clear();
    isPending.value = true;
    timer = setTimeout(() => {
      isPending.value = false;
      timer = null;
      cb(...args);
    }, toValue(interval));
  }
  if (immediate) {
    isPending.value = true;
    if (isClient)
      start();
  }
  tryOnScopeDispose(stop);
  return {
    isPending: (0,vue_runtime_esm/* readonly */.tB)(isPending),
    start,
    stop
  };
}

function useTimeout(interval = 1e3, options = {}) {
  const {
    controls: exposeControls = false,
    callback
  } = options;
  const controls = useTimeoutFn(
    callback != null ? callback : noop,
    interval,
    options
  );
  const ready = computed(() => !controls.isPending.value);
  if (exposeControls) {
    return {
      ready,
      ...controls
    };
  } else {
    return ready;
  }
}

function useToNumber(value, options = {}) {
  const {
    method = "parseFloat",
    radix,
    nanToZero
  } = options;
  return computed(() => {
    let resolved = toValue(value);
    if (typeof resolved === "string")
      resolved = Number[method](resolved, radix);
    if (nanToZero && Number.isNaN(resolved))
      resolved = 0;
    return resolved;
  });
}

function useToString(value) {
  return computed(() => `${toValue(value)}`);
}

function useToggle(initialValue = false, options = {}) {
  const {
    truthyValue = true,
    falsyValue = false
  } = options;
  const valueIsRef = (0,vue_runtime_esm/* isRef */.i9)(initialValue);
  const _value = (0,vue_runtime_esm/* ref */.KR)(initialValue);
  function toggle(value) {
    if (arguments.length) {
      _value.value = value;
      return _value.value;
    } else {
      const truthy = toValue(truthyValue);
      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;
      return _value.value;
    }
  }
  if (valueIsRef)
    return toggle;
  else
    return [_value, toggle];
}

function watchArray(source, cb, options) {
  let oldList = (options == null ? void 0 : options.immediate) ? [] : [...source instanceof Function ? source() : Array.isArray(source) ? source : toValue(source)];
  return watch(source, (newList, _, onCleanup) => {
    const oldListRemains = Array.from({ length: oldList.length });
    const added = [];
    for (const obj of newList) {
      let found = false;
      for (let i = 0; i < oldList.length; i++) {
        if (!oldListRemains[i] && obj === oldList[i]) {
          oldListRemains[i] = true;
          found = true;
          break;
        }
      }
      if (!found)
        added.push(obj);
    }
    const removed = oldList.filter((_2, i) => !oldListRemains[i]);
    cb(newList, oldList, added, removed, onCleanup);
    oldList = [...newList];
  }, options);
}

function watchAtMost(source, cb, options) {
  const {
    count,
    ...watchOptions
  } = options;
  const current = ref(0);
  const stop = watchWithFilter(
    source,
    (...args) => {
      current.value += 1;
      if (current.value >= toValue(count))
        nextTick(() => stop());
      cb(...args);
    },
    watchOptions
  );
  return { count: current, stop };
}

function watchDebounced(source, cb, options = {}) {
  const {
    debounce = 0,
    maxWait = void 0,
    ...watchOptions
  } = options;
  return watchWithFilter(
    source,
    cb,
    {
      ...watchOptions,
      eventFilter: debounceFilter(debounce, { maxWait })
    }
  );
}

function watchDeep(source, cb, options) {
  return watch(
    source,
    cb,
    {
      ...options,
      deep: true
    }
  );
}

function watchIgnorable(source, cb, options = {}) {
  const {
    eventFilter = bypassFilter,
    ...watchOptions
  } = options;
  const filteredCb = createFilterWrapper(
    eventFilter,
    cb
  );
  let ignoreUpdates;
  let ignorePrevAsyncUpdates;
  let stop;
  if (watchOptions.flush === "sync") {
    const ignore = ref(false);
    ignorePrevAsyncUpdates = () => {
    };
    ignoreUpdates = (updater) => {
      ignore.value = true;
      updater();
      ignore.value = false;
    };
    stop = watch(
      source,
      (...args) => {
        if (!ignore.value)
          filteredCb(...args);
      },
      watchOptions
    );
  } else {
    const disposables = [];
    const ignoreCounter = ref(0);
    const syncCounter = ref(0);
    ignorePrevAsyncUpdates = () => {
      ignoreCounter.value = syncCounter.value;
    };
    disposables.push(
      watch(
        source,
        () => {
          syncCounter.value++;
        },
        { ...watchOptions, flush: "sync" }
      )
    );
    ignoreUpdates = (updater) => {
      const syncCounterPrev = syncCounter.value;
      updater();
      ignoreCounter.value += syncCounter.value - syncCounterPrev;
    };
    disposables.push(
      watch(
        source,
        (...args) => {
          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;
          ignoreCounter.value = 0;
          syncCounter.value = 0;
          if (ignore)
            return;
          filteredCb(...args);
        },
        watchOptions
      )
    );
    stop = () => {
      disposables.forEach((fn) => fn());
    };
  }
  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };
}

function watchImmediate(source, cb, options) {
  return watch(
    source,
    cb,
    {
      ...options,
      immediate: true
    }
  );
}

function watchOnce(source, cb, options) {
  const stop = watch(source, (...args) => {
    nextTick(() => stop());
    return cb(...args);
  }, options);
  return stop;
}

function watchThrottled(source, cb, options = {}) {
  const {
    throttle = 0,
    trailing = true,
    leading = true,
    ...watchOptions
  } = options;
  return watchWithFilter(
    source,
    cb,
    {
      ...watchOptions,
      eventFilter: throttleFilter(throttle, trailing, leading)
    }
  );
}

function watchTriggerable(source, cb, options = {}) {
  let cleanupFn;
  function onEffect() {
    if (!cleanupFn)
      return;
    const fn = cleanupFn;
    cleanupFn = void 0;
    fn();
  }
  function onCleanup(callback) {
    cleanupFn = callback;
  }
  const _cb = (value, oldValue) => {
    onEffect();
    return cb(value, oldValue, onCleanup);
  };
  const res = watchIgnorable(source, _cb, options);
  const { ignoreUpdates } = res;
  const trigger = () => {
    let res2;
    ignoreUpdates(() => {
      res2 = _cb(getWatchSources(source), getOldValue(source));
    });
    return res2;
  };
  return {
    ...res,
    trigger
  };
}
function getWatchSources(sources) {
  if (isReactive(sources))
    return sources;
  if (Array.isArray(sources))
    return sources.map((item) => toValue(item));
  return toValue(sources);
}
function getOldValue(source) {
  return Array.isArray(source) ? source.map(() => void 0) : void 0;
}

function whenever(source, cb, options) {
  const stop = watch(
    source,
    (v, ov, onInvalidate) => {
      if (v) {
        if (options == null ? void 0 : options.once)
          nextTick(() => stop());
        cb(v, ov, onInvalidate);
      }
    },
    {
      ...options,
      once: false
    }
  );
  return stop;
}




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "../js/" + chunkId + ".app.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "gestion:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl + "../dist/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			818: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkgestion"] = self["webpackChunkgestion"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(5072);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(7659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(5056);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(1113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-2.use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/datatables.net-dt/css/dataTables.dataTables.css
var dataTables_dataTables = __webpack_require__(9041);
;// CONCATENATED MODULE: ./node_modules/datatables.net-dt/css/dataTables.dataTables.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(dataTables_dataTables/* default */.A, options);




       /* harmony default export */ const css_dataTables_dataTables = (dataTables_dataTables/* default */.A && dataTables_dataTables/* default */.A.locals ? dataTables_dataTables/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/css/mycss.less
var mycss = __webpack_require__(1217);
;// CONCATENATED MODULE: ./src/css/mycss.less

      
      
      
      
      
      
      
      
      

var mycss_options = {};

mycss_options.styleTagTransform = (styleTagTransform_default());
mycss_options.setAttributes = (setAttributesWithoutAttributes_default());
mycss_options.insert = insertBySelector_default().bind(null, "head");
mycss_options.domAPI = (styleDomAPI_default());
mycss_options.insertStyleElement = (insertStyleElement_default());

var mycss_update = injectStylesIntoStyleTag_default()(mycss/* default */.A, mycss_options);




       /* harmony default export */ const css_mycss = (mycss/* default */.A && mycss/* default */.A.locals ? mycss/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/path/path.js
var path = __webpack_require__(3627);
// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__(5471);
// EXTERNAL MODULE: ./node_modules/@nextcloud/dialogs/dist/chunks/_plugin-vue2_normalizer-VrK6B12S.mjs
var _plugin_vue2_normalizer_VrK6B12S = __webpack_require__(2094);
// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/chunks/NcDialog-C_1rhUHk.mjs + 1 modules
var NcDialog_C_1rhUHk = __webpack_require__(9002);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcDialog.mjs



// EXTERNAL MODULE: ./node_modules/@nextcloud/vue/dist/Components/NcNoteCard.mjs + 1 modules
var NcNoteCard = __webpack_require__(5359);
;// CONCATENATED MODULE: ./node_modules/@nextcloud/dialogs/dist/index.mjs






/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const u = (e, t, s = () => {
}) => {
  const i = document.createElement("div");
  (document.querySelector(t?.container) || document.body).appendChild(i);
  const n = new vue_runtime_esm/* default */.Ay({
    el: i,
    name: "VueDialogHelper",
    render: (r) => r(e, {
      props: t,
      on: {
        close: (...l) => {
          s(...l.map((h) => (0,vue_runtime_esm/* toRaw */.ux)(h))), n.$destroy();
        }
      }
    })
  });
  return n;
}, A = '<svg xmlns="http://www.w3.org/2000/svg" id="mdi-folder-move" viewBox="0 0 24 24"><path d="M14,18V15H10V11H14V8L19,13M20,6H12L10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6Z" /></svg>', T = '<svg xmlns="http://www.w3.org/2000/svg" id="mdi-folder-multiple" viewBox="0 0 24 24"><path d="M22,4H14L12,2H6A2,2 0 0,0 4,4V16A2,2 0 0,0 6,18H22A2,2 0 0,0 24,16V6A2,2 0 0,0 22,4M2,6H0V11H0V20A2,2 0 0,0 2,22H20V20H2V6Z" /></svg>';
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
var C = /* @__PURE__ */ ((e) => (e[e.Choose = 1] = "Choose", e[e.Move = 2] = "Move", e[e.Copy = 3] = "Copy", e[e.CopyMove = 4] = "CopyMove", e[e.Custom = 5] = "Custom", e))(C || {});
class M extends Error {
}
class N {
  title;
  multiSelect;
  mimeTypeFilter;
  directoriesAllowed;
  buttons;
  path;
  filter;
  container;
  disabledNavigation;
  constructor(t, s, i, o, n, r, l, h, c = !1) {
    this.title = t, this.multiSelect = s, this.mimeTypeFilter = i, this.directoriesAllowed = o, this.path = r, this.filter = l, this.buttons = n, this.container = h, this.disabledNavigation = c;
  }
  /**
   * Pick files using the FilePicker
   *
   * @return Promise with array of picked files or rejected promise on close without picking
   */
  async pick() {
    const { FilePickerVue: t } = await __webpack_require__.e(/* import() */ 110).then(__webpack_require__.bind(__webpack_require__, 1110));
    return new Promise((s, i) => {
      u(t, {
        allowPickDirectory: this.directoriesAllowed,
        buttons: this.buttons,
        container: this.container,
        name: this.title,
        path: this.path,
        mimetypeFilter: this.mimeTypeFilter,
        multiselect: this.multiSelect,
        filterFn: this.filter,
        disabledNavigation: this.disabledNavigation
      }, (...o) => {
        const [n] = o;
        !Array.isArray(n) || n.length === 0 ? i(new M("FilePicker: No nodes selected")) : this.multiSelect ? s(n.map((r) => r.path)) : s(n[0]?.path || "/");
      });
    });
  }
}
class S {
  title;
  multiSelect = !1;
  mimeTypeFilter = [];
  directoriesAllowed = !1;
  path;
  filter;
  buttons = [];
  container;
  disabledNavigation = !1;
  /**
   * Construct a new FilePicker
   *
   * @param title Title of the FilePicker
   */
  constructor(t) {
    this.title = t;
  }
  /**
   * Set the container where the FilePicker will be mounted
   * By default 'body' is used
   *
   * @param container The dialog container
   */
  setContainer(t) {
    return this.container = t, this;
  }
  /**
   * Enable or disable picking multiple files
   *
   * @param ms True to enable picking multiple files, false otherwise
   */
  setMultiSelect(t) {
    return this.multiSelect = t, this;
  }
  /**
   * Add allowed MIME type
   *
   * @param filter MIME type to allow
   */
  addMimeTypeFilter(t) {
    return this.mimeTypeFilter.push(t), this;
  }
  /**
   * Set allowed MIME types
   *
   * @param filter Array of allowed MIME types
   */
  setMimeTypeFilter(t) {
    return this.mimeTypeFilter = t, this;
  }
  /**
   * Add a button to the FilePicker
   * Note: This overrides any previous `setButtonFactory` call
   *
   * @param button The button
   */
  addButton(t) {
    return typeof this.buttons == "function" && (console.warn("FilePicker buttons were set to factory, now overwritten with button object."), this.buttons = []), this.buttons.push(t), this;
  }
  /**
   * Set the button factory which is used to generate buttons from current view, path and selected nodes
   * Note: This overrides any previous `addButton` call
   *
   * @param factory The button factory
   */
  setButtonFactory(t) {
    return this.buttons = t, this;
  }
  /**
   * Set FilePicker type based on legacy file picker types
   * @param type The legacy filepicker type to emulate
   * @deprecated Use `addButton` or `setButtonFactory` instead as with setType you do not know which button was pressed
   */
  setType(t) {
    return this.buttons = (s, i) => {
      const o = [], n = s?.[0]?.attributes?.displayName || s?.[0]?.basename, r = n || (0,path.basename)(i);
      if (t === 1) {
        let l = (0,_plugin_vue2_normalizer_VrK6B12S.t)("Choose");
        s.length === 1 ? l = (0,_plugin_vue2_normalizer_VrK6B12S.t)("Choose {file}", { file: n }) : this.multiSelect && (l = (0,_plugin_vue2_normalizer_VrK6B12S.n)("Choose %n file", "Choose %n files", s.length)), o.push({
          callback: () => {
          },
          type: "primary",
          label: l
        });
      }
      return (t === 4 || t === 3) && o.push({
        callback: () => {
        },
        label: r ? (0,_plugin_vue2_normalizer_VrK6B12S.t)("Copy to {target}", { target: r }) : (0,_plugin_vue2_normalizer_VrK6B12S.t)("Copy"),
        type: "primary",
        icon: T
      }), (t === 2 || t === 4) && o.push({
        callback: () => {
        },
        label: r ? (0,_plugin_vue2_normalizer_VrK6B12S.t)("Move to {target}", { target: r }) : (0,_plugin_vue2_normalizer_VrK6B12S.t)("Move"),
        type: t === 2 ? "primary" : "secondary",
        icon: A
      }), o;
    }, this;
  }
  /**
   * Allow to pick directories besides files
   *
   * @param allow True to allow picking directories
   */
  allowDirectories(t = !0) {
    return this.directoriesAllowed = t, this;
  }
  /**
   * Set starting path of the FilePicker
   *
   * @param path Path to start from picking
   */
  startAt(t) {
    return this.path = t, this;
  }
  /**
   * Add filter function to filter file list of FilePicker
   *
   * @param filter Filter function to apply
   */
  setFilter(t) {
    return this.filter = t, this;
  }
  /**
   * Allow to pick directories besides files
   *
   * @param allow True to allow picking directories
   */
  disableNavigation() {
    return this.disabledNavigation = !0, this;
  }
  /**
   * Construct the configured FilePicker
   */
  build() {
    return new N(
      this.title,
      this.multiSelect,
      this.mimeTypeFilter,
      this.directoriesAllowed,
      this.buttons,
      this.path,
      this.filter,
      this.container,
      this.disabledNavigation
    );
  }
}
function R(e) {
  return new S(e);
}
const x = /* @__PURE__ */ (0,vue_runtime_esm/* defineComponent */.pM)({
  __name: "GenericDialog",
  props: {
    name: null,
    text: null,
    html: null,
    buttons: null,
    severity: null
  },
  setup(e) {
    const t = e, s = () => `${t.name}: ${t.text}`;
    return (0,vue_runtime_esm/* onMounted */.sV)(() => window.addEventListener("unload", s)), (0,vue_runtime_esm/* onUnmounted */.hi)(() => window.removeEventListener("unload", s)), { __sfc: !0, props: t, handleUnload: s, NcDialog: NcDialog_C_1rhUHk.N, NcNoteCard: NcNoteCard/* default */.A };
  }
});
var V = function() {
  var t = this, s = t._self._c, i = t._self._setupProxy;
  return s(i.NcDialog, { attrs: { "dialog-classes": "nc-generic-dialog", buttons: t.buttons, name: t.name, message: t.text }, on: { "update:open": function(o) {
    return t.$emit("close");
  } } }, [t.severity ? s(i.NcNoteCard, { attrs: { type: t.severity } }, [s("p", { domProps: { textContent: t._s(t.text) } })]) : t._e(), t.html ? s("div", { domProps: { innerHTML: t._s(t.html) } }) : t._e()], 1);
}, E = [], F = /* @__PURE__ */ (0,_plugin_vue2_normalizer_VrK6B12S.a)(
  x,
  V,
  E,
  !1,
  null,
  null,
  null,
  null
);
const H = F.exports;
/**
 * @copyright Copyright (c) 2024 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
class I {
  #e;
  #s;
  #i;
  #t;
  #o;
  /** @deprecated */
  #n;
  constructor(t, s, i = [], o) {
    this.#e = t, this.#s = s, this.#i = i, this.#t = o, this.#o = void 0, this.#n = void 0;
  }
  /**
   * @deprecated DO NOT USE! It will be removed in the near future!
   * @param html HTML content
   */
  setHTML(t) {
    return this.#n = t, this;
  }
  /**
   * Spawn and show the dialog - if already open the previous instance will be destroyed
   * @return Promise that resolves when the dialog is answered successfully and rejects on close
   */
  show() {
    return this.#o && this.#o.$destroy(), new Promise((t) => {
      this.#o = u(
        H,
        {
          buttons: this.#i,
          name: this.#e,
          text: this.#s,
          severity: this.#t,
          html: this.#n
        },
        t
      );
    });
  }
  /**
   * Hide and destroy the current dialog instance
   */
  hide() {
    this.#o?.$destroy();
  }
}
class $ {
  #e;
  #s;
  #i;
  #t;
  constructor() {
    this.#e = void 0, this.#s = "", this.#i = "", this.#t = [];
  }
  /**
   * Set dialog name
   * @param name The name or headline of the dialog
   */
  setName(t) {
    return this.#i = t, this;
  }
  /**
   * Set the dialog text
   * @param text Main text of the dialog
   */
  setText(t) {
    return this.#s = t, this;
  }
  /**
   * Set the severity of the dialog
   * @param severity Severity of the dialog
   */
  setSeverity(t) {
    return this.#e = t, this;
  }
  /**
   * Set buttons from array
   * @param buttons Either an array of dialog buttons
   */
  setButtons(t) {
    return this.#t.length > 0 && console.warn("[@nextcloud/dialogs] Dialog buttons are already set - this overrides previous buttons."), this.#t = t, this;
  }
  /**
   * Add a single button
   * @param button Button to add
   */
  addButton(t) {
    return this.#t.push(t), this;
  }
  build() {
    return new I(this.#i, this.#s, this.#t, this.#e);
  }
}


// EXTERNAL MODULE: ./node_modules/@nextcloud/l10n/dist/index.mjs
var dist = __webpack_require__(3334);
// EXTERNAL MODULE: ./node_modules/@nextcloud/router/dist/index.mjs
var router_dist = __webpack_require__(3814);
;// CONCATENATED MODULE: ./src/js/modules/mainFunction.js
/* provided dependency */ var mainFunction_$ = __webpack_require__(4692);





var mainFunction_baseUrl = (0,router_dist/* generateUrl */.Jv)('/apps/gestion');
var cur = null;

/**
 * 
 */
 var optionDatatable = {
    autoWidth: false,
    stateSave: true,
    lengthMenu: [[100, 300, 500, -1], [100, 300, 500, "All"]],
    language: {
        "search": (0,dist/* translate */.Tl)('gestion', 'Search'),
        "emptyTable": (0,dist/* translate */.Tl)('gestion', 'No data available in table'),
        "info": (0,dist/* translate */.Tl)('gestion', 'Showing {start} to {end} of {total} entries', { start: '_START_', end: '_END_', total: '_TOTAL_' }),
        "infoEmpty": (0,dist/* translate */.Tl)('gestion', 'Showing 0 to 0 of 0 entries'),
        "loadingRecords": (0,dist/* translate */.Tl)('gestion', 'Loading records …'),
        "processing": (0,dist/* translate */.Tl)('gestion', 'Processing …'),
        "infoFiltered": (0,dist/* translate */.Tl)('gestion', '{max} entries filtered', { max: '_MAX_' }),
        "lengthMenu": (0,dist/* translate */.Tl)('gestion', 'Show {menu} entries', { menu: '_MENU_' }),
        "zeroRecords": (0,dist/* translate */.Tl)('gestion', 'No corresponding entry'),
        "paginate": {
            "first": (0,dist/* translate */.Tl)('gestion', 'First'),
            "last": (0,dist/* translate */.Tl)('gestion', 'Last'),
            "next": (0,dist/* translate */.Tl)('gestion', 'Next'),
            "previous": (0,dist/* translate */.Tl)('gestion', 'Previous'),
        }
    }
}

/**
 * 
 * @param {*} checkConfig 
 */
function globalConfiguration(checkConfig=true){
    getStats();
    
    if(checkConfig){
        isconfig();
    }

    configuration(getCurrency);
    configuration(mainFunction_path);
}

/**
 * 
 */
function configureDT() {
    mainFunction_$('.editable').attr('title', (0,dist/* translate */.Tl)('gestion', 'Editable (Click to change)'));
}

/**
 * 
 */
function configureShow() {
    mainFunction_$('.sendmail').attr('title', t('gestion', 'Your global Nextcloud mail server need to be configured'));
}

/**
 * Success message
 */
function showDone() {
    (0,_plugin_vue2_normalizer_VrK6B12S.i)((0,dist/* translate */.Tl)('gestion', 'Added!'));
}

/**
 * 
 * @param {*} el 
 */
function checkSelect(el) {
    mainFunction_$(el).each(function (arrayID, elem) {
        mainFunction_$(elem).find('option').each(function () {
            if (this.value == elem.getAttribute("data-current")) {
                mainFunction_$(this).prop('selected', true)
            }
        })
    })
}


function checkSelectPurJs(el) {
    console.log(el.options)
    Array.from(el.options).forEach(element => {
        if (element.value == el.getAttribute("data-current")) {
            element.setAttribute('selected', true);
        }
    });
}

/**
 * 
 * @param {*} DT 
 * @param {*} response 
 * @param {*} cls 
 */
function LoadDT(DT, response, cls) {
    DT.clear();
    mainFunction_$.each(JSON.parse(response), function (arrayID, myresp) {
        let c = new cls(myresp);
        DT.row.add(c.getDTRow());
    });
    DT.columns.adjust(optionDatatable).draw(true);
    configureDT();
}

/**
 * 
 * @param {*} ID 
 * @param {*} positionRow 
 * @param {*} positionColumn 
 * @param {*} data 
 */
function mainFunction_insertRow(ID, positionRow = -1, positionColumn = -1, data){
    var t1 = document.getElementById(ID);
    var r = t1.insertRow(positionRow);
    mainFunction_insertCell(r, -1, data, "statHead");

    //Ajout de toutes les colonnes
    for (let i = 1; i < 13; i++) {
        mainFunction_insertCell(r, -1, cur.format(0));
    }
    return r;
}
/**
 * 
 * @param {*} row
 * @param {*} positionColumn 
 * @param {*} data 
 */
function mainFunction_insertCell(row, positionColumn = -1, data, className="statData"){
    var c = row.insertCell(positionColumn);
    c.appendChild(document.createTextNode(data));
    c.setAttribute("class", className);
}

/**
 * 
 * @param {*} r 
 * @param {*} positionColumn 
 * @param {*} data 
 */
function mainFunction_modifyCell(r, positionColumn = -1, data){
    var cell = r.cells[positionColumn];
    cell.innerHTML = data;
}

/**
 * 
 * @param {*} res 
 */
 function mainFunction_path(res) {
    var myres = JSON.parse(res)[0];
    mainFunction_$("#theFolder").val(myres.path);
    mainFunction_$("#theFolder").attr('data-id', myres.id);
};


/**
 * 
 * @param {*} response 
 */
function getCurrency(response) {
    try {
        var myresp = JSON.parse(response)[0];
        cur = new Intl.NumberFormat(myresp.format, { style: 'currency', currency: myresp.devise, minimumFractionDigits: 2 });
    } catch (error) {
        cur = new Intl.NumberFormat("en-EN", { style: 'currency', currency: myresp.devise, minimumFractionDigits: 2 });
        console.log(error);
    }
}

/**
 * 
 * @param {*} total 
 */
function getGlobal(total) {
    mainFunction_$.ajax({
        url: mainFunction_baseUrl + '/getConfiguration',
        type: 'PROPFIND',
        contentType: 'application/json',
    }).done(function (response) {
        var myresp = JSON.parse(response)[0];
        var tva = parseFloat(myresp.tva_default);
        mainFunction_$('#totaldevis tbody').append('<tr><td>' + cur.format(total) + '</td><td id="tva">' + tva + ' %</td><td id="totaltva">' + cur.format(Math.round((total * tva)) / 100) + '</td><td>' + cur.format(Math.round((total * (tva + 100))) / 100) + '</td></tr>');
        mainFunction_$('#mentions_default').html(myresp.mentions_default);
    })
}

/**
 * //@
 * @param {*} response 
 * 
 */
function checkAutoIncrement(response){
    var myresp = JSON.parse(response)[0];
    if(myresp.auto_invoice_number==1){
        mainFunction_$('.deleteItem').remove();
        mainFunction_$(".factureNum").removeClass("editable");
    }
}

/**
 * Format number if it's monetary
 * @param {*} el 
 * @param {*} format_number 
 */
function updateNumerical(el, format_number=true){
    el.innerText=el.innerText.replace(',', '.').replace(/[^0-9.-]+/g,"")
    updateEditable(el);
    if(format_number){
        el.innerText=cur.format(el.innerText)
    }else{
        el.innerText=el.innerText
    }
}

function removeOptions(selectElement) {
    
    var i, L = selectElement.options.length - 1;
    for(i = L; i >= 0; i--) {
       selectElement.remove(i);
    }
 }
;// CONCATENATED MODULE: ./src/js/modules/ajaxRequest.js
/* provided dependency */ var ajaxRequest_$ = __webpack_require__(4692);




/**
 * Update data
 * @param table 
 * @param column 
 * @param data 
 * @param id 
 */
function updateDB(table, column, data, id) {
    var myData = {
        table: table,
        column: column,
        data: data,
        id: id,
    };

    ajaxRequest_$.ajax({
        url: mainFunction_baseUrl + '/update',
        type: 'POST',
        async: false,
        contentType: 'application/json',
        data: JSON.stringify(myData)
    }).done(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.i)((0,dist/* translate */.Tl)('gestion', 'Modification saved'));
    }).fail(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.l)((0,dist/* translate */.Tl)('gestion', 'There is an error with the format, please check the documentation'));
    });
}

/**
 * Update data
 * @param table 
 * @param column 
 * @param data 
 * @param id 
 */
function updateDBConfiguration(table, column, data, id) {
    
    var myData = {
        table: table,
        column: column,
        data: data,
        id: id,
    };

    var xhr = new XMLHttpRequest();
    xhr.open('POST', mainFunction_baseUrl + '/updateConfiguration', true); // false for synchronous request
    xhr.setRequestHeader('Content-Type', 'application/json');

    xhr.onload = function () {
        if (xhr.status >= 200 && xhr.status < 300) {
            // Request successful
            (0,_plugin_vue2_normalizer_VrK6B12S.i)((0,dist/* translate */.Tl)('gestion', 'Modification saved'));
        } else {
            // Request failed
            (0,_plugin_vue2_normalizer_VrK6B12S.l)((0,dist/* translate */.Tl)('gestion', 'There is an error with the format, please check the documentation'));
        }
    };

    xhr.onerror = function () {
        // Connection error
        (0,_plugin_vue2_normalizer_VrK6B12S.l)((0,dist/* translate */.Tl)('gestion', 'There is an error with the format, please check the documentation'));
    };

    xhr.send(JSON.stringify(myData));
}

/**
 * Create a new company
 */
function createCompany() {
    var xhr = new XMLHttpRequest();
    xhr.open('PUT',baseUrl +  '/createCompany', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader("requesttoken", oc_requesttoken);
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            showSuccess(t('gestion', 'New company created'));
            location.reload();
        } else {
            showError(t('gestion', 'There is an error.'));
        }
    };
    xhr.send();
}

/**
 * Delete a company
 */
function deleteCompany() {
    if(window.confirm(t('gestion','Are you sure you want to delete? (All data will be lost)'))){
        var xhr = new XMLHttpRequest();
        xhr.open('DELETE', baseUrl + '/deleteCompany', true); // false for synchronous request
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.setRequestHeader("requesttoken", oc_requesttoken);
        xhr.onreadystatechange = function (value) {
            if (xhr.status >= 200 && xhr.status < 300) {
                // Request successful
                showSuccess(t('gestion', 'Company deleted'));
                location.reload();
            } else {
                showError(t('gestion', 'There is an error.'));
                console.log(value);
            }
        };
        xhr.send();
    }
}

/**
 * Update session var
 * @param table 
 * @param column 
 */
function updateCurrentCompany(companyID) {
    var myData = {
        companyID: companyID
    };
    
    var xhr = new XMLHttpRequest();
    xhr.open('POST', mainFunction_baseUrl + '/updateSession', true); // false for synchronous request
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader("requesttoken", oc_requesttoken);

    xhr.onload = function () {
        if (xhr.status >= 200 && xhr.status < 300) {
            // Request successful
            (0,_plugin_vue2_normalizer_VrK6B12S.i)((0,dist/* translate */.Tl)('gestion', 'Modification saved'));
            window.location.reload();
        } else {
            // Request failed
            (0,_plugin_vue2_normalizer_VrK6B12S.l)((0,dist/* translate */.Tl)('gestion', 'There is an error with the format, please check the documentation'));
        }
    };

    xhr.onerror = function () {
        // Connection error
        (0,_plugin_vue2_normalizer_VrK6B12S.l)((0,dist/* translate */.Tl)('gestion', 'There is an error with the format, please check the documentation'));
    };

    xhr.send(JSON.stringify(myData));
}

/**
 * Delete data
 * @param table
 * @param id 
 */
function deleteDB(table, id) {
    var myData = {
        table: table,
        id: id,
    };

    if(window.confirm((0,dist/* translate */.Tl)('gestion','Are you sure you want to delete?'))){
        ajaxRequest_$.ajax({
            url: mainFunction_baseUrl + '/delete',
            type: 'DELETE',
            async: false,
            contentType: 'application/json',
            data: JSON.stringify(myData)
        }).done(function (response, code) {
            (0,_plugin_vue2_normalizer_VrK6B12S.i)((0,dist/* translate */.Tl)('gestion', 'Modification saved'));
        }).fail(function (response, code) {
            (0,_plugin_vue2_normalizer_VrK6B12S.l)(response);
        });
    }else{
        (0,_plugin_vue2_normalizer_VrK6B12S.s)((0,dist/* translate */.Tl)('gestion', 'Nothing changed'))
    }
}

/**
 * 
 */
function getStats() {
    ajaxRequest_$.ajax({
        url: mainFunction_baseUrl + '/getStats',
        type: 'PROPFIND',
        contentType: 'application/json'
    }).done(function (response) {
        var res = JSON.parse(response);
        ajaxRequest_$("#statsclient").text(res.client);
        ajaxRequest_$("#statsdevis").text(res.devis);
        ajaxRequest_$("#statsfacture").text(res.facture);
        ajaxRequest_$("#statsproduit").text(res.produit);
    }).fail(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(response);
    });
}


/**
 * 
 * @param {*} f1 
 */
function configuration(f1) {
    ajaxRequest_$.ajax({
        url: mainFunction_baseUrl + '/getConfiguration',
        type: 'PROPFIND',
        contentType: 'application/json',
        async: false,
    }).done(function (response) {
        f1(response);
    }).fail(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(response);
    });
}

/**
 * 
 */
function isconfig() {
    console.log("isconfig");
    ajaxRequest_$.ajax({
        url: mainFunction_baseUrl + '/isconfig',
        type: 'GET',
        contentType: 'application/json'
    }).done(function (response) {
        if (!response) {
            var modal = document.getElementById("modalConfig");
            modal.style.display = "block";
        }
    })
}

/**
 * 
 * @param {*} cur 
 */
function getAnnualTurnoverPerMonthNoVat(cur) {
    ajaxRequest_$.ajax({
        url: baseUrl + '/getAnnualTurnoverPerMonthNoVat',
        type: 'PROPFIND',
        contentType: 'application/json'
    }).done(function (response) {
        var res = JSON.parse(response);
        var curY = "";
        var curRow;
        var total=0;
        res.forEach(function(item){
            if(curY !== item.y){
                
                if(curY !== ""){
                    insertCell(curRow, -1, cur.format(total));
                    total=0;
                }

                curY = item.y;
                curRow = insertRow("Statistical", -1, 0, item.y);
                modifyCell(curRow, (item.m), cur.format(Math.round(item.total)));
                total+= Math.round(item.total);

            }else{

                modifyCell(curRow, (item.m), cur.format(Math.round(item.total)));
                total+= Math.round(item.total);

            }
        });
        // At the end
        insertCell(curRow, -1, cur.format(total));
    }).fail(function (response, code) {
        showError(response);
    });
}

/**
 * 
 * @param {*} myCase 
 */
function updateEditable(myCase) {
    updateDB(myCase.dataset.table, myCase.dataset.column, myCase.innerText, myCase.dataset.id);
    if (myCase.dataset.modifier === "getProduitsById") {getProduitsById();}
    myCase.removeAttribute('contenteditable');
}

/**
 * 
 * @param {*} myCase 
 */
function updateEditableConfiguration(myCase) {
    updateDBConfiguration(myCase.dataset.table, myCase.dataset.column, myCase.innerText, myCase.dataset.id);
    if (myCase.dataset.modifier === "getProduitsById") {getProduitsById();}
    myCase.removeAttribute('contenteditable');
}


/**
 * 
 * @param {*} lp 
 * @param {*} id 
 * @param {*} produitid 
 */
function listProduit(lp, id, produitid) {
    ajaxRequest_$.ajax({
        url: mainFunction_baseUrl + '/getProduits',
        type: 'PROPFIND',
        contentType: 'application/json'
    }).done(function (response) {
        lp.append('<option data-table="produit_devis" data-column="produit_id" data-val="' + produitid + '" data-id="' + id + '">'+(0,dist/* translate */.Tl)('gestion','Cancel')+'</option>');
        ajaxRequest_$.each(JSON.parse(response), function (arrayID, myresp) {
            var selected = "";
            if (produitid == myresp.id) {
                selected = "selected";
            }
            lp.append('<option ' + selected + ' data-table="produit_devis" data-column="produit_id" data-val="' + myresp.id + '" data-id="' + id + '">' + myresp.reference + ' ' + myresp.description + ' ' + cur.format(myresp.prix_unitaire) + '</option>');
        });
    }).fail(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(response);
    });
}

/**
 * Get a product in database using id
 */
 function getProduitsById() {
    var devis_id = ajaxRequest_$('#devisid').data('id');
    var myData = { numdevis: devis_id, };

    ajaxRequest_$.ajax({
        url: mainFunction_baseUrl + '/getProduitsById',
        type: 'POST',
        async: false,
        contentType: 'application/json',
        data: JSON.stringify(myData)
    }).done(function (response, code) {
        ajaxRequest_$('#produits tbody').empty();
        var total = 0;
        var deleteDisable = "";
        if (ajaxRequest_$('#produits').data("type") === "facture") {
            deleteDisable = "d-none";
        }

        ajaxRequest_$.each(JSON.parse(response), function (arrayID, myresp) {
            ajaxRequest_$('#produits tbody').append('<tr><td><div data-html2canvas-ignore data-modifier="getProduitsById" data-id="' + myresp.pdid + '" data-table="produit_devis" class="' + deleteDisable + ' deleteItem icon-delete"></div><div style="display:inline;" data-val="' + myresp.pid + '" data-id="' + myresp.pdid + '" class="selectable">' + myresp.reference + '</div></td>' +
                '<td>' + myresp.description + '</td>' +
                '<td><div class="editable" data-table="produit_devis" data-column="comment" data-id="' + myresp.pdid + '">' + ((myresp.comment.length === 0) ? '-' : myresp.comment) + '</div></td>' +
                '<td><div class="editableNumber getProduitsById" style="display:inline;" data-modifier="getProduitsById" data-table="produit_devis" data-column="quantite" data-id=' + myresp.pdid + '>' + myresp.quantite + '</div> </td>' +
                '<td>' + cur.format(myresp.prix_unitaire) + '</td>' +
                '<td>' + cur.format((myresp.quantite * myresp.prix_unitaire)) + '</td></tr>');
            total += (myresp.quantite * myresp.prix_unitaire);
        });

        ajaxRequest_$("#totaldevis tbody").empty();
        getGlobal(total);
    }).fail(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(response);
    });
}

/**
 * Save pdf in nextcloud
 * @param {*} myData 
 */
function saveNextcloud(myData) {
    ajaxRequest_$.ajax({
      url: baseUrl + '/savePDF',
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify(myData)
    }).done(function (response) {
      showMessage(t('gestion', 'Save in') + " " + ajaxRequest_$("#theFolder").val() + "/" + ajaxRequest_$("#pdf").data("folder"));
    }).fail(function (response, code) {
      showMessage(t('gestion', 'There is an error'));
      error(response);
    });
  };

  function getMailServerFrom(input) {
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', baseUrl + '/getServerFromMail', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.setRequestHeader("requesttoken", oc_requesttoken);
    oReq.onload = function(e){
        if (this.status == 200) {
            input.value = JSON.parse(this.response)['mail'];
        }else{
            showError(this.response);
        }
    };
    oReq.send();
    }

    function backup(){
        var oReq = new XMLHttpRequest();
        oReq.open('GET', baseUrl + '/backup', true);
        oReq.setRequestHeader("Content-Type", "application/json");
        oReq.setRequestHeader("requesttoken", oc_requesttoken);
        oReq.onload = function(e){
            if (this.status == 200) {
                showSuccess(t('gestion', 'Save in')+' '+JSON.parse(this.response)['name']+'\n'+t('gestion','(do not forget to show hidden folders)'));
            }else{
                showError(this.response);
            }
        };
        oReq.send();
    }

// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js
var jquery = __webpack_require__(4692);
;// CONCATENATED MODULE: ./node_modules/datatables.net/js/dataTables.mjs
/*! DataTables 2.0.5
 * © SpryMedia Ltd - datatables.net/license
 */



// DataTables code uses $ internally, but we want to be able to
// reassign $ with the `use` method, so it is a regular var.
var dataTables_$ = jquery;


var DataTable = function ( selector, options )
{
	// Check if called with a window or jQuery object for DOM less applications
	// This is for backwards compatibility
	if (DataTable.factory(selector, options)) {
		return DataTable;
	}

	// When creating with `new`, create a new DataTable, returning the API instance
	if (this instanceof DataTable) {
		return dataTables_$(selector).DataTable(options);
	}
	else {
		// Argument switching
		options = selector;
	}

	var _that = this;
	var emptyInit = options === undefined;
	var len = this.length;

	if ( emptyInit ) {
		options = {};
	}

	// Method to get DT API instance from jQuery object
	this.api = function ()
	{
		return new _Api( this );
	};

	this.each(function() {
		// For each initialisation we want to give it a clean initialisation
		// object that can be bashed around
		var o = {};
		var oInit = len > 1 ? // optimisation for single table case
			_fnExtend( o, options, true ) :
			options;

		
		var i=0, iLen;
		var sId = this.getAttribute( 'id' );
		var bInitHandedOff = false;
		var defaults = DataTable.defaults;
		var $this = dataTables_$(this);
		
		
		/* Sanity check */
		if ( this.nodeName.toLowerCase() != 'table' )
		{
			_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
			return;
		}
		
		dataTables_$(this).trigger( 'options.dt', oInit );
		
		/* Backwards compatibility for the defaults */
		_fnCompatOpts( defaults );
		_fnCompatCols( defaults.column );
		
		/* Convert the camel-case defaults to Hungarian */
		_fnCamelToHungarian( defaults, defaults, true );
		_fnCamelToHungarian( defaults.column, defaults.column, true );
		
		/* Setting up the initialisation object */
		_fnCamelToHungarian( defaults, dataTables_$.extend( oInit, $this.data() ), true );
		
		
		
		/* Check to see if we are re-initialising a table */
		var allSettings = DataTable.settings;
		for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
		{
			var s = allSettings[i];
		
			/* Base check on table node */
			if (
				s.nTable == this ||
				(s.nTHead && s.nTHead.parentNode == this) ||
				(s.nTFoot && s.nTFoot.parentNode == this)
			) {
				var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
				var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
		
				if ( emptyInit || bRetrieve )
				{
					return s.oInstance;
				}
				else if ( bDestroy )
				{
					new DataTable.Api(s).destroy();
					break;
				}
				else
				{
					_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
					return;
				}
			}
		
			/* If the element we are initialising has the same ID as a table which was previously
			 * initialised, but the table nodes don't match (from before) then we destroy the old
			 * instance by simply deleting it. This is under the assumption that the table has been
			 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
			 */
			if ( s.sTableId == this.id )
			{
				allSettings.splice( i, 1 );
				break;
			}
		}
		
		/* Ensure the table has an ID - required for accessibility */
		if ( sId === null || sId === "" )
		{
			sId = "DataTables_Table_"+(DataTable.ext._unique++);
			this.id = sId;
		}
		
		/* Create the settings object for this table and set some of the default parameters */
		var oSettings = dataTables_$.extend( true, {}, DataTable.models.oSettings, {
			"sDestroyWidth": $this[0].style.width,
			"sInstance":     sId,
			"sTableId":      sId,
			colgroup: dataTables_$('<colgroup>').prependTo(this),
			fastData: function (row, column, type) {
				return _fnGetCellData(oSettings, row, column, type);
			}
		} );
		oSettings.nTable = this;
		oSettings.oInit  = oInit;
		
		allSettings.push( oSettings );
		
		// Make a single API instance available for internal handling
		oSettings.api = new _Api( oSettings );
		
		// Need to add the instance after the instance after the settings object has been added
		// to the settings array, so we can self reference the table instance if more than one
		oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
		
		// Backwards compatibility, before we apply all the defaults
		_fnCompatOpts( oInit );
		
		// If the length menu is given, but the init display length is not, use the length menu
		if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
		{
			oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])
				? oInit.aLengthMenu[0][0]
				: dataTables_$.isPlainObject( oInit.aLengthMenu[0] )
					? oInit.aLengthMenu[0].value
					: oInit.aLengthMenu[0];
		}
		
		// Apply the defaults and init options to make a single init object will all
		// options defined from defaults and instance options.
		oInit = _fnExtend( dataTables_$.extend( true, {}, defaults ), oInit );
		
		
		// Map the initialisation options onto the settings object
		_fnMap( oSettings.oFeatures, oInit, [
			"bPaginate",
			"bLengthChange",
			"bFilter",
			"bSort",
			"bSortMulti",
			"bInfo",
			"bProcessing",
			"bAutoWidth",
			"bSortClasses",
			"bServerSide",
			"bDeferRender"
		] );
		_fnMap( oSettings, oInit, [
			"ajax",
			"fnFormatNumber",
			"sServerMethod",
			"aaSorting",
			"aaSortingFixed",
			"aLengthMenu",
			"sPaginationType",
			"iStateDuration",
			"bSortCellsTop",
			"iTabIndex",
			"sDom",
			"fnStateLoadCallback",
			"fnStateSaveCallback",
			"renderer",
			"searchDelay",
			"rowId",
			"caption",
			"layout",
			[ "iCookieDuration", "iStateDuration" ], // backwards compat
			[ "oSearch", "oPreviousSearch" ],
			[ "aoSearchCols", "aoPreSearchCols" ],
			[ "iDisplayLength", "_iDisplayLength" ]
		] );
		_fnMap( oSettings.oScroll, oInit, [
			[ "sScrollX", "sX" ],
			[ "sScrollXInner", "sXInner" ],
			[ "sScrollY", "sY" ],
			[ "bScrollCollapse", "bCollapse" ]
		] );
		_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
		
		/* Callback functions which are array driven */
		_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );
		_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );
		_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );
		_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );
		_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );
		_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );
		_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );
		_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );
		_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );
		_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );
		
		oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
		
		/* Browser support detection */
		_fnBrowserDetect( oSettings );
		
		var oClasses = oSettings.oClasses;
		
		dataTables_$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
		$this.addClass( oClasses.table );
		
		if (! oSettings.oFeatures.bPaginate) {
			oInit.iDisplayStart = 0;
		}
		
		if ( oSettings.iInitDisplayStart === undefined )
		{
			/* Display start point, taking into account the save saving */
			oSettings.iInitDisplayStart = oInit.iDisplayStart;
			oSettings._iDisplayStart = oInit.iDisplayStart;
		}
		
		/* Language definitions */
		var oLanguage = oSettings.oLanguage;
		dataTables_$.extend( true, oLanguage, oInit.oLanguage );
		
		if ( oLanguage.sUrl )
		{
			/* Get the language definitions from a file - because this Ajax call makes the language
			 * get async to the remainder of this function we use bInitHandedOff to indicate that
			 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
			 */
			dataTables_$.ajax( {
				dataType: 'json',
				url: oLanguage.sUrl,
				success: function ( json ) {
					_fnCamelToHungarian( defaults.oLanguage, json );
					dataTables_$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );
		
					_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);
					_fnInitialise( oSettings );
				},
				error: function () {
					// Error occurred loading language file
					_fnLog( oSettings, 0, 'i18n file loading error', 21 );
		
					// continue on as best we can
					_fnInitialise( oSettings );
				}
			} );
			bInitHandedOff = true;
		}
		else {
			_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);
		}
		
		/*
		 * Columns
		 * See if we should load columns automatically or use defined ones
		 */
		var columnsInit = [];
		var thead = this.getElementsByTagName('thead');
		var initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );
		
		// If we don't have a columns array, then generate one with nulls
		if ( oInit.aoColumns ) {
			columnsInit = oInit.aoColumns;
		}
		else if ( initHeaderLayout.length ) {
			for ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {
				columnsInit.push( null );
			}
		}
		
		// Add the columns
		for ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {
			_fnAddColumn( oSettings );
		}
		
		// Apply the column definitions
		_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {
			_fnColumnOptions( oSettings, iCol, oDef );
		} );
		
		/* HTML5 attribute detection - build an mData object automatically if the
		 * attributes are found
		 */
		var rowOne = $this.children('tbody').find('tr').eq(0);
		
		if ( rowOne.length ) {
			var a = function ( cell, name ) {
				return cell.getAttribute( 'data-'+name ) !== null ? name : null;
			};
		
			dataTables_$( rowOne[0] ).children('th, td').each( function (i, cell) {
				var col = oSettings.aoColumns[i];
		
				if (! col) {
					_fnLog( oSettings, 0, 'Incorrect column count', 18 );
				}
		
				if ( col.mData === i ) {
					var sort = a( cell, 'sort' ) || a( cell, 'order' );
					var filter = a( cell, 'filter' ) || a( cell, 'search' );
		
					if ( sort !== null || filter !== null ) {
						col.mData = {
							_:      i+'.display',
							sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
							type:   sort !== null   ? i+'.@data-'+sort   : undefined,
							filter: filter !== null ? i+'.@data-'+filter : undefined
						};
						col._isArrayHost = true;
		
						_fnColumnOptions( oSettings, i );
					}
				}
			} );
		}
		
		var features = oSettings.oFeatures;
		var loadedInit = function () {
			/*
			 * Sorting
			 * @todo For modularisation (1.11) this needs to do into a sort start up handler
			 */
		
			// If aaSorting is not defined, then we use the first indicator in asSorting
			// in case that has been altered, so the default sort reflects that option
			if ( oInit.aaSorting === undefined ) {
				var sorting = oSettings.aaSorting;
				for ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {
					sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
				}
			}
		
			/* Do a first pass on the sorting classes (allows any size changes to be taken into
			 * account, and also will apply sorting disabled classes if disabled
			 */
			_fnSortingClasses( oSettings );
		
			_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
				if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
					_fnSortingClasses( oSettings );
				}
			} );
		
		
			/*
			 * Final init
			 * Cache the header, body and footer as required, creating them if needed
			 */
			var caption = $this.children('caption');
		
			if ( oSettings.caption ) {
				if ( caption.length === 0 ) {
					caption = dataTables_$('<caption/>').appendTo( $this );
				}
		
				caption.html( oSettings.caption );
			}
		
			// Store the caption side, so we can remove the element from the document
			// when creating the element
			if (caption.length) {
				caption[0]._captionSide = caption.css('caption-side');
				oSettings.captionNode = caption[0];
			}
		
			if ( thead.length === 0 ) {
				thead = dataTables_$('<thead/>').appendTo($this);
			}
			oSettings.nTHead = thead[0];
			dataTables_$('tr', thead).addClass(oClasses.thead.row);
		
			var tbody = $this.children('tbody');
			if ( tbody.length === 0 ) {
				tbody = dataTables_$('<tbody/>').insertAfter(thead);
			}
			oSettings.nTBody = tbody[0];
		
			var tfoot = $this.children('tfoot');
			if ( tfoot.length === 0 ) {
				// If we are a scrolling table, and no footer has been given, then we need to create
				// a tfoot element for the caption element to be appended to
				tfoot = dataTables_$('<tfoot/>').appendTo($this);
			}
			oSettings.nTFoot = tfoot[0];
			dataTables_$('tr', tfoot).addClass(oClasses.tfoot.row);
		
			// Check if there is data passing into the constructor
			if ( oInit.aaData ) {
				for ( i=0 ; i<oInit.aaData.length ; i++ ) {
					_fnAddData( oSettings, oInit.aaData[ i ] );
				}
			}
			else if ( _fnDataSource( oSettings ) == 'dom' ) {
				// Grab the data from the page
				_fnAddTr( oSettings, dataTables_$(oSettings.nTBody).children('tr') );
			}
		
			/* Copy the data index array */
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
		
			/* Initialisation complete - table can be drawn */
			oSettings.bInitialised = true;
		
			/* Check if we need to initialise the table (it might not have been handed off to the
			 * language processor)
			 */
			if ( bInitHandedOff === false ) {
				_fnInitialise( oSettings );
			}
		};
		
		/* Must be done after everything which can be overridden by the state saving! */
		_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );
		
		if ( oInit.bStateSave )
		{
			features.bStateSave = true;
			_fnLoadState( oSettings, oInit, loadedInit );
		}
		else {
			loadedInit();
		}
		
	} );
	_that = null;
	return this;
};



/**
 * DataTables extensions
 * 
 * This namespace acts as a collection area for plug-ins that can be used to
 * extend DataTables capabilities. Indeed many of the build in methods
 * use this method to provide their own capabilities (sorting methods for
 * example).
 *
 * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
 * reasons
 *
 *  @namespace
 */
DataTable.ext = _ext = {
	/**
	 * Buttons. For use with the Buttons extension for DataTables. This is
	 * defined here so other extensions can define buttons regardless of load
	 * order. It is _not_ used by DataTables core.
	 *
	 *  @type object
	 *  @default {}
	 */
	buttons: {},


	/**
	 * Element class names
	 *
	 *  @type object
	 *  @default {}
	 */
	classes: {},


	/**
	 * DataTables build type (expanded by the download builder)
	 *
	 *  @type string
	 */
	builder: "-source-",


	/**
	 * Error reporting.
	 * 
	 * How should DataTables report an error. Can take the value 'alert',
	 * 'throw', 'none' or a function.
	 *
	 *  @type string|function
	 *  @default alert
	 */
	errMode: "alert",


	/**
	 * Legacy so v1 plug-ins don't throw js errors on load
	 */
	feature: [],

	/**
	 * Feature plug-ins.
	 * 
	 * This is an object of callbacks which provide the features for DataTables
	 * to be initialised via the `layout` option.
	 */
	features: {},


	/**
	 * Row searching.
	 * 
	 * This method of searching is complimentary to the default type based
	 * searching, and a lot more comprehensive as it allows you complete control
	 * over the searching logic. Each element in this array is a function
	 * (parameters described below) that is called for every row in the table,
	 * and your logic decides if it should be included in the searching data set
	 * or not.
	 *
	 * Searching functions have the following input parameters:
	 *
	 * 1. `{object}` DataTables settings object: see
	 *    {@link DataTable.models.oSettings}
	 * 2. `{array|object}` Data for the row to be processed (same as the
	 *    original format that was passed in as the data source, or an array
	 *    from a DOM data source
	 * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
	 *    can be useful to retrieve the `TR` element if you need DOM interaction.
	 *
	 * And the following return is expected:
	 *
	 * * {boolean} Include the row in the searched result set (true) or not
	 *   (false)
	 *
	 * Note that as with the main search ability in DataTables, technically this
	 * is "filtering", since it is subtractive. However, for consistency in
	 * naming we call it searching here.
	 *
	 *  @type array
	 *  @default []
	 *
	 *  @example
	 *    // The following example shows custom search being applied to the
	 *    // fourth column (i.e. the data[3] index) based on two input values
	 *    // from the end-user, matching the data in a certain range.
	 *    $.fn.dataTable.ext.search.push(
	 *      function( settings, data, dataIndex ) {
	 *        var min = document.getElementById('min').value * 1;
	 *        var max = document.getElementById('max').value * 1;
	 *        var version = data[3] == "-" ? 0 : data[3]*1;
	 *
	 *        if ( min == "" && max == "" ) {
	 *          return true;
	 *        }
	 *        else if ( min == "" && version < max ) {
	 *          return true;
	 *        }
	 *        else if ( min < version && "" == max ) {
	 *          return true;
	 *        }
	 *        else if ( min < version && version < max ) {
	 *          return true;
	 *        }
	 *        return false;
	 *      }
	 *    );
	 */
	search: [],


	/**
	 * Selector extensions
	 *
	 * The `selector` option can be used to extend the options available for the
	 * selector modifier options (`selector-modifier` object data type) that
	 * each of the three built in selector types offer (row, column and cell +
	 * their plural counterparts). For example the Select extension uses this
	 * mechanism to provide an option to select only rows, columns and cells
	 * that have been marked as selected by the end user (`{selected: true}`),
	 * which can be used in conjunction with the existing built in selector
	 * options.
	 *
	 * Each property is an array to which functions can be pushed. The functions
	 * take three attributes:
	 *
	 * * Settings object for the host table
	 * * Options object (`selector-modifier` object type)
	 * * Array of selected item indexes
	 *
	 * The return is an array of the resulting item indexes after the custom
	 * selector has been applied.
	 *
	 *  @type object
	 */
	selector: {
		cell: [],
		column: [],
		row: []
	},


	/**
	 * Legacy configuration options. Enable and disable legacy options that
	 * are available in DataTables.
	 *
	 *  @type object
	 */
	legacy: {
		/**
		 * Enable / disable DataTables 1.9 compatible server-side processing
		 * requests
		 *
		 *  @type boolean
		 *  @default null
		 */
		ajax: null
	},


	/**
	 * Pagination plug-in methods.
	 * 
	 * Each entry in this object is a function and defines which buttons should
	 * be shown by the pagination rendering method that is used for the table:
	 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
	 * buttons are displayed in the document, while the functions here tell it
	 * what buttons to display. This is done by returning an array of button
	 * descriptions (what each button will do).
	 *
	 * Pagination types (the four built in options and any additional plug-in
	 * options defined here) can be used through the `paginationType`
	 * initialisation parameter.
	 *
	 * The functions defined take two parameters:
	 *
	 * 1. `{int} page` The current page index
	 * 2. `{int} pages` The number of pages in the table
	 *
	 * Each function is expected to return an array where each element of the
	 * array can be one of:
	 *
	 * * `first` - Jump to first page when activated
	 * * `last` - Jump to last page when activated
	 * * `previous` - Show previous page when activated
	 * * `next` - Show next page when activated
	 * * `{int}` - Show page of the index given
	 * * `{array}` - A nested array containing the above elements to add a
	 *   containing 'DIV' element (might be useful for styling).
	 *
	 * Note that DataTables v1.9- used this object slightly differently whereby
	 * an object with two functions would be defined for each plug-in. That
	 * ability is still supported by DataTables 1.10+ to provide backwards
	 * compatibility, but this option of use is now decremented and no longer
	 * documented in DataTables 1.10+.
	 *
	 *  @type object
	 *  @default {}
	 *
	 *  @example
	 *    // Show previous, next and current page buttons only
	 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
	 *      return [ 'previous', page, 'next' ];
	 *    };
	 */
	pager: {},


	renderer: {
		pageButton: {},
		header: {}
	},


	/**
	 * Ordering plug-ins - custom data source
	 * 
	 * The extension options for ordering of data available here is complimentary
	 * to the default type based ordering that DataTables typically uses. It
	 * allows much greater control over the the data that is being used to
	 * order a column, but is necessarily therefore more complex.
	 * 
	 * This type of ordering is useful if you want to do ordering based on data
	 * live from the DOM (for example the contents of an 'input' element) rather
	 * than just the static string that DataTables knows of.
	 * 
	 * The way these plug-ins work is that you create an array of the values you
	 * wish to be ordering for the column in question and then return that
	 * array. The data in the array much be in the index order of the rows in
	 * the table (not the currently ordering order!). Which order data gathering
	 * function is run here depends on the `dt-init columns.orderDataType`
	 * parameter that is used for the column (if any).
	 *
	 * The functions defined take two parameters:
	 *
	 * 1. `{object}` DataTables settings object: see
	 *    {@link DataTable.models.oSettings}
	 * 2. `{int}` Target column index
	 *
	 * Each function is expected to return an array:
	 *
	 * * `{array}` Data for the column to be ordering upon
	 *
	 *  @type array
	 *
	 *  @example
	 *    // Ordering using `input` node values
	 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
	 *    {
	 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
	 *        return $('input', td).val();
	 *      } );
	 *    }
	 */
	order: {},


	/**
	 * Type based plug-ins.
	 *
	 * Each column in DataTables has a type assigned to it, either by automatic
	 * detection or by direct assignment using the `type` option for the column.
	 * The type of a column will effect how it is ordering and search (plug-ins
	 * can also make use of the column type if required).
	 *
	 * @namespace
	 */
	type: {
		/**
		 * Automatic column class assignment
		 */
		className: {},

		/**
		 * Type detection functions.
		 *
		 * The functions defined in this object are used to automatically detect
		 * a column's type, making initialisation of DataTables super easy, even
		 * when complex data is in the table.
		 *
		 * The functions defined take two parameters:
		 *
	     *  1. `{*}` Data from the column cell to be analysed
	     *  2. `{settings}` DataTables settings object. This can be used to
	     *     perform context specific type detection - for example detection
	     *     based on language settings such as using a comma for a decimal
	     *     place. Generally speaking the options from the settings will not
	     *     be required
		 *
		 * Each function is expected to return:
		 *
		 * * `{string|null}` Data type detected, or null if unknown (and thus
		 *   pass it on to the other type detection functions.
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Currency type detection plug-in:
		 *    $.fn.dataTable.ext.type.detect.push(
		 *      function ( data, settings ) {
		 *        // Check the numeric part
		 *        if ( ! data.substring(1).match(/[0-9]/) ) {
		 *          return null;
		 *        }
		 *
		 *        // Check prefixed by currency
		 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
		 *          return 'currency';
		 *        }
		 *        return null;
		 *      }
		 *    );
		 */
		detect: [],

		/**
		 * Automatic renderer assignment
		 */
		render: {},


		/**
		 * Type based search formatting.
		 *
		 * The type based searching functions can be used to pre-format the
		 * data to be search on. For example, it can be used to strip HTML
		 * tags or to de-format telephone numbers for numeric only searching.
		 *
		 * Note that is a search is not defined for a column of a given type,
		 * no search formatting will be performed.
		 * 
		 * Pre-processing of searching data plug-ins - When you assign the sType
		 * for a column (or have it automatically detected for you by DataTables
		 * or a type detection plug-in), you will typically be using this for
		 * custom sorting, but it can also be used to provide custom searching
		 * by allowing you to pre-processing the data and returning the data in
		 * the format that should be searched upon. This is done by adding
		 * functions this object with a parameter name which matches the sType
		 * for that target column. This is the corollary of <i>afnSortData</i>
		 * for searching data.
		 *
		 * The functions defined take a single parameter:
		 *
	     *  1. `{*}` Data from the column cell to be prepared for searching
		 *
		 * Each function is expected to return:
		 *
		 * * `{string|null}` Formatted string that will be used for the searching.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
		 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
		 *    }
		 */
		search: {},


		/**
		 * Type based ordering.
		 *
		 * The column type tells DataTables what ordering to apply to the table
		 * when a column is sorted upon. The order for each type that is defined,
		 * is defined by the functions available in this object.
		 *
		 * Each ordering option can be described by three properties added to
		 * this object:
		 *
		 * * `{type}-pre` - Pre-formatting function
		 * * `{type}-asc` - Ascending order function
		 * * `{type}-desc` - Descending order function
		 *
		 * All three can be used together, only `{type}-pre` or only
		 * `{type}-asc` and `{type}-desc` together. It is generally recommended
		 * that only `{type}-pre` is used, as this provides the optimal
		 * implementation in terms of speed, although the others are provided
		 * for compatibility with existing Javascript sort functions.
		 *
		 * `{type}-pre`: Functions defined take a single parameter:
		 *
	     *  1. `{*}` Data from the column cell to be prepared for ordering
		 *
		 * And return:
		 *
		 * * `{*}` Data to be sorted upon
		 *
		 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
		 * functions, taking two parameters:
		 *
	     *  1. `{*}` Data to compare to the second parameter
	     *  2. `{*}` Data to compare to the first parameter
		 *
		 * And returning:
		 *
		 * * `{*}` Ordering match: <0 if first parameter should be sorted lower
		 *   than the second parameter, ===0 if the two parameters are equal and
		 *   >0 if the first parameter should be sorted height than the second
		 *   parameter.
		 * 
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Numeric ordering of formatted numbers with a pre-formatter
		 *    $.extend( $.fn.dataTable.ext.type.order, {
		 *      "string-pre": function(x) {
		 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
		 *        return parseFloat( a );
		 *      }
		 *    } );
		 *
		 *  @example
		 *    // Case-sensitive string ordering, with no pre-formatting method
		 *    $.extend( $.fn.dataTable.ext.order, {
		 *      "string-case-asc": function(x,y) {
		 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		 *      },
		 *      "string-case-desc": function(x,y) {
		 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		 *      }
		 *    } );
		 */
		order: {}
	},

	/**
	 * Unique DataTables instance counter
	 *
	 * @type int
	 * @private
	 */
	_unique: 0,


	//
	// Depreciated
	// The following properties are retained for backwards compatibility only.
	// The should not be used in new projects and will be removed in a future
	// version
	//

	/**
	 * Version check function.
	 *  @type function
	 *  @depreciated Since 1.10
	 */
	fnVersionCheck: DataTable.fnVersionCheck,


	/**
	 * Index for what 'this' index API functions should use
	 *  @type int
	 *  @deprecated Since v1.10
	 */
	iApiIndex: 0,


	/**
	 * Software version
	 *  @type string
	 *  @deprecated Since v1.10
	 */
	sVersion: DataTable.version
};


//
// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
//
dataTables_$.extend( _ext, {
	afnFiltering: _ext.search,
	aTypes:       _ext.type.detect,
	ofnSearch:    _ext.type.search,
	oSort:        _ext.type.order,
	afnSortData:  _ext.order,
	aoFeatures:   _ext.feature,
	oStdClasses:  _ext.classes,
	oPagination:  _ext.pager
} );


dataTables_$.extend( DataTable.ext.classes, {
	container: 'dt-container',
	empty: {
		row: 'dt-empty'
	},
	info: {
		container: 'dt-info'
	},
	length: {
		container: 'dt-length',
		select: 'dt-input'
	},
	order: {
		canAsc: 'dt-orderable-asc',
		canDesc: 'dt-orderable-desc',
		isAsc: 'dt-ordering-asc',
		isDesc: 'dt-ordering-desc',
		none: 'dt-orderable-none',
		position: 'sorting_'
	},
	processing: {
		container: 'dt-processing'
	},
	scrolling: {
		body: 'dt-scroll-body',
		container: 'dt-scroll',
		footer: {
			self: 'dt-scroll-foot',
			inner: 'dt-scroll-footInner'
		},
		header: {
			self: 'dt-scroll-head',
			inner: 'dt-scroll-headInner'
		}
	},
	search: {
		container: 'dt-search',
		input: 'dt-input'
	},
	table: 'dataTable',	
	tbody: {
		cell: '',
		row: ''
	},
	thead: {
		cell: '',
		row: ''
	},
	tfoot: {
		cell: '',
		row: ''
	},
	paging: {
		active: 'current',
		button: 'dt-paging-button',
		container: 'dt-paging',
		disabled: 'disabled'
	}
} );


/*
 * It is useful to have variables which are scoped locally so only the
 * DataTables functions can access them and they don't leak into global space.
 * At the same time these functions are often useful over multiple files in the
 * core and API, so we list, or at least document, all variables which are used
 * by DataTables as private variables here. This also ensures that there is no
 * clashing of variable names and that they can easily referenced for reuse.
 */


// Defined else where
//  _selector_run
//  _selector_opts
//  _selector_row_indexes

var _ext; // DataTable.ext
var _Api; // DataTable.Api
var _api_register; // DataTable.Api.register
var _api_registerPlural; // DataTable.Api.registerPlural

var _re_dic = {};
var _re_new_lines = /[\r\n\u2028]/g;
var _re_html = /<([^>]*>)/g;
var _max_str_len = Math.pow(2, 28);

// This is not strict ISO8601 - Date.parse() is quite lax, although
// implementations differ between browsers.
var _re_date = /^\d{2,4}[./-]\d{1,2}[./-]\d{1,2}([T ]{1}\d{1,2}[:.]\d{2}([.:]\d{2})?)?$/;

// Escape regular expression special characters
var _re_escape_regex = new RegExp( '(\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ].join('|\\') + ')', 'g' );

// https://en.wikipedia.org/wiki/Foreign_exchange_market
// - \u20BD - Russian ruble.
// - \u20a9 - South Korean Won
// - \u20BA - Turkish Lira
// - \u20B9 - Indian Rupee
// - R - Brazil (R$) and South Africa
// - fr - Swiss Franc
// - kr - Swedish krona, Norwegian krone and Danish krone
// - \u2009 is thin space and \u202F is narrow no-break space, both used in many
// - Ƀ - Bitcoin
// - Ξ - Ethereum
//   standards as thousands separators.
var _re_formatted_numeric = /['\u00A0,$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi;


var _empty = function ( d ) {
	return !d || d === true || d === '-' ? true : false;
};


var _intVal = function ( s ) {
	var integer = parseInt( s, 10 );
	return !isNaN(integer) && isFinite(s) ? integer : null;
};

// Convert from a formatted number with characters other than `.` as the
// decimal place, to a Javascript number
var _numToDecimal = function ( num, decimalPoint ) {
	// Cache created regular expressions for speed as this function is called often
	if ( ! _re_dic[ decimalPoint ] ) {
		_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
	}
	return typeof num === 'string' && decimalPoint !== '.' ?
		num.replace( /\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
		num;
};


var _isNumber = function ( d, decimalPoint, formatted ) {
	var type = typeof d;
	var strType = type === 'string';

	if ( type === 'number' || type === 'bigint') {
		return true;
	}

	// If empty return immediately so there must be a number if it is a
	// formatted string (this stops the string "k", or "kr", etc being detected
	// as a formatted number for currency
	if ( _empty( d ) ) {
		return true;
	}

	if ( decimalPoint && strType ) {
		d = _numToDecimal( d, decimalPoint );
	}

	if ( formatted && strType ) {
		d = d.replace( _re_formatted_numeric, '' );
	}

	return !isNaN( parseFloat(d) ) && isFinite( d );
};


// A string without HTML in it can be considered to be HTML still
var _isHtml = function ( d ) {
	return _empty( d ) || typeof d === 'string';
};

// Is a string a number surrounded by HTML?
var _htmlNumeric = function ( d, decimalPoint, formatted ) {
	if ( _empty( d ) ) {
		return true;
	}

	// input and select strings mean that this isn't just a number
	if (typeof d === 'string' && d.match(/<(input|select)/i)) {
		return null;
	}

	var html = _isHtml( d );
	return ! html ?
		null :
		_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
			true :
			null;
};


var _pluck = function ( a, prop, prop2 ) {
	var out = [];
	var i=0, ien=a.length;

	// Could have the test in the loop for slightly smaller code, but speed
	// is essential here
	if ( prop2 !== undefined ) {
		for ( ; i<ien ; i++ ) {
			if ( a[i] && a[i][ prop ] ) {
				out.push( a[i][ prop ][ prop2 ] );
			}
		}
	}
	else {
		for ( ; i<ien ; i++ ) {
			if ( a[i] ) {
				out.push( a[i][ prop ] );
			}
		}
	}

	return out;
};


// Basically the same as _pluck, but rather than looping over `a` we use `order`
// as the indexes to pick from `a`
var _pluck_order = function ( a, order, prop, prop2 )
{
	var out = [];
	var i=0, ien=order.length;

	// Could have the test in the loop for slightly smaller code, but speed
	// is essential here
	if ( prop2 !== undefined ) {
		for ( ; i<ien ; i++ ) {
			if ( a[ order[i] ][ prop ] ) {
				out.push( a[ order[i] ][ prop ][ prop2 ] );
			}
		}
	}
	else {
		for ( ; i<ien ; i++ ) {
			if ( a[ order[i] ] ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	}

	return out;
};


var _range = function ( len, start )
{
	var out = [];
	var end;

	if ( start === undefined ) {
		start = 0;
		end = len;
	}
	else {
		end = start;
		start = len;
	}

	for ( var i=start ; i<end ; i++ ) {
		out.push( i );
	}

	return out;
};


var _removeEmpty = function ( a )
{
	var out = [];

	for ( var i=0, ien=a.length ; i<ien ; i++ ) {
		if ( a[i] ) { // careful - will remove all falsy values!
			out.push( a[i] );
		}
	}

	return out;
};

// Replaceable function in api.util
var _stripHtml = function (input) {
	// Irrelevant check to workaround CodeQL's false positive on the regex
	if (input.length > _max_str_len) {
		throw new Error('Exceeded max str len');
	}

	var previous;

	input = input.replace(_re_html, ''); // Complete tags

	// Safety for incomplete script tag - use do / while to ensure that
	// we get all instances
	do {
		previous = input;
		input = input.replace(/<script/i, '');
	} while (input !== previous);

	return previous;
};

// Replaceable function in api.util
var _escapeHtml = function ( d ) {
	if (Array.isArray(d)) {
		d = d.join(',');
	}

	return typeof d === 'string' ?
		d
			.replace(/&/g, '&amp;')
			.replace(/</g, '&lt;')
			.replace(/>/g, '&gt;')
			.replace(/"/g, '&quot;') :
		d;
};

// Remove diacritics from a string by decomposing it and then removing
// non-ascii characters
var _normalize = function (str, both) {
	if (typeof str !== 'string') {
		return str;
	}

	// It is faster to just run `normalize` than it is to check if
	// we need to with a regex!
	var res = str.normalize("NFD");

	// Equally, here we check if a regex is needed or not
	return res.length !== str.length
		? (both === true ? str + ' ' : '' ) + res.replace(/[\u0300-\u036f]/g, "")
		: res;
}

/**
 * Determine if all values in the array are unique. This means we can short
 * cut the _unique method at the cost of a single loop. A sorted array is used
 * to easily check the values.
 *
 * @param  {array} src Source array
 * @return {boolean} true if all unique, false otherwise
 * @ignore
 */
var _areAllUnique = function ( src ) {
	if ( src.length < 2 ) {
		return true;
	}

	var sorted = src.slice().sort();
	var last = sorted[0];

	for ( var i=1, ien=sorted.length ; i<ien ; i++ ) {
		if ( sorted[i] === last ) {
			return false;
		}

		last = sorted[i];
	}

	return true;
};


/**
 * Find the unique elements in a source array.
 *
 * @param  {array} src Source array
 * @return {array} Array of unique items
 * @ignore
 */
var _unique = function ( src )
{
	if (Array.from && Set) {
		return Array.from(new Set(src));
	}

	if ( _areAllUnique( src ) ) {
		return src.slice();
	}

	// A faster unique method is to use object keys to identify used values,
	// but this doesn't work with arrays or objects, which we must also
	// consider. See jsperf.app/compare-array-unique-versions/4 for more
	// information.
	var
		out = [],
		val,
		i, ien=src.length,
		j, k=0;

	again: for ( i=0 ; i<ien ; i++ ) {
		val = src[i];

		for ( j=0 ; j<k ; j++ ) {
			if ( out[j] === val ) {
				continue again;
			}
		}

		out.push( val );
		k++;
	}

	return out;
};

// Surprisingly this is faster than [].concat.apply
// https://jsperf.com/flatten-an-array-loop-vs-reduce/2
var _flatten = function (out, val) {
	if (Array.isArray(val)) {
		for (var i=0 ; i<val.length ; i++) {
			_flatten(out, val[i]);
		}
	}
	else {
		out.push(val);
	}

	return out;
}

// Similar to jQuery's addClass, but use classList.add
function _addClass(el, name) {
	if (name) {
		name.split(' ').forEach(function (n) {
			if (n) {
				// `add` does deduplication, so no need to check `contains`
				el.classList.add(n);
			}
		});
	}
}

/**
 * DataTables utility methods
 * 
 * This namespace provides helper methods that DataTables uses internally to
 * create a DataTable, but which are not exclusively used only for DataTables.
 * These methods can be used by extension authors to save the duplication of
 * code.
 *
 *  @namespace
 */
DataTable.util = {
	/**
	 * Return a string with diacritic characters decomposed
	 * @param {*} mixed Function or string to normalize
	 * @param {*} both Return original string and the normalized string
	 * @returns String or undefined
	 */
	diacritics: function (mixed, both) {
		var type = typeof mixed;

		if (type !== 'function') {
			return _normalize(mixed, both);
		}
		_normalize = mixed;
	},

	/**
	 * Debounce a function
	 *
	 * @param {function} fn Function to be called
	 * @param {integer} freq Call frequency in mS
	 * @return {function} Wrapped function
	 */
	debounce: function ( fn, timeout ) {
		var timer;

		return function () {
			var that = this;
			var args = arguments;

			clearTimeout(timer);

			timer = setTimeout( function () {
				fn.apply(that, args);
			}, timeout || 250 );
		};
	},

	/**
	 * Throttle the calls to a function. Arguments and context are maintained
	 * for the throttled function.
	 *
	 * @param {function} fn Function to be called
	 * @param {integer} freq Call frequency in mS
	 * @return {function} Wrapped function
	 */
	throttle: function ( fn, freq ) {
		var
			frequency = freq !== undefined ? freq : 200,
			last,
			timer;

		return function () {
			var
				that = this,
				now  = +new Date(),
				args = arguments;

			if ( last && now < last + frequency ) {
				clearTimeout( timer );

				timer = setTimeout( function () {
					last = undefined;
					fn.apply( that, args );
				}, frequency );
			}
			else {
				last = now;
				fn.apply( that, args );
			}
		};
	},

	/**
	 * Escape a string such that it can be used in a regular expression
	 *
	 *  @param {string} val string to escape
	 *  @returns {string} escaped string
	 */
	escapeRegex: function ( val ) {
		return val.replace( _re_escape_regex, '\\$1' );
	},

	/**
	 * Create a function that will write to a nested object or array
	 * @param {*} source JSON notation string
	 * @returns Write function
	 */
	set: function ( source ) {
		if ( dataTables_$.isPlainObject( source ) ) {
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return DataTable.util.set( source._ );
		}
		else if ( source === null ) {
			// Nothing to do when the data source is null
			return function () {};
		}
		else if ( typeof source === 'function' ) {
			return function (data, val, meta) {
				source( data, 'set', val, meta );
			};
		}
		else if (
			typeof source === 'string' && (source.indexOf('.') !== -1 ||
			source.indexOf('[') !== -1 || source.indexOf('(') !== -1)
		) {
			// Like the get, we need to get data from a nested object
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {
					// Protect against prototype pollution
					if (a[i] === '__proto__' || a[i] === 'constructor') {
						throw new Error('Cannot set prototype values');
					}
	
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation ) {
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
	
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						if ( Array.isArray( val ) ) {
							for ( var j=0, jLen=val.length ; j<jLen ; j++ ) {
								o = {};
								setData( o, val[j], innerSrc );
								data[ a[i] ].push( o );
							}
						}
						else {
							// We've been asked to save data to an array, but it
							// isn't array data to be saved. Best that can be done
							// is to just save the value.
							data[ a[i] ] = val;
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation ) {
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) ) {
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else {
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) { // meta is also passed in, but not used
				return setData( data, val, source );
			};
		}
		else {
			// Array or flat object mapping
			return function (data, val) { // meta is also passed in, but not used
				data[source] = val;
			};
		}
	},

	/**
	 * Create a function that will read nested objects from arrays, based on JSON notation
	 * @param {*} source JSON notation string
	 * @returns Value read
	 */
	get: function ( source ) {
		if ( dataTables_$.isPlainObject( source ) ) {
			// Build an object of get functions, and wrap them in a single call
			var o = {};
			dataTables_$.each( source, function (key, val) {
				if ( val ) {
					o[key] = DataTable.util.get( val );
				}
			} );
	
			return function (data, type, row, meta) {
				var t = o[type] || o._;
				return t !== undefined ?
					t(data, type, row, meta) :
					data;
			};
		}
		else if ( source === null ) {
			// Give an empty string for rendering / sorting etc
			return function (data) { // type, row and meta also passed, but not used
				return data;
			};
		}
		else if ( typeof source === 'function' ) {
			return function (data, type, row, meta) {
				return source( data, type, row, meta );
			};
		}
		else if (
			typeof source === 'string' && (source.indexOf('.') !== -1 ||
			source.indexOf('[') !== -1 || source.indexOf('(') !== -1)
		) {
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" ) {
					var a = _fnSplitObjNotation( src );
	
					for ( var i=0, iLen=a.length ; i<iLen ; i++ ) {
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation ) {
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
	
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							if ( Array.isArray( data ) ) {
								for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
									out.push( fetchData( data[j], type, innerSrc ) );
								}
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation ) {
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if (data === null || data[ a[i] ] === null) {
							return null;
						}
						else if ( data === undefined || data[ a[i] ] === undefined ) {
							return undefined;
						}

						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) { // row and meta also passed, but not used
				return fetchData( data, type, source );
			};
		}
		else {
			// Array or flat object mapping
			return function (data) { // row and meta also passed, but not used
				return data[source];
			};
		}
	},

	stripHtml: function (mixed) {
		var type = typeof mixed;

		if (type === 'function') {
			_stripHtml = mixed;
			return;
		}
		else if (type === 'string') {
			return _stripHtml(mixed);
		}
		return mixed;
	},

	escapeHtml: function (mixed) {
		var type = typeof mixed;

		if (type === 'function') {
			_escapeHtml = mixed;
			return;
		}
		else if (type === 'string' || Array.isArray(mixed)) {
			return _escapeHtml(mixed);
		}
		return mixed;
	},

	unique: _unique
};



/**
 * Create a mapping object that allows camel case parameters to be looked up
 * for their Hungarian counterparts. The mapping is stored in a private
 * parameter called `_hungarianMap` which can be accessed on the source object.
 *  @param {object} o
 *  @memberof DataTable#oApi
 */
function _fnHungarianMap ( o )
{
	var
		hungarian = 'a aa ai ao as b fn i m o s ',
		match,
		newKey,
		map = {};

	dataTables_$.each( o, function (key) {
		match = key.match(/^([^A-Z]+?)([A-Z])/);

		if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
		{
			newKey = key.replace( match[0], match[2].toLowerCase() );
			map[ newKey ] = key;

			if ( match[1] === 'o' )
			{
				_fnHungarianMap( o[key] );
			}
		}
	} );

	o._hungarianMap = map;
}


/**
 * Convert from camel case parameters to Hungarian, based on a Hungarian map
 * created by _fnHungarianMap.
 *  @param {object} src The model object which holds all parameters that can be
 *    mapped.
 *  @param {object} user The object to convert from camel case to Hungarian.
 *  @param {boolean} force When set to `true`, properties which already have a
 *    Hungarian value in the `user` object will be overwritten. Otherwise they
 *    won't be.
 *  @memberof DataTable#oApi
 */
function _fnCamelToHungarian ( src, user, force )
{
	if ( ! src._hungarianMap ) {
		_fnHungarianMap( src );
	}

	var hungarianKey;

	dataTables_$.each( user, function (key) {
		hungarianKey = src._hungarianMap[ key ];

		if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
		{
			// For objects, we need to buzz down into the object to copy parameters
			if ( hungarianKey.charAt(0) === 'o' )
			{
				// Copy the camelCase options over to the hungarian
				if ( ! user[ hungarianKey ] ) {
					user[ hungarianKey ] = {};
				}
				dataTables_$.extend( true, user[hungarianKey], user[key] );

				_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
			}
			else {
				user[hungarianKey] = user[ key ];
			}
		}
	} );
}

/**
 * Map one parameter onto another
 *  @param {object} o Object to map
 *  @param {*} knew The new parameter name
 *  @param {*} old The old parameter name
 */
var _fnCompatMap = function ( o, knew, old ) {
	if ( o[ knew ] !== undefined ) {
		o[ old ] = o[ knew ];
	}
};


/**
 * Provide backwards compatibility for the main DT options. Note that the new
 * options are mapped onto the old parameters, so this is an external interface
 * change only.
 *  @param {object} init Object to map
 */
function _fnCompatOpts ( init )
{
	_fnCompatMap( init, 'ordering',      'bSort' );
	_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
	_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
	_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
	_fnCompatMap( init, 'order',         'aaSorting' );
	_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
	_fnCompatMap( init, 'paging',        'bPaginate' );
	_fnCompatMap( init, 'pagingType',    'sPaginationType' );
	_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
	_fnCompatMap( init, 'searching',     'bFilter' );

	// Boolean initialisation of x-scrolling
	if ( typeof init.sScrollX === 'boolean' ) {
		init.sScrollX = init.sScrollX ? '100%' : '';
	}
	if ( typeof init.scrollX === 'boolean' ) {
		init.scrollX = init.scrollX ? '100%' : '';
	}

	// Column search objects are in an array, so it needs to be converted
	// element by element
	var searchCols = init.aoSearchCols;

	if ( searchCols ) {
		for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
			if ( searchCols[i] ) {
				_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
			}
		}
	}

	// Enable search delay if server-side processing is enabled
	if (init.serverSide && ! init.searchDelay) {
		init.searchDelay = 400;
	}
}


/**
 * Provide backwards compatibility for column options. Note that the new options
 * are mapped onto the old parameters, so this is an external interface change
 * only.
 *  @param {object} init Object to map
 */
function _fnCompatCols ( init )
{
	_fnCompatMap( init, 'orderable',     'bSortable' );
	_fnCompatMap( init, 'orderData',     'aDataSort' );
	_fnCompatMap( init, 'orderSequence', 'asSorting' );
	_fnCompatMap( init, 'orderDataType', 'sortDataType' );

	// orderData can be given as an integer
	var dataSort = init.aDataSort;
	if ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {
		init.aDataSort = [ dataSort ];
	}
}


/**
 * Browser feature detection for capabilities, quirks
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnBrowserDetect( settings )
{
	// We don't need to do this every time DataTables is constructed, the values
	// calculated are specific to the browser and OS configuration which we
	// don't expect to change between initialisations
	if ( ! DataTable.__browser ) {
		var browser = {};
		DataTable.__browser = browser;

		// Scrolling feature / quirks detection
		var n = dataTables_$('<div/>')
			.css( {
				position: 'fixed',
				top: 0,
				left: -1 * window.pageXOffset, // allow for scrolling
				height: 1,
				width: 1,
				overflow: 'hidden'
			} )
			.append(
				dataTables_$('<div/>')
					.css( {
						position: 'absolute',
						top: 1,
						left: 1,
						width: 100,
						overflow: 'scroll'
					} )
					.append(
						dataTables_$('<div/>')
							.css( {
								width: '100%',
								height: 10
							} )
					)
			)
			.appendTo( 'body' );

		var outer = n.children();
		var inner = outer.children();

		// Get scrollbar width
		browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;

		// In rtl text layout, some browsers (most, but not all) will place the
		// scrollbar on the left, rather than the right.
		browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;

		n.remove();
	}

	dataTables_$.extend( settings.oBrowser, DataTable.__browser );
	settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
}

/**
 * Add a column to the list used for the table with default values
 *  @param {object} oSettings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnAddColumn( oSettings )
{
	// Add column to aoColumns array
	var oDefaults = DataTable.defaults.column;
	var iCol = oSettings.aoColumns.length;
	var oCol = dataTables_$.extend( {}, DataTable.models.oColumn, oDefaults, {
		"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
		"mData": oDefaults.mData ? oDefaults.mData : iCol,
		idx: iCol,
		searchFixed: {},
		colEl: dataTables_$('<col>').attr('data-dt-column', iCol)
	} );
	oSettings.aoColumns.push( oCol );

	// Add search object for column specific search. Note that the `searchCols[ iCol ]`
	// passed into extend can be undefined. This allows the user to give a default
	// with only some of the parameters defined, and also not give a default
	var searchCols = oSettings.aoPreSearchCols;
	searchCols[ iCol ] = dataTables_$.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
}


/**
 * Apply options for a column
 *  @param {object} oSettings dataTables settings object
 *  @param {int} iCol column index to consider
 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
 *  @memberof DataTable#oApi
 */
function _fnColumnOptions( oSettings, iCol, oOptions )
{
	var oCol = oSettings.aoColumns[ iCol ];

	/* User specified column options */
	if ( oOptions !== undefined && oOptions !== null )
	{
		// Backwards compatibility
		_fnCompatCols( oOptions );

		// Map camel case parameters to their Hungarian counterparts
		_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );

		/* Backwards compatibility for mDataProp */
		if ( oOptions.mDataProp !== undefined && !oOptions.mData )
		{
			oOptions.mData = oOptions.mDataProp;
		}

		if ( oOptions.sType )
		{
			oCol._sManualType = oOptions.sType;
		}
	
		// `class` is a reserved word in Javascript, so we need to provide
		// the ability to use a valid name for the camel case input
		if ( oOptions.className && ! oOptions.sClass )
		{
			oOptions.sClass = oOptions.className;
		}

		var origClass = oCol.sClass;

		dataTables_$.extend( oCol, oOptions );
		_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );

		// Merge class from previously defined classes with this one, rather than just
		// overwriting it in the extend above
		if (origClass !== oCol.sClass) {
			oCol.sClass = origClass + ' ' + oCol.sClass;
		}

		/* iDataSort to be applied (backwards compatibility), but aDataSort will take
		 * priority if defined
		 */
		if ( oOptions.iDataSort !== undefined )
		{
			oCol.aDataSort = [ oOptions.iDataSort ];
		}
		_fnMap( oCol, oOptions, "aDataSort" );
	}

	/* Cache the data get and set functions for speed */
	var mDataSrc = oCol.mData;
	var mData = _fnGetObjectDataFn( mDataSrc );

	// The `render` option can be given as an array to access the helper rendering methods.
	// The first element is the rendering method to use, the rest are the parameters to pass
	if ( oCol.mRender && Array.isArray( oCol.mRender ) ) {
		var copy = oCol.mRender.slice();
		var name = copy.shift();

		oCol.mRender = DataTable.render[name].apply(window, copy);
	}

	oCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;

	var attrTest = function( src ) {
		return typeof src === 'string' && src.indexOf('@') !== -1;
	};
	oCol._bAttrSrc = dataTables_$.isPlainObject( mDataSrc ) && (
		attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
	);
	oCol._setter = null;

	oCol.fnGetData = function (rowData, type, meta) {
		var innerData = mData( rowData, type, undefined, meta );

		return oCol._render && type ?
			oCol._render( innerData, type, rowData, meta ) :
			innerData;
	};
	oCol.fnSetData = function ( rowData, val, meta ) {
		return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
	};

	// Indicate if DataTables should read DOM data as an object or array
	// Used in _fnGetRowElements
	if ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {
		oSettings._rowReadObject = true;
	}

	/* Feature sorting overrides column specific when off */
	if ( !oSettings.oFeatures.bSort )
	{
		oCol.bSortable = false;
	}
}


/**
 * Adjust the table column widths for new data. Note: you would probably want to
 * do a redraw after calling this function!
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnAdjustColumnSizing ( settings )
{
	_fnCalculateColumnWidths( settings );
	_fnColumnSizes( settings );

	var scroll = settings.oScroll;
	if ( scroll.sY !== '' || scroll.sX !== '') {
		_fnScrollDraw( settings );
	}

	_fnCallbackFire( settings, null, 'column-sizing', [settings] );
}

/**
 * Apply column sizes
 *
 * @param {*} settings DataTables settings object
 */
function _fnColumnSizes ( settings )
{
	var cols = settings.aoColumns;

	for (var i=0 ; i<cols.length ; i++) {
		var width = _fnColumnsSumWidth(settings, [i], false, false);

		cols[i].colEl.css('width', width);
	}
}


/**
 * Convert the index of a visible column to the index in the data array (take account
 * of hidden columns)
 *  @param {object} oSettings dataTables settings object
 *  @param {int} iMatch Visible column index to lookup
 *  @returns {int} i the data index
 *  @memberof DataTable#oApi
 */
function _fnVisibleToColumnIndex( oSettings, iMatch )
{
	var aiVis = _fnGetColumns( oSettings, 'bVisible' );

	return typeof aiVis[iMatch] === 'number' ?
		aiVis[iMatch] :
		null;
}


/**
 * Convert the index of an index in the data array and convert it to the visible
 *   column index (take account of hidden columns)
 *  @param {int} iMatch Column index to lookup
 *  @param {object} oSettings dataTables settings object
 *  @returns {int} i the data index
 *  @memberof DataTable#oApi
 */
function _fnColumnIndexToVisible( oSettings, iMatch )
{
	var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	var iPos = aiVis.indexOf(iMatch);

	return iPos !== -1 ? iPos : null;
}


/**
 * Get the number of visible columns
 *  @param {object} oSettings dataTables settings object
 *  @returns {int} i the number of visible columns
 *  @memberof DataTable#oApi
 */
function _fnVisbleColumns( settings )
{
	var layout = settings.aoHeader;
	var columns = settings.aoColumns;
	var vis = 0;

	if ( layout.length ) {
		for ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {
			if ( columns[i].bVisible && dataTables_$(layout[0][i].cell).css('display') !== 'none' ) {
				vis++;
			}
		}
	}

	return vis;
}


/**
 * Get an array of column indexes that match a given property
 *  @param {object} oSettings dataTables settings object
 *  @param {string} sParam Parameter in aoColumns to look for - typically
 *    bVisible or bSearchable
 *  @returns {array} Array of indexes with matched properties
 *  @memberof DataTable#oApi
 */
function _fnGetColumns( oSettings, sParam )
{
	var a = [];

	oSettings.aoColumns.map( function(val, i) {
		if ( val[sParam] ) {
			a.push( i );
		}
	} );

	return a;
}


/**
 * Calculate the 'type' of a column
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnColumnTypes ( settings )
{
	var columns = settings.aoColumns;
	var data = settings.aoData;
	var types = DataTable.ext.type.detect;
	var i, ien, j, jen, k, ken;
	var col, detectedType, cache;

	// For each column, spin over the 
	for ( i=0, ien=columns.length ; i<ien ; i++ ) {
		col = columns[i];
		cache = [];

		if ( ! col.sType && col._sManualType ) {
			col.sType = col._sManualType;
		}
		else if ( ! col.sType ) {
			for ( j=0, jen=types.length ; j<jen ; j++ ) {
				for ( k=0, ken=data.length ; k<ken ; k++ ) {

					if (! data[k]) {
						continue;
					}

					// Use a cache array so we only need to get the type data
					// from the formatter once (when using multiple detectors)
					if ( cache[k] === undefined ) {
						cache[k] = _fnGetCellData( settings, k, i, 'type' );
					}

					detectedType = types[j]( cache[k], settings );

					// If null, then this type can't apply to this column, so
					// rather than testing all cells, break out. There is an
					// exception for the last type which is `html`. We need to
					// scan all rows since it is possible to mix string and HTML
					// types
					if ( ! detectedType && j !== types.length-2 ) {
						break;
					}

					// Only a single match is needed for html type since it is
					// bottom of the pile and very similar to string - but it
					// must not be empty
					if ( detectedType === 'html' && ! _empty(cache[k]) ) {
						break;
					}
				}

				// Type is valid for all data points in the column - use this
				// type
				if ( detectedType ) {
					col.sType = detectedType;
					break;
				}
			}

			// Fall back - if no type was detected, always use string
			if ( ! col.sType ) {
				col.sType = 'string';
			}
		}

		// Set class names for header / footer for auto type classes
		var autoClass = _ext.type.className[col.sType];

		if (autoClass) {
			_columnAutoClass(settings.aoHeader, i, autoClass);
			_columnAutoClass(settings.aoFooter, i, autoClass);
		}

		var renderer = _ext.type.render[col.sType];

		// This can only happen once! There is no way to remover
		// a renderer. After the first time the renderer has
		// already been set so createTr will run the renderer itself.
		if (renderer && ! col._render) {
			col._render = DataTable.util.get(renderer);

			_columnAutoRender(settings, i);
		}
	}
}

/**
 * Apply an auto detected renderer to data which doesn't yet have
 * a renderer
 */
function _columnAutoRender(settings, colIdx) {
	var data = settings.aoData;

	for (var i=0 ; i<data.length ; i++) {
		if (data[i].nTr) {
			// We have to update the display here since there is no
			// invalidation check for the data
			var display = _fnGetCellData( settings, i, colIdx, 'display' );

			data[i].displayData[colIdx] = display;
			_fnWriteCell(data[i].anCells[colIdx], display);

			// No need to update sort / filter data since it has
			// been invalidated and will be re-read with the
			// renderer now applied
		}
	}
}

/**
 * Apply a class name to a column's header cells
 */
function _columnAutoClass(container, colIdx, className) {
	container.forEach(function (row) {
		if (row[colIdx] && row[colIdx].unique) {
			_addClass(row[colIdx].cell, className);
		}
	});
}

/**
 * Take the column definitions and static columns arrays and calculate how
 * they relate to column indexes. The callback function will then apply the
 * definition found for a column to a suitable configuration object.
 *  @param {object} oSettings dataTables settings object
 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
 *  @param {array} aoCols The aoColumns array that defines columns individually
 *  @param {array} headerLayout Layout for header as it was loaded
 *  @param {function} fn Callback function - takes two parameters, the calculated
 *    column index and the definition for that column.
 *  @memberof DataTable#oApi
 */
function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )
{
	var i, iLen, j, jLen, k, kLen, def;
	var columns = oSettings.aoColumns;

	if ( aoCols ) {
		for ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {
			if (aoCols[i] && aoCols[i].name) {
				columns[i].sName = aoCols[i].name;
			}
		}
	}

	// Column definitions with aTargets
	if ( aoColDefs )
	{
		/* Loop over the definitions array - loop in reverse so first instance has priority */
		for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
		{
			def = aoColDefs[i];

			/* Each definition can target multiple columns, as it is an array */
			var aTargets = def.target !== undefined
				? def.target
				: def.targets !== undefined
					? def.targets
					: def.aTargets;

			if ( ! Array.isArray( aTargets ) )
			{
				aTargets = [ aTargets ];
			}

			for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
			{
				var target = aTargets[j];

				if ( typeof target === 'number' && target >= 0 )
				{
					/* Add columns that we don't yet know about */
					while( columns.length <= target )
					{
						_fnAddColumn( oSettings );
					}

					/* Integer, basic index */
					fn( target, def );
				}
				else if ( typeof target === 'number' && target < 0 )
				{
					/* Negative integer, right to left column counting */
					fn( columns.length+target, def );
				}
				else if ( typeof target === 'string' )
				{
					for ( k=0, kLen=columns.length ; k<kLen ; k++ ) {
						if (target === '_all') {
							// Apply to all columns
							fn( k, def );
						}
						else if (target.indexOf(':name') !== -1) {
							// Column selector
							if (columns[k].sName === target.replace(':name', '')) {
								fn( k, def );
							}
						}
						else {
							// Cell selector
							headerLayout.forEach(function (row) {
								if (row[k]) {
									var cell = dataTables_$(row[k].cell);

									// Legacy support. Note that it means that we don't support
									// an element name selector only, since they are treated as
									// class names for 1.x compat.
									if (target.match(/^[a-z][\w-]*$/i)) {
										target = '.' + target;
									}

									if (cell.is( target )) {
										fn( k, def );
									}
								}
							});
						}
					}
				}
			}
		}
	}

	// Statically defined columns array
	if ( aoCols ) {
		for ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {
			fn( i, aoCols[i] );
		}
	}
}


/**
 * Get the width for a given set of columns
 *
 * @param {*} settings DataTables settings object
 * @param {*} targets Columns - comma separated string or array of numbers
 * @param {*} original Use the original width (true) or calculated (false)
 * @param {*} incVisible Include visible columns (true) or not (false)
 * @returns Combined CSS value
 */
function _fnColumnsSumWidth( settings, targets, original, incVisible ) {
	if ( ! Array.isArray( targets ) ) {
		targets = _fnColumnsFromHeader( targets );
	}

	var sum = 0;
	var unit;
	var columns = settings.aoColumns;
	
	for ( var i=0, ien=targets.length ; i<ien ; i++ ) {
		var column = columns[ targets[i] ];
		var definedWidth = original ?
			column.sWidthOrig :
			column.sWidth;

		if ( ! incVisible && column.bVisible === false ) {
			continue;
		}

		if ( definedWidth === null || definedWidth === undefined ) {
			return null; // can't determine a defined width - browser defined
		}
		else if ( typeof definedWidth === 'number' ) {
			unit = 'px';
			sum += definedWidth;
		}
		else {
			var matched = definedWidth.match(/([\d\.]+)([^\d]*)/);

			if ( matched ) {
				sum += matched[1] * 1;
				unit = matched.length === 3 ?
					matched[2] :
					'px';
			}
		}
	}

	return sum + unit;
}

function _fnColumnsFromHeader( cell )
{
	var attr = dataTables_$(cell).closest('[data-dt-column]').attr('data-dt-column');

	if ( ! attr ) {
		return [];
	}

	return attr.split(',').map( function (val) {
		return val * 1;
	} );
}
/**
 * Add a data array to the table, creating DOM node etc. This is the parallel to
 * _fnGatherData, but for adding rows from a Javascript source, rather than a
 * DOM source.
 *  @param {object} settings dataTables settings object
 *  @param {array} data data array to be added
 *  @param {node} [tr] TR element to add to the table - optional. If not given,
 *    DataTables will create a row automatically
 *  @param {array} [tds] Array of TD|TH elements for the row - must be given
 *    if nTr is.
 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
 *  @memberof DataTable#oApi
 */
function _fnAddData ( settings, dataIn, tr, tds )
{
	/* Create the object for storing information about this new row */
	var rowIdx = settings.aoData.length;
	var rowModel = dataTables_$.extend( true, {}, DataTable.models.oRow, {
		src: tr ? 'dom' : 'data',
		idx: rowIdx
	} );

	rowModel._aData = dataIn;
	settings.aoData.push( rowModel );

	var columns = settings.aoColumns;

	for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
	{
		// Invalidate the column types as the new data needs to be revalidated
		columns[i].sType = null;
	}

	/* Add to the display array */
	settings.aiDisplayMaster.push( rowIdx );

	var id = settings.rowIdFn( dataIn );
	if ( id !== undefined ) {
		settings.aIds[ id ] = rowModel;
	}

	/* Create the DOM information, or register it if already present */
	if ( tr || ! settings.oFeatures.bDeferRender )
	{
		_fnCreateTr( settings, rowIdx, tr, tds );
	}

	return rowIdx;
}


/**
 * Add one or more TR elements to the table. Generally we'd expect to
 * use this for reading data from a DOM sourced table, but it could be
 * used for an TR element. Note that if a TR is given, it is used (i.e.
 * it is not cloned).
 *  @param {object} settings dataTables settings object
 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
 *  @returns {array} Array of indexes for the added rows
 *  @memberof DataTable#oApi
 */
function _fnAddTr( settings, trs )
{
	var row;

	// Allow an individual node to be passed in
	if ( ! (trs instanceof dataTables_$) ) {
		trs = dataTables_$(trs);
	}

	return trs.map( function (i, el) {
		row = _fnGetRowElements( settings, el );
		return _fnAddData( settings, row.data, el, row.cells );
	} );
}


/**
 * Get the data for a given cell from the internal cache, taking into account data mapping
 *  @param {object} settings dataTables settings object
 *  @param {int} rowIdx aoData row id
 *  @param {int} colIdx Column index
 *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')
 *  @returns {*} Cell data
 *  @memberof DataTable#oApi
 */
function _fnGetCellData( settings, rowIdx, colIdx, type )
{
	if (type === 'search') {
		type = 'filter';
	}
	else if (type === 'order') {
		type = 'sort';
	}

	var row = settings.aoData[rowIdx];

	if (! row) {
		return undefined;
	}

	var draw           = settings.iDraw;
	var col            = settings.aoColumns[colIdx];
	var rowData        = row._aData;
	var defaultContent = col.sDefaultContent;
	var cellData       = col.fnGetData( rowData, type, {
		settings: settings,
		row:      rowIdx,
		col:      colIdx
	} );

	// Allow for a node being returned for non-display types
	if (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {
		cellData = cellData.innerHTML;
	}

	if ( cellData === undefined ) {
		if ( settings.iDrawError != draw && defaultContent === null ) {
			_fnLog( settings, 0, "Requested unknown parameter "+
				(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
				" for row "+rowIdx+", column "+colIdx, 4 );
			settings.iDrawError = draw;
		}
		return defaultContent;
	}

	// When the data source is null and a specific data type is requested (i.e.
	// not the original data), we can use default column data
	if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
		cellData = defaultContent;
	}
	else if ( typeof cellData === 'function' ) {
		// If the data source is a function, then we run it and use the return,
		// executing in the scope of the data object (for instances)
		return cellData.call( rowData );
	}

	if ( cellData === null && type === 'display' ) {
		return '';
	}

	if ( type === 'filter' ) {
		var fomatters = DataTable.ext.type.search;

		if ( fomatters[ col.sType ] ) {
			cellData = fomatters[ col.sType ]( cellData );
		}
	}

	return cellData;
}


/**
 * Set the value for a specific cell, into the internal data cache
 *  @param {object} settings dataTables settings object
 *  @param {int} rowIdx aoData row id
 *  @param {int} colIdx Column index
 *  @param {*} val Value to set
 *  @memberof DataTable#oApi
 */
function _fnSetCellData( settings, rowIdx, colIdx, val )
{
	var col     = settings.aoColumns[colIdx];
	var rowData = settings.aoData[rowIdx]._aData;

	col.fnSetData( rowData, val, {
		settings: settings,
		row:      rowIdx,
		col:      colIdx
	}  );
}

/**
 * Write a value to a cell
 * @param {*} td Cell
 * @param {*} val Value
 */
function _fnWriteCell(td, val)
{
	if (val && typeof val === 'object' && val.nodeName) {
		dataTables_$(td)
			.empty()
			.append(val);
	}
	else {
		td.innerHTML = val;
	}
}


// Private variable that is used to match action syntax in the data property object
var __reArray = /\[.*?\]$/;
var __reFn = /\(\)$/;

/**
 * Split string on periods, taking into account escaped periods
 * @param  {string} str String to split
 * @return {array} Split string
 */
function _fnSplitObjNotation( str )
{
	var parts = str.match(/(\\.|[^.])+/g) || [''];

	return parts.map( function ( s ) {
		return s.replace(/\\\./g, '.');
	} );
}


/**
 * Return a function that can be used to get data from a source object, taking
 * into account the ability to use nested objects as a source
 *  @param {string|int|function} mSource The data source for the object
 *  @returns {function} Data get function
 *  @memberof DataTable#oApi
 */
var _fnGetObjectDataFn = DataTable.util.get;


/**
 * Return a function that can be used to set data from a source object, taking
 * into account the ability to use nested objects as a source
 *  @param {string|int|function} mSource The data source for the object
 *  @returns {function} Data set function
 *  @memberof DataTable#oApi
 */
var _fnSetObjectDataFn = DataTable.util.set;


/**
 * Return an array with the full table data
 *  @param {object} oSettings dataTables settings object
 *  @returns array {array} aData Master data array
 *  @memberof DataTable#oApi
 */
function _fnGetDataMaster ( settings )
{
	return _pluck( settings.aoData, '_aData' );
}


/**
 * Nuke the table
 *  @param {object} oSettings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnClearTable( settings )
{
	settings.aoData.length = 0;
	settings.aiDisplayMaster.length = 0;
	settings.aiDisplay.length = 0;
	settings.aIds = {};
}


/**
 * Mark cached data as invalid such that a re-read of the data will occur when
 * the cached data is next requested. Also update from the data source object.
 *
 * @param {object} settings DataTables settings object
 * @param {int}    rowIdx   Row index to invalidate
 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
 *     or 'data'
 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
 *     row will be invalidated
 * @memberof DataTable#oApi
 *
 * @todo For the modularisation of v1.11 this will need to become a callback, so
 *   the sort and filter methods can subscribe to it. That will required
 *   initialisation options for sorting, which is why it is not already baked in
 */
function _fnInvalidate( settings, rowIdx, src, colIdx )
{
	var row = settings.aoData[ rowIdx ];
	var i, ien;

	// Remove the cached data for the row
	row._aSortData = null;
	row._aFilterData = null;
	row.displayData = null;

	// Are we reading last data from DOM or the data object?
	if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
		// Read the data from the DOM
		row._aData = _fnGetRowElements(
				settings, row, colIdx, colIdx === undefined ? undefined : row._aData
			)
			.data;
	}
	else {
		// Reading from data object, update the DOM
		var cells = row.anCells;
		var display = _fnGetRowDisplay(settings, rowIdx);

		if ( cells ) {
			if ( colIdx !== undefined ) {
				_fnWriteCell(cells[colIdx], display[colIdx]);
			}
			else {
				for ( i=0, ien=cells.length ; i<ien ; i++ ) {
					_fnWriteCell(cells[i], display[i]);
				}
			}
		}
	}

	// Column specific invalidation
	var cols = settings.aoColumns;
	if ( colIdx !== undefined ) {
		// Type - the data might have changed
		cols[ colIdx ].sType = null;

		// Max length string. Its a fairly cheep recalculation, so not worth
		// something more complicated
		cols[ colIdx ].maxLenString = null;
	}
	else {
		for ( i=0, ien=cols.length ; i<ien ; i++ ) {
			cols[i].sType = null;
			cols[i].maxLenString = null;
		}

		// Update DataTables special `DT_*` attributes for the row
		_fnRowAttributes( settings, row );
	}
}


/**
 * Build a data source object from an HTML row, reading the contents of the
 * cells that are in the row.
 *
 * @param {object} settings DataTables settings object
 * @param {node|object} TR element from which to read data or existing row
 *   object from which to re-read the data from the cells
 * @param {int} [colIdx] Optional column index
 * @param {array|object} [d] Data source object. If `colIdx` is given then this
 *   parameter should also be given and will be used to write the data into.
 *   Only the column in question will be written
 * @returns {object} Object with two parameters: `data` the data read, in
 *   document order, and `cells` and array of nodes (they can be useful to the
 *   caller, so rather than needing a second traversal to get them, just return
 *   them from here).
 * @memberof DataTable#oApi
 */
function _fnGetRowElements( settings, row, colIdx, d )
{
	var
		tds = [],
		td = row.firstChild,
		name, col, i=0, contents,
		columns = settings.aoColumns,
		objectRead = settings._rowReadObject;

	// Allow the data object to be passed in, or construct
	d = d !== undefined ?
		d :
		objectRead ?
			{} :
			[];

	var attr = function ( str, td  ) {
		if ( typeof str === 'string' ) {
			var idx = str.indexOf('@');

			if ( idx !== -1 ) {
				var attr = str.substring( idx+1 );
				var setter = _fnSetObjectDataFn( str );
				setter( d, td.getAttribute( attr ) );
			}
		}
	};

	// Read data from a cell and store into the data object
	var cellProcess = function ( cell ) {
		if ( colIdx === undefined || colIdx === i ) {
			col = columns[i];
			contents = (cell.innerHTML).trim();

			if ( col && col._bAttrSrc ) {
				var setter = _fnSetObjectDataFn( col.mData._ );
				setter( d, contents );

				attr( col.mData.sort, cell );
				attr( col.mData.type, cell );
				attr( col.mData.filter, cell );
			}
			else {
				// Depending on the `data` option for the columns the data can
				// be read to either an object or an array.
				if ( objectRead ) {
					if ( ! col._setter ) {
						// Cache the setter function
						col._setter = _fnSetObjectDataFn( col.mData );
					}
					col._setter( d, contents );
				}
				else {
					d[i] = contents;
				}
			}
		}

		i++;
	};

	if ( td ) {
		// `tr` element was passed in
		while ( td ) {
			name = td.nodeName.toUpperCase();

			if ( name == "TD" || name == "TH" ) {
				cellProcess( td );
				tds.push( td );
			}

			td = td.nextSibling;
		}
	}
	else {
		// Existing row object passed in
		tds = row.anCells;

		for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
			cellProcess( tds[j] );
		}
	}

	// Read the ID from the DOM if present
	var rowNode = row.firstChild ? row : row.nTr;

	if ( rowNode ) {
		var id = rowNode.getAttribute( 'id' );

		if ( id ) {
			_fnSetObjectDataFn( settings.rowId )( d, id );
		}
	}

	return {
		data: d,
		cells: tds
	};
}

/**
 * Render and cache a row's display data for the columns, if required
 * @returns 
 */
function _fnGetRowDisplay (settings, rowIdx) {
	let rowModal = settings.aoData[rowIdx];
	let columns = settings.aoColumns;

	if (! rowModal.displayData) {
		// Need to render and cache
		rowModal.displayData = [];
	
		for ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {
			rowModal.displayData.push(
				_fnGetCellData( settings, rowIdx, colIdx, 'display' )
			);
		}
	}

	return rowModal.displayData;
}

/**
 * Create a new TR element (and it's TD children) for a row
 *  @param {object} oSettings dataTables settings object
 *  @param {int} iRow Row to consider
 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
 *    DataTables will create a row automatically
 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
 *    if nTr is.
 *  @memberof DataTable#oApi
 */
function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
{
	var
		row = oSettings.aoData[iRow],
		rowData = row._aData,
		cells = [],
		nTr, nTd, oCol,
		i, iLen, create,
		trClass = oSettings.oClasses.tbody.row;

	if ( row.nTr === null )
	{
		nTr = nTrIn || document.createElement('tr');

		row.nTr = nTr;
		row.anCells = cells;

		_addClass(nTr, trClass);

		/* Use a private property on the node to allow reserve mapping from the node
		 * to the aoData array for fast look up
		 */
		nTr._DT_RowIndex = iRow;

		/* Special parameters can be given by the data source to be used on the row */
		_fnRowAttributes( oSettings, row );

		/* Process each column */
		for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			oCol = oSettings.aoColumns[i];
			create = nTrIn && anTds[i] ? false : true;

			nTd = create ? document.createElement( oCol.sCellType ) : anTds[i];

			if (! nTd) {
				_fnLog( oSettings, 0, 'Incorrect column count', 18 );
			}

			nTd._DT_CellIndex = {
				row: iRow,
				column: i
			};
			
			cells.push( nTd );
			
			var display = _fnGetRowDisplay(oSettings, iRow);

			// Need to create the HTML if new, or if a rendering function is defined
			if (
				create ||
				(
					(oCol.mRender || oCol.mData !== i) &&
					(!dataTables_$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				)
			) {
				_fnWriteCell(nTd, display[i]);
			}

			// Visibility - add or remove as required
			if ( oCol.bVisible && create )
			{
				nTr.appendChild( nTd );
			}
			else if ( ! oCol.bVisible && ! create )
			{
				nTd.parentNode.removeChild( nTd );
			}

			if ( oCol.fnCreatedCell )
			{
				oCol.fnCreatedCell.call( oSettings.oInstance,
					nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
				);
			}
		}

		_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );
	}
	else {
		_addClass(row.nTr, trClass);
	}
}


/**
 * Add attributes to a row based on the special `DT_*` parameters in a data
 * source object.
 *  @param {object} settings DataTables settings object
 *  @param {object} DataTables row object for the row to be modified
 *  @memberof DataTable#oApi
 */
function _fnRowAttributes( settings, row )
{
	var tr = row.nTr;
	var data = row._aData;

	if ( tr ) {
		var id = settings.rowIdFn( data );

		if ( id ) {
			tr.id = id;
		}

		if ( data.DT_RowClass ) {
			// Remove any classes added by DT_RowClass before
			var a = data.DT_RowClass.split(' ');
			row.__rowc = row.__rowc ?
				_unique( row.__rowc.concat( a ) ) :
				a;

			dataTables_$(tr)
				.removeClass( row.__rowc.join(' ') )
				.addClass( data.DT_RowClass );
		}

		if ( data.DT_RowAttr ) {
			dataTables_$(tr).attr( data.DT_RowAttr );
		}

		if ( data.DT_RowData ) {
			dataTables_$(tr).data( data.DT_RowData );
		}
	}
}


/**
 * Create the HTML header for the table
 *  @param {object} oSettings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnBuildHead( settings, side )
{
	var classes = settings.oClasses;
	var columns = settings.aoColumns;
	var i, ien, row;
	var target = side === 'header'
		? settings.nTHead
		: settings.nTFoot;
	var titleProp = side === 'header' ? 'sTitle' : side;

	// Footer might be defined
	if (! target) {
		return;
	}

	// If no cells yet and we have content for them, then create
	if (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {
		row = dataTables_$('tr', target);

		// Add a row if needed
		if (! row.length) {
			row = dataTables_$('<tr/>').appendTo(target)
		}

		// Add the number of cells needed to make up to the number of columns
		if (row.length === 1) {
			var cells = dataTables_$('td, th', row);

			for ( i=cells.length, ien=columns.length ; i<ien ; i++ ) {
				dataTables_$('<th/>')
					.html( columns[i][titleProp] || '' )
					.appendTo( row );
			}
		}
	}

	var detected = _fnDetectHeader( settings, target, true );

	if (side === 'header') {
		settings.aoHeader = detected;
	}
	else {
		settings.aoFooter = detected;
	}

	// ARIA role for the rows
	dataTables_$(target).children('tr').attr('role', 'row');

	// Every cell needs to be passed through the renderer
	dataTables_$(target).children('tr').children('th, td')
		.each( function () {
			_fnRenderer( settings, side )(
				settings, dataTables_$(this), classes
			);
		} );
}

/**
 * Build a layout structure for a header or footer
 *
 * @param {*} settings DataTables settings
 * @param {*} source Source layout array
 * @param {*} incColumns What columns should be included
 * @returns Layout array
 */
function _fnHeaderLayout( settings, source, incColumns )
{
	var row, column, cell;
	var local = [];
	var structure = [];
	var columns = settings.aoColumns;
	var columnCount = columns.length;
	var rowspan, colspan;

	if ( ! source ) {
		return;
	}

	// Default is to work on only visible columns
	if ( ! incColumns ) {
		incColumns = _range(columnCount)
			.filter(function (idx) {
				return columns[idx].bVisible;
			});
	}

	// Make a copy of the master layout array, but with only the columns we want
	for ( row=0 ; row<source.length ; row++ ) {
		// Remove any columns we haven't selected
		local[row] = source[row].slice().filter(function (cell, i) {
			return incColumns.includes(i);
		});

		// Prep the structure array - it needs an element for each row
		structure.push( [] );
	}

	for ( row=0 ; row<local.length ; row++ ) {
		for ( column=0 ; column<local[row].length ; column++ ) {
			rowspan = 1;
			colspan = 1;

			// Check to see if there is already a cell (row/colspan) covering our target
			// insert point. If there is, then there is nothing to do.
			if ( structure[row][column] === undefined ) {
				cell = local[row][column].cell;

				// Expand for rowspan
				while (
					local[row+rowspan] !== undefined &&
					local[row][column].cell == local[row+rowspan][column].cell
				) {
					structure[row+rowspan][column] = null;
					rowspan++;
				}

				// And for colspan
				while (
					local[row][column+colspan] !== undefined &&
					local[row][column].cell == local[row][column+colspan].cell
				) {
					// Which also needs to go over rows
					for ( var k=0 ; k<rowspan ; k++ ) {
						structure[row+k][column+colspan] = null;
					}

					colspan++;
				}

				var titleSpan = dataTables_$('span.dt-column-title', cell);

				structure[row][column] = {
					cell: cell,
					colspan: colspan,
					rowspan: rowspan,
					title: titleSpan.length
						? titleSpan.html()
						: dataTables_$(cell).html()
				};
			}
		}
	}

	return structure;
}


/**
 * Draw the header (or footer) element based on the column visibility states.
 *
 *  @param object oSettings dataTables settings object
 *  @param array aoSource Layout array from _fnDetectHeader
 *  @memberof DataTable#oApi
 */
function _fnDrawHead( settings, source )
{
	var layout = _fnHeaderLayout(settings, source);
	var tr, n;

	for ( var row=0 ; row<source.length ; row++ ) {
		tr = source[row].row;

		// All cells are going to be replaced, so empty out the row
		// Can't use $().empty() as that kills event handlers
		if (tr) {
			while( (n = tr.firstChild) ) {
				tr.removeChild( n );
			}
		}

		for ( var column=0 ; column<layout[row].length ; column++ ) {
			var point = layout[row][column];

			if (point) {
				dataTables_$(point.cell)
					.appendTo(tr)
					.attr('rowspan', point.rowspan)
					.attr('colspan', point.colspan);
			}
		}
	}
}


/**
 * Insert the required TR nodes into the table for display
 *  @param {object} oSettings dataTables settings object
 *  @param ajaxComplete true after ajax call to complete rendering
 *  @memberof DataTable#oApi
 */
function _fnDraw( oSettings, ajaxComplete )
{
	// Allow for state saving and a custom start position
	_fnStart( oSettings );

	/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
	var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
	if ( aPreDraw.indexOf(false) !== -1 )
	{
		_fnProcessingDisplay( oSettings, false );
		return;
	}

	var anRows = [];
	var iRowCount = 0;
	var bServerSide = _fnDataSource( oSettings ) == 'ssp';
	var aiDisplay = oSettings.aiDisplay;
	var iDisplayStart = oSettings._iDisplayStart;
	var iDisplayEnd = oSettings.fnDisplayEnd();
	var columns = oSettings.aoColumns;
	var body = dataTables_$(oSettings.nTBody);

	oSettings.bDrawing = true;

	/* Server-side processing draw intercept */
	if ( !bServerSide )
	{
		oSettings.iDraw++;
	}
	else if ( !oSettings.bDestroying && !ajaxComplete)
	{
		// Show loading message for server-side processing
		if (oSettings.iDraw === 0) {
			body.empty().append(_emptyRow(oSettings));
		}

		_fnAjaxUpdate( oSettings );
		return;
	}

	if ( aiDisplay.length !== 0 )
	{
		var iStart = bServerSide ? 0 : iDisplayStart;
		var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;

		for ( var j=iStart ; j<iEnd ; j++ )
		{
			var iDataIndex = aiDisplay[j];
			var aoData = oSettings.aoData[ iDataIndex ];
			if ( aoData.nTr === null )
			{
				_fnCreateTr( oSettings, iDataIndex );
			}

			var nRow = aoData.nTr;

			// Add various classes as needed
			for (var i=0 ; i<columns.length ; i++) {
				var col = columns[i];
				var td = aoData.anCells[i];

				_addClass(td, _ext.type.className[col.sType]); // auto class
				_addClass(td, col.sClass); // column class
				_addClass(td, oSettings.oClasses.tbody.cell); // all cells
			}

			// Row callback functions - might want to manipulate the row
			// iRowCount and j are not currently documented. Are they at all
			// useful?
			_fnCallbackFire( oSettings, 'aoRowCallback', null,
				[nRow, aoData._aData, iRowCount, j, iDataIndex] );

			anRows.push( nRow );
			iRowCount++;
		}
	}
	else
	{
		anRows[ 0 ] = _emptyRow(oSettings);
	}

	/* Header and footer callbacks */
	_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ dataTables_$(oSettings.nTHead).children('tr')[0],
		_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );

	_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ dataTables_$(oSettings.nTFoot).children('tr')[0],
		_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );

	// replaceChildren is faster, but only became widespread in 2020,
	// so a fall back in jQuery is provided for older browsers.
	if (body[0].replaceChildren) {
		body[0].replaceChildren.apply(body[0], anRows);
	}
	else {
		body.children().detach();
		body.append( dataTables_$(anRows) );
	}

	// Empty table needs a specific class
	dataTables_$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', dataTables_$('tr', oSettings.nTFoot).length === 0);

	/* Call all required callback functions for the end of a draw */
	_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );

	/* Draw is complete, sorting and filtering must be as well */
	oSettings.bSorted = false;
	oSettings.bFiltered = false;
	oSettings.bDrawing = false;
}


/**
 * Redraw the table - taking account of the various features which are enabled
 *  @param {object} oSettings dataTables settings object
 *  @param {boolean} [holdPosition] Keep the current paging position. By default
 *    the paging is reset to the first page
 *  @memberof DataTable#oApi
 */
function _fnReDraw( settings, holdPosition, recompute )
{
	var
		features = settings.oFeatures,
		sort     = features.bSort,
		filter   = features.bFilter;

	if (recompute === undefined || recompute === true) {
		if ( sort ) {
			_fnSort( settings );
		}

		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	}

	if ( holdPosition !== true ) {
		settings._iDisplayStart = 0;
	}

	// Let any modules know about the draw hold position state (used by
	// scrolling internally)
	settings._drawHold = holdPosition;

	_fnDraw( settings );

	settings._drawHold = false;
}


/*
 * Table is empty - create a row with an empty message in it
 */
function _emptyRow ( settings ) {
	var oLang = settings.oLanguage;
	var zero = oLang.sZeroRecords;
	var dataSrc = _fnDataSource( settings );

	if (
		(settings.iDraw < 1 && dataSrc === 'ssp') ||
		(settings.iDraw <= 1 && dataSrc === 'ajax')
	) {
		zero = oLang.sLoadingRecords;
	}
	else if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )
	{
		zero = oLang.sEmptyTable;
	}

	return dataTables_$( '<tr/>' )
		.append( dataTables_$('<td />', {
			'colSpan': _fnVisbleColumns( settings ),
			'class':   settings.oClasses.empty.row
		} ).html( zero ) )[0];
}


/**
 * Convert a `layout` object given by a user to the object structure needed
 * for the renderer. This is done twice, once for above and once for below
 * the table. Ordering must also be considered.
 *
 * @param {*} settings DataTables settings object
 * @param {*} layout Layout object to convert
 * @param {string} side `top` or `bottom`
 * @returns Converted array structure - one item for each row.
 */
function _layoutArray ( settings, layout, side )
{
	var groups = {};

	// Combine into like groups (e.g. `top`, `top2`, etc)
	dataTables_$.each( layout, function ( pos, val ) {
		if (val === null) {
			return;
		}

		var splitPos = pos.replace(/([A-Z])/g, ' $1').split(' ');

		if ( ! groups[ splitPos[0] ] ) {
			groups[ splitPos[0] ] = {};
		}

		var align = splitPos.length === 1 ?
			'full' :
			splitPos[1].toLowerCase();
		var group = groups[ splitPos[0] ];
		var groupRun = function (contents, innerVal) {
			// If it is an object, then there can be multiple features contained in it
			if ( dataTables_$.isPlainObject( innerVal ) ) {
				Object.keys(innerVal).map(function (key) {
					contents.push( {
						feature: key,
						opts: innerVal[key]
					});
				});
			}
			else {
				contents.push(innerVal);
			}
		}

		// Transform to an object with a contents property
		if (! group[align] || ! group[align].contents) {
			group[align] = { contents: [] };
		}

		// Allow for an array or just a single object
		if ( Array.isArray(val)) {
			for (var i=0 ; i<val.length ; i++) {
				groupRun(group[align].contents, val[i]);
			}
		}
		else {
			groupRun(group[ align ].contents, val);
		}

		// And make contents an array
		if ( ! Array.isArray( group[ align ].contents ) ) {
			group[ align ].contents = [ group[ align ].contents ];
		}
	} );

	var filtered = Object.keys(groups)
		.map( function ( pos ) {
			// Filter to only the side we need
			if ( pos.indexOf(side) !== 0 ) {
				return null;
			}

			return {
				name: pos,
				val: groups[pos]
			};
		} )
		.filter( function (item) {
			return item !== null;
		});

	// Order by item identifier
	filtered.sort( function ( a, b ) {
		var order1 = a.name.replace(/[^0-9]/g, '') * 1;
		var order2 = b.name.replace(/[^0-9]/g, '') * 1;

		return order2 - order1;
	} );
	
	if ( side === 'bottom' ) {
		filtered.reverse();
	}

	// Split into rows
	var rows = [];
	for ( var i=0, ien=filtered.length ; i<ien ; i++ ) {
		if (  filtered[i].val.full ) {
			rows.push( { full: filtered[i].val.full } );
			_layoutResolve( settings, rows[ rows.length - 1 ] );

			delete filtered[i].val.full;
		}

		if ( Object.keys(filtered[i].val).length ) {
			rows.push( filtered[i].val );
			_layoutResolve( settings, rows[ rows.length - 1 ] );
		}
	}

	return rows;
}


/**
 * Convert the contents of a row's layout object to nodes that can be inserted
 * into the document by a renderer. Execute functions, look up plug-ins, etc.
 *
 * @param {*} settings DataTables settings object
 * @param {*} row Layout object for this row
 */
function _layoutResolve( settings, row ) {
	var getFeature = function (feature, opts) {
		if ( ! _ext.features[ feature ] ) {
			_fnLog( settings, 0, 'Unknown feature: '+ feature );
		}

		return _ext.features[ feature ].apply( this, [settings, opts] );
	};

	var resolve = function ( item ) {
		var line = row[ item ].contents;

		for ( var i=0, ien=line.length ; i<ien ; i++ ) {
			if ( ! line[i] ) {
				continue;
			}
			else if ( typeof line[i] === 'string' ) {
				line[i] = getFeature( line[i], null );
			}
			else if ( dataTables_$.isPlainObject(line[i]) ) {
				// If it's an object, it just has feature and opts properties from
				// the transform in _layoutArray
				line[i] = getFeature(line[i].feature, line[i].opts);
			}
			else if ( typeof line[i].node === 'function' ) {
				line[i] = line[i].node( settings );
			}
			else if ( typeof line[i] === 'function' ) {
				var inst = line[i]( settings );

				line[i] = typeof inst.node === 'function' ?
					inst.node() :
					inst;
			}
		}
	};

	dataTables_$.each( row, function ( key ) {
		resolve( key );
	} );
}


/**
 * Add the options to the page HTML for the table
 *  @param {object} settings DataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnAddOptionsHtml ( settings )
{
	var classes = settings.oClasses;
	var table = dataTables_$(settings.nTable);

	// Wrapper div around everything DataTables controls
	var insert = dataTables_$('<div/>')
		.attr({
			id:      settings.sTableId+'_wrapper',
			'class': classes.container
		})
		.insertBefore(table);

	settings.nTableWrapper = insert[0];

	if (settings.sDom) {
		// Legacy
		_fnLayoutDom(settings, settings.sDom, insert);
	}
	else {
		var top = _layoutArray( settings, settings.layout, 'top' );
		var bottom = _layoutArray( settings, settings.layout, 'bottom' );
		var renderer = _fnRenderer( settings, 'layout' );
	
		// Everything above - the renderer will actually insert the contents into the document
		top.forEach(function (item) {
			renderer( settings, insert, item );
		});

		// The table - always the center of attention
		renderer( settings, insert, {
			full: {
				table: true,
				contents: [ _fnFeatureHtmlTable(settings) ]
			}
		} );

		// Everything below
		bottom.forEach(function (item) {
			renderer( settings, insert, item );
		});
	}

	// Processing floats on top, so it isn't an inserted feature
	_processingHtml( settings );
}

/**
 * Draw the table with the legacy DOM property
 * @param {*} settings DT settings object
 * @param {*} dom DOM string
 * @param {*} insert Insert point
 */
function _fnLayoutDom( settings, dom, insert )
{
	var parts = dom.match(/(".*?")|('.*?')|./g);
	var featureNode, option, newNode, next, attr;

	for ( var i=0 ; i<parts.length ; i++ ) {
		featureNode = null;
		option = parts[i];

		if ( option == '<' ) {
			// New container div
			newNode = dataTables_$('<div/>');

			// Check to see if we should append an id and/or a class name to the container
			next = parts[i+1];

			if ( next[0] == "'" || next[0] == '"' ) {
				attr = next.replace(/['"]/g, '');

				var id = '', className;

				/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
				 * breaks the string into parts and applies them as needed
				 */
				if ( attr.indexOf('.') != -1 ) {
					var split = attr.split('.');

					id = split[0];
					className = split[1];
				}
				else if ( attr[0] == "#" ) {
					id = attr;
				}
				else {
					className = attr;
				}

				newNode
					.attr('id', id.substring(1))
					.addClass(className);

				i++; // Move along the position array
			}

			insert.append( newNode );
			insert = newNode;
		}
		else if ( option == '>' ) {
			// End container div
			insert = insert.parent();
		}
		else if ( option == 't' ) {
			// Table
			featureNode = _fnFeatureHtmlTable( settings );
		}
		else
		{
			DataTable.ext.feature.forEach(function(feature) {
				if ( option == feature.cFeature ) {
					featureNode = feature.fnInit( settings );
				}
			});
		}

		// Add to the display
		if ( featureNode ) {
			insert.append( featureNode );
		}
	}
}


/**
 * Use the DOM source to create up an array of header cells. The idea here is to
 * create a layout grid (array) of rows x columns, which contains a reference
 * to the cell that that point in the grid (regardless of col/rowspan), such that
 * any column / row could be removed and the new grid constructed
 *  @param {node} thead The header/footer element for the table
 *  @returns {array} Calculated layout array
 *  @memberof DataTable#oApi
 */
function _fnDetectHeader ( settings, thead, write )
{
	var columns = settings.aoColumns;
	var rows = dataTables_$(thead).children('tr');
	var row, cell;
	var i, k, l, iLen, shifted, column, colspan, rowspan;
	var isHeader = thead && thead.nodeName.toLowerCase() === 'thead';
	var layout = [];
	var unique;
	var shift = function ( a, i, j ) {
		var k = a[i];
		while ( k[j] ) {
			j++;
		}
		return j;
	};

	// We know how many rows there are in the layout - so prep it
	for ( i=0, iLen=rows.length ; i<iLen ; i++ ) {
		layout.push( [] );
	}

	for ( i=0, iLen=rows.length ; i<iLen ; i++ ) {
		row = rows[i];
		column = 0;

		// For every cell in the row..
		cell = row.firstChild;
		while ( cell ) {
			if (
				cell.nodeName.toUpperCase() == 'TD' ||
				cell.nodeName.toUpperCase() == 'TH'
			) {
				var cols = [];

				// Get the col and rowspan attributes from the DOM and sanitise them
				colspan = cell.getAttribute('colspan') * 1;
				rowspan = cell.getAttribute('rowspan') * 1;
				colspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;
				rowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;

				// There might be colspan cells already in this row, so shift our target
				// accordingly
				shifted = shift( layout, i, column );

				// Cache calculation for unique columns
				unique = colspan === 1 ?
					true :
					false;
				
				// Perform header setup
				if ( write ) {
					if (unique) {
						// Allow column options to be set from HTML attributes
						_fnColumnOptions( settings, shifted, dataTables_$(cell).data() );
						
						// Get the width for the column. This can be defined from the
						// width attribute, style attribute or `columns.width` option
						var columnDef = columns[shifted];
						var width = cell.getAttribute('width') || null;
						var t = cell.style.width.match(/width:\s*(\d+[pxem%]+)/);
						if ( t ) {
							width = t[1];
						}

						columnDef.sWidthOrig = columnDef.sWidth || width;

						if (isHeader) {
							// Column title handling - can be user set, or read from the DOM
							// This happens before the render, so the original is still in place
							if ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {
								cell.innerHTML = columnDef.sTitle;
							}

							if (! columnDef.sTitle && unique) {
								columnDef.sTitle = _stripHtml(cell.innerHTML);
								columnDef.autoTitle = true;
							}
						}
						else {
							// Footer specific operations
							if (columnDef.footer) {
								cell.innerHTML = columnDef.footer;
							}
						}

						// Fall back to the aria-label attribute on the table header if no ariaTitle is
						// provided.
						if (! columnDef.ariaTitle) {
							columnDef.ariaTitle = dataTables_$(cell).attr("aria-label") || columnDef.sTitle;
						}

						// Column specific class names
						if ( columnDef.className ) {
							dataTables_$(cell).addClass( columnDef.className );
						}
					}

					// Wrap the column title so we can write to it in future
					if ( dataTables_$('span.dt-column-title', cell).length === 0) {
						dataTables_$('<span>')
							.addClass('dt-column-title')
							.append(cell.childNodes)
							.appendTo(cell);
					}

					if ( isHeader && dataTables_$('span.dt-column-order', cell).length === 0) {
						dataTables_$('<span>')
							.addClass('dt-column-order')
							.appendTo(cell);
					}
				}

				// If there is col / rowspan, copy the information into the layout grid
				for ( l=0 ; l<colspan ; l++ ) {
					for ( k=0 ; k<rowspan ; k++ ) {
						layout[i+k][shifted+l] = {
							cell: cell,
							unique: unique
						};

						layout[i+k].row = row;
					}

					cols.push( shifted+l );
				}

				// Assign an attribute so spanning cells can still be identified
				// as belonging to a column
				cell.setAttribute('data-dt-column', _unique(cols).join(','));
			}

			cell = cell.nextSibling;
		}
	}

	return layout;
}

/**
 * Set the start position for draw
 *  @param {object} oSettings dataTables settings object
 */
function _fnStart( oSettings )
{
	var bServerSide = _fnDataSource( oSettings ) == 'ssp';
	var iInitDisplayStart = oSettings.iInitDisplayStart;

	// Check and see if we have an initial draw position from state saving
	if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
	{
		oSettings._iDisplayStart = bServerSide ?
			iInitDisplayStart :
			iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
				0 :
				iInitDisplayStart;

		oSettings.iInitDisplayStart = -1;
	}
}

/**
 * Create an Ajax call based on the table's settings, taking into account that
 * parameters can have multiple forms, and backwards compatibility.
 *
 * @param {object} oSettings dataTables settings object
 * @param {array} data Data to send to the server, required by
 *     DataTables - may be augmented by developer callbacks
 * @param {function} fn Callback function to run when data is obtained
 */
function _fnBuildAjax( oSettings, data, fn )
{
	var ajaxData;
	var ajax = oSettings.ajax;
	var instance = oSettings.oInstance;
	var callback = function ( json ) {
		var status = oSettings.jqXHR
			? oSettings.jqXHR.status
			: null;

		if ( json === null || (typeof status === 'number' && status == 204 ) ) {
			json = {};
			_fnAjaxDataSrc( oSettings, json, [] );
		}

		var error = json.error || json.sError;
		if ( error ) {
			_fnLog( oSettings, 0, error );
		}

		oSettings.json = json;

		_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );
		fn( json );
	};

	if ( dataTables_$.isPlainObject( ajax ) && ajax.data )
	{
		ajaxData = ajax.data;

		var newData = typeof ajaxData === 'function' ?
			ajaxData( data, oSettings ) :  // fn can manipulate data or return
			ajaxData;                      // an object object or array to merge

		// If the function returned something, use that alone
		data = typeof ajaxData === 'function' && newData ?
			newData :
			dataTables_$.extend( true, data, newData );

		// Remove the data property as we've resolved it already and don't want
		// jQuery to do it again (it is restored at the end of the function)
		delete ajax.data;
	}

	var baseAjax = {
		"url": typeof ajax === 'string' ?
			ajax :
			'',
		"data": data,
		"success": callback,
		"dataType": "json",
		"cache": false,
		"type": oSettings.sServerMethod,
		"error": function (xhr, error) {
			var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );

			if ( ret.indexOf(true) === -1 ) {
				if ( error == "parsererror" ) {
					_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
				}
				else if ( xhr.readyState === 4 ) {
					_fnLog( oSettings, 0, 'Ajax error', 7 );
				}
			}

			_fnProcessingDisplay( oSettings, false );
		}
	};

	// If `ajax` option is an object, extend and override our default base
	if ( dataTables_$.isPlainObject( ajax ) ) {
		dataTables_$.extend( baseAjax, ajax )
	}

	// Store the data submitted for the API
	oSettings.oAjaxData = data;

	// Allow plug-ins and external processes to modify the data
	_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );

	if ( typeof ajax === 'function' )
	{
		// Is a function - let the caller define what needs to be done
		oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
	}
	else if (ajax.url === '') {
		// No url, so don't load any data. Just apply an empty data array
		// to the object for the callback.
		var empty = {};

		DataTable.util.set(ajax.dataSrc)(empty, []);
		callback(empty);
	}
	else {
		// Object to extend the base settings
		oSettings.jqXHR = dataTables_$.ajax( baseAjax );

		// Restore for next time around
		if ( ajaxData ) {
			ajax.data = ajaxData;
		}
	}
}


/**
 * Update the table using an Ajax call
 *  @param {object} settings dataTables settings object
 *  @returns {boolean} Block the table drawing or not
 *  @memberof DataTable#oApi
 */
function _fnAjaxUpdate( settings )
{
	settings.iDraw++;
	_fnProcessingDisplay( settings, true );

	_fnBuildAjax(
		settings,
		_fnAjaxParameters( settings ),
		function(json) {
			_fnAjaxUpdateDraw( settings, json );
		}
	);
}


/**
 * Build up the parameters in an object needed for a server-side processing
 * request.
 *  @param {object} oSettings dataTables settings object
 *  @returns {bool} block the table drawing or not
 *  @memberof DataTable#oApi
 */
function _fnAjaxParameters( settings )
{
	var
		columns = settings.aoColumns,
		features = settings.oFeatures,
		preSearch = settings.oPreviousSearch,
		preColSearch = settings.aoPreSearchCols,
		colData = function ( idx, prop ) {
			return typeof columns[idx][prop] === 'function' ?
				'function' :
				columns[idx][prop];
		};

	return {
		draw: settings.iDraw,
		columns: columns.map( function ( column, i ) {
			return {
				data: colData(i, 'mData'),
				name: column.sName,
				searchable: column.bSearchable,
				orderable: column.bSortable,
				search: {
					value: preColSearch[i].search,
					regex: preColSearch[i].regex,
					fixed: Object.keys(column.searchFixed).map( function(name) {
						return {
							name: name,
							term: column.searchFixed[name].toString()
						}
					})
				}
			};
		} ),
		order: _fnSortFlatten( settings ).map( function ( val ) {
			return {
				column: val.col,
				dir: val.dir,
				name: colData(val.col, 'sName')
			};
		} ),
		start: settings._iDisplayStart,
		length: features.bPaginate ?
			settings._iDisplayLength :
			-1,
		search: {
			value: preSearch.search,
			regex: preSearch.regex,
			fixed: Object.keys(settings.searchFixed).map( function(name) {
				return {
					name: name,
					term: settings.searchFixed[name].toString()
				}
			})
		}
	};
}


/**
 * Data the data from the server (nuking the old) and redraw the table
 *  @param {object} oSettings dataTables settings object
 *  @param {object} json json data return from the server.
 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
 *  @param {array} json.aaData The data to display on this page
 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
 *  @memberof DataTable#oApi
 */
function _fnAjaxUpdateDraw ( settings, json )
{
	var data = _fnAjaxDataSrc(settings, json);
	var draw = _fnAjaxDataSrcParam(settings, 'draw', json);
	var recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);
	var recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);

	if ( draw !== undefined ) {
		// Protect against out of sequence returns
		if ( draw*1 < settings.iDraw ) {
			return;
		}
		settings.iDraw = draw * 1;
	}

	// No data in returned object, so rather than an array, we show an empty table
	if ( ! data ) {
		data = [];
	}

	_fnClearTable( settings );
	settings._iRecordsTotal   = parseInt(recordsTotal, 10);
	settings._iRecordsDisplay = parseInt(recordsFiltered, 10);

	for ( var i=0, ien=data.length ; i<ien ; i++ ) {
		_fnAddData( settings, data[i] );
	}
	settings.aiDisplay = settings.aiDisplayMaster.slice();

	_fnDraw( settings, true );
	_fnInitComplete( settings );
	_fnProcessingDisplay( settings, false );
}


/**
 * Get the data from the JSON data source to use for drawing a table. Using
 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
 * source object, or from a processing function.
 *  @param {object} settings dataTables settings object
 *  @param  {object} json Data source object / array from the server
 *  @return {array} Array of data to use
 */
function _fnAjaxDataSrc ( settings, json, write )
{
	var dataProp = 'data';

	if (dataTables_$.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {
		// Could in inside a `dataSrc` object, or not!
		var dataSrc = settings.ajax.dataSrc;

		// string, function and object are valid types
		if (typeof dataSrc === 'string' || typeof dataSrc === 'function') {
			dataProp = dataSrc;
		}
		else if (dataSrc.data !== undefined) {
			dataProp = dataSrc.data;
		}
	}

	if ( ! write ) {
		if ( dataProp === 'data' ) {
			// If the default, then we still want to support the old style, and safely ignore
			// it if possible
			return json.aaData || json[dataProp];
		}

		return dataProp !== "" ?
			_fnGetObjectDataFn( dataProp )( json ) :
			json;
	}
	
	// set
	_fnSetObjectDataFn( dataProp )( json, write );
}

/**
 * Very similar to _fnAjaxDataSrc, but for the other SSP properties
 * @param {*} settings DataTables settings object
 * @param {*} param Target parameter
 * @param {*} json JSON data
 * @returns Resolved value
 */
function _fnAjaxDataSrcParam (settings, param, json) {
	var dataSrc = dataTables_$.isPlainObject( settings.ajax )
		? settings.ajax.dataSrc
		: null;

	if (dataSrc && dataSrc[param]) {
		// Get from custom location
		return _fnGetObjectDataFn( dataSrc[param] )( json );
	}

	// else - Default behaviour
	var old = '';

	// Legacy support
	if (param === 'draw') {
		old = 'sEcho';
	}
	else if (param === 'recordsTotal') {
		old = 'iTotalRecords';
	}
	else if (param === 'recordsFiltered') {
		old = 'iTotalDisplayRecords';
	}

	return json[old] !== undefined
		? json[old]
		: json[param];
}


/**
 * Filter the table using both the global filter and column based filtering
 *  @param {object} settings dataTables settings object
 *  @param {object} input search information
 *  @memberof DataTable#oApi
 */
function _fnFilterComplete ( settings, input )
{
	var columnsSearch = settings.aoPreSearchCols;

	// Resolve any column types that are unknown due to addition or invalidation
	// @todo As per sort - can this be moved into an event handler?
	_fnColumnTypes( settings );

	// In server-side processing all filtering is done by the server, so no point hanging around here
	if ( _fnDataSource( settings ) != 'ssp' )
	{
		// Check if any of the rows were invalidated
		_fnFilterData( settings );

		// Start from the full data set
		settings.aiDisplay = settings.aiDisplayMaster.slice();

		// Global filter first
		_fnFilter( settings.aiDisplay, settings, input.search, input );

		dataTables_$.each(settings.searchFixed, function (name, term) {
			_fnFilter(settings.aiDisplay, settings, term, {});
		});

		// Then individual column filters
		for ( var i=0 ; i<columnsSearch.length ; i++ )
		{
			var col = columnsSearch[i];

			_fnFilter(
				settings.aiDisplay,
				settings,
				col.search,
				col,
				i
			);

			dataTables_$.each(settings.aoColumns[i].searchFixed, function (name, term) {
				_fnFilter(settings.aiDisplay, settings, term, {}, i);
			});
		}

		// And finally global filtering
		_fnFilterCustom( settings );
	}

	// Tell the draw function we have been filtering
	settings.bFiltered = true;

	_fnCallbackFire( settings, null, 'search', [settings] );
}


/**
 * Apply custom filtering functions
 * 
 * This is legacy now that we have named functions, but it is widely used
 * from 1.x, so it is not yet deprecated.
 *  @param {object} oSettings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnFilterCustom( settings )
{
	var filters = DataTable.ext.search;
	var displayRows = settings.aiDisplay;
	var row, rowIdx;

	for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
		var rows = [];

		// Loop over each row and see if it should be included
		for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
			rowIdx = displayRows[ j ];
			row = settings.aoData[ rowIdx ];

			if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
				rows.push( rowIdx );
			}
		}

		// So the array reference doesn't break set the results into the
		// existing array
		displayRows.length = 0;
		displayRows.push.apply(displayRows, rows);
	}
}


/**
 * Filter the data table based on user input and draw the table
 */
function _fnFilter( searchRows, settings, input, options, column )
{
	if ( input === '' ) {
		return;
	}

	var i = 0;

	// Search term can be a function, regex or string - if a string we apply our
	// smart filtering regex (assuming the options require that)
	var searchFunc = typeof input === 'function' ? input : null;
	var rpSearch = input instanceof RegExp
		? input
		: searchFunc
			? null
			: _fnFilterCreateSearch( input, options );

	// Then for each row, does the test pass. If not, lop the row from the array
	while (i < searchRows.length) {
		var row = settings.aoData[ searchRows[i] ];
		var data = column === undefined
			? row._sFilterRow
			: row._aFilterData[ column ];

		if ( (searchFunc && ! searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && ! rpSearch.test(data)) ) {
			searchRows.splice(i, 1);
			i--;
		}

		i++;
	}
}


/**
 * Build a regular expression object suitable for searching a table
 *  @param {string} sSearch string to search for
 *  @param {bool} bRegex treat as a regular expression or not
 *  @param {bool} bSmart perform smart filtering or not
 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
 *  @returns {RegExp} constructed object
 *  @memberof DataTable#oApi
 */
function _fnFilterCreateSearch( search, inOpts )
{
	var not = [];
	var options = dataTables_$.extend({}, {
		boundary: false,
		caseInsensitive: true,
		exact: false,
		regex: false,
		smart: true
	}, inOpts);

	if (typeof search !== 'string') {
		search = search.toString();
	}

	// Remove diacritics if normalize is set up to do so
	search = _normalize(search);

	if (options.exact) {
		return new RegExp(
			'^'+_fnEscapeRegex(search)+'$',
			options.caseInsensitive ? 'i' : ''
		);
	}

	search = options.regex ?
		search :
		_fnEscapeRegex( search );
	
	if ( options.smart ) {
		/* For smart filtering we want to allow the search to work regardless of
		 * word order. We also want double quoted text to be preserved, so word
		 * order is important - a la google. And a negative look around for
		 * finding rows which don't contain a given string.
		 * 
		 * So this is the sort of thing we want to generate:
		 * 
		 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
		 */
		var parts = search.match( /!?["\u201C][^"\u201D]+["\u201D]|[^ ]+/g ) || [''];
		var a = parts.map( function ( word ) {
			var negative = false;
			var m;

			// Determine if it is a "does not include"
			if ( word.charAt(0) === '!' ) {
				negative = true;
				word = word.substring(1);
			}

			// Strip the quotes from around matched phrases
			if ( word.charAt(0) === '"' ) {
				m = word.match( /^"(.*)"$/ );
				word = m ? m[1] : word;
			}
			else if ( word.charAt(0) === '\u201C' ) {
				// Smart quote match (iPhone users)
				m = word.match( /^\u201C(.*)\u201D$/ );
				word = m ? m[1] : word;
			}

			// For our "not" case, we need to modify the string that is
			// allowed to match at the end of the expression.
			if (negative) {
				if (word.length > 1) {
					not.push('(?!'+word+')');
				}

				word = '';
			}

			return word.replace(/"/g, '');
		} );

		var match = not.length
			? not.join('')
			: '';

		var boundary = options.boundary
			? '\\b'
			: '';

		search = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';
	}

	return new RegExp( search, options.caseInsensitive ? 'i' : '' );
}


/**
 * Escape a string such that it can be used in a regular expression
 *  @param {string} sVal string to escape
 *  @returns {string} escaped string
 *  @memberof DataTable#oApi
 */
var _fnEscapeRegex = DataTable.util.escapeRegex;

var __filter_div = dataTables_$('<div>')[0];
var __filter_div_textContent = __filter_div.textContent !== undefined;

// Update the filtering data for each row if needed (by invalidation or first run)
function _fnFilterData ( settings )
{
	var columns = settings.aoColumns;
	var data = settings.aoData;
	var column;
	var j, jen, filterData, cellData, row;
	var wasInvalidated = false;

	for ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {
		if (! data[rowIdx]) {
			continue;
		}

		row = data[rowIdx];

		if ( ! row._aFilterData ) {
			filterData = [];

			for ( j=0, jen=columns.length ; j<jen ; j++ ) {
				column = columns[j];

				if ( column.bSearchable ) {
					cellData = _fnGetCellData( settings, rowIdx, j, 'filter' );

					// Search in DataTables is string based
					if ( cellData === null ) {
						cellData = '';
					}

					if ( typeof cellData !== 'string' && cellData.toString ) {
						cellData = cellData.toString();
					}
				}
				else {
					cellData = '';
				}

				// If it looks like there is an HTML entity in the string,
				// attempt to decode it so sorting works as expected. Note that
				// we could use a single line of jQuery to do this, but the DOM
				// method used here is much faster https://jsperf.com/html-decode
				if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
					__filter_div.innerHTML = cellData;
					cellData = __filter_div_textContent ?
						__filter_div.textContent :
						__filter_div.innerText;
				}

				if ( cellData.replace ) {
					cellData = cellData.replace(/[\r\n\u2028]/g, '');
				}

				filterData.push( cellData );
			}

			row._aFilterData = filterData;
			row._sFilterRow = filterData.join('  ');
			wasInvalidated = true;
		}
	}

	return wasInvalidated;
}


/**
 * Draw the table for the first time, adding all required features
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnInitialise ( settings )
{
	var i, iAjaxStart=settings.iInitDisplayStart;

	/* Ensure that the table data is fully initialised */
	if ( ! settings.bInitialised ) {
		setTimeout( function(){ _fnInitialise( settings ); }, 200 );
		return;
	}

	/* Build and draw the header / footer for the table */
	_fnBuildHead( settings, 'header' );
	_fnBuildHead( settings, 'footer' );
	_fnDrawHead( settings, settings.aoHeader );
	_fnDrawHead( settings, settings.aoFooter );

	// Enable features
	_fnAddOptionsHtml( settings );
	_fnSortInit( settings );

	_colGroup( settings );

	/* Okay to show that something is going on now */
	_fnProcessingDisplay( settings, true );

	_fnCallbackFire( settings, null, 'preInit', [settings], true );

	// If there is default sorting required - let's do it. The sort function
	// will do the drawing for us. Otherwise we draw the table regardless of the
	// Ajax source - this allows the table to look initialised for Ajax sourcing
	// data (show 'loading' message possibly)
	_fnReDraw( settings );

	var dataSrc = _fnDataSource( settings );

	// Server-side processing init complete is done by _fnAjaxUpdateDraw
	if ( dataSrc != 'ssp' ) {
		// if there is an ajax source load the data
		if ( dataSrc == 'ajax' ) {
			_fnBuildAjax( settings, {}, function(json) {
				var aData = _fnAjaxDataSrc( settings, json );

				// Got the data - add it to the table
				for ( i=0 ; i<aData.length ; i++ ) {
					_fnAddData( settings, aData[i] );
				}

				// Reset the init display for cookie saving. We've already done
				// a filter, and therefore cleared it before. So we need to make
				// it appear 'fresh'
				settings.iInitDisplayStart = iAjaxStart;

				_fnReDraw( settings );
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}, settings );
		}
		else {
			_fnInitComplete( settings );
			_fnProcessingDisplay( settings, false );
		}
	}
}


/**
 * Draw the table for the first time, adding all required features
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnInitComplete ( settings )
{
	if (settings._bInitComplete) {
		return;
	}

	var args = [settings, settings.json];

	settings._bInitComplete = true;

	// Table is fully set up and we have data, so calculate the
	// column widths
	_fnAdjustColumnSizing( settings );

	_fnCallbackFire( settings, null, 'plugin-init', args, true );
	_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );
}

function _fnLengthChange ( settings, val )
{
	var len = parseInt( val, 10 );
	settings._iDisplayLength = len;

	_fnLengthOverflow( settings );

	// Fire length change event
	_fnCallbackFire( settings, null, 'length', [settings, len] );
}

/**
 * Alter the display settings to change the page
 *  @param {object} settings DataTables settings object
 *  @param {string|int} action Paging action to take: "first", "previous",
 *    "next" or "last" or page number to jump to (integer)
 *  @param [bool] redraw Automatically draw the update or not
 *  @returns {bool} true page has changed, false - no change
 *  @memberof DataTable#oApi
 */
function _fnPageChange ( settings, action, redraw )
{
	var
		start     = settings._iDisplayStart,
		len       = settings._iDisplayLength,
		records   = settings.fnRecordsDisplay();

	if ( records === 0 || len === -1 )
	{
		start = 0;
	}
	else if ( typeof action === "number" )
	{
		start = action * len;

		if ( start > records )
		{
			start = 0;
		}
	}
	else if ( action == "first" )
	{
		start = 0;
	}
	else if ( action == "previous" )
	{
		start = len >= 0 ?
			start - len :
			0;

		if ( start < 0 )
		{
			start = 0;
		}
	}
	else if ( action == "next" )
	{
		if ( start + len < records )
		{
			start += len;
		}
	}
	else if ( action == "last" )
	{
		start = Math.floor( (records-1) / len) * len;
	}
	else if ( action === 'ellipsis' )
	{
		return;
	}
	else
	{
		_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
	}

	var changed = settings._iDisplayStart !== start;
	settings._iDisplayStart = start;

	_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );

	if ( changed && redraw ) {
		_fnDraw( settings );
	}

	return changed;
}


/**
 * Generate the node required for the processing node
 *  @param {object} settings DataTables settings object
 */
function _processingHtml ( settings )
{
	var table = settings.nTable;

	if ( settings.oFeatures.bProcessing ) {
		var n = dataTables_$('<div/>', {
				'id': settings.sTableId + '_processing',
				'class': settings.oClasses.processing.container,
				'role': 'status'
			} )
			.html( settings.oLanguage.sProcessing )
			.append('<div><div></div><div></div><div></div><div></div></div>')
			.insertBefore( table );
		
		dataTables_$(table).on( 'processing.dt.DT', function (e, s, show) {
			n.css( 'display', show ? 'block' : 'none' );
		} );
	}
}


/**
 * Display or hide the processing indicator
 *  @param {object} settings DataTables settings object
 *  @param {bool} show Show the processing indicator (true) or not (false)
 */
function _fnProcessingDisplay ( settings, show )
{
	_fnCallbackFire( settings, null, 'processing', [settings, show] );
}
/**
 * Add any control elements for the table - specifically scrolling
 *  @param {object} settings dataTables settings object
 *  @returns {node} Node to add to the DOM
 *  @memberof DataTable#oApi
 */
function _fnFeatureHtmlTable ( settings )
{
	var table = dataTables_$(settings.nTable);

	// Scrolling from here on in
	var scroll = settings.oScroll;

	if ( scroll.sX === '' && scroll.sY === '' ) {
		return settings.nTable;
	}

	var scrollX = scroll.sX;
	var scrollY = scroll.sY;
	var classes = settings.oClasses.scrolling;
	var caption = settings.captionNode;
	var captionSide = caption ? caption._captionSide : null;
	var headerClone = dataTables_$( table[0].cloneNode(false) );
	var footerClone = dataTables_$( table[0].cloneNode(false) );
	var footer = table.children('tfoot');
	var _div = '<div/>';
	var size = function ( s ) {
		return !s ? null : _fnStringToCss( s );
	};

	if ( ! footer.length ) {
		footer = null;
	}

	/*
	 * The HTML structure that we want to generate in this function is:
	 *  div - scroller
	 *    div - scroll head
	 *      div - scroll head inner
	 *        table - scroll head table
	 *          thead - thead
	 *    div - scroll body
	 *      table - table (master table)
	 *        thead - thead clone for sizing
	 *        tbody - tbody
	 *    div - scroll foot
	 *      div - scroll foot inner
	 *        table - scroll foot table
	 *          tfoot - tfoot
	 */
	var scroller = dataTables_$( _div, { 'class': classes.container } )
		.append(
			dataTables_$(_div, { 'class': classes.header.self } )
				.css( {
					overflow: 'hidden',
					position: 'relative',
					border: 0,
					width: scrollX ? size(scrollX) : '100%'
				} )
				.append(
					dataTables_$(_div, { 'class': classes.header.inner } )
						.css( {
							'box-sizing': 'content-box',
							width: scroll.sXInner || '100%'
						} )
						.append(
							headerClone
								.removeAttr('id')
								.css( 'margin-left', 0 )
								.append( captionSide === 'top' ? caption : null )
								.append(
									table.children('thead')
								)
						)
				)
		)
		.append(
			dataTables_$(_div, { 'class': classes.body } )
				.css( {
					position: 'relative',
					overflow: 'auto',
					width: size( scrollX )
				} )
				.append( table )
		);

	if ( footer ) {
		scroller.append(
			dataTables_$(_div, { 'class': classes.footer.self } )
				.css( {
					overflow: 'hidden',
					border: 0,
					width: scrollX ? size(scrollX) : '100%'
				} )
				.append(
					dataTables_$(_div, { 'class': classes.footer.inner } )
						.append(
							footerClone
								.removeAttr('id')
								.css( 'margin-left', 0 )
								.append( captionSide === 'bottom' ? caption : null )
								.append(
									table.children('tfoot')
								)
						)
				)
		);
	}

	var children = scroller.children();
	var scrollHead = children[0];
	var scrollBody = children[1];
	var scrollFoot = footer ? children[2] : null;

	// When the body is scrolled, then we also want to scroll the headers
	dataTables_$(scrollBody).on( 'scroll.DT', function () {
		var scrollLeft = this.scrollLeft;

		scrollHead.scrollLeft = scrollLeft;

		if ( footer ) {
			scrollFoot.scrollLeft = scrollLeft;
		}
	} );

	// When focus is put on the header cells, we might need to scroll the body
	dataTables_$('th, td', scrollHead).on('focus', function () {
		var scrollLeft = scrollHead.scrollLeft;

		scrollBody.scrollLeft = scrollLeft;

		if ( footer ) {
			scrollBody.scrollLeft = scrollLeft;
		}
	});

	dataTables_$(scrollBody).css('max-height', scrollY);
	if (! scroll.bCollapse) {
		dataTables_$(scrollBody).css('height', scrollY);
	}

	settings.nScrollHead = scrollHead;
	settings.nScrollBody = scrollBody;
	settings.nScrollFoot = scrollFoot;

	// On redraw - align columns
	settings.aoDrawCallback.push(_fnScrollDraw);

	return scroller[0];
}



/**
 * Update the header, footer and body tables for resizing - i.e. column
 * alignment.
 *
 * Welcome to the most horrible function DataTables. The process that this
 * function follows is basically:
 *   1. Re-create the table inside the scrolling div
 *   2. Correct colgroup > col values if needed
 *   3. Copy colgroup > col over to header and footer
 *   4. Clean up
 *
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnScrollDraw ( settings )
{
	// Given that this is such a monster function, a lot of variables are use
	// to try and keep the minimised size as small as possible
	var
		scroll         = settings.oScroll,
		barWidth       = scroll.iBarWidth,
		divHeader      = dataTables_$(settings.nScrollHead),
		divHeaderInner = divHeader.children('div'),
		divHeaderTable = divHeaderInner.children('table'),
		divBodyEl      = settings.nScrollBody,
		divBody        = dataTables_$(divBodyEl),
		divFooter      = dataTables_$(settings.nScrollFoot),
		divFooterInner = divFooter.children('div'),
		divFooterTable = divFooterInner.children('table'),
		header         = dataTables_$(settings.nTHead),
		table          = dataTables_$(settings.nTable),
		footer         = settings.nTFoot && dataTables_$('th, td', settings.nTFoot).length ? dataTables_$(settings.nTFoot) : null,
		browser        = settings.oBrowser,
		headerCopy, footerCopy;

	// If the scrollbar visibility has changed from the last draw, we need to
	// adjust the column sizes as the table width will have changed to account
	// for the scrollbar
	var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
	
	if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
		settings.scrollBarVis = scrollBarVis;
		_fnAdjustColumnSizing( settings );
		return; // adjust column sizing will call this function again
	}
	else {
		settings.scrollBarVis = scrollBarVis;
	}

	// 1. Re-create the table inside the scrolling div
	// Remove the old minimised thead and tfoot elements in the inner table
	table.children('thead, tfoot').remove();

	// Clone the current header and footer elements and then place it into the inner table
	headerCopy = header.clone().prependTo( table );
	headerCopy.find('th, td').removeAttr('tabindex');
	headerCopy.find('[id]').removeAttr('id');

	if ( footer ) {
		footerCopy = footer.clone().prependTo( table );
		footerCopy.find('[id]').removeAttr('id');
	}

	// 2. Correct colgroup > col values if needed
	// It is possible that the cell sizes are smaller than the content, so we need to
	// correct colgroup>col for such cases. This can happen if the auto width detection
	// uses a cell which has a longer string, but isn't the widest! For example 
	// "Chief Executive Officer (CEO)" is the longest string in the demo, but
	// "Systems Administrator" is actually the widest string since it doesn't collapse.
	// Note the use of translating into a column index to get the `col` element. This
	// is because of Responsive which might remove `col` elements, knocking the alignment
	// of the indexes out.
	if (settings.aiDisplay.length) {
		// Get the column sizes from the first row in the table
		var colSizes = table.find('tbody tr').eq(0).find('th, td').map(function (vis) {
			return {
				idx: _fnVisibleToColumnIndex(settings, vis),
				width: dataTables_$(this).outerWidth()
			}
		});

		// Check against what the colgroup > col is set to and correct if needed
		for (var i=0 ; i<colSizes.length ; i++) {
			var colEl = settings.aoColumns[ colSizes[i].idx ].colEl[0];
			var colWidth = colEl.style.width.replace('px', '');

			if (colWidth !== colSizes[i].width) {
				colEl.style.width = colSizes[i].width + 'px';
			}
		}
	}

	// 3. Copy the colgroup over to the header and footer
	divHeaderTable
		.find('colgroup')
		.remove();

	divHeaderTable.append(settings.colgroup.clone());

	if ( footer ) {
		divFooterTable
			.find('colgroup')
			.remove();

		divFooterTable.append(settings.colgroup.clone());
	}

	// "Hide" the header and footer that we used for the sizing. We need to keep
	// the content of the cell so that the width applied to the header and body
	// both match, but we want to hide it completely.
	dataTables_$('th, td', headerCopy).each(function () {
		dataTables_$(this.childNodes).wrapAll('<div class="dt-scroll-sizing">');
	});

	if ( footer ) {
		dataTables_$('th, td', footerCopy).each(function () {
			dataTables_$(this.childNodes).wrapAll('<div class="dt-scroll-sizing">');
		});
	}

	// 4. Clean up
	// Figure out if there are scrollbar present - if so then we need a the header and footer to
	// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
	var isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
	var paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );

	// Set the width's of the header and footer tables
	var outerWidth = table.outerWidth();

	divHeaderTable.css('width', _fnStringToCss( outerWidth ));
	divHeaderInner
		.css('width', _fnStringToCss( outerWidth ))
		.css(paddingSide, isScrolling ? barWidth+"px" : "0px");

	if ( footer ) {
		divFooterTable.css('width', _fnStringToCss( outerWidth ));
		divFooterInner
			.css('width', _fnStringToCss( outerWidth ))
			.css(paddingSide, isScrolling ? barWidth+"px" : "0px");
	}

	// Correct DOM ordering for colgroup - comes before the thead
	table.children('colgroup').prependTo(table);

	// Adjust the position of the header in case we loose the y-scrollbar
	divBody.trigger('scroll');

	// If sorting or filtering has occurred, jump the scrolling back to the top
	// only if we aren't holding the position
	if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
		divBodyEl.scrollTop = 0;
	}
}

/**
 * Calculate the width of columns for the table
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnCalculateColumnWidths ( settings )
{
	// Not interested in doing column width calculation if auto-width is disabled
	if (! settings.oFeatures.bAutoWidth) {
		return;
	}

	var
		table = settings.nTable,
		columns = settings.aoColumns,
		scroll = settings.oScroll,
		scrollY = scroll.sY,
		scrollX = scroll.sX,
		scrollXInner = scroll.sXInner,
		visibleColumns = _fnGetColumns( settings, 'bVisible' ),
		tableWidthAttr = table.getAttribute('width'), // from DOM element
		tableContainer = table.parentNode,
		i, column, columnIdx;

	var styleWidth = table.style.width;
	if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
		tableWidthAttr = styleWidth;
	}

	// Let plug-ins know that we are doing a recalc, in case they have changed any of the
	// visible columns their own way (e.g. Responsive uses display:none).
	_fnCallbackFire(
		settings,
		null,
		'column-calc',
		{visible: visibleColumns},
		false
	);

	// Construct a single row, worst case, table with the widest
	// node in the data, assign any user defined widths, then insert it into
	// the DOM and allow the browser to do all the hard work of calculating
	// table widths
	var tmpTable = dataTables_$(table.cloneNode())
		.css( 'visibility', 'hidden' )
		.removeAttr( 'id' );

	// Clean up the table body
	tmpTable.append('<tbody>')
	var tr = dataTables_$('<tr/>').appendTo( tmpTable.find('tbody') );

	// Clone the table header and footer - we can't use the header / footer
	// from the cloned table, since if scrolling is active, the table's
	// real header and footer are contained in different table tags
	tmpTable
		.append( dataTables_$(settings.nTHead).clone() )
		.append( dataTables_$(settings.nTFoot).clone() );

	// Remove any assigned widths from the footer (from scrolling)
	tmpTable.find('tfoot th, tfoot td').css('width', '');

	// Apply custom sizing to the cloned header
	tmpTable.find('thead th, thead td').each( function () {
		// Get the `width` from the header layout
		var width = _fnColumnsSumWidth( settings, this, true, false );

		if ( width ) {
			this.style.width = width;

			// For scrollX we need to force the column width otherwise the
			// browser will collapse it. If this width is smaller than the
			// width the column requires, then it will have no effect
			if ( scrollX ) {
				dataTables_$( this ).append( dataTables_$('<div/>').css( {
					width: width,
					margin: 0,
					padding: 0,
					border: 0,
					height: 1
				} ) );
			}
		}
		else {
			this.style.width = '';
		}
	} );

	// Find the widest piece of data for each column and put it into the table
	for ( i=0 ; i<visibleColumns.length ; i++ ) {
		columnIdx = visibleColumns[i];
		column = columns[ columnIdx ];

		var longest = _fnGetMaxLenString(settings, columnIdx);
		var autoClass = _ext.type.className[column.sType];
		var text = longest + column.sContentPadding;
		var insert = longest.indexOf('<') === -1
			? document.createTextNode(text)
			: text
		
		dataTables_$('<td/>')
			.addClass(autoClass)
			.addClass(column.sClass)
			.append(insert)
			.appendTo(tr);
	}

	// Tidy the temporary table - remove name attributes so there aren't
	// duplicated in the dom (radio elements for example)
	dataTables_$('[name]', tmpTable).removeAttr('name');

	// Table has been built, attach to the document so we can work with it.
	// A holding element is used, positioned at the top of the container
	// with minimal height, so it has no effect on if the container scrolls
	// or not. Otherwise it might trigger scrolling when it actually isn't
	// needed
	var holder = dataTables_$('<div/>').css( scrollX || scrollY ?
			{
				position: 'absolute',
				top: 0,
				left: 0,
				height: 1,
				right: 0,
				overflow: 'hidden'
			} :
			{}
		)
		.append( tmpTable )
		.appendTo( tableContainer );

	// When scrolling (X or Y) we want to set the width of the table as 
	// appropriate. However, when not scrolling leave the table width as it
	// is. This results in slightly different, but I think correct behaviour
	if ( scrollX && scrollXInner ) {
		tmpTable.width( scrollXInner );
	}
	else if ( scrollX ) {
		tmpTable.css( 'width', 'auto' );
		tmpTable.removeAttr('width');

		// If there is no width attribute or style, then allow the table to
		// collapse
		if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
			tmpTable.width( tableContainer.clientWidth );
		}
	}
	else if ( scrollY ) {
		tmpTable.width( tableContainer.clientWidth );
	}
	else if ( tableWidthAttr ) {
		tmpTable.width( tableWidthAttr );
	}

	// Get the width of each column in the constructed table
	var total = 0;
	var bodyCells = tmpTable.find('tbody tr').eq(0).children();

	for ( i=0 ; i<visibleColumns.length ; i++ ) {
		// Use getBounding for sub-pixel accuracy, which we then want to round up!
		var bounding = bodyCells[i].getBoundingClientRect().width;

		// Total is tracked to remove any sub-pixel errors as the outerWidth
		// of the table might not equal the total given here
		total += bounding;

		// Width for each column to use
		columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );
	}

	table.style.width = _fnStringToCss( total );

	// Finished with the table - ditch it
	holder.remove();

	// If there is a width attr, we want to attach an event listener which
	// allows the table sizing to automatically adjust when the window is
	// resized. Use the width attr rather than CSS, since we can't know if the
	// CSS is a relative value or absolute - DOM read is always px.
	if ( tableWidthAttr ) {
		table.style.width = _fnStringToCss( tableWidthAttr );
	}

	if ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {
		var bindResize = function () {
			dataTables_$(window).on('resize.DT-'+settings.sInstance, DataTable.util.throttle( function () {
				if (! settings.bDestroying) {
					_fnAdjustColumnSizing( settings );
				}
			} ) );
		};

		bindResize();

		settings._reszEvt = true;
	}
}


/**
 * Get the maximum strlen for each data column
 *  @param {object} settings dataTables settings object
 *  @param {int} colIdx column of interest
 *  @returns {string} string of the max length
 *  @memberof DataTable#oApi
 */
function _fnGetMaxLenString( settings, colIdx )
{
	var column = settings.aoColumns[colIdx];

	if (! column.maxLenString) {
		var s, max='', maxLen = -1;
	
		for ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {
			var rowIdx = settings.aiDisplayMaster[i];
			var data = _fnGetRowDisplay(settings, rowIdx)[colIdx];

			var cellString = data && typeof data === 'object' && data.nodeType
				? data.innerHTML
				: data+'';

			// Remove id / name attributes from elements so they
			// don't interfere with existing elements
			cellString = cellString
				.replace(/id=".*?"/g, '')
				.replace(/name=".*?"/g, '');

			s = _stripHtml(cellString)
				.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > maxLen ) {
				// We want the HTML in the string, but the length that
				// is important is the stripped string
				max = cellString;
				maxLen = s.length;
			}
		}

		column.maxLenString = max;
	}

	return column.maxLenString;
}


/**
 * Append a CSS unit (only if required) to a string
 *  @param {string} value to css-ify
 *  @returns {string} value with css unit
 *  @memberof DataTable#oApi
 */
function _fnStringToCss( s )
{
	if ( s === null ) {
		return '0px';
	}

	if ( typeof s == 'number' ) {
		return s < 0 ?
			'0px' :
			s+'px';
	}

	// Check it has a unit character already
	return s.match(/\d$/) ?
		s+'px' :
		s;
}

/**
 * Re-insert the `col` elements for current visibility
 *
 * @param {*} settings DT settings
 */
function _colGroup( settings ) {
	var cols = settings.aoColumns;

	settings.colgroup.empty();

	for (i=0 ; i<cols.length ; i++) {
		if (cols[i].bVisible) {
			settings.colgroup.append(cols[i].colEl);
		}
	}
}


function _fnSortInit( settings ) {
	var target = settings.nTHead;
	var headerRows = target.querySelectorAll('tr');
	var legacyTop = settings.bSortCellsTop;
	var notSelector = ':not([data-dt-order="disable"]):not([data-dt-order="icon-only"])';
	
	// Legacy support for `orderCellsTop`
	if (legacyTop === true) {
		target = headerRows[0];
	}
	else if (legacyTop === false) {
		target = headerRows[ headerRows.length - 1 ];
	}

	_fnSortAttachListener(
		settings,
		target,
		target === settings.nTHead
			? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector
			: 'th'+notSelector+', td'+notSelector
	);

	// Need to resolve the user input array into our internal structure
	var order = [];
	_fnSortResolve( settings, order, settings.aaSorting );

	settings.aaSorting = order;
}


function _fnSortAttachListener(settings, node, selector, column, callback) {
	_fnBindAction( node, selector, function (e) {
		var run = false;
		var columns = column === undefined
			? _fnColumnsFromHeader( e.target )
			: [column];

		if ( columns.length ) {
			for ( var i=0, ien=columns.length ; i<ien ; i++ ) {
				var ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );

				if (ret !== false) {
					run = true;
				}					

				// If the first entry is no sort, then subsequent
				// sort columns are ignored
				if (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {
					break;
				}
			}

			if (run) {
				_fnProcessingDisplay( settings, true );

				// Allow the processing display to show
				setTimeout( function () {
					_fnSort( settings );
					_fnSortDisplay( settings, settings.aiDisplay );

					// Sort processing done - redraw has its own processing display
					_fnProcessingDisplay( settings, false );

					_fnReDraw( settings, false, false );

					if (callback) {
						callback();
					}
				}, 0);
			}
		}
	} );
}

/**
 * Sort the display array to match the master's order
 * @param {*} settings
 */
function _fnSortDisplay(settings, display) {
	var master = settings.aiDisplayMaster;
	var masterMap = {};
	var map = {};
	var i;

	// Rather than needing an `indexOf` on master array, we can create a map
	for (i=0 ; i<master.length ; i++) {
		masterMap[master[i]] = i;
	}

	// And then cache what would be the indexOf fom the display
	for (i=0 ; i<display.length ; i++) {
		map[display[i]] = masterMap[display[i]];
	}

	display.sort(function(a, b){
		// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`
		return map[a] - map[b];
	});
}


function _fnSortResolve (settings, nestedSort, sort) {
	var push = function ( a ) {
		if (dataTables_$.isPlainObject(a)) {
			if (a.idx !== undefined) {
				// Index based ordering
				nestedSort.push([a.idx, a.dir]);
			}
			else if (a.name) {
				// Name based ordering
				var cols = _pluck( settings.aoColumns, 'sName');
				var idx = cols.indexOf(a.name);

				if (idx !== -1) {
					nestedSort.push([idx, a.dir]);
				}
			}
		}
		else {
			// Plain column index and direction pair
			nestedSort.push(a);
		}
	};

	if ( dataTables_$.isPlainObject(sort) ) {
		// Object
		push(sort);
	}
	else if ( sort.length && typeof sort[0] === 'number' ) {
		// 1D array
		push(sort);
	}
	else if ( sort.length ) {
		// 2D array
		for (var z=0; z<sort.length; z++) {
			push(sort[z]); // Object or array
		}
	}
}


function _fnSortFlatten ( settings )
{
	var
		i, k, kLen,
		aSort = [],
		extSort = DataTable.ext.type.order,
		aoColumns = settings.aoColumns,
		aDataSort, iCol, sType, srcCol,
		fixed = settings.aaSortingFixed,
		fixedObj = dataTables_$.isPlainObject( fixed ),
		nestedSort = [];
	
	if ( ! settings.oFeatures.bSort ) {
		return aSort;
	}

	// Build the sort array, with pre-fix and post-fix options if they have been
	// specified
	if ( Array.isArray( fixed ) ) {
		_fnSortResolve( settings, nestedSort, fixed );
	}

	if ( fixedObj && fixed.pre ) {
		_fnSortResolve( settings, nestedSort, fixed.pre );
	}

	_fnSortResolve( settings, nestedSort, settings.aaSorting );

	if (fixedObj && fixed.post ) {
		_fnSortResolve( settings, nestedSort, fixed.post );
	}

	for ( i=0 ; i<nestedSort.length ; i++ )
	{
		srcCol = nestedSort[i][0];

		if ( aoColumns[ srcCol ] ) {
			aDataSort = aoColumns[ srcCol ].aDataSort;

			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';

				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);
				}

				if ( nestedSort[i][1] ) {
					aSort.push( {
						src:       srcCol,
						col:       iCol,
						dir:       nestedSort[i][1],
						index:     nestedSort[i]._idx,
						type:      sType,
						formatter: extSort[ sType+"-pre" ],
						sorter:    extSort[ sType+"-"+nestedSort[i][1] ]
					} );
				}
			}
		}
	}

	return aSort;
}

/**
 * Change the order of the table
 *  @param {object} oSettings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnSort ( oSettings, col, dir )
{
	var
		i, ien, iLen,
		aiOrig = [],
		extSort = DataTable.ext.type.order,
		aoData = oSettings.aoData,
		sortCol,
		displayMaster = oSettings.aiDisplayMaster,
		aSort;

	// Resolve any column types that are unknown due to addition or invalidation
	// @todo Can this be moved into a 'data-ready' handler which is called when
	//   data is going to be used in the table?
	_fnColumnTypes( oSettings );

	// Allow a specific column to be sorted, which will _not_ alter the display
	// master
	if (col !== undefined) {
		var srcCol = oSettings.aoColumns[col];
		aSort = [{
			src:       col,
			col:       col,
			dir:       dir,
			index:     0,
			type:      srcCol.sType,
			formatter: extSort[ srcCol.sType+"-pre" ],
			sorter:    extSort[ srcCol.sType+"-"+dir ]
		}];
		displayMaster = displayMaster.slice();
	}
	else {
		aSort = _fnSortFlatten( oSettings );
	}

	for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
		sortCol = aSort[i];

		// Load the data needed for the sort, for each cell
		_fnSortData( oSettings, sortCol.col );
	}

	/* No sorting required if server-side or no sorting array */
	if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
	{
		// Reset the initial positions on each pass so we get a stable sort
		for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
			aiOrig[ i ] = i;
		}

		// If the first sort is desc, then reverse the array to preserve original
		// order, just in reverse
		if (aSort.length && aSort[0].dir === 'desc') {
			aiOrig.reverse();
		}

		/* Do the sort - here we want multi-column sorting based on a given data source (column)
		 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
		 * follow on it's own, but this is what we want (example two column sorting):
		 *  fnLocalSorting = function(a,b){
		 *    var test;
		 *    test = oSort['string-asc']('data11', 'data12');
		 *      if (test !== 0)
		 *        return test;
		 *    test = oSort['numeric-desc']('data21', 'data22');
		 *    if (test !== 0)
		 *      return test;
		 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
		 *  }
		 * Basically we have a test for each sorting column, if the data in that column is equal,
		 * test the next column. If all columns match, then we use a numeric sort on the row
		 * positions in the original data array to provide a stable sort.
		 */
		displayMaster.sort( function ( a, b ) {
			var
				x, y, k, test, sort,
				len=aSort.length,
				dataA = aoData[a]._aSortData,
				dataB = aoData[b]._aSortData;

			for ( k=0 ; k<len ; k++ ) {
				sort = aSort[k];

				// Data, which may have already been through a `-pre` function
				x = dataA[ sort.col ];
				y = dataB[ sort.col ];

				if (sort.sorter) {
					// If there is a custom sorter (`-asc` or `-desc`) for this
					// data type, use it
					test = sort.sorter(x, y);

					if ( test !== 0 ) {
						return test;
					}
				}
				else {
					// Otherwise, use generic sorting
					test = x<y ? -1 : x>y ? 1 : 0;

					if ( test !== 0 ) {
						return sort.dir === 'asc' ? test : -test;
					}
				}
			}

			x = aiOrig[a];
			y = aiOrig[b];

			return x<y ? -1 : x>y ? 1 : 0;
		} );
	}
	else if ( aSort.length === 0 ) {
		// Apply index order
		displayMaster.sort(function (x, y) {
			return x<y ? -1 : x>y ? 1 : 0;
		});
	}

	if (col === undefined) {
		// Tell the draw function that we have sorted the data
		oSettings.bSorted = true;

		_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );
	}

	return displayMaster;
}


/**
 * Function to run on user sort request
 *  @param {object} settings dataTables settings object
 *  @param {node} attachTo node to attach the handler to
 *  @param {int} colIdx column sorting index
 *  @param {int} addIndex Counter
 *  @param {boolean} [shift=false] Shift click add
 *  @param {function} [callback] callback function
 *  @memberof DataTable#oApi
 */
function _fnSortAdd ( settings, colIdx, addIndex, shift )
{
	var col = settings.aoColumns[ colIdx ];
	var sorting = settings.aaSorting;
	var asSorting = col.asSorting;
	var nextSortIdx;
	var next = function ( a, overflow ) {
		var idx = a._idx;
		if ( idx === undefined ) {
			idx = asSorting.indexOf(a[1]);
		}

		return idx+1 < asSorting.length ?
			idx+1 :
			overflow ?
				null :
				0;
	};

	if ( ! col.bSortable ) {
		return false;
	}

	// Convert to 2D array if needed
	if ( typeof sorting[0] === 'number' ) {
		sorting = settings.aaSorting = [ sorting ];
	}

	// If appending the sort then we are multi-column sorting
	if ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {
		// Are we already doing some kind of sort on this column?
		var sortIdx = _pluck(sorting, '0').indexOf(colIdx);

		if ( sortIdx !== -1 ) {
			// Yes, modify the sort
			nextSortIdx = next( sorting[sortIdx], true );

			if ( nextSortIdx === null && sorting.length === 1 ) {
				nextSortIdx = 0; // can't remove sorting completely
			}

			if ( nextSortIdx === null ) {
				sorting.splice( sortIdx, 1 );
			}
			else {
				sorting[sortIdx][1] = asSorting[ nextSortIdx ];
				sorting[sortIdx]._idx = nextSortIdx;
			}
		}
		else if (shift) {
			// No sort on this column yet, being added by shift click
			// add it as itself
			sorting.push( [ colIdx, asSorting[0], 0 ] );
			sorting[sorting.length-1]._idx = 0;
		}
		else {
			// No sort on this column yet, being added from a colspan
			// so add with same direction as first column
			sorting.push( [ colIdx, sorting[0][1], 0 ] );
			sorting[sorting.length-1]._idx = 0;
		}
	}
	else if ( sorting.length && sorting[0][0] == colIdx ) {
		// Single column - already sorting on this column, modify the sort
		nextSortIdx = next( sorting[0] );

		sorting.length = 1;
		sorting[0][1] = asSorting[ nextSortIdx ];
		sorting[0]._idx = nextSortIdx;
	}
	else {
		// Single column - sort only on this column
		sorting.length = 0;
		sorting.push( [ colIdx, asSorting[0] ] );
		sorting[0]._idx = 0;
	}
}


/**
 * Set the sorting classes on table's body, Note: it is safe to call this function
 * when bSort and bSortClasses are false
 *  @param {object} oSettings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnSortingClasses( settings )
{
	var oldSort = settings.aLastSort;
	var sortClass = settings.oClasses.order.position;
	var sort = _fnSortFlatten( settings );
	var features = settings.oFeatures;
	var i, ien, colIdx;

	if ( features.bSort && features.bSortClasses ) {
		// Remove old sorting classes
		for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
			colIdx = oldSort[i].src;

			// Remove column sorting
			dataTables_$( _pluck( settings.aoData, 'anCells', colIdx ) )
				.removeClass( sortClass + (i<2 ? i+1 : 3) );
		}

		// Add new column sorting
		for ( i=0, ien=sort.length ; i<ien ; i++ ) {
			colIdx = sort[i].src;

			dataTables_$( _pluck( settings.aoData, 'anCells', colIdx ) )
				.addClass( sortClass + (i<2 ? i+1 : 3) );
		}
	}

	settings.aLastSort = sort;
}


// Get the data to sort a column, be it from cache, fresh (populating the
// cache), or from a sort formatter
function _fnSortData( settings, colIdx )
{
	// Custom sorting function - provided by the sort data type
	var column = settings.aoColumns[ colIdx ];
	var customSort = DataTable.ext.order[ column.sSortDataType ];
	var customData;

	if ( customSort ) {
		customData = customSort.call( settings.oInstance, settings, colIdx,
			_fnColumnIndexToVisible( settings, colIdx )
		);
	}

	// Use / populate cache
	var row, cellData;
	var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	var data = settings.aoData;

	for ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {
		// Sparse array
		if (! data[rowIdx]) {
			continue;
		}

		row = data[rowIdx];

		if ( ! row._aSortData ) {
			row._aSortData = [];
		}

		if ( ! row._aSortData[colIdx] || customSort ) {
			cellData = customSort ?
				customData[rowIdx] : // If there was a custom sort function, use data from there
				_fnGetCellData( settings, rowIdx, colIdx, 'sort' );

			row._aSortData[ colIdx ] = formatter ?
				formatter( cellData, settings ) :
				cellData;
		}
	}
}


/**
 * State information for a table
 *
 * @param {*} settings
 * @returns State object
 */
function _fnSaveState ( settings )
{
	if (settings._bLoadingState) {
		return;
	}

	/* Store the interesting variables */
	var state = {
		time:    +new Date(),
		start:   settings._iDisplayStart,
		length:  settings._iDisplayLength,
		order:   dataTables_$.extend( true, [], settings.aaSorting ),
		search:  dataTables_$.extend({}, settings.oPreviousSearch),
		columns: settings.aoColumns.map( function ( col, i ) {
			return {
				visible: col.bVisible,
				search: dataTables_$.extend({}, settings.aoPreSearchCols[i])
			};
		} )
	};

	settings.oSavedState = state;
	_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
	
	if ( settings.oFeatures.bStateSave && !settings.bDestroying )
	{
		settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
	}	
}


/**
 * Attempt to load a saved table state
 *  @param {object} oSettings dataTables settings object
 *  @param {object} oInit DataTables init object so we can override settings
 *  @param {function} callback Callback to execute when the state has been loaded
 *  @memberof DataTable#oApi
 */
function _fnLoadState ( settings, init, callback )
{
	if ( ! settings.oFeatures.bStateSave ) {
		callback();
		return;
	}

	var loaded = function(state) {
		_fnImplementState(settings, state, callback);
	}

	var state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );

	if ( state !== undefined ) {
		_fnImplementState( settings, state, callback );
	}
	// otherwise, wait for the loaded callback to be executed

	return true;
}

function _fnImplementState ( settings, s, callback) {
	var i, ien;
	var columns = settings.aoColumns;
	settings._bLoadingState = true;

	// When StateRestore was introduced the state could now be implemented at any time
	// Not just initialisation. To do this an api instance is required in some places
	var api = settings._bInitComplete ? new DataTable.Api(settings) : null;

	if ( ! s || ! s.time ) {
		settings._bLoadingState = false;
		callback();
		return;
	}

	// Reject old data
	var duration = settings.iStateDuration;
	if ( duration > 0 && s.time < +new Date() - (duration*1000) ) {
		settings._bLoadingState = false;
		callback();
		return;
	}

	// Allow custom and plug-in manipulation functions to alter the saved data set and
	// cancelling of loading by returning false
	var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );
	if ( abStateLoad.indexOf(false) !== -1 ) {
		settings._bLoadingState = false;
		callback();
		return;
	}

	// Number of columns have changed - all bets are off, no restore of settings
	if ( s.columns && columns.length !== s.columns.length ) {
		settings._bLoadingState = false;
		callback();
		return;
	}

	// Store the saved state so it might be accessed at any time
	settings.oLoadedState = dataTables_$.extend( true, {}, s );

	// This is needed for ColReorder, which has to happen first to allow all
	// the stored indexes to be usable. It is not publicly documented.
	_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );

	// Page Length
	if ( s.length !== undefined ) {
		// If already initialised just set the value directly so that the select element is also updated
		if (api) {
			api.page.len(s.length)
		}
		else {
			settings._iDisplayLength   = s.length;
		}
	}

	// Restore key features - todo - for 1.11 this needs to be done by
	// subscribed events
	if ( s.start !== undefined ) {
		if(api === null) {
			settings._iDisplayStart    = s.start;
			settings.iInitDisplayStart = s.start;
		}
		else {
			_fnPageChange(settings, s.start/settings._iDisplayLength);
		}
	}

	// Order
	if ( s.order !== undefined ) {
		settings.aaSorting = [];
		dataTables_$.each( s.order, function ( i, col ) {
			settings.aaSorting.push( col[0] >= columns.length ?
				[ 0, col[1] ] :
				col
			);
		} );
	}

	// Search
	if ( s.search !== undefined ) {
		dataTables_$.extend( settings.oPreviousSearch, s.search );
	}

	// Columns
	if ( s.columns ) {
		for ( i=0, ien=s.columns.length ; i<ien ; i++ ) {
			var col = s.columns[i];

			// Visibility
			if ( col.visible !== undefined ) {
				// If the api is defined, the table has been initialised so we need to use it rather than internal settings
				if (api) {
					// Don't redraw the columns on every iteration of this loop, we will do this at the end instead
					api.column(i).visible(col.visible, false);
				}
				else {
					columns[i].bVisible = col.visible;
				}
			}

			// Search
			if ( col.search !== undefined ) {
				dataTables_$.extend( settings.aoPreSearchCols[i], col.search );
			}
		}
		
		// If the api is defined then we need to adjust the columns once the visibility has been changed
		if (api) {
			api.columns.adjust();
		}
	}

	settings._bLoadingState = false;
	_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );
	callback();
}

/**
 * Log an error message
 *  @param {object} settings dataTables settings object
 *  @param {int} level log error messages, or display them to the user
 *  @param {string} msg error message
 *  @param {int} tn Technical note id to get more information about the error.
 *  @memberof DataTable#oApi
 */
function _fnLog( settings, level, msg, tn )
{
	msg = 'DataTables warning: '+
		(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;

	if ( tn ) {
		msg += '. For more information about this error, please see '+
		'https://datatables.net/tn/'+tn;
	}

	if ( ! level  ) {
		// Backwards compatibility pre 1.10
		var ext = DataTable.ext;
		var type = ext.sErrMode || ext.errMode;

		if ( settings ) {
			_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );
		}

		if ( type == 'alert' ) {
			alert( msg );
		}
		else if ( type == 'throw' ) {
			throw new Error(msg);
		}
		else if ( typeof type == 'function' ) {
			type( settings, tn, msg );
		}
	}
	else if ( window.console && console.log ) {
		console.log( msg );
	}
}


/**
 * See if a property is defined on one object, if so assign it to the other object
 *  @param {object} ret target object
 *  @param {object} src source object
 *  @param {string} name property
 *  @param {string} [mappedName] name to map too - optional, name used if not given
 *  @memberof DataTable#oApi
 */
function _fnMap( ret, src, name, mappedName )
{
	if ( Array.isArray( name ) ) {
		dataTables_$.each( name, function (i, val) {
			if ( Array.isArray( val ) ) {
				_fnMap( ret, src, val[0], val[1] );
			}
			else {
				_fnMap( ret, src, val );
			}
		} );

		return;
	}

	if ( mappedName === undefined ) {
		mappedName = name;
	}

	if ( src[name] !== undefined ) {
		ret[mappedName] = src[name];
	}
}


/**
 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
 * shallow copy arrays. The reason we need to do this, is that we don't want to
 * deep copy array init values (such as aaSorting) since the dev wouldn't be
 * able to override them, but we do want to deep copy arrays.
 *  @param {object} out Object to extend
 *  @param {object} extender Object from which the properties will be applied to
 *      out
 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
 *      independent copy with the exception of the `data` or `aaData` parameters
 *      if they are present. This is so you can pass in a collection to
 *      DataTables and have that used as your data source without breaking the
 *      references
 *  @returns {object} out Reference, just for convenience - out === the return.
 *  @memberof DataTable#oApi
 *  @todo This doesn't take account of arrays inside the deep copied objects.
 */
function _fnExtend( out, extender, breakRefs )
{
	var val;

	for ( var prop in extender ) {
		if ( Object.prototype.hasOwnProperty.call(extender, prop) ) {
			val = extender[prop];

			if ( dataTables_$.isPlainObject( val ) ) {
				if ( ! dataTables_$.isPlainObject( out[prop] ) ) {
					out[prop] = {};
				}
				dataTables_$.extend( true, out[prop], val );
			}
			else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {
				out[prop] = val.slice();
			}
			else {
				out[prop] = val;
			}
		}
	}

	return out;
}


/**
 * Bind an event handers to allow a click or return key to activate the callback.
 * This is good for accessibility since a return on the keyboard will have the
 * same effect as a click, if the element has focus.
 *  @param {element} n Element to bind the action to
 *  @param {object|string} selector Selector (for delegated events) or data object
 *   to pass to the triggered function
 *  @param {function} fn Callback function for when the event is triggered
 *  @memberof DataTable#oApi
 */
function _fnBindAction( n, selector, fn )
{
	dataTables_$(n)
		.on( 'click.DT', selector, function (e) {
			fn(e);
		} )
		.on( 'keypress.DT', selector, function (e){
			if ( e.which === 13 ) {
				e.preventDefault();
				fn(e);
			}
		} )
		.on( 'selectstart.DT', selector, function () {
			// Don't want a double click resulting in text selection
			return false;
		} );
}


/**
 * Register a callback function. Easily allows a callback function to be added to
 * an array store of callback functions that can then all be called together.
 *  @param {object} settings dataTables settings object
 *  @param {string} store Name of the array storage for the callbacks in oSettings
 *  @param {function} fn Function to be called back
 *  @memberof DataTable#oApi
 */
function _fnCallbackReg( settings, store, fn )
{
	if ( fn ) {
		settings[store].push(fn);
	}
}


/**
 * Fire callback functions and trigger events. Note that the loop over the
 * callback array store is done backwards! Further note that you do not want to
 * fire off triggers in time sensitive applications (for example cell creation)
 * as its slow.
 *  @param {object} settings dataTables settings object
 *  @param {string} callbackArr Name of the array storage for the callbacks in
 *      oSettings
 *  @param {string} eventName Name of the jQuery custom event to trigger. If
 *      null no trigger is fired
 *  @param {array} args Array of arguments to pass to the callback function /
 *      trigger
 *  @param {boolean} [bubbles] True if the event should bubble
 *  @memberof DataTable#oApi
 */
function _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )
{
	var ret = [];

	if ( callbackArr ) {
		ret = settings[callbackArr].slice().reverse().map( function (val) {
			return val.apply( settings.oInstance, args );
		} );
	}

	if ( eventName !== null) {
		var e = dataTables_$.Event( eventName+'.dt' );
		var table = dataTables_$(settings.nTable);
		
		// Expose the DataTables API on the event object for easy access
		e.dt = settings.api;

		table[bubbles ?  'trigger' : 'triggerHandler']( e, args );

		// If not yet attached to the document, trigger the event
		// on the body directly to sort of simulate the bubble
		if (bubbles && table.parents('body').length === 0) {
			dataTables_$('body').trigger( e, args );
		}

		ret.push( e.result );
	}

	return ret;
}


function _fnLengthOverflow ( settings )
{
	var
		start = settings._iDisplayStart,
		end = settings.fnDisplayEnd(),
		len = settings._iDisplayLength;

	/* If we have space to show extra rows (backing up from the end point - then do so */
	if ( start >= end )
	{
		start = end - len;
	}

	// Keep the start record on the current page
	start -= (start % len);

	if ( len === -1 || start < 0 )
	{
		start = 0;
	}

	settings._iDisplayStart = start;
}


function _fnRenderer( settings, type )
{
	var renderer = settings.renderer;
	var host = DataTable.ext.renderer[type];

	if ( dataTables_$.isPlainObject( renderer ) && renderer[type] ) {
		// Specific renderer for this type. If available use it, otherwise use
		// the default.
		return host[renderer[type]] || host._;
	}
	else if ( typeof renderer === 'string' ) {
		// Common renderer - if there is one available for this type use it,
		// otherwise use the default
		return host[renderer] || host._;
	}

	// Use the default
	return host._;
}


/**
 * Detect the data source being used for the table. Used to simplify the code
 * a little (ajax) and to make it compress a little smaller.
 *
 *  @param {object} settings dataTables settings object
 *  @returns {string} Data source
 *  @memberof DataTable#oApi
 */
function _fnDataSource ( settings )
{
	if ( settings.oFeatures.bServerSide ) {
		return 'ssp';
	}
	else if ( settings.ajax ) {
		return 'ajax';
	}
	return 'dom';
}

/**
 * Common replacement for language strings
 *
 * @param {*} settings DT settings object
 * @param {*} str String with values to replace
 * @param {*} entries Plural number for _ENTRIES_ - can be undefined
 * @returns String
 */
function _fnMacros ( settings, str, entries )
{
	// When infinite scrolling, we are always starting at 1. _iDisplayStart is
	// used only internally
	var
		formatter  = settings.fnFormatNumber,
		start      = settings._iDisplayStart+1,
		len        = settings._iDisplayLength,
		vis        = settings.fnRecordsDisplay(),
		max        = settings.fnRecordsTotal(),
		all        = len === -1;

	return str.
		replace(/_START_/g, formatter.call( settings, start ) ).
		replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
		replace(/_MAX_/g,   formatter.call( settings, max ) ).
		replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
		replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
		replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).
		replace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).
		replace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).
		replace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );
}



/**
 * Computed structure of the DataTables API, defined by the options passed to
 * `DataTable.Api.register()` when building the API.
 *
 * The structure is built in order to speed creation and extension of the Api
 * objects since the extensions are effectively pre-parsed.
 *
 * The array is an array of objects with the following structure, where this
 * base array represents the Api prototype base:
 *
 *     [
 *       {
 *         name:      'data'                -- string   - Property name
 *         val:       function () {},       -- function - Api method (or undefined if just an object
 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
 *       },
 *       {
 *         name:     'row'
 *         val:       {},
 *         methodExt: [ ... ],
 *         propExt:   [
 *           {
 *             name:      'data'
 *             val:       function () {},
 *             methodExt: [ ... ],
 *             propExt:   [ ... ]
 *           },
 *           ...
 *         ]
 *       }
 *     ]
 *
 * @type {Array}
 * @ignore
 */
var __apiStruct = [];


/**
 * `Array.prototype` reference.
 *
 * @type object
 * @ignore
 */
var __arrayProto = Array.prototype;


/**
 * Abstraction for `context` parameter of the `Api` constructor to allow it to
 * take several different forms for ease of use.
 *
 * Each of the input parameter types will be converted to a DataTables settings
 * object where possible.
 *
 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
 *   of:
 *
 *   * `string` - jQuery selector. Any DataTables' matching the given selector
 *     with be found and used.
 *   * `node` - `TABLE` node which has already been formed into a DataTable.
 *   * `jQuery` - A jQuery object of `TABLE` nodes.
 *   * `object` - DataTables settings object
 *   * `DataTables.Api` - API instance
 * @return {array|null} Matching DataTables settings objects. `null` or
 *   `undefined` is returned if no matching DataTable is found.
 * @ignore
 */
var _toSettings = function ( mixed )
{
	var idx, jq;
	var settings = DataTable.settings;
	var tables = _pluck(settings, 'nTable');

	if ( ! mixed ) {
		return [];
	}
	else if ( mixed.nTable && mixed.oFeatures ) {
		// DataTables settings object
		return [ mixed ];
	}
	else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
		// Table node
		idx = tables.indexOf(mixed);
		return idx !== -1 ? [ settings[idx] ] : null;
	}
	else if ( mixed && typeof mixed.settings === 'function' ) {
		return mixed.settings().toArray();
	}
	else if ( typeof mixed === 'string' ) {
		// jQuery selector
		jq = dataTables_$(mixed).get();
	}
	else if ( mixed instanceof dataTables_$ ) {
		// jQuery object (also DataTables instance)
		jq = mixed.get();
	}

	if ( jq ) {
		return settings.filter(function (v, idx) {
			return jq.includes(tables[idx]);
		});
	}
};


/**
 * DataTables API class - used to control and interface with  one or more
 * DataTables enhanced tables.
 *
 * The API class is heavily based on jQuery, presenting a chainable interface
 * that you can use to interact with tables. Each instance of the API class has
 * a "context" - i.e. the tables that it will operate on. This could be a single
 * table, all tables on a page or a sub-set thereof.
 *
 * Additionally the API is designed to allow you to easily work with the data in
 * the tables, retrieving and manipulating it as required. This is done by
 * presenting the API class as an array like interface. The contents of the
 * array depend upon the actions requested by each method (for example
 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
 * return an array of objects or arrays depending upon your table's
 * configuration). The API object has a number of array like methods (`push`,
 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
 * `unique` etc) to assist your working with the data held in a table.
 *
 * Most methods (those which return an Api instance) are chainable, which means
 * the return from a method call also has all of the methods available that the
 * top level object had. For example, these two calls are equivalent:
 *
 *     // Not chained
 *     api.row.add( {...} );
 *     api.draw();
 *
 *     // Chained
 *     api.row.add( {...} ).draw();
 *
 * @class DataTable.Api
 * @param {array|object|string|jQuery} context DataTable identifier. This is
 *   used to define which DataTables enhanced tables this API will operate on.
 *   Can be one of:
 *
 *   * `string` - jQuery selector. Any DataTables' matching the given selector
 *     with be found and used.
 *   * `node` - `TABLE` node which has already been formed into a DataTable.
 *   * `jQuery` - A jQuery object of `TABLE` nodes.
 *   * `object` - DataTables settings object
 * @param {array} [data] Data to initialise the Api instance with.
 *
 * @example
 *   // Direct initialisation during DataTables construction
 *   var api = $('#example').DataTable();
 *
 * @example
 *   // Initialisation using a DataTables jQuery object
 *   var api = $('#example').dataTable().api();
 *
 * @example
 *   // Initialisation as a constructor
 *   var api = new DataTable.Api( 'table.dataTable' );
 */
_Api = function ( context, data )
{
	if ( ! (this instanceof _Api) ) {
		return new _Api( context, data );
	}

	var settings = [];
	var ctxSettings = function ( o ) {
		var a = _toSettings( o );
		if ( a ) {
			settings.push.apply( settings, a );
		}
	};

	if ( Array.isArray( context ) ) {
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			ctxSettings( context[i] );
		}
	}
	else {
		ctxSettings( context );
	}

	// Remove duplicates
	this.context = settings.length > 1
		? _unique( settings )
		: settings;

	// Initial data
	if ( data ) {
		this.push.apply(this, data);
	}

	// selector
	this.selector = {
		rows: null,
		cols: null,
		opts: null
	};

	_Api.extend( this, this, __apiStruct );
};

DataTable.Api = _Api;

// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
// isPlainObject.
dataTables_$.extend( _Api.prototype, {
	any: function ()
	{
		return this.count() !== 0;
	},

	context: [], // array of table settings objects

	count: function ()
	{
		return this.flatten().length;
	},

	each: function ( fn )
	{
		for ( var i=0, ien=this.length ; i<ien; i++ ) {
			fn.call( this, this[i], i, this );
		}

		return this;
	},

	eq: function ( idx )
	{
		var ctx = this.context;

		return ctx.length > idx ?
			new _Api( ctx[idx], this[idx] ) :
			null;
	},

	filter: function ( fn )
	{
		var a = __arrayProto.filter.call( this, fn, this );

		return new _Api( this.context, a );
	},

	flatten: function ()
	{
		var a = [];

		return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
	},

	get: function ( idx )
	{
		return this[ idx ];
	},

	join:    __arrayProto.join,

	includes: function ( find ) {
		return this.indexOf( find ) === -1 ? false : true;
	},

	indexOf: __arrayProto.indexOf,

	iterator: function ( flatten, type, fn, alwaysNew ) {
		var
			a = [], ret,
			i, ien, j, jen,
			context = this.context,
			rows, items, item,
			selector = this.selector;

		// Argument shifting
		if ( typeof flatten === 'string' ) {
			alwaysNew = fn;
			fn = type;
			type = flatten;
			flatten = false;
		}

		for ( i=0, ien=context.length ; i<ien ; i++ ) {
			var apiInst = new _Api( context[i] );

			if ( type === 'table' ) {
				ret = fn.call( apiInst, context[i], i );

				if ( ret !== undefined ) {
					a.push( ret );
				}
			}
			else if ( type === 'columns' || type === 'rows' ) {
				// this has same length as context - one entry for each table
				ret = fn.call( apiInst, context[i], this[i], i );

				if ( ret !== undefined ) {
					a.push( ret );
				}
			}
			else if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
				// columns and rows share the same structure.
				// 'this' is an array of column indexes for each context
				items = this[i];

				if ( type === 'column-rows' ) {
					rows = _selector_row_indexes( context[i], selector.opts );
				}

				for ( j=0, jen=items.length ; j<jen ; j++ ) {
					item = items[j];

					if ( type === 'cell' ) {
						ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
					}
					else {
						ret = fn.call( apiInst, context[i], item, i, j, rows );
					}

					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
			}
		}

		if ( a.length || alwaysNew ) {
			var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
			var apiSelector = api.selector;
			apiSelector.rows = selector.rows;
			apiSelector.cols = selector.cols;
			apiSelector.opts = selector.opts;
			return api;
		}
		return this;
	},

	lastIndexOf: __arrayProto.lastIndexOf,

	length:  0,

	map: function ( fn )
	{
		var a = __arrayProto.map.call( this, fn, this );

		return new _Api( this.context, a );
	},

	pluck: function ( prop )
	{
		var fn = DataTable.util.get(prop);

		return this.map( function ( el ) {
			return fn(el);
		} );
	},

	pop:     __arrayProto.pop,

	push:    __arrayProto.push,

	reduce: __arrayProto.reduce,

	reduceRight: __arrayProto.reduceRight,

	reverse: __arrayProto.reverse,

	// Object with rows, columns and opts
	selector: null,

	shift:   __arrayProto.shift,

	slice: function () {
		return new _Api( this.context, this );
	},

	sort:    __arrayProto.sort,

	splice:  __arrayProto.splice,

	toArray: function ()
	{
		return __arrayProto.slice.call( this );
	},

	to$: function ()
	{
		return dataTables_$( this );
	},

	toJQuery: function ()
	{
		return dataTables_$( this );
	},

	unique: function ()
	{
		return new _Api( this.context, _unique(this.toArray()) );
	},

	unshift: __arrayProto.unshift
} );


function _api_scope( scope, fn, struc ) {
	return function () {
		var ret = fn.apply( scope || this, arguments );

		// Method extension
		_Api.extend( ret, ret, struc.methodExt );
		return ret;
	};
}

function _api_find( src, name ) {
	for ( var i=0, ien=src.length ; i<ien ; i++ ) {
		if ( src[i].name === name ) {
			return src[i];
		}
	}
	return null;
}

window.__apiStruct = __apiStruct;

_Api.extend = function ( scope, obj, ext )
{
	// Only extend API instances and static properties of the API
	if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
		return;
	}

	var
		i, ien,
		struct;

	for ( i=0, ien=ext.length ; i<ien ; i++ ) {
		struct = ext[i];

		if (struct.name === '__proto__') {
			continue;
		}

		// Value
		obj[ struct.name ] = struct.type === 'function' ?
			_api_scope( scope, struct.val, struct ) :
			struct.type === 'object' ?
				{} :
				struct.val;

		obj[ struct.name ].__dt_wrapper = true;

		// Property extension
		_Api.extend( scope, obj[ struct.name ], struct.propExt );
	}
};

//     [
//       {
//         name:      'data'                -- string   - Property name
//         val:       function () {},       -- function - Api method (or undefined if just an object
//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
//       },
//       {
//         name:     'row'
//         val:       {},
//         methodExt: [ ... ],
//         propExt:   [
//           {
//             name:      'data'
//             val:       function () {},
//             methodExt: [ ... ],
//             propExt:   [ ... ]
//           },
//           ...
//         ]
//       }
//     ]


_Api.register = _api_register = function ( name, val )
{
	if ( Array.isArray( name ) ) {
		for ( var j=0, jen=name.length ; j<jen ; j++ ) {
			_Api.register( name[j], val );
		}
		return;
	}

	var
		i, ien,
		heir = name.split('.'),
		struct = __apiStruct,
		key, method;

	for ( i=0, ien=heir.length ; i<ien ; i++ ) {
		method = heir[i].indexOf('()') !== -1;
		key = method ?
			heir[i].replace('()', '') :
			heir[i];

		var src = _api_find( struct, key );
		if ( ! src ) {
			src = {
				name:      key,
				val:       {},
				methodExt: [],
				propExt:   [],
				type:      'object'
			};
			struct.push( src );
		}

		if ( i === ien-1 ) {
			src.val = val;
			src.type = typeof val === 'function' ?
				'function' :
				dataTables_$.isPlainObject( val ) ?
					'object' :
					'other';
		}
		else {
			struct = method ?
				src.methodExt :
				src.propExt;
		}
	}
};

_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
	_Api.register( pluralName, val );

	_Api.register( singularName, function () {
		var ret = val.apply( this, arguments );

		if ( ret === this ) {
			// Returned item is the API instance that was passed in, return it
			return this;
		}
		else if ( ret instanceof _Api ) {
			// New API instance returned, want the value from the first item
			// in the returned array for the singular result.
			return ret.length ?
				Array.isArray( ret[0] ) ?
					new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
					ret[0] :
				undefined;
		}

		// Non-API return - just fire it back
		return ret;
	} );
};


/**
 * Selector for HTML tables. Apply the given selector to the give array of
 * DataTables settings objects.
 *
 * @param {string|integer} [selector] jQuery selector string or integer
 * @param  {array} Array of DataTables settings objects to be filtered
 * @return {array}
 * @ignore
 */
var __table_selector = function ( selector, a )
{
	if ( Array.isArray(selector) ) {
		var result = [];

		selector.forEach(function (sel) {
			var inner = __table_selector(sel, a);

			result.push.apply(result, inner);
		});

		return result.filter( function (item) {
			return item;
		});
	}

	// Integer is used to pick out a table by index
	if ( typeof selector === 'number' ) {
		return [ a[ selector ] ];
	}

	// Perform a jQuery selector on the table nodes
	var nodes = a.map( function (el) {
		return el.nTable;
	} );

	return dataTables_$(nodes)
		.filter( selector )
		.map( function () {
			// Need to translate back from the table node to the settings
			var idx = nodes.indexOf(this);
			return a[ idx ];
		} )
		.toArray();
};



/**
 * Context selector for the API's context (i.e. the tables the API instance
 * refers to.
 *
 * @name    DataTable.Api#tables
 * @param {string|integer} [selector] Selector to pick which tables the iterator
 *   should operate on. If not given, all tables in the current context are
 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
 *   select multiple tables or as an integer to select a single table.
 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
 */
_api_register( 'tables()', function ( selector ) {
	// A new instance is created if there was a selector specified
	return selector !== undefined && selector !== null ?
		new _Api( __table_selector( selector, this.context ) ) :
		this;
} );


_api_register( 'table()', function ( selector ) {
	var tables = this.tables( selector );
	var ctx = tables.context;

	// Truncate to the first matched table
	return ctx.length ?
		new _Api( ctx[0] ) :
		tables;
} );

// Common methods, combined to reduce size
[
	['nodes', 'node', 'nTable'],
	['body', 'body', 'nTBody'],
	['header', 'header', 'nTHead'],
	['footer', 'footer', 'nTFoot'],
].forEach(function (item) {
	_api_registerPlural(
		'tables().' + item[0] + '()',
		'table().' + item[1] + '()' ,
		function () {
			return this.iterator( 'table', function ( ctx ) {
				return ctx[item[2]];
			}, 1 );
		}
	);
});

// Structure methods
[
	['header', 'aoHeader'],
	['footer', 'aoFooter'],
].forEach(function (item) {
	_api_register( 'table().' + item[0] + '.structure()' , function (selector) {
		var indexes = this.columns(selector).indexes().flatten();
		var ctx = this.context[0];
		
		return _fnHeaderLayout(ctx, ctx[item[1]], indexes);
	} );
})


_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
	return this.iterator( 'table', function ( ctx ) {
		return ctx.nTableWrapper;
	}, 1 );
} );

_api_register( 'tables().every()', function ( fn ) {
	var that = this;

	return this.iterator('table', function (s, i) {
		fn.call(that.table(i), i);
	});
});

_api_register( 'caption()', function ( value, side ) {
	var context = this.context;

	// Getter - return existing node's content
	if ( value === undefined ) {
		var caption = context[0].captionNode;

		return caption && context.length ?
			caption.innerHTML : 
			null;
	}

	return this.iterator( 'table', function ( ctx ) {
		var table = dataTables_$(ctx.nTable);
		var caption = dataTables_$(ctx.captionNode);
		var container = dataTables_$(ctx.nTableWrapper);

		// Create the node if it doesn't exist yet
		if ( ! caption.length ) {
			caption = dataTables_$('<caption/>').html( value );
			ctx.captionNode = caption[0];

			// If side isn't set, we need to insert into the document to let the
			// CSS decide so we can read it back, otherwise there is no way to
			// know if the CSS would put it top or bottom for scrolling
			if (! side) {
				table.prepend(caption);

				side = caption.css('caption-side');
			}
		}

		caption.html( value );

		if ( side ) {
			caption.css( 'caption-side', side );
			caption[0]._captionSide = side;
		}

		if (container.find('div.dataTables_scroll').length) {
			var selector = (side === 'top' ? 'Head' : 'Foot');

			container.find('div.dataTables_scroll'+ selector +' table').prepend(caption);
		}
		else {
			table.prepend(caption);
		}
	}, 1 );
} );

_api_register( 'caption.node()', function () {
	var ctx = this.context;

	return ctx.length ? ctx[0].captionNode : null;
} );


/**
 * Redraw the tables in the current context.
 */
_api_register( 'draw()', function ( paging ) {
	return this.iterator( 'table', function ( settings ) {
		if ( paging === 'page' ) {
			_fnDraw( settings );
		}
		else {
			if ( typeof paging === 'string' ) {
				paging = paging === 'full-hold' ?
					false :
					true;
			}

			_fnReDraw( settings, paging===false );
		}
	} );
} );



/**
 * Get the current page index.
 *
 * @return {integer} Current page index (zero based)
 *//**
 * Set the current page.
 *
 * Note that if you attempt to show a page which does not exist, DataTables will
 * not throw an error, but rather reset the paging.
 *
 * @param {integer|string} action The paging action to take. This can be one of:
 *  * `integer` - The page index to jump to
 *  * `string` - An action to take:
 *    * `first` - Jump to first page.
 *    * `next` - Jump to the next page
 *    * `previous` - Jump to previous page
 *    * `last` - Jump to the last page.
 * @returns {DataTables.Api} this
 */
_api_register( 'page()', function ( action ) {
	if ( action === undefined ) {
		return this.page.info().page; // not an expensive call
	}

	// else, have an action to take on all tables
	return this.iterator( 'table', function ( settings ) {
		_fnPageChange( settings, action );
	} );
} );


/**
 * Paging information for the first table in the current context.
 *
 * If you require paging information for another table, use the `table()` method
 * with a suitable selector.
 *
 * @return {object} Object with the following properties set:
 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
 *  * `pages` - Total number of pages
 *  * `start` - Display index for the first record shown on the current page
 *  * `end` - Display index for the last record shown on the current page
 *  * `length` - Display length (number of records). Note that generally `start
 *    + length = end`, but this is not always true, for example if there are
 *    only 2 records to show on the final page, with a length of 10.
 *  * `recordsTotal` - Full data set length
 *  * `recordsDisplay` - Data set length once the current filtering criterion
 *    are applied.
 */
_api_register( 'page.info()', function () {
	if ( this.context.length === 0 ) {
		return undefined;
	}

	var
		settings   = this.context[0],
		start      = settings._iDisplayStart,
		len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
		visRecords = settings.fnRecordsDisplay(),
		all        = len === -1;

	return {
		"page":           all ? 0 : Math.floor( start / len ),
		"pages":          all ? 1 : Math.ceil( visRecords / len ),
		"start":          start,
		"end":            settings.fnDisplayEnd(),
		"length":         len,
		"recordsTotal":   settings.fnRecordsTotal(),
		"recordsDisplay": visRecords,
		"serverSide":     _fnDataSource( settings ) === 'ssp'
	};
} );


/**
 * Get the current page length.
 *
 * @return {integer} Current page length. Note `-1` indicates that all records
 *   are to be shown.
 *//**
 * Set the current page length.
 *
 * @param {integer} Page length to set. Use `-1` to show all records.
 * @returns {DataTables.Api} this
 */
_api_register( 'page.len()', function ( len ) {
	// Note that we can't call this function 'length()' because `length`
	// is a Javascript property of functions which defines how many arguments
	// the function expects.
	if ( len === undefined ) {
		return this.context.length !== 0 ?
			this.context[0]._iDisplayLength :
			undefined;
	}

	// else, set the page length
	return this.iterator( 'table', function ( settings ) {
		_fnLengthChange( settings, len );
	} );
} );



var __reload = function ( settings, holdPosition, callback ) {
	// Use the draw event to trigger a callback
	if ( callback ) {
		var api = new _Api( settings );

		api.one( 'draw', function () {
			callback( api.ajax.json() );
		} );
	}

	if ( _fnDataSource( settings ) == 'ssp' ) {
		_fnReDraw( settings, holdPosition );
	}
	else {
		_fnProcessingDisplay( settings, true );

		// Cancel an existing request
		var xhr = settings.jqXHR;
		if ( xhr && xhr.readyState !== 4 ) {
			xhr.abort();
		}

		// Trigger xhr
		_fnBuildAjax( settings, {}, function( json ) {
			_fnClearTable( settings );

			var data = _fnAjaxDataSrc( settings, json );
			for ( var i=0, ien=data.length ; i<ien ; i++ ) {
				_fnAddData( settings, data[i] );
			}

			_fnReDraw( settings, holdPosition );
			_fnInitComplete( settings );
			_fnProcessingDisplay( settings, false );
		} );
	}
};


/**
 * Get the JSON response from the last Ajax request that DataTables made to the
 * server. Note that this returns the JSON from the first table in the current
 * context.
 *
 * @return {object} JSON received from the server.
 */
_api_register( 'ajax.json()', function () {
	var ctx = this.context;

	if ( ctx.length > 0 ) {
		return ctx[0].json;
	}

	// else return undefined;
} );


/**
 * Get the data submitted in the last Ajax request
 */
_api_register( 'ajax.params()', function () {
	var ctx = this.context;

	if ( ctx.length > 0 ) {
		return ctx[0].oAjaxData;
	}

	// else return undefined;
} );


/**
 * Reload tables from the Ajax data source. Note that this function will
 * automatically re-draw the table when the remote data has been loaded.
 *
 * @param {boolean} [reset=true] Reset (default) or hold the current paging
 *   position. A full re-sort and re-filter is performed when this method is
 *   called, which is why the pagination reset is the default action.
 * @returns {DataTables.Api} this
 */
_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
	return this.iterator( 'table', function (settings) {
		__reload( settings, resetPaging===false, callback );
	} );
} );


/**
 * Get the current Ajax URL. Note that this returns the URL from the first
 * table in the current context.
 *
 * @return {string} Current Ajax source URL
 *//**
 * Set the Ajax URL. Note that this will set the URL for all tables in the
 * current context.
 *
 * @param {string} url URL to set.
 * @returns {DataTables.Api} this
 */
_api_register( 'ajax.url()', function ( url ) {
	var ctx = this.context;

	if ( url === undefined ) {
		// get
		if ( ctx.length === 0 ) {
			return undefined;
		}
		ctx = ctx[0];

		return dataTables_$.isPlainObject( ctx.ajax ) ?
			ctx.ajax.url :
			ctx.ajax;
	}

	// set
	return this.iterator( 'table', function ( settings ) {
		if ( dataTables_$.isPlainObject( settings.ajax ) ) {
			settings.ajax.url = url;
		}
		else {
			settings.ajax = url;
		}
	} );
} );


/**
 * Load data from the newly set Ajax URL. Note that this method is only
 * available when `ajax.url()` is used to set a URL. Additionally, this method
 * has the same effect as calling `ajax.reload()` but is provided for
 * convenience when setting a new URL. Like `ajax.reload()` it will
 * automatically redraw the table once the remote data has been loaded.
 *
 * @returns {DataTables.Api} this
 */
_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
	// Same as a reload, but makes sense to present it for easy access after a
	// url change
	return this.iterator( 'table', function ( ctx ) {
		__reload( ctx, resetPaging===false, callback );
	} );
} );




var _selector_run = function ( type, selector, selectFn, settings, opts )
{
	var
		out = [], res,
		a, i, ien, j, jen,
		selectorType = typeof selector;

	// Can't just check for isArray here, as an API or jQuery instance might be
	// given with their array like look
	if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
		selector = [ selector ];
	}

	for ( i=0, ien=selector.length ; i<ien ; i++ ) {
		// Only split on simple strings - complex expressions will be jQuery selectors
		a = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?
			selector[i].split(',') :
			[ selector[i] ];

		for ( j=0, jen=a.length ; j<jen ; j++ ) {
			res = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );

			// Remove empty items
			res = res.filter( function (item) {
				return item !== null && item !== undefined;
			});

			if ( res && res.length ) {
				out = out.concat( res );
			}
		}
	}

	// selector extensions
	var ext = _ext.selector[ type ];
	if ( ext.length ) {
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			out = ext[i]( settings, opts, out );
		}
	}

	return _unique( out );
};


var _selector_opts = function ( opts )
{
	if ( ! opts ) {
		opts = {};
	}

	// Backwards compatibility for 1.9- which used the terminology filter rather
	// than search
	if ( opts.filter && opts.search === undefined ) {
		opts.search = opts.filter;
	}

	return dataTables_$.extend( {
		search: 'none',
		order: 'current',
		page: 'all'
	}, opts );
};


// Reduce the API instance to the first item found
var _selector_first = function ( old )
{
	let inst = new _Api(old.context[0]);

	// Use a push rather than passing to the constructor, since it will
	// merge arrays down automatically, which isn't what is wanted here
	if (old.length) {
		inst.push( old[0] );
	}

	inst.selector = old.selector;

	// Limit to a single row / column / cell
	if (inst.length && inst[0].length > 1) {
		inst[0].splice(1);
	}

	return inst;
};


var _selector_row_indexes = function ( settings, opts )
{
	var
		i, ien, tmp, a=[],
		displayFiltered = settings.aiDisplay,
		displayMaster = settings.aiDisplayMaster;

	var
		search = opts.search,  // none, applied, removed
		order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
		page   = opts.page;    // all, current

	if ( page == 'current' ) {
		// Current page implies that order=current and filter=applied, since it is
		// fairly senseless otherwise, regardless of what order and search actually
		// are
		for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
			a.push( displayFiltered[i] );
		}
	}
	else if ( order == 'current' || order == 'applied' ) {
		if ( search == 'none') {
			a = displayMaster.slice();
		}
		else if ( search == 'applied' ) {
			a = displayFiltered.slice();
		}
		else if ( search == 'removed' ) {
			// O(n+m) solution by creating a hash map
			var displayFilteredMap = {};

			for ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {
				displayFilteredMap[displayFiltered[i]] = null;
			}

			displayMaster.forEach(function (item) {
				if (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {
					a.push(item);
				}
			});
		}
	}
	else if ( order == 'index' || order == 'original' ) {
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			if (! settings.aoData[i]) {
				continue;
			}

			if ( search == 'none' ) {
				a.push( i );
			}
			else { // applied | removed
				tmp = displayFiltered.indexOf(i);

				if ((tmp === -1 && search == 'removed') ||
					(tmp >= 0   && search == 'applied') )
				{
					a.push( i );
				}
			}
		}
	}
	else if ( typeof order === 'number' ) {
		// Order the rows by the given column
		var ordered = _fnSort(settings, order, 'asc');

		if (search === 'none') {
			a = ordered;
		}
		else { // applied | removed
			for (i=0; i<ordered.length; i++) {
				tmp = displayFiltered.indexOf(ordered[i]);

				if ((tmp === -1 && search == 'removed') ||
					(tmp >= 0   && search == 'applied') )
				{
					a.push( ordered[i] );
				}
			}
		}
	}

	return a;
};


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Rows
 *
 * {}          - no selector - use all available rows
 * {integer}   - row aoData index
 * {node}      - TR node
 * {string}    - jQuery selector to apply to the TR elements
 * {array}     - jQuery array of nodes, or simply an array of TR nodes
 *
 */
var __row_selector = function ( settings, selector, opts )
{
	var rows;
	var run = function ( sel ) {
		var selInt = _intVal( sel );
		var aoData = settings.aoData;

		// Short cut - selector is a number and no options provided (default is
		// all records, so no need to check if the index is in there, since it
		// must be - dev error if the index doesn't exist).
		if ( selInt !== null && ! opts ) {
			return [ selInt ];
		}

		if ( ! rows ) {
			rows = _selector_row_indexes( settings, opts );
		}

		if ( selInt !== null && rows.indexOf(selInt) !== -1 ) {
			// Selector - integer
			return [ selInt ];
		}
		else if ( sel === null || sel === undefined || sel === '' ) {
			// Selector - none
			return rows;
		}

		// Selector - function
		if ( typeof sel === 'function' ) {
			return rows.map( function (idx) {
				var row = aoData[ idx ];
				return sel( idx, row._aData, row.nTr ) ? idx : null;
			} );
		}

		// Selector - node
		if ( sel.nodeName ) {
			var rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup
			var cellIdx = sel._DT_CellIndex;

			if ( rowIdx !== undefined ) {
				// Make sure that the row is actually still present in the table
				return aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?
					[ rowIdx ] :
					[];
			}
			else if ( cellIdx ) {
				return aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?
					[ cellIdx.row ] :
					[];
			}
			else {
				var host = dataTables_$(sel).closest('*[data-dt-row]');
				return host.length ?
					[ host.data('dt-row') ] :
					[];
			}
		}

		// ID selector. Want to always be able to select rows by id, regardless
		// of if the tr element has been created or not, so can't rely upon
		// jQuery here - hence a custom implementation. This does not match
		// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
		// but to select it using a CSS selector engine (like Sizzle or
		// querySelect) it would need to need to be escaped for some characters.
		// DataTables simplifies this for row selectors since you can select
		// only a row. A # indicates an id any anything that follows is the id -
		// unescaped.
		if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
			// get row index from id
			var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
			if ( rowObj !== undefined ) {
				return [ rowObj.idx ];
			}

			// need to fall through to jQuery in case there is DOM id that
			// matches
		}
		
		// Get nodes in the order from the `rows` array with null values removed
		var nodes = _removeEmpty(
			_pluck_order( settings.aoData, rows, 'nTr' )
		);

		// Selector - jQuery selector string, array of nodes or jQuery object/
		// As jQuery's .filter() allows jQuery objects to be passed in filter,
		// it also allows arrays, so this will cope with all three options
		return dataTables_$(nodes)
			.filter( sel )
			.map( function () {
				return this._DT_RowIndex;
			} )
			.toArray();
	};

	var matched = _selector_run( 'row', selector, run, settings, opts );

	if (opts.order === 'current' || opts.order === 'applied') {
		_fnSortDisplay(settings, matched);
	}

	return matched;
};


_api_register( 'rows()', function ( selector, opts ) {
	// argument shifting
	if ( selector === undefined ) {
		selector = '';
	}
	else if ( dataTables_$.isPlainObject( selector ) ) {
		opts = selector;
		selector = '';
	}

	opts = _selector_opts( opts );

	var inst = this.iterator( 'table', function ( settings ) {
		return __row_selector( settings, selector, opts );
	}, 1 );

	// Want argument shifting here and in __row_selector?
	inst.selector.rows = selector;
	inst.selector.opts = opts;

	return inst;
} );

_api_register( 'rows().nodes()', function () {
	return this.iterator( 'row', function ( settings, row ) {
		return settings.aoData[ row ].nTr || undefined;
	}, 1 );
} );

_api_register( 'rows().data()', function () {
	return this.iterator( true, 'rows', function ( settings, rows ) {
		return _pluck_order( settings.aoData, rows, '_aData' );
	}, 1 );
} );

_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
	return this.iterator( 'row', function ( settings, row ) {
		var r = settings.aoData[ row ];
		return type === 'search' ? r._aFilterData : r._aSortData;
	}, 1 );
} );

_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
	return this.iterator( 'row', function ( settings, row ) {
		_fnInvalidate( settings, row, src );
	} );
} );

_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
	return this.iterator( 'row', function ( settings, row ) {
		return row;
	}, 1 );
} );

_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
	var a = [];
	var context = this.context;

	// `iterator` will drop undefined values, but in this case we want them
	for ( var i=0, ien=context.length ; i<ien ; i++ ) {
		for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
			var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
			a.push( (hash === true ? '#' : '' )+ id );
		}
	}

	return new _Api( context, a );
} );

_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
	this.iterator( 'row', function ( settings, row ) {
		var data = settings.aoData;
		var rowData = data[ row ];

		// Delete from the display arrays
		var idx = settings.aiDisplayMaster.indexOf(row);
		if (idx !== -1) {
			settings.aiDisplayMaster.splice(idx, 1);
		}

		// For server-side processing tables - subtract the deleted row from the count
		if ( settings._iRecordsDisplay > 0 ) {
			settings._iRecordsDisplay--;
		}

		// Check for an 'overflow' they case for displaying the table
		_fnLengthOverflow( settings );

		// Remove the row's ID reference if there is one
		var id = settings.rowIdFn( rowData._aData );
		if ( id !== undefined ) {
			delete settings.aIds[ id ];
		}

		data[row] = null;
	} );

	return this;
} );


_api_register( 'rows.add()', function ( rows ) {
	var newRows = this.iterator( 'table', function ( settings ) {
			var row, i, ien;
			var out = [];

			for ( i=0, ien=rows.length ; i<ien ; i++ ) {
				row = rows[i];

				if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
					out.push( _fnAddTr( settings, row )[0] );
				}
				else {
					out.push( _fnAddData( settings, row ) );
				}
			}

			return out;
		}, 1 );

	// Return an Api.rows() extended instance, so rows().nodes() etc can be used
	var modRows = this.rows( -1 );
	modRows.pop();
	modRows.push.apply(modRows, newRows);

	return modRows;
} );





/**
 *
 */
_api_register( 'row()', function ( selector, opts ) {
	return _selector_first( this.rows( selector, opts ) );
} );


_api_register( 'row().data()', function ( data ) {
	var ctx = this.context;

	if ( data === undefined ) {
		// Get
		return ctx.length && this.length && this[0].length ?
			ctx[0].aoData[ this[0] ]._aData :
			undefined;
	}

	// Set
	var row = ctx[0].aoData[ this[0] ];
	row._aData = data;

	// If the DOM has an id, and the data source is an array
	if ( Array.isArray( data ) && row.nTr && row.nTr.id ) {
		_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );
	}

	// Automatically invalidate
	_fnInvalidate( ctx[0], this[0], 'data' );

	return this;
} );


_api_register( 'row().node()', function () {
	var ctx = this.context;

	return ctx.length && this.length && this[0].length ?
		ctx[0].aoData[ this[0] ].nTr || null :
		null;
} );


_api_register( 'row.add()', function ( row ) {
	// Allow a jQuery object to be passed in - only a single row is added from
	// it though - the first element in the set
	if ( row instanceof dataTables_$ && row.length ) {
		row = row[0];
	}

	var rows = this.iterator( 'table', function ( settings ) {
		if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
			return _fnAddTr( settings, row )[0];
		}
		return _fnAddData( settings, row );
	} );

	// Return an Api.rows() extended instance, with the newly added row selected
	return this.row( rows[0] );
} );


dataTables_$(document).on('plugin-init.dt', function (e, context) {
	var api = new _Api( context );

	api.on( 'stateSaveParams.DT', function ( e, settings, d ) {
		// This could be more compact with the API, but it is a lot faster as a simple
		// internal loop
		var idFn = settings.rowIdFn;
		var rows = settings.aiDisplayMaster;
		var ids = [];

		for (var i=0 ; i<rows.length ; i++) {
			var rowIdx = rows[i];
			var data = settings.aoData[rowIdx];

			if (data._detailsShow) {
				ids.push( '#' + idFn(data._aData) );
			}
		}

		d.childRows = ids;
	});

	// For future state loads (e.g. with StateRestore)
	api.on( 'stateLoaded.DT', function (e, settings, state) {
		__details_state_load( api, state );
	});

	// And the initial load state
	__details_state_load( api, api.state.loaded() );
});

var __details_state_load = function (api, state)
{
	if ( state && state.childRows ) {
		api
			.rows( state.childRows.map(function (id) {
				// Escape any `:` characters from the row id, unless previously escaped
				return id.replace(/(?<!\\):/g, '\\:');
			}) )
			.every( function () {
				_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )
			});
	}
}

var __details_add = function ( ctx, row, data, klass )
{
	// Convert to array of TR elements
	var rows = [];
	var addRow = function ( r, k ) {
		// Recursion to allow for arrays of jQuery objects
		if ( Array.isArray( r ) || r instanceof dataTables_$ ) {
			for ( var i=0, ien=r.length ; i<ien ; i++ ) {
				addRow( r[i], k );
			}
			return;
		}

		// If we get a TR element, then just add it directly - up to the dev
		// to add the correct number of columns etc
		if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
			r.setAttribute( 'data-dt-row', row.idx );
			rows.push( r );
		}
		else {
			// Otherwise create a row with a wrapper
			var created = dataTables_$('<tr><td></td></tr>')
				.attr( 'data-dt-row', row.idx )
				.addClass( k );
			
			dataTables_$('td', created)
				.addClass( k )
				.html( r )[0].colSpan = _fnVisbleColumns( ctx );

			rows.push( created[0] );
		}
	};

	addRow( data, klass );

	if ( row._details ) {
		row._details.detach();
	}

	row._details = dataTables_$(rows);

	// If the children were already shown, that state should be retained
	if ( row._detailsShow ) {
		row._details.insertAfter( row.nTr );
	}
};


// Make state saving of child row details async to allow them to be batch processed
var __details_state = DataTable.util.throttle(
	function (ctx) {
		_fnSaveState( ctx[0] )
	},
	500
);


var __details_remove = function ( api, idx )
{
	var ctx = api.context;

	if ( ctx.length ) {
		var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];

		if ( row && row._details ) {
			row._details.remove();

			row._detailsShow = undefined;
			row._details = undefined;
			dataTables_$( row.nTr ).removeClass( 'dt-hasChild' );
			__details_state( ctx );
		}
	}
};


var __details_display = function ( api, show ) {
	var ctx = api.context;

	if ( ctx.length && api.length ) {
		var row = ctx[0].aoData[ api[0] ];

		if ( row._details ) {
			row._detailsShow = show;

			if ( show ) {
				row._details.insertAfter( row.nTr );
				dataTables_$( row.nTr ).addClass( 'dt-hasChild' );
			}
			else {
				row._details.detach();
				dataTables_$( row.nTr ).removeClass( 'dt-hasChild' );
			}

			_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )

			__details_events( ctx[0] );
			__details_state( ctx );
		}
	}
};


var __details_events = function ( settings )
{
	var api = new _Api( settings );
	var namespace = '.dt.DT_details';
	var drawEvent = 'draw'+namespace;
	var colvisEvent = 'column-sizing'+namespace;
	var destroyEvent = 'destroy'+namespace;
	var data = settings.aoData;

	api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );

	if ( _pluck( data, '_details' ).length > 0 ) {
		// On each draw, insert the required elements into the document
		api.on( drawEvent, function ( e, ctx ) {
			if ( settings !== ctx ) {
				return;
			}

			api.rows( {page:'current'} ).eq(0).each( function (idx) {
				// Internal data grab
				var row = data[ idx ];

				if ( row._detailsShow ) {
					row._details.insertAfter( row.nTr );
				}
			} );
		} );

		// Column visibility change - update the colspan
		api.on( colvisEvent, function ( e, ctx ) {
			if ( settings !== ctx ) {
				return;
			}

			// Update the colspan for the details rows (note, only if it already has
			// a colspan)
			var row, visible = _fnVisbleColumns( ctx );

			for ( var i=0, ien=data.length ; i<ien ; i++ ) {
				row = data[i];

				if ( row && row._details ) {
					row._details.each(function () {
						var el = dataTables_$(this).children('td');

						if (el.length == 1) {
							el.attr('colspan', visible);
						}
					});
				}
			}
		} );

		// Table destroyed - nuke any child rows
		api.on( destroyEvent, function ( e, ctx ) {
			if ( settings !== ctx ) {
				return;
			}

			for ( var i=0, ien=data.length ; i<ien ; i++ ) {
				if ( data[i] && data[i]._details ) {
					__details_remove( api, i );
				}
			}
		} );
	}
};

// Strings for the method names to help minification
var _emp = '';
var _child_obj = _emp+'row().child';
var _child_mth = _child_obj+'()';

// data can be:
//  tr
//  string
//  jQuery or array of any of the above
_api_register( _child_mth, function ( data, klass ) {
	var ctx = this.context;

	if ( data === undefined ) {
		// get
		return ctx.length && this.length && ctx[0].aoData[ this[0] ]
			? ctx[0].aoData[ this[0] ]._details
			: undefined;
	}
	else if ( data === true ) {
		// show
		this.child.show();
	}
	else if ( data === false ) {
		// remove
		__details_remove( this );
	}
	else if ( ctx.length && this.length ) {
		// set
		__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
	}

	return this;
} );


_api_register( [
	_child_obj+'.show()',
	_child_mth+'.show()' // only when `child()` was called with parameters (without
], function () {         // it returns an object and this method is not executed)
	__details_display( this, true );
	return this;
} );


_api_register( [
	_child_obj+'.hide()',
	_child_mth+'.hide()' // only when `child()` was called with parameters (without
], function () {         // it returns an object and this method is not executed)
	__details_display( this, false );
	return this;
} );


_api_register( [
	_child_obj+'.remove()',
	_child_mth+'.remove()' // only when `child()` was called with parameters (without
], function () {           // it returns an object and this method is not executed)
	__details_remove( this );
	return this;
} );


_api_register( _child_obj+'.isShown()', function () {
	var ctx = this.context;

	if ( ctx.length && this.length ) {
		// _detailsShown as false or undefined will fall through to return false
		return ctx[0].aoData[ this[0] ]._detailsShow || false;
	}
	return false;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Columns
 *
 * {integer}           - column index (>=0 count from left, <0 count from right)
 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
 * "{string}:name"     - column name
 * "{string}"          - jQuery selector on column header nodes
 *
 */

// can be an array of these items, comma separated list, or an array of comma
// separated lists

var __re_column_selector = /^([^:]+):(name|title|visIdx|visible)$/;


// r1 and r2 are redundant - but it means that the parameters match for the
// iterator callback in columns().data()
var __columnData = function ( settings, column, r1, r2, rows, type ) {
	var a = [];
	for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
		a.push( _fnGetCellData( settings, rows[row], column, type ) );
	}
	return a;
};


var __column_header = function ( settings, column, row ) {
	var header = settings.aoHeader;
	var target = row !== undefined
		? row
		: settings.bSortCellsTop // legacy support
			? 0
			: header.length - 1;

	return header[target][column].cell;
};

var __column_selector = function ( settings, selector, opts )
{
	var
		columns = settings.aoColumns,
		names = _pluck( columns, 'sName' ),
		titles = _pluck( columns, 'sTitle' ),
		cells = DataTable.util.get('[].[].cell')(settings.aoHeader),
		nodes = _unique( _flatten([], cells) );
	
	var run = function ( s ) {
		var selInt = _intVal( s );

		// Selector - all
		if ( s === '' ) {
			return _range( columns.length );
		}

		// Selector - index
		if ( selInt !== null ) {
			return [ selInt >= 0 ?
				selInt : // Count from left
				columns.length + selInt // Count from right (+ because its a negative value)
			];
		}

		// Selector = function
		if ( typeof s === 'function' ) {
			var rows = _selector_row_indexes( settings, opts );

			return columns.map(function (col, idx) {
				return s(
						idx,
						__columnData( settings, idx, 0, 0, rows ),
						__column_header( settings, idx )
					) ? idx : null;
			});
		}

		// jQuery or string selector
		var match = typeof s === 'string' ?
			s.match( __re_column_selector ) :
			'';

		if ( match ) {
			switch( match[2] ) {
				case 'visIdx':
				case 'visible':
					var idx = parseInt( match[1], 10 );
					// Visible index given, convert to column index
					if ( idx < 0 ) {
						// Counting from the right
						var visColumns = columns.map( function (col,i) {
							return col.bVisible ? i : null;
						} );
						return [ visColumns[ visColumns.length + idx ] ];
					}
					// Counting from the left
					return [ _fnVisibleToColumnIndex( settings, idx ) ];

				case 'name':
					// match by name. `names` is column index complete and in order
					return names.map( function (name, i) {
						return name === match[1] ? i : null;
					} );

				case 'title':
					// match by column title
					return titles.map( function (title, i) {
						return title === match[1] ? i : null;
					} );

				default:
					return [];
			}
		}

		// Cell in the table body
		if ( s.nodeName && s._DT_CellIndex ) {
			return [ s._DT_CellIndex.column ];
		}

		// jQuery selector on the TH elements for the columns
		var jqResult = dataTables_$( nodes )
			.filter( s )
			.map( function () {
				return _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order
			} )
			.toArray();

		if ( jqResult.length || ! s.nodeName ) {
			return jqResult;
		}

		// Otherwise a node which might have a `dt-column` data attribute, or be
		// a child or such an element
		var host = dataTables_$(s).closest('*[data-dt-column]');
		return host.length ?
			[ host.data('dt-column') ] :
			[];
	};

	return _selector_run( 'column', selector, run, settings, opts );
};


var __setColumnVis = function ( settings, column, vis ) {
	var
		cols = settings.aoColumns,
		col  = cols[ column ],
		data = settings.aoData,
		cells, i, ien, tr;

	// Get
	if ( vis === undefined ) {
		return col.bVisible;
	}

	// Set
	// No change
	if ( col.bVisible === vis ) {
		return false;
	}

	if ( vis ) {
		// Insert column
		// Need to decide if we should use appendChild or insertBefore
		var insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);

		for ( i=0, ien=data.length ; i<ien ; i++ ) {
			if (data[i]) {
				tr = data[i].nTr;
				cells = data[i].anCells;

				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
	}
	else {
		// Remove column
		dataTables_$( _pluck( settings.aoData, 'anCells', column ) ).detach();
	}

	// Common actions
	col.bVisible = vis;

	_colGroup(settings);
	
	return true;
};


_api_register( 'columns()', function ( selector, opts ) {
	// argument shifting
	if ( selector === undefined ) {
		selector = '';
	}
	else if ( dataTables_$.isPlainObject( selector ) ) {
		opts = selector;
		selector = '';
	}

	opts = _selector_opts( opts );

	var inst = this.iterator( 'table', function ( settings ) {
		return __column_selector( settings, selector, opts );
	}, 1 );

	// Want argument shifting here and in _row_selector?
	inst.selector.cols = selector;
	inst.selector.opts = opts;

	return inst;
} );

_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {
	return this.iterator( 'column', function (settings, column) {
		return __column_header(settings, column, row);
	}, 1 );
} );

_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {
	return this.iterator( 'column', function ( settings, column ) {
		var footer = settings.aoFooter;

		if (! footer.length) {
			return null;
		}

		return settings.aoFooter[row !== undefined ? row : 0][column].cell;
	}, 1 );
} );

_api_registerPlural( 'columns().data()', 'column().data()', function () {
	return this.iterator( 'column-rows', __columnData, 1 );
} );

_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {
	return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
		return __columnData( settings, column, i, j, rows, type );
	}, 1 );
} );

_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
	return this.iterator( 'column', function ( settings, column ) {
		return settings.aoColumns[column].mData;
	}, 1 );
} );

_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
	return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
		return _pluck_order( settings.aoData, rows,
			type === 'search' ? '_aFilterData' : '_aSortData', column
		);
	}, 1 );
} );

_api_registerPlural( 'columns().init()', 'column().init()', function () {
	return this.iterator( 'column', function ( settings, column ) {
		return settings.aoColumns[column];
	}, 1 );
} );

_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
	return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
		return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
	}, 1 );
} );

_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {
	return this.iterator( 'column', function ( settings, column ) {
		// Argument shifting
		if (typeof title === 'number') {
			row = title;
			title = undefined;
		}

		var span = dataTables_$('span.dt-column-title', this.column(column).header(row));

		if (title !== undefined) {
			span.html(title);
			return this;
		}

		return span.html();
	}, 1 );
} );

_api_registerPlural( 'columns().types()', 'column().type()', function () {
	return this.iterator( 'column', function ( settings, column ) {
		var type = settings.aoColumns[column].sType;

		// If the type was invalidated, then resolve it. This actually does
		// all columns at the moment. Would only happen once if getting all
		// column's data types.
		if (! type) {
			_fnColumnTypes(settings);
		}

		return type;
	}, 1 );
} );

_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
	var that = this;
	var changed = [];
	var ret = this.iterator( 'column', function ( settings, column ) {
		if ( vis === undefined ) {
			return settings.aoColumns[ column ].bVisible;
		} // else
		
		if (__setColumnVis( settings, column, vis )) {
			changed.push(column);
		}
	} );

	// Group the column visibility changes
	if ( vis !== undefined ) {
		this.iterator( 'table', function ( settings ) {
			// Redraw the header after changes
			_fnDrawHead( settings, settings.aoHeader );
			_fnDrawHead( settings, settings.aoFooter );
	
			// Update colspan for no records display. Child rows and extensions will use their own
			// listeners to do this - only need to update the empty table item here
			if ( ! settings.aiDisplay.length ) {
				dataTables_$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));
			}
	
			_fnSaveState( settings );

			// Second loop once the first is done for events
			that.iterator( 'column', function ( settings, column ) {
				if (changed.includes(column)) {
					_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );
				}
			} );

			if ( changed.length && (calc === undefined || calc) ) {
				that.columns.adjust();
			}
		});
	}

	return ret;
} );

_api_registerPlural( 'columns().widths()', 'column().width()', function () {
	// Injects a fake row into the table for just a moment so the widths can
	// be read, regardless of colspan in the header and rows being present in
	// the body
	var columns = this.columns(':visible').count();
	var row = dataTables_$('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');

	dataTables_$(this.table().body()).append(row);

	var widths = row.children().map(function () {
		return dataTables_$(this).outerWidth();
	});

	row.remove();
	
	return this.iterator( 'column', function ( settings, column ) {
		var visIdx = _fnColumnIndexToVisible( settings, column );

		return visIdx !== null ? widths[visIdx] : 0;
	}, 1);
} );

_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
	return this.iterator( 'column', function ( settings, column ) {
		return type === 'visible' ?
			_fnColumnIndexToVisible( settings, column ) :
			column;
	}, 1 );
} );

_api_register( 'columns.adjust()', function () {
	return this.iterator( 'table', function ( settings ) {
		_fnAdjustColumnSizing( settings );
	}, 1 );
} );

_api_register( 'column.index()', function ( type, idx ) {
	if ( this.context.length !== 0 ) {
		var ctx = this.context[0];

		if ( type === 'fromVisible' || type === 'toData' ) {
			return _fnVisibleToColumnIndex( ctx, idx );
		}
		else if ( type === 'fromData' || type === 'toVisible' ) {
			return _fnColumnIndexToVisible( ctx, idx );
		}
	}
} );

_api_register( 'column()', function ( selector, opts ) {
	return _selector_first( this.columns( selector, opts ) );
} );

var __cell_selector = function ( settings, selector, opts )
{
	var data = settings.aoData;
	var rows = _selector_row_indexes( settings, opts );
	var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
	var allCells = dataTables_$(_flatten( [], cells ));
	var row;
	var columns = settings.aoColumns.length;
	var a, i, ien, j, o, host;

	var run = function ( s ) {
		var fnSelector = typeof s === 'function';

		if ( s === null || s === undefined || fnSelector ) {
			// All cells and function selectors
			a = [];

			for ( i=0, ien=rows.length ; i<ien ; i++ ) {
				row = rows[i];

				for ( j=0 ; j<columns ; j++ ) {
					o = {
						row: row,
						column: j
					};

					if ( fnSelector ) {
						// Selector - function
						host = data[ row ];

						if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
							a.push( o );
						}
					}
					else {
						// Selector - all
						a.push( o );
					}
				}
			}

			return a;
		}
		
		// Selector - index
		if ( dataTables_$.isPlainObject( s ) ) {
			// Valid cell index and its in the array of selectable rows
			return s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?
				[s] :
				[];
		}

		// Selector - jQuery filtered cells
		var jqResult = allCells
			.filter( s )
			.map( function (i, el) {
				return { // use a new object, in case someone changes the values
					row:    el._DT_CellIndex.row,
					column: el._DT_CellIndex.column
				};
			} )
			.toArray();

		if ( jqResult.length || ! s.nodeName ) {
			return jqResult;
		}

		// Otherwise the selector is a node, and there is one last option - the
		// element might be a child of an element which has dt-row and dt-column
		// data attributes
		host = dataTables_$(s).closest('*[data-dt-row]');
		return host.length ?
			[ {
				row: host.data('dt-row'),
				column: host.data('dt-column')
			} ] :
			[];
	};

	return _selector_run( 'cell', selector, run, settings, opts );
};




_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
	// Argument shifting
	if ( dataTables_$.isPlainObject( rowSelector ) ) {
		// Indexes
		if ( rowSelector.row === undefined ) {
			// Selector options in first parameter
			opts = rowSelector;
			rowSelector = null;
		}
		else {
			// Cell index objects in first parameter
			opts = columnSelector;
			columnSelector = null;
		}
	}
	if ( dataTables_$.isPlainObject( columnSelector ) ) {
		opts = columnSelector;
		columnSelector = null;
	}

	// Cell selector
	if ( columnSelector === null || columnSelector === undefined ) {
		return this.iterator( 'table', function ( settings ) {
			return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
		} );
	}

	// The default built in options need to apply to row and columns
	var internalOpts = opts ? {
		page: opts.page,
		order: opts.order,
		search: opts.search
	} : {};

	// Row + column selector
	var columns = this.columns( columnSelector, internalOpts );
	var rows = this.rows( rowSelector, internalOpts );
	var i, ien, j, jen;

	var cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {
		var a = [];

		for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
			for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
				a.push( {
					row:    rows[idx][i],
					column: columns[idx][j]
				} );
			}
		}

		return a;
	}, 1 );

	// There is currently only one extension which uses a cell selector extension
	// It is a _major_ performance drag to run this if it isn't needed, so this is
	// an extension specific check at the moment
	var cells = opts && opts.selected ?
		this.cells( cellsNoOpts, opts ) :
		cellsNoOpts;

	dataTables_$.extend( cells.selector, {
		cols: columnSelector,
		rows: rowSelector,
		opts: opts
	} );

	return cells;
} );


_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
	return this.iterator( 'cell', function ( settings, row, column ) {
		var data = settings.aoData[ row ];

		return data && data.anCells ?
			data.anCells[ column ] :
			undefined;
	}, 1 );
} );


_api_register( 'cells().data()', function () {
	return this.iterator( 'cell', function ( settings, row, column ) {
		return _fnGetCellData( settings, row, column );
	}, 1 );
} );


_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
	type = type === 'search' ? '_aFilterData' : '_aSortData';

	return this.iterator( 'cell', function ( settings, row, column ) {
		return settings.aoData[ row ][ type ][ column ];
	}, 1 );
} );


_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
	return this.iterator( 'cell', function ( settings, row, column ) {
		return _fnGetCellData( settings, row, column, type );
	}, 1 );
} );


_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
	return this.iterator( 'cell', function ( settings, row, column ) {
		return {
			row: row,
			column: column,
			columnVisible: _fnColumnIndexToVisible( settings, column )
		};
	}, 1 );
} );


_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
	return this.iterator( 'cell', function ( settings, row, column ) {
		_fnInvalidate( settings, row, src, column );
	} );
} );



_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
	return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
} );


_api_register( 'cell().data()', function ( data ) {
	var ctx = this.context;
	var cell = this[0];

	if ( data === undefined ) {
		// Get
		return ctx.length && cell.length ?
			_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
			undefined;
	}

	// Set
	_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
	_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );

	return this;
} );



/**
 * Get current ordering (sorting) that has been applied to the table.
 *
 * @returns {array} 2D array containing the sorting information for the first
 *   table in the current context. Each element in the parent array represents
 *   a column being sorted upon (i.e. multi-sorting with two columns would have
 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
 *   the column index that the sorting condition applies to, the second is the
 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
 *   index of the sorting order from the `column.sorting` initialisation array.
 *//**
 * Set the ordering for the table.
 *
 * @param {integer} order Column index to sort upon.
 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
 * @returns {DataTables.Api} this
 *//**
 * Set the ordering for the table.
 *
 * @param {array} order 1D array of sorting information to be applied.
 * @param {array} [...] Optional additional sorting conditions
 * @returns {DataTables.Api} this
 *//**
 * Set the ordering for the table.
 *
 * @param {array} order 2D array of sorting information to be applied.
 * @returns {DataTables.Api} this
 */
_api_register( 'order()', function ( order, dir ) {
	var ctx = this.context;
	var args = Array.prototype.slice.call( arguments );

	if ( order === undefined ) {
		// get
		return ctx.length !== 0 ?
			ctx[0].aaSorting :
			undefined;
	}

	// set
	if ( typeof order === 'number' ) {
		// Simple column / direction passed in
		order = [ [ order, dir ] ];
	}
	else if ( args.length > 1 ) {
		// Arguments passed in (list of 1D arrays)
		order = args;
	}
	// otherwise a 2D array was passed in

	return this.iterator( 'table', function ( settings ) {
		settings.aaSorting = Array.isArray(order) ? order.slice() : order;
	} );
} );


/**
 * Attach a sort listener to an element for a given column
 *
 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
 *   listener to. This can take the form of a single DOM node, a jQuery
 *   collection of nodes or a jQuery selector which will identify the node(s).
 * @param {integer} column the column that a click on this node will sort on
 * @param {function} [callback] callback function when sort is run
 * @returns {DataTables.Api} this
 */
_api_register( 'order.listener()', function ( node, column, callback ) {
	return this.iterator( 'table', function ( settings ) {
		_fnSortAttachListener(settings, node, {}, column, callback);
	} );
} );


_api_register( 'order.fixed()', function ( set ) {
	if ( ! set ) {
		var ctx = this.context;
		var fixed = ctx.length ?
			ctx[0].aaSortingFixed :
			undefined;

		return Array.isArray( fixed ) ?
			{ pre: fixed } :
			fixed;
	}

	return this.iterator( 'table', function ( settings ) {
		settings.aaSortingFixed = dataTables_$.extend( true, {}, set );
	} );
} );


// Order by the selected column(s)
_api_register( [
	'columns().order()',
	'column().order()'
], function ( dir ) {
	var that = this;

	if ( ! dir ) {
		return this.iterator( 'column', function ( settings, idx ) {
			var sort = _fnSortFlatten( settings );

			for ( var i=0, ien=sort.length ; i<ien ; i++ ) {
				if ( sort[i].col === idx ) {
					return sort[i].dir;
				}
			}

			return null;
		}, 1 );
	}
	else {
		return this.iterator( 'table', function ( settings, i ) {
			settings.aaSorting = that[i].map( function (col) {
				return [ col, dir ];
			} );
		} );
	}
} );

_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {
	return this.iterator( 'column', function ( settings, idx ) {
		var col = settings.aoColumns[idx];

		return directions ?
			col.asSorting :
			col.bSortable;
	}, 1 );
} );


_api_register( 'processing()', function ( show ) {
	return this.iterator( 'table', function ( ctx ) {
		_fnProcessingDisplay( ctx, show );
	} );
} );


_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
	var ctx = this.context;

	if ( input === undefined ) {
		// get
		return ctx.length !== 0 ?
			ctx[0].oPreviousSearch.search :
			undefined;
	}

	// set
	return this.iterator( 'table', function ( settings ) {
		if ( ! settings.oFeatures.bFilter ) {
			return;
		}

		if (typeof regex === 'object') {
			// New style options to pass to the search builder
			_fnFilterComplete( settings, dataTables_$.extend( settings.oPreviousSearch, regex, {
				search: input
			} ) );
		}
		else {
			// Compat for the old options
			_fnFilterComplete( settings, dataTables_$.extend( settings.oPreviousSearch, {
				search: input,
				regex:  regex === null ? false : regex,
				smart:  smart === null ? true  : smart,
				caseInsensitive: caseInsen === null ? true : caseInsen
			} ) );
		}
	} );
} );

_api_register( 'search.fixed()', function ( name, search ) {
	var ret = this.iterator( true, 'table', function ( settings ) {
		var fixed = settings.searchFixed;

		if (! name) {
			return Object.keys(fixed)
		}
		else if (search === undefined) {
			return fixed[name];
		}
		else if (search === null) {
			delete fixed[name];
		}
		else {
			fixed[name] = search;
		}

		return this;
	} );

	return name !== undefined && search === undefined
		? ret[0]
		: ret;
} );

_api_registerPlural(
	'columns().search()',
	'column().search()',
	function ( input, regex, smart, caseInsen ) {
		return this.iterator( 'column', function ( settings, column ) {
			var preSearch = settings.aoPreSearchCols;

			if ( input === undefined ) {
				// get
				return preSearch[ column ].search;
			}

			// set
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}

			if (typeof regex === 'object') {
				// New style options to pass to the search builder
				dataTables_$.extend( preSearch[ column ], regex, {
					search: input
				} );
			}
			else {
				// Old style (with not all options available)
				dataTables_$.extend( preSearch[ column ], {
					search: input,
					regex:  regex === null ? false : regex,
					smart:  smart === null ? true  : smart,
					caseInsensitive: caseInsen === null ? true : caseInsen
				} );
			}

			_fnFilterComplete( settings, settings.oPreviousSearch );
		} );
	}
);

_api_register([
		'columns().search.fixed()',
		'column().search.fixed()'
	],
	function ( name, search ) {
		var ret = this.iterator( true, 'column', function ( settings, colIdx ) {
			var fixed = settings.aoColumns[colIdx].searchFixed;

			if (! name) {
				return Object.keys(fixed)
			}
			else if (search === undefined) {
				return fixed[name];
			}
			else if (search === null) {
				delete fixed[name];
			}
			else {
				fixed[name] = search;
			}

			return this;
		} );

		return name !== undefined && search === undefined
			? ret[0]
			: ret;
	}
);
/*
 * State API methods
 */

_api_register( 'state()', function ( set, ignoreTime ) {
	// getter
	if ( ! set ) {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	}

	var setMutate = dataTables_$.extend( true, {}, set );

	// setter
	return this.iterator( 'table', function ( settings ) {
		if ( ignoreTime !== false ) {
			setMutate.time = +new Date() + 100;
		}

		_fnImplementState( settings, setMutate, function(){} );
	} );
} );


_api_register( 'state.clear()', function () {
	return this.iterator( 'table', function ( settings ) {
		// Save an empty object
		settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
	} );
} );


_api_register( 'state.loaded()', function () {
	return this.context.length ?
		this.context[0].oLoadedState :
		null;
} );


_api_register( 'state.save()', function () {
	return this.iterator( 'table', function ( settings ) {
		_fnSaveState( settings );
	} );
} );

/**
 * Set the jQuery or window object to be used by DataTables
 *
 * @param {*} module Library / container object
 * @param {string} [type] Library or container type `lib`, `win` or `datetime`.
 *   If not provided, automatic detection is attempted.
 */
DataTable.use = function (module, type) {
	if (type === 'lib' || module.fn) {
		dataTables_$ = module;
	}
	else if (type == 'win' || module.document) {
		window = module;
		document = module.document;
	}
	else if (type === 'datetime' || module.type === 'DateTime') {
		DataTable.DateTime = module;
	}
}

/**
 * CommonJS factory function pass through. This will check if the arguments
 * given are a window object or a jQuery object. If so they are set
 * accordingly.
 * @param {*} root Window
 * @param {*} jq jQUery
 * @returns {boolean} Indicator
 */
DataTable.factory = function (root, jq) {
	var is = false;

	// Test if the first parameter is a window object
	if (root && root.document) {
		window = root;
		document = root.document;
	}

	// Test if the second parameter is a jQuery object
	if (jq && jq.fn && jq.fn.jquery) {
		dataTables_$ = jq;
		is = true;
	}

	return is;
}

/**
 * Provide a common method for plug-ins to check the version of DataTables being
 * used, in order to ensure compatibility.
 *
 *  @param {string} version Version string to check for, in the format "X.Y.Z".
 *    Note that the formats "X" and "X.Y" are also acceptable.
 *  @param {string} [version2=current DataTables version] As above, but optional.
 *   If not given the current DataTables version will be used.
 *  @returns {boolean} true if this version of DataTables is greater or equal to
 *    the required version, or false if this version of DataTales is not
 *    suitable
 *  @static
 *  @dtopt API-Static
 *
 *  @example
 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
 */
DataTable.versionCheck = function( version, version2 )
{
	var aThis = version2 ?
		version2.split('.') :
		DataTable.version.split('.');
	var aThat = version.split('.');
	var iThis, iThat;

	for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
		iThis = parseInt( aThis[i], 10 ) || 0;
		iThat = parseInt( aThat[i], 10 ) || 0;

		// Parts are the same, keep comparing
		if (iThis === iThat) {
			continue;
		}

		// Parts are different, return immediately
		return iThis > iThat;
	}

	return true;
};


/**
 * Check if a `<table>` node is a DataTable table already or not.
 *
 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
 *      selector for the table to test. Note that if more than more than one
 *      table is passed on, only the first will be checked
 *  @returns {boolean} true the table given is a DataTable, or false otherwise
 *  @static
 *  @dtopt API-Static
 *
 *  @example
 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
 *      $('#example').dataTable();
 *    }
 */
DataTable.isDataTable = function ( table )
{
	var t = dataTables_$(table).get(0);
	var is = false;

	if ( table instanceof DataTable.Api ) {
		return true;
	}

	dataTables_$.each( DataTable.settings, function (i, o) {
		var head = o.nScrollHead ? dataTables_$('table', o.nScrollHead)[0] : null;
		var foot = o.nScrollFoot ? dataTables_$('table', o.nScrollFoot)[0] : null;

		if ( o.nTable === t || head === t || foot === t ) {
			is = true;
		}
	} );

	return is;
};


/**
 * Get all DataTable tables that have been initialised - optionally you can
 * select to get only currently visible tables.
 *
 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
 *    or visible tables only.
 *  @returns {array} Array of `table` nodes (not DataTable instances) which are
 *    DataTables
 *  @static
 *  @dtopt API-Static
 *
 *  @example
 *    $.each( $.fn.dataTable.tables(true), function () {
 *      $(table).DataTable().columns.adjust();
 *    } );
 */
DataTable.tables = function ( visible )
{
	var api = false;

	if ( dataTables_$.isPlainObject( visible ) ) {
		api = visible.api;
		visible = visible.visible;
	}

	var a = DataTable.settings
		.filter( function (o) {
			return !visible || (visible && dataTables_$(o.nTable).is(':visible')) 
				? true
				: false;
		} )
		.map( function (o) {
			return o.nTable;
		});

	return api ?
		new _Api( a ) :
		a;
};


/**
 * Convert from camel case parameters to Hungarian notation. This is made public
 * for the extensions to provide the same ability as DataTables core to accept
 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
 * parameters.
 *
 *  @param {object} src The model object which holds all parameters that can be
 *    mapped.
 *  @param {object} user The object to convert from camel case to Hungarian.
 *  @param {boolean} force When set to `true`, properties which already have a
 *    Hungarian value in the `user` object will be overwritten. Otherwise they
 *    won't be.
 */
DataTable.camelToHungarian = _fnCamelToHungarian;



/**
 *
 */
_api_register( '$()', function ( selector, opts ) {
	var
		rows   = this.rows( opts ).nodes(), // Get all rows
		jqRows = dataTables_$(rows);

	return dataTables_$( [].concat(
		jqRows.filter( selector ).toArray(),
		jqRows.find( selector ).toArray()
	) );
} );


// jQuery functions to operate on the tables
dataTables_$.each( [ 'on', 'one', 'off' ], function (i, key) {
	_api_register( key+'()', function ( /* event, handler */ ) {
		var args = Array.prototype.slice.call(arguments);

		// Add the `dt` namespace automatically if it isn't already present
		args[0] = args[0].split( /\s/ ).map( function ( e ) {
			return ! e.match(/\.dt\b/) ?
				e+'.dt' :
				e;
			} ).join( ' ' );

		var inst = dataTables_$( this.tables().nodes() );
		inst[key].apply( inst, args );
		return this;
	} );
} );


_api_register( 'clear()', function () {
	return this.iterator( 'table', function ( settings ) {
		_fnClearTable( settings );
	} );
} );


_api_register( 'error()', function (msg) {
	return this.iterator( 'table', function ( settings ) {
		_fnLog( settings, 0, msg );
	} );
} );


_api_register( 'settings()', function () {
	return new _Api( this.context, this.context );
} );


_api_register( 'init()', function () {
	var ctx = this.context;
	return ctx.length ? ctx[0].oInit : null;
} );


_api_register( 'data()', function () {
	return this.iterator( 'table', function ( settings ) {
		return _pluck( settings.aoData, '_aData' );
	} ).flatten();
} );


_api_register( 'trigger()', function ( name, args, bubbles ) {
	return this.iterator( 'table', function ( settings ) {
		return _fnCallbackFire( settings, null, name, args, bubbles );
	} ).flatten();
} );


_api_register( 'ready()', function ( fn ) {
	var ctx = this.context;

	// Get status of first table
	if (! fn) {
		return ctx.length
			? (ctx[0]._bInitComplete || false)
			: null;
	}

	// Function to run either once the table becomes ready or
	// immediately if it is already ready.
	return this.tables().every(function () {
		if (this.context[0]._bInitComplete) {
			fn.call(this);
		}
		else {
			this.on('init', function () {
				fn.call(this);
			});
		}
	} );
} );


_api_register( 'destroy()', function ( remove ) {
	remove = remove || false;

	return this.iterator( 'table', function ( settings ) {
		var classes   = settings.oClasses;
		var table     = settings.nTable;
		var tbody     = settings.nTBody;
		var thead     = settings.nTHead;
		var tfoot     = settings.nTFoot;
		var jqTable   = dataTables_$(table);
		var jqTbody   = dataTables_$(tbody);
		var jqWrapper = dataTables_$(settings.nTableWrapper);
		var rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );
		var orderClasses = classes.order;

		// Flag to note that the table is currently being destroyed - no action
		// should be taken
		settings.bDestroying = true;

		// Fire off the destroy callbacks for plug-ins etc
		_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings], true );

		// If not being removed from the document, make all columns visible
		if ( ! remove ) {
			new _Api( settings ).columns().visible( true );
		}

		// Blitz all `DT` namespaced events (these are internal events, the
		// lowercase, `dt` events are user subscribed and they are responsible
		// for removing them
		jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');
		dataTables_$(window).off('.DT-'+settings.sInstance);

		// When scrolling we had to break the table up - restore it
		if ( table != thead.parentNode ) {
			jqTable.children('thead').detach();
			jqTable.append( thead );
		}

		if ( tfoot && table != tfoot.parentNode ) {
			jqTable.children('tfoot').detach();
			jqTable.append( tfoot );
		}

		settings.colgroup.remove();

		settings.aaSorting = [];
		settings.aaSortingFixed = [];
		_fnSortingClasses( settings );

		dataTables_$('th, td', thead)
			.removeClass(
				orderClasses.canAsc + ' ' +
				orderClasses.canDesc + ' ' +
				orderClasses.isAsc + ' ' +
				orderClasses.isDesc
			)
			.css('width', '');

		// Add the TR elements back into the table in their original order
		jqTbody.children().detach();
		jqTbody.append( rows );

		var orig = settings.nTableWrapper.parentNode;
		var insertBefore = settings.nTableWrapper.nextSibling;

		// Remove the DataTables generated nodes, events and classes
		var removedMethod = remove ? 'remove' : 'detach';
		jqTable[ removedMethod ]();
		jqWrapper[ removedMethod ]();

		// If we need to reattach the table to the document
		if ( ! remove && orig ) {
			// insertBefore acts like appendChild if !arg[1]
			orig.insertBefore( table, insertBefore );

			// Restore the width of the original table - was read from the style property,
			// so we can restore directly to that
			jqTable
				.css( 'width', settings.sDestroyWidth )
				.removeClass( classes.table );
		}

		/* Remove the settings object from the settings array */
		var idx = DataTable.settings.indexOf(settings);
		if ( idx !== -1 ) {
			DataTable.settings.splice( idx, 1 );
		}
	} );
} );


// Add the `every()` method for rows, columns and cells in a compact form
dataTables_$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
	_api_register( type+'s().every()', function ( fn ) {
		var opts = this.selector.opts;
		var api = this;
		var inst;
		var counter = 0;

		return this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {
			inst = api[ type ](selectedIdx, opts);

			if (type === 'cell') {
				fn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);
			}
			else {
				fn.call(inst, selectedIdx, tableIdx, counter);
			}

			counter++;
		} );
	} );
} );


// i18n method for extensions to be able to use the language object from the
// DataTable
_api_register( 'i18n()', function ( token, def, plural ) {
	var ctx = this.context[0];
	var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );

	if ( resolved === undefined ) {
		resolved = def;
	}

	if ( dataTables_$.isPlainObject( resolved ) ) {
		resolved = plural !== undefined && resolved[ plural ] !== undefined ?
			resolved[ plural ] :
			resolved._;
	}

	return typeof resolved === 'string'
		? resolved.replace( '%d', plural ) // nb: plural might be undefined,
		: resolved;
} );

/**
 * Version string for plug-ins to check compatibility. Allowed format is
 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
 * only for non-release builds. See https://semver.org/ for more information.
 *  @member
 *  @type string
 *  @default Version number
 */
DataTable.version = "2.0.5";

/**
 * Private data store, containing all of the settings objects that are
 * created for the tables on a given page.
 *
 * Note that the `DataTable.settings` object is aliased to
 * `jQuery.fn.dataTableExt` through which it may be accessed and
 * manipulated, or `jQuery.fn.dataTable.settings`.
 *  @member
 *  @type array
 *  @default []
 *  @private
 */
DataTable.settings = [];

/**
 * Object models container, for the various models that DataTables has
 * available to it. These models define the objects that are used to hold
 * the active state and configuration of the table.
 *  @namespace
 */
DataTable.models = {};



/**
 * Template object for the way in which DataTables holds information about
 * search information for the global filter and individual column filters.
 *  @namespace
 */
DataTable.models.oSearch = {
	/**
	 * Flag to indicate if the filtering should be case insensitive or not
	 */
	"caseInsensitive": true,

	/**
	 * Applied search term
	 */
	"search": "",

	/**
	 * Flag to indicate if the search term should be interpreted as a
	 * regular expression (true) or not (false) and therefore and special
	 * regex characters escaped.
	 */
	"regex": false,

	/**
	 * Flag to indicate if DataTables is to use its smart filtering or not.
	 */
	"smart": true,

	/**
	 * Flag to indicate if DataTables should only trigger a search when
	 * the return key is pressed.
	 */
	"return": false
};




/**
 * Template object for the way in which DataTables holds information about
 * each individual row. This is the object format used for the settings
 * aoData array.
 *  @namespace
 */
DataTable.models.oRow = {
	/**
	 * TR element for the row
	 */
	"nTr": null,

	/**
	 * Array of TD elements for each row. This is null until the row has been
	 * created.
	 */
	"anCells": null,

	/**
	 * Data object from the original data source for the row. This is either
	 * an array if using the traditional form of DataTables, or an object if
	 * using mData options. The exact type will depend on the passed in
	 * data from the data source, or will be an array if using DOM a data
	 * source.
	 */
	"_aData": [],

	/**
	 * Sorting data cache - this array is ostensibly the same length as the
	 * number of columns (although each index is generated only as it is
	 * needed), and holds the data that is used for sorting each column in the
	 * row. We do this cache generation at the start of the sort in order that
	 * the formatting of the sort data need be done only once for each cell
	 * per sort. This array should not be read from or written to by anything
	 * other than the master sorting methods.
	 */
	"_aSortData": null,

	/**
	 * Per cell filtering data cache. As per the sort data cache, used to
	 * increase the performance of the filtering in DataTables
	 */
	"_aFilterData": null,

	/**
	 * Filtering data cache. This is the same as the cell filtering cache, but
	 * in this case a string rather than an array. This is easily computed with
	 * a join on `_aFilterData`, but is provided as a cache so the join isn't
	 * needed on every search (memory traded for performance)
	 */
	"_sFilterRow": null,

	/**
	 * Denote if the original data source was from the DOM, or the data source
	 * object. This is used for invalidating data, so DataTables can
	 * automatically read data from the original source, unless uninstructed
	 * otherwise.
	 */
	"src": null,

	/**
	 * Index in the aoData array. This saves an indexOf lookup when we have the
	 * object, but want to know the index
	 */
	"idx": -1,

	/**
	 * Cached display value
	 */
	displayData: null
};


/**
 * Template object for the column information object in DataTables. This object
 * is held in the settings aoColumns array and contains all the information that
 * DataTables needs about each individual column.
 *
 * Note that this object is related to {@link DataTable.defaults.column}
 * but this one is the internal data store for DataTables's cache of columns.
 * It should NOT be manipulated outside of DataTables. Any configuration should
 * be done through the initialisation options.
 *  @namespace
 */
DataTable.models.oColumn = {
	/**
	 * Column index.
	 */
	"idx": null,

	/**
	 * A list of the columns that sorting should occur on when this column
	 * is sorted. That this property is an array allows multi-column sorting
	 * to be defined for a column (for example first name / last name columns
	 * would benefit from this). The values are integers pointing to the
	 * columns to be sorted on (typically it will be a single integer pointing
	 * at itself, but that doesn't need to be the case).
	 */
	"aDataSort": null,

	/**
	 * Define the sorting directions that are applied to the column, in sequence
	 * as the column is repeatedly sorted upon - i.e. the first value is used
	 * as the sorting direction when the column if first sorted (clicked on).
	 * Sort it again (click again) and it will move on to the next index.
	 * Repeat until loop.
	 */
	"asSorting": null,

	/**
	 * Flag to indicate if the column is searchable, and thus should be included
	 * in the filtering or not.
	 */
	"bSearchable": null,

	/**
	 * Flag to indicate if the column is sortable or not.
	 */
	"bSortable": null,

	/**
	 * Flag to indicate if the column is currently visible in the table or not
	 */
	"bVisible": null,

	/**
	 * Store for manual type assignment using the `column.type` option. This
	 * is held in store so we can manipulate the column's `sType` property.
	 */
	"_sManualType": null,

	/**
	 * Flag to indicate if HTML5 data attributes should be used as the data
	 * source for filtering or sorting. True is either are.
	 */
	"_bAttrSrc": false,

	/**
	 * Developer definable function that is called whenever a cell is created (Ajax source,
	 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
	 * allowing you to modify the DOM element (add background colour for example) when the
	 * element is available.
	 */
	"fnCreatedCell": null,

	/**
	 * Function to get data from a cell in a column. You should <b>never</b>
	 * access data directly through _aData internally in DataTables - always use
	 * the method attached to this property. It allows mData to function as
	 * required. This function is automatically assigned by the column
	 * initialisation method
	 */
	"fnGetData": null,

	/**
	 * Function to set data for a cell in the column. You should <b>never</b>
	 * set the data directly to _aData internally in DataTables - always use
	 * this method. It allows mData to function as required. This function
	 * is automatically assigned by the column initialisation method
	 */
	"fnSetData": null,

	/**
	 * Property to read the value for the cells in the column from the data
	 * source array / object. If null, then the default content is used, if a
	 * function is given then the return from the function is used.
	 */
	"mData": null,

	/**
	 * Partner property to mData which is used (only when defined) to get
	 * the data - i.e. it is basically the same as mData, but without the
	 * 'set' option, and also the data fed to it is the result from mData.
	 * This is the rendering method to match the data method of mData.
	 */
	"mRender": null,

	/**
	 * The class to apply to all TD elements in the table's TBODY for the column
	 */
	"sClass": null,

	/**
	 * When DataTables calculates the column widths to assign to each column,
	 * it finds the longest string in each column and then constructs a
	 * temporary table and reads the widths from that. The problem with this
	 * is that "mmm" is much wider then "iiii", but the latter is a longer
	 * string - thus the calculation can go wrong (doing it properly and putting
	 * it into an DOM object and measuring that is horribly(!) slow). Thus as
	 * a "work around" we provide this option. It will append its value to the
	 * text that is found to be the longest string for the column - i.e. padding.
	 */
	"sContentPadding": null,

	/**
	 * Allows a default value to be given for a column's data, and will be used
	 * whenever a null data source is encountered (this can be because mData
	 * is set to null, or because the data source itself is null).
	 */
	"sDefaultContent": null,

	/**
	 * Name for the column, allowing reference to the column by name as well as
	 * by index (needs a lookup to work by name).
	 */
	"sName": null,

	/**
	 * Custom sorting data type - defines which of the available plug-ins in
	 * afnSortData the custom sorting will use - if any is defined.
	 */
	"sSortDataType": 'std',

	/**
	 * Class to be applied to the header element when sorting on this column
	 */
	"sSortingClass": null,

	/**
	 * Title of the column - what is seen in the TH element (nTh).
	 */
	"sTitle": null,

	/**
	 * Column sorting and filtering type
	 */
	"sType": null,

	/**
	 * Width of the column
	 */
	"sWidth": null,

	/**
	 * Width of the column when it was first "encountered"
	 */
	"sWidthOrig": null,

	/** Cached string which is the longest in the column */
	maxLenString: null,

	/**
	 * Store for named searches
	 */
	searchFixed: null
};


/*
 * Developer note: The properties of the object below are given in Hungarian
 * notation, that was used as the interface for DataTables prior to v1.10, however
 * from v1.10 onwards the primary interface is camel case. In order to avoid
 * breaking backwards compatibility utterly with this change, the Hungarian
 * version is still, internally the primary interface, but is is not documented
 * - hence the @name tags in each doc comment. This allows a Javascript function
 * to create a map from Hungarian notation to camel case (going the other direction
 * would require each property to be listed, which would add around 3K to the size
 * of DataTables, while this method is about a 0.5K hit).
 *
 * Ultimately this does pave the way for Hungarian notation to be dropped
 * completely, but that is a massive amount of work and will break current
 * installs (therefore is on-hold until v2).
 */

/**
 * Initialisation options that can be given to DataTables at initialisation
 * time.
 *  @namespace
 */
DataTable.defaults = {
	/**
	 * An array of data to use for the table, passed in at initialisation which
	 * will be used in preference to any data which is already in the DOM. This is
	 * particularly useful for constructing tables purely in Javascript, for
	 * example with a custom Ajax call.
	 */
	"aaData": null,


	/**
	 * If ordering is enabled, then DataTables will perform a first pass sort on
	 * initialisation. You can define which column(s) the sort is performed
	 * upon, and the sorting direction, with this variable. The `sorting` array
	 * should contain an array for each column to be sorted initially containing
	 * the column's index and a direction string ('asc' or 'desc').
	 */
	"aaSorting": [[0,'asc']],


	/**
	 * This parameter is basically identical to the `sorting` parameter, but
	 * cannot be overridden by user interaction with the table. What this means
	 * is that you could have a column (visible or hidden) which the sorting
	 * will always be forced on first - any sorting after that (from the user)
	 * will then be performed as required. This can be useful for grouping rows
	 * together.
	 */
	"aaSortingFixed": [],


	/**
	 * DataTables can be instructed to load data to display in the table from a
	 * Ajax source. This option defines how that Ajax call is made and where to.
	 *
	 * The `ajax` property has three different modes of operation, depending on
	 * how it is defined. These are:
	 *
	 * * `string` - Set the URL from where the data should be loaded from.
	 * * `object` - Define properties for `jQuery.ajax`.
	 * * `function` - Custom data get function
	 *
	 * `string`
	 * --------
	 *
	 * As a string, the `ajax` property simply defines the URL from which
	 * DataTables will load data.
	 *
	 * `object`
	 * --------
	 *
	 * As an object, the parameters in the object are passed to
	 * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control
	 * of the Ajax request. DataTables has a number of default parameters which
	 * you can override using this option. Please refer to the jQuery
	 * documentation for a full description of the options available, although
	 * the following parameters provide additional options in DataTables or
	 * require special consideration:
	 *
	 * * `data` - As with jQuery, `data` can be provided as an object, but it
	 *   can also be used as a function to manipulate the data DataTables sends
	 *   to the server. The function takes a single parameter, an object of
	 *   parameters with the values that DataTables has readied for sending. An
	 *   object may be returned which will be merged into the DataTables
	 *   defaults, or you can add the items to the object that was passed in and
	 *   not return anything from the function. This supersedes `fnServerParams`
	 *   from DataTables 1.9-.
	 *
	 * * `dataSrc` - By default DataTables will look for the property `data` (or
	 *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
	 *   from an Ajax source or for server-side processing - this parameter
	 *   allows that property to be changed. You can use Javascript dotted
	 *   object notation to get a data source for multiple levels of nesting, or
	 *   it my be used as a function. As a function it takes a single parameter,
	 *   the JSON returned from the server, which can be manipulated as
	 *   required, with the returned value being that used by DataTables as the
	 *   data source for the table.
	 *
	 * * `success` - Should not be overridden it is used internally in
	 *   DataTables. To manipulate / transform the data returned by the server
	 *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
	 *
	 * `function`
	 * ----------
	 *
	 * As a function, making the Ajax call is left up to yourself allowing
	 * complete control of the Ajax request. Indeed, if desired, a method other
	 * than Ajax could be used to obtain the required data, such as Web storage
	 * or an AIR database.
	 *
	 * The function is given four parameters and no return is required. The
	 * parameters are:
	 *
	 * 1. _object_ - Data to send to the server
	 * 2. _function_ - Callback function that must be executed when the required
	 *    data has been obtained. That data should be passed into the callback
	 *    as the only parameter
	 * 3. _object_ - DataTables settings object for the table
	 */
	"ajax": null,


	/**
	 * This parameter allows you to readily specify the entries in the length drop
	 * down menu that DataTables shows when pagination is enabled. It can be
	 * either a 1D array of options which will be used for both the displayed
	 * option and the value, or a 2D array which will use the array in the first
	 * position as the value, and the array in the second position as the
	 * displayed options (useful for language strings such as 'All').
	 *
	 * Note that the `pageLength` property will be automatically set to the
	 * first value given in this array, unless `pageLength` is also provided.
	 */
	"aLengthMenu": [ 10, 25, 50, 100 ],


	/**
	 * The `columns` option in the initialisation parameter allows you to define
	 * details about the way individual columns behave. For a full list of
	 * column options that can be set, please see
	 * {@link DataTable.defaults.column}. Note that if you use `columns` to
	 * define your columns, you must have an entry in the array for every single
	 * column that you have in your table (these can be null if you don't which
	 * to specify any options).
	 */
	"aoColumns": null,

	/**
	 * Very similar to `columns`, `columnDefs` allows you to target a specific
	 * column, multiple columns, or all columns, using the `targets` property of
	 * each object in the array. This allows great flexibility when creating
	 * tables, as the `columnDefs` arrays can be of any length, targeting the
	 * columns you specifically want. `columnDefs` may use any of the column
	 * options available: {@link DataTable.defaults.column}, but it _must_
	 * have `targets` defined in each object in the array. Values in the `targets`
	 * array may be:
	 *   <ul>
	 *     <li>a string - class name will be matched on the TH for the column</li>
	 *     <li>0 or a positive integer - column index counting from the left</li>
	 *     <li>a negative integer - column index counting from the right</li>
	 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
	 *   </ul>
	 */
	"aoColumnDefs": null,


	/**
	 * Basically the same as `search`, this parameter defines the individual column
	 * filtering state at initialisation time. The array must be of the same size
	 * as the number of columns, and each element be an object with the parameters
	 * `search` and `escapeRegex` (the latter is optional). 'null' is also
	 * accepted and the default will be used.
	 */
	"aoSearchCols": [],


	/**
	 * Enable or disable automatic column width calculation. This can be disabled
	 * as an optimisation (it takes some time to calculate the widths) if the
	 * tables widths are passed in using `columns`.
	 */
	"bAutoWidth": true,


	/**
	 * Deferred rendering can provide DataTables with a huge speed boost when you
	 * are using an Ajax or JS data source for the table. This option, when set to
	 * true, will cause DataTables to defer the creation of the table elements for
	 * each row until they are needed for a draw - saving a significant amount of
	 * time.
	 */
	"bDeferRender": true,


	/**
	 * Replace a DataTable which matches the given selector and replace it with
	 * one which has the properties of the new initialisation object passed. If no
	 * table matches the selector, then the new DataTable will be constructed as
	 * per normal.
	 */
	"bDestroy": false,


	/**
	 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
	 * that it allows the end user to input multiple words (space separated) and
	 * will match a row containing those words, even if not in the order that was
	 * specified (this allow matching across multiple columns). Note that if you
	 * wish to use filtering in DataTables this must remain 'true' - to remove the
	 * default filtering input box and retain filtering abilities, please use
	 * {@link DataTable.defaults.dom}.
	 */
	"bFilter": true,

	/**
	 * Used only for compatiblity with DT1
	 * @deprecated
	 */
	"bInfo": true,

	/**
	 * Used only for compatiblity with DT1
	 * @deprecated
	 */
	"bLengthChange": true,

	/**
	 * Enable or disable pagination.
	 */
	"bPaginate": true,


	/**
	 * Enable or disable the display of a 'processing' indicator when the table is
	 * being processed (e.g. a sort). This is particularly useful for tables with
	 * large amounts of data where it can take a noticeable amount of time to sort
	 * the entries.
	 */
	"bProcessing": false,


	/**
	 * Retrieve the DataTables object for the given selector. Note that if the
	 * table has already been initialised, this parameter will cause DataTables
	 * to simply return the object that has already been set up - it will not take
	 * account of any changes you might have made to the initialisation object
	 * passed to DataTables (setting this parameter to true is an acknowledgement
	 * that you understand this). `destroy` can be used to reinitialise a table if
	 * you need.
	 */
	"bRetrieve": false,


	/**
	 * When vertical (y) scrolling is enabled, DataTables will force the height of
	 * the table's viewport to the given height at all times (useful for layout).
	 * However, this can look odd when filtering data down to a small data set,
	 * and the footer is left "floating" further down. This parameter (when
	 * enabled) will cause DataTables to collapse the table's viewport down when
	 * the result set will fit within the given Y height.
	 */
	"bScrollCollapse": false,


	/**
	 * Configure DataTables to use server-side processing. Note that the
	 * `ajax` parameter must also be given in order to give DataTables a
	 * source to obtain the required data for each draw.
	 */
	"bServerSide": false,


	/**
	 * Enable or disable sorting of columns. Sorting of individual columns can be
	 * disabled by the `sortable` option for each column.
	 */
	"bSort": true,


	/**
	 * Enable or display DataTables' ability to sort multiple columns at the
	 * same time (activated by shift-click by the user).
	 */
	"bSortMulti": true,


	/**
	 * Allows control over whether DataTables should use the top (true) unique
	 * cell that is found for a single column, or the bottom (false - default).
	 * This is useful when using complex headers.
	 */
	"bSortCellsTop": null,


	/**
	 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
	 * `sorting\_3` to the columns which are currently being sorted on. This is
	 * presented as a feature switch as it can increase processing time (while
	 * classes are removed and added) so for large data sets you might want to
	 * turn this off.
	 */
	"bSortClasses": true,


	/**
	 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
	 * used to save table display information such as pagination information,
	 * display length, filtering and sorting. As such when the end user reloads
	 * the page the display display will match what thy had previously set up.
	 */
	"bStateSave": false,


	/**
	 * This function is called when a TR element is created (and all TD child
	 * elements have been inserted), or registered if using a DOM source, allowing
	 * manipulation of the TR element (adding classes etc).
	 */
	"fnCreatedRow": null,


	/**
	 * This function is called on every 'draw' event, and allows you to
	 * dynamically modify any aspect you want about the created DOM.
	 */
	"fnDrawCallback": null,


	/**
	 * Identical to fnHeaderCallback() but for the table footer this function
	 * allows you to modify the table footer on every 'draw' event.
	 */
	"fnFooterCallback": null,


	/**
	 * When rendering large numbers in the information element for the table
	 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
	 * to have a comma separator for the 'thousands' units (e.g. 1 million is
	 * rendered as "1,000,000") to help readability for the end user. This
	 * function will override the default method DataTables uses.
	 */
	"fnFormatNumber": function ( toFormat ) {
		return toFormat.toString().replace(
			/\B(?=(\d{3})+(?!\d))/g,
			this.oLanguage.sThousands
		);
	},


	/**
	 * This function is called on every 'draw' event, and allows you to
	 * dynamically modify the header row. This can be used to calculate and
	 * display useful information about the table.
	 */
	"fnHeaderCallback": null,


	/**
	 * The information element can be used to convey information about the current
	 * state of the table. Although the internationalisation options presented by
	 * DataTables are quite capable of dealing with most customisations, there may
	 * be times where you wish to customise the string further. This callback
	 * allows you to do exactly that.
	 */
	"fnInfoCallback": null,


	/**
	 * Called when the table has been initialised. Normally DataTables will
	 * initialise sequentially and there will be no need for this function,
	 * however, this does not hold true when using external language information
	 * since that is obtained using an async XHR call.
	 */
	"fnInitComplete": null,


	/**
	 * Called at the very start of each table draw and can be used to cancel the
	 * draw by returning false, any other return (including undefined) results in
	 * the full draw occurring).
	 */
	"fnPreDrawCallback": null,


	/**
	 * This function allows you to 'post process' each row after it have been
	 * generated for each table draw, but before it is rendered on screen. This
	 * function might be used for setting the row class name etc.
	 */
	"fnRowCallback": null,


	/**
	 * Load the table state. With this function you can define from where, and how, the
	 * state of a table is loaded. By default DataTables will load from `localStorage`
	 * but you might wish to use a server-side database or cookies.
	 */
	"fnStateLoadCallback": function ( settings ) {
		try {
			return JSON.parse(
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname
				)
			);
		} catch (e) {
			return {};
		}
	},


	/**
	 * Callback which allows modification of the saved state prior to loading that state.
	 * This callback is called when the table is loading state from the stored data, but
	 * prior to the settings object being modified by the saved state. Note that for
	 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
	 * a plug-in.
	 */
	"fnStateLoadParams": null,


	/**
	 * Callback that is called when the state has been loaded from the state saving method
	 * and the DataTables settings object has been modified as a result of the loaded state.
	 */
	"fnStateLoaded": null,


	/**
	 * Save the table state. This function allows you to define where and how the state
	 * information for the table is stored By default DataTables will use `localStorage`
	 * but you might wish to use a server-side database or cookies.
	 */
	"fnStateSaveCallback": function ( settings, data ) {
		try {
			(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
				'DataTables_'+settings.sInstance+'_'+location.pathname,
				JSON.stringify( data )
			);
		} catch (e) {
			// noop
		}
	},


	/**
	 * Callback which allows modification of the state to be saved. Called when the table
	 * has changed state a new state save is required. This method allows modification of
	 * the state saving object prior to actually doing the save, including addition or
	 * other state properties or modification. Note that for plug-in authors, you should
	 * use the `stateSaveParams` event to save parameters for a plug-in.
	 */
	"fnStateSaveParams": null,


	/**
	 * Duration for which the saved state information is considered valid. After this period
	 * has elapsed the state will be returned to the default.
	 * Value is given in seconds.
	 */
	"iStateDuration": 7200,


	/**
	 * Number of rows to display on a single page when using pagination. If
	 * feature enabled (`lengthChange`) then the end user will be able to override
	 * this to a custom setting using a pop-up menu.
	 */
	"iDisplayLength": 10,


	/**
	 * Define the starting point for data display when using DataTables with
	 * pagination. Note that this parameter is the number of records, rather than
	 * the page number, so if you have 10 records per page and want to start on
	 * the third page, it should be "20".
	 */
	"iDisplayStart": 0,


	/**
	 * By default DataTables allows keyboard navigation of the table (sorting, paging,
	 * and filtering) by adding a `tabindex` attribute to the required elements. This
	 * allows you to tab through the controls and press the enter key to activate them.
	 * The tabindex is default 0, meaning that the tab follows the flow of the document.
	 * You can overrule this using this parameter if you wish. Use a value of -1 to
	 * disable built-in keyboard navigation.
	 */
	"iTabIndex": 0,


	/**
	 * Classes that DataTables assigns to the various components and features
	 * that it adds to the HTML table. This allows classes to be configured
	 * during initialisation in addition to through the static
	 * {@link DataTable.ext.oStdClasses} object).
	 */
	"oClasses": {},


	/**
	 * All strings that DataTables uses in the user interface that it creates
	 * are defined in this object, allowing you to modified them individually or
	 * completely replace them all as required.
	 */
	"oLanguage": {
		/**
		 * Strings that are used for WAI-ARIA labels and controls only (these are not
		 * actually visible on the page, but will be read by screenreaders, and thus
		 * must be internationalised as well).
		 */
		"oAria": {
			/**
			 * ARIA label that is added to the table headers when the column may be sorted
			 */
			"orderable": ": Activate to sort",

			/**
			 * ARIA label that is added to the table headers when the column is currently being sorted
			 */
			"orderableReverse": ": Activate to invert sorting",

			/**
			 * ARIA label that is added to the table headers when the column is currently being 
			 * sorted and next step is to remove sorting
			 */
			"orderableRemove": ": Activate to remove sorting",

			paginate: {
				first: 'First',
				last: 'Last',
				next: 'Next',
				previous: 'Previous'
			}
		},

		/**
		 * Pagination string used by DataTables for the built-in pagination
		 * control types.
		 */
		"oPaginate": {
			/**
			 * Label and character for first page button («)
			 */
			"sFirst": "\u00AB",

			/**
			 * Last page button (»)
			 */
			"sLast": "\u00BB",

			/**
			 * Next page button (›)
			 */
			"sNext": "\u203A",

			/**
			 * Previous page button (‹)
			 */
			"sPrevious": "\u2039",
		},

		/**
		 * Plural object for the data type the table is showing
		 */
		entries: {
			_: "entries",
			1: "entry"
		},

		/**
		 * This string is shown in preference to `zeroRecords` when the table is
		 * empty of data (regardless of filtering). Note that this is an optional
		 * parameter - if it is not given, the value of `zeroRecords` will be used
		 * instead (either the default or given value).
		 */
		"sEmptyTable": "No data available in table",


		/**
		 * This string gives information to the end user about the information
		 * that is current on display on the page. The following tokens can be
		 * used in the string and will be dynamically replaced as the table
		 * display updates. This tokens can be placed anywhere in the string, or
		 * removed as needed by the language requires:
		 *
		 * * `\_START\_` - Display index of the first record on the current page
		 * * `\_END\_` - Display index of the last record on the current page
		 * * `\_TOTAL\_` - Number of records in the table after filtering
		 * * `\_MAX\_` - Number of records in the table without filtering
		 * * `\_PAGE\_` - Current page number
		 * * `\_PAGES\_` - Total number of pages of data in the table
		 */
		"sInfo": "Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_",


		/**
		 * Display information string for when the table is empty. Typically the
		 * format of this string should match `info`.
		 */
		"sInfoEmpty": "Showing 0 to 0 of 0 _ENTRIES-TOTAL_",


		/**
		 * When a user filters the information in a table, this string is appended
		 * to the information (`info`) to give an idea of how strong the filtering
		 * is. The variable _MAX_ is dynamically updated.
		 */
		"sInfoFiltered": "(filtered from _MAX_ total _ENTRIES-MAX_)",


		/**
		 * If can be useful to append extra information to the info string at times,
		 * and this variable does exactly that. This information will be appended to
		 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
		 * being used) at all times.
		 */
		"sInfoPostFix": "",


		/**
		 * This decimal place operator is a little different from the other
		 * language options since DataTables doesn't output floating point
		 * numbers, so it won't ever use this for display of a number. Rather,
		 * what this parameter does is modify the sort methods of the table so
		 * that numbers which are in a format which has a character other than
		 * a period (`.`) as a decimal place will be sorted numerically.
		 *
		 * Note that numbers with different decimal places cannot be shown in
		 * the same table and still be sortable, the table must be consistent.
		 * However, multiple different tables on the page can use different
		 * decimal place characters.
		 */
		"sDecimal": "",


		/**
		 * DataTables has a build in number formatter (`formatNumber`) which is
		 * used to format large numbers that are used in the table information.
		 * By default a comma is used, but this can be trivially changed to any
		 * character you wish with this parameter.
		 */
		"sThousands": ",",


		/**
		 * Detail the action that will be taken when the drop down menu for the
		 * pagination length option is changed. The '_MENU_' variable is replaced
		 * with a default select list of 10, 25, 50 and 100, and can be replaced
		 * with a custom select box if required.
		 */
		"sLengthMenu": "_MENU_ _ENTRIES_ per page",


		/**
		 * When using Ajax sourced data and during the first draw when DataTables is
		 * gathering the data, this message is shown in an empty row in the table to
		 * indicate to the end user the the data is being loaded. Note that this
		 * parameter is not used when loading data by server-side processing, just
		 * Ajax sourced data with client-side processing.
		 */
		"sLoadingRecords": "Loading...",


		/**
		 * Text which is displayed when the table is processing a user action
		 * (usually a sort command or similar).
		 */
		"sProcessing": "",


		/**
		 * Details the actions that will be taken when the user types into the
		 * filtering input text box. The variable "_INPUT_", if used in the string,
		 * is replaced with the HTML text box for the filtering input allowing
		 * control over where it appears in the string. If "_INPUT_" is not given
		 * then the input box is appended to the string automatically.
		 */
		"sSearch": "Search:",


		/**
		 * Assign a `placeholder` attribute to the search `input` element
		 *  @type string
		 *  @default 
		 *
		 *  @dtopt Language
		 *  @name DataTable.defaults.language.searchPlaceholder
		 */
		"sSearchPlaceholder": "",


		/**
		 * All of the language information can be stored in a file on the
		 * server-side, which DataTables will look up if this parameter is passed.
		 * It must store the URL of the language file, which is in a JSON format,
		 * and the object has the same properties as the oLanguage object in the
		 * initialiser object (i.e. the above parameters). Please refer to one of
		 * the example language files to see how this works in action.
		 */
		"sUrl": "",


		/**
		 * Text shown inside the table records when the is no information to be
		 * displayed after filtering. `emptyTable` is shown when there is simply no
		 * information in the table at all (regardless of filtering).
		 */
		"sZeroRecords": "No matching records found"
	},


	/**
	 * This parameter allows you to have define the global filtering state at
	 * initialisation time. As an object the `search` parameter must be
	 * defined, but all other parameters are optional. When `regex` is true,
	 * the search string will be treated as a regular expression, when false
	 * (default) it will be treated as a straight string. When `smart`
	 * DataTables will use it's smart filtering methods (to word match at
	 * any point in the data), when false this will not be done.
	 */
	"oSearch": dataTables_$.extend( {}, DataTable.models.oSearch ),


	/**
	 * Table and control layout. This replaces the legacy `dom` option.
	 */
	layout: {
		topStart: 'pageLength',
		topEnd: 'search',
		bottomStart: 'info',
		bottomEnd: 'paging'
	},


	/**
	 * Legacy DOM layout option
	 */
	"sDom": null,


	/**
	 * Search delay option. This will throttle full table searches that use the
	 * DataTables provided search input element (it does not effect calls to
	 * `dt-api search()`, providing a delay before the search is made.
	 */
	"searchDelay": null,


	/**
	 * DataTables features six different built-in options for the buttons to
	 * display for pagination control:
	 *
	 * * `numbers` - Page number buttons only
	 * * `simple` - 'Previous' and 'Next' buttons only
	 * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
	 * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
	 * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
	 * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
	 */
	"sPaginationType": "full_numbers",


	/**
	 * Enable horizontal scrolling. When a table is too wide to fit into a
	 * certain layout, or you have a large number of columns in the table, you
	 * can enable x-scrolling to show the table in a viewport, which can be
	 * scrolled. This property can be `true` which will allow the table to
	 * scroll horizontally when needed, or any CSS unit, or a number (in which
	 * case it will be treated as a pixel measurement). Setting as simply `true`
	 * is recommended.
	 */
	"sScrollX": "",


	/**
	 * This property can be used to force a DataTable to use more width than it
	 * might otherwise do when x-scrolling is enabled. For example if you have a
	 * table which requires to be well spaced, this parameter is useful for
	 * "over-sizing" the table, and thus forcing scrolling. This property can by
	 * any CSS unit, or a number (in which case it will be treated as a pixel
	 * measurement).
	 */
	"sScrollXInner": "",


	/**
	 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
	 * to the given height, and enable scrolling for any data which overflows the
	 * current viewport. This can be used as an alternative to paging to display
	 * a lot of data in a small area (although paging and scrolling can both be
	 * enabled at the same time). This property can be any CSS unit, or a number
	 * (in which case it will be treated as a pixel measurement).
	 */
	"sScrollY": "",


	/**
	 * __Deprecated__ The functionality provided by this parameter has now been
	 * superseded by that provided through `ajax`, which should be used instead.
	 *
	 * Set the HTTP method that is used to make the Ajax call for server-side
	 * processing or Ajax sourced data.
	 */
	"sServerMethod": "GET",


	/**
	 * DataTables makes use of renderers when displaying HTML elements for
	 * a table. These renderers can be added or modified by plug-ins to
	 * generate suitable mark-up for a site. For example the Bootstrap
	 * integration plug-in for DataTables uses a paging button renderer to
	 * display pagination buttons in the mark-up required by Bootstrap.
	 *
	 * For further information about the renderers available see
	 * DataTable.ext.renderer
	 */
	"renderer": null,


	/**
	 * Set the data property name that DataTables should use to get a row's id
	 * to set as the `id` property in the node.
	 */
	"rowId": "DT_RowId",


	/**
	 * Caption value
	 */
	"caption": null
};

_fnHungarianMap( DataTable.defaults );



/*
 * Developer note - See note in model.defaults.js about the use of Hungarian
 * notation and camel case.
 */

/**
 * Column options that can be given to DataTables at initialisation time.
 *  @namespace
 */
DataTable.defaults.column = {
	/**
	 * Define which column(s) an order will occur on for this column. This
	 * allows a column's ordering to take multiple columns into account when
	 * doing a sort or use the data from a different column. For example first
	 * name / last name columns make sense to do a multi-column sort over the
	 * two columns.
	 */
	"aDataSort": null,
	"iDataSort": -1,

	ariaTitle: '',


	/**
	 * You can control the default ordering direction, and even alter the
	 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
	 * using this parameter.
	 */
	"asSorting": [ 'asc', 'desc', '' ],


	/**
	 * Enable or disable filtering on the data in this column.
	 */
	"bSearchable": true,


	/**
	 * Enable or disable ordering on this column.
	 */
	"bSortable": true,


	/**
	 * Enable or disable the display of this column.
	 */
	"bVisible": true,


	/**
	 * Developer definable function that is called whenever a cell is created (Ajax source,
	 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
	 * allowing you to modify the DOM element (add background colour for example) when the
	 * element is available.
	 */
	"fnCreatedCell": null,


	/**
	 * This property can be used to read data from any data source property,
	 * including deeply nested objects / properties. `data` can be given in a
	 * number of different ways which effect its behaviour:
	 *
	 * * `integer` - treated as an array index for the data source. This is the
	 *   default that DataTables uses (incrementally increased for each column).
	 * * `string` - read an object property from the data source. There are
	 *   three 'special' options that can be used in the string to alter how
	 *   DataTables reads the data from the source object:
	 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
	 *      Javascript to read from nested objects, so to can the options
	 *      specified in `data`. For example: `browser.version` or
	 *      `browser.name`. If your object parameter name contains a period, use
	 *      `\\` to escape it - i.e. `first\\.name`.
	 *    * `[]` - Array notation. DataTables can automatically combine data
	 *      from and array source, joining the data with the characters provided
	 *      between the two brackets. For example: `name[, ]` would provide a
	 *      comma-space separated list from the source array. If no characters
	 *      are provided between the brackets, the original array source is
	 *      returned.
	 *    * `()` - Function notation. Adding `()` to the end of a parameter will
	 *      execute a function of the name given. For example: `browser()` for a
	 *      simple function on the data source, `browser.version()` for a
	 *      function in a nested property or even `browser().version` to get an
	 *      object property if the function called returns an object. Note that
	 *      function notation is recommended for use in `render` rather than
	 *      `data` as it is much simpler to use as a renderer.
	 * * `null` - use the original data source for the row rather than plucking
	 *   data directly from it. This action has effects on two other
	 *   initialisation options:
	 *    * `defaultContent` - When null is given as the `data` option and
	 *      `defaultContent` is specified for the column, the value defined by
	 *      `defaultContent` will be used for the cell.
	 *    * `render` - When null is used for the `data` option and the `render`
	 *      option is specified for the column, the whole data source for the
	 *      row is used for the renderer.
	 * * `function` - the function given will be executed whenever DataTables
	 *   needs to set or get the data for a cell in the column. The function
	 *   takes three parameters:
	 *    * Parameters:
	 *      * `{array|object}` The data source for the row
	 *      * `{string}` The type call data requested - this will be 'set' when
	 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
	 *        when gathering data. Note that when `undefined` is given for the
	 *        type DataTables expects to get the raw data for the object back<
	 *      * `{*}` Data to set when the second parameter is 'set'.
	 *    * Return:
	 *      * The return value from the function is not required when 'set' is
	 *        the type of call, but otherwise the return is what will be used
	 *        for the data requested.
	 *
	 * Note that `data` is a getter and setter option. If you just require
	 * formatting of data for output, you will likely want to use `render` which
	 * is simply a getter and thus simpler to use.
	 *
	 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
	 * name change reflects the flexibility of this property and is consistent
	 * with the naming of mRender. If 'mDataProp' is given, then it will still
	 * be used by DataTables, as it automatically maps the old name to the new
	 * if required.
	 */
	"mData": null,


	/**
	 * This property is the rendering partner to `data` and it is suggested that
	 * when you want to manipulate data for display (including filtering,
	 * sorting etc) without altering the underlying data for the table, use this
	 * property. `render` can be considered to be the the read only companion to
	 * `data` which is read / write (then as such more complex). Like `data`
	 * this option can be given in a number of different ways to effect its
	 * behaviour:
	 *
	 * * `integer` - treated as an array index for the data source. This is the
	 *   default that DataTables uses (incrementally increased for each column).
	 * * `string` - read an object property from the data source. There are
	 *   three 'special' options that can be used in the string to alter how
	 *   DataTables reads the data from the source object:
	 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
	 *      Javascript to read from nested objects, so to can the options
	 *      specified in `data`. For example: `browser.version` or
	 *      `browser.name`. If your object parameter name contains a period, use
	 *      `\\` to escape it - i.e. `first\\.name`.
	 *    * `[]` - Array notation. DataTables can automatically combine data
	 *      from and array source, joining the data with the characters provided
	 *      between the two brackets. For example: `name[, ]` would provide a
	 *      comma-space separated list from the source array. If no characters
	 *      are provided between the brackets, the original array source is
	 *      returned.
	 *    * `()` - Function notation. Adding `()` to the end of a parameter will
	 *      execute a function of the name given. For example: `browser()` for a
	 *      simple function on the data source, `browser.version()` for a
	 *      function in a nested property or even `browser().version` to get an
	 *      object property if the function called returns an object.
	 * * `object` - use different data for the different data types requested by
	 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
	 *   of the object is the data type the property refers to and the value can
	 *   defined using an integer, string or function using the same rules as
	 *   `render` normally does. Note that an `_` option _must_ be specified.
	 *   This is the default value to use if you haven't specified a value for
	 *   the data type requested by DataTables.
	 * * `function` - the function given will be executed whenever DataTables
	 *   needs to set or get the data for a cell in the column. The function
	 *   takes three parameters:
	 *    * Parameters:
	 *      * {array|object} The data source for the row (based on `data`)
	 *      * {string} The type call data requested - this will be 'filter',
	 *        'display', 'type' or 'sort'.
	 *      * {array|object} The full data source for the row (not based on
	 *        `data`)
	 *    * Return:
	 *      * The return value from the function is what will be used for the
	 *        data requested.
	 */
	"mRender": null,


	/**
	 * Change the cell type created for the column - either TD cells or TH cells. This
	 * can be useful as TH cells have semantic meaning in the table body, allowing them
	 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
	 */
	"sCellType": "td",


	/**
	 * Class to give to each cell in this column.
	 */
	"sClass": "",

	/**
	 * When DataTables calculates the column widths to assign to each column,
	 * it finds the longest string in each column and then constructs a
	 * temporary table and reads the widths from that. The problem with this
	 * is that "mmm" is much wider then "iiii", but the latter is a longer
	 * string - thus the calculation can go wrong (doing it properly and putting
	 * it into an DOM object and measuring that is horribly(!) slow). Thus as
	 * a "work around" we provide this option. It will append its value to the
	 * text that is found to be the longest string for the column - i.e. padding.
	 * Generally you shouldn't need this!
	 */
	"sContentPadding": "",


	/**
	 * Allows a default value to be given for a column's data, and will be used
	 * whenever a null data source is encountered (this can be because `data`
	 * is set to null, or because the data source itself is null).
	 */
	"sDefaultContent": null,


	/**
	 * This parameter is only used in DataTables' server-side processing. It can
	 * be exceptionally useful to know what columns are being displayed on the
	 * client side, and to map these to database fields. When defined, the names
	 * also allow DataTables to reorder information from the server if it comes
	 * back in an unexpected order (i.e. if you switch your columns around on the
	 * client-side, your server-side code does not also need updating).
	 */
	"sName": "",


	/**
	 * Defines a data source type for the ordering which can be used to read
	 * real-time information from the table (updating the internally cached
	 * version) prior to ordering. This allows ordering to occur on user
	 * editable elements such as form inputs.
	 */
	"sSortDataType": "std",


	/**
	 * The title of this column.
	 */
	"sTitle": null,


	/**
	 * The type allows you to specify how the data for this column will be
	 * ordered. Four types (string, numeric, date and html (which will strip
	 * HTML tags before ordering)) are currently available. Note that only date
	 * formats understood by Javascript's Date() object will be accepted as type
	 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
	 * 'numeric', 'date' or 'html' (by default). Further types can be adding
	 * through plug-ins.
	 */
	"sType": null,


	/**
	 * Defining the width of the column, this parameter may take any CSS value
	 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
	 * been given a specific width through this interface ensuring that the table
	 * remains readable.
	 */
	"sWidth": null
};

_fnHungarianMap( DataTable.defaults.column );



/**
 * DataTables settings object - this holds all the information needed for a
 * given table, including configuration, data and current application of the
 * table options. DataTables does not have a single instance for each DataTable
 * with the settings attached to that instance, but rather instances of the
 * DataTable "class" are created on-the-fly as needed (typically by a
 * $().dataTable() call) and the settings object is then applied to that
 * instance.
 *
 * Note that this object is related to {@link DataTable.defaults} but this
 * one is the internal data store for DataTables's cache of columns. It should
 * NOT be manipulated outside of DataTables. Any configuration should be done
 * through the initialisation options.
 */
DataTable.models.oSettings = {
	/**
	 * Primary features of DataTables and their enablement state.
	 */
	"oFeatures": {

		/**
		 * Flag to say if DataTables should automatically try to calculate the
		 * optimum table and columns widths (true) or not (false).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bAutoWidth": null,

		/**
		 * Delay the creation of TR and TD elements until they are actually
		 * needed by a driven page draw. This can give a significant speed
		 * increase for Ajax source and Javascript source data, but makes no
		 * difference at all for DOM and server-side processing tables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bDeferRender": null,

		/**
		 * Enable filtering on the table or not. Note that if this is disabled
		 * then there is no filtering at all on the table, including fnFilter.
		 * To just remove the filtering input use sDom and remove the 'f' option.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bFilter": null,

		/**
		 * Used only for compatiblity with DT1
		 * @deprecated
		 */
		"bInfo": true,

		/**
		 * Used only for compatiblity with DT1
		 * @deprecated
		 */
		"bLengthChange": true,

		/**
		 * Pagination enabled or not. Note that if this is disabled then length
		 * changing must also be disabled.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bPaginate": null,

		/**
		 * Processing indicator enable flag whenever DataTables is enacting a
		 * user request - typically an Ajax request for server-side processing.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bProcessing": null,

		/**
		 * Server-side processing enabled flag - when enabled DataTables will
		 * get all data from the server for every draw - there is no filtering,
		 * sorting or paging done on the client-side.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bServerSide": null,

		/**
		 * Sorting enablement flag.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bSort": null,

		/**
		 * Multi-column sorting
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bSortMulti": null,

		/**
		 * Apply a class to the columns which are being sorted to provide a
		 * visual highlight or not. This can slow things down when enabled since
		 * there is a lot of DOM interaction.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bSortClasses": null,

		/**
		 * State saving enablement flag.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bStateSave": null
	},


	/**
	 * Scrolling settings for a table.
	 */
	"oScroll": {
		/**
		 * When the table is shorter in height than sScrollY, collapse the
		 * table container down to the height of the table (when true).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"bCollapse": null,

		/**
		 * Width of the scrollbar for the web-browser's platform. Calculated
		 * during table initialisation.
		 */
		"iBarWidth": 0,

		/**
		 * Viewport width for horizontal scrolling. Horizontal scrolling is
		 * disabled if an empty string.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"sX": null,

		/**
		 * Width to expand the table to when using x-scrolling. Typically you
		 * should not need to use this.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @deprecated
		 */
		"sXInner": null,

		/**
		 * Viewport height for vertical scrolling. Vertical scrolling is disabled
		 * if an empty string.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 */
		"sY": null
	},

	/**
	 * Language information for the table.
	 */
	"oLanguage": {
		/**
		 * Information callback function. See
		 * {@link DataTable.defaults.fnInfoCallback}
		 */
		"fnInfoCallback": null
	},

	/**
	 * Browser support parameters
	 */
	"oBrowser": {
		/**
		 * Determine if the vertical scrollbar is on the right or left of the
		 * scrolling container - needed for rtl language layout, although not
		 * all browsers move the scrollbar (Safari).
		 */
		"bScrollbarLeft": false,

		/**
		 * Browser scrollbar width
		 */
		"barWidth": 0
	},


	"ajax": null,


	/**
	 * Array referencing the nodes which are used for the features. The
	 * parameters of this object match what is allowed by sDom - i.e.
	 *   <ul>
	 *     <li>'l' - Length changing</li>
	 *     <li>'f' - Filtering input</li>
	 *     <li>'t' - The table!</li>
	 *     <li>'i' - Information</li>
	 *     <li>'p' - Pagination</li>
	 *     <li>'r' - pRocessing</li>
	 *   </ul>
	 */
	"aanFeatures": [],

	/**
	 * Store data information - see {@link DataTable.models.oRow} for detailed
	 * information.
	 */
	"aoData": [],

	/**
	 * Array of indexes which are in the current display (after filtering etc)
	 */
	"aiDisplay": [],

	/**
	 * Array of indexes for display - no filtering
	 */
	"aiDisplayMaster": [],

	/**
	 * Map of row ids to data indexes
	 */
	"aIds": {},

	/**
	 * Store information about each column that is in use
	 */
	"aoColumns": [],

	/**
	 * Store information about the table's header
	 */
	"aoHeader": [],

	/**
	 * Store information about the table's footer
	 */
	"aoFooter": [],

	/**
	 * Store the applied global search information in case we want to force a
	 * research or compare the old search to a new one.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"oPreviousSearch": {},

	/**
	 * Store for named searches
	 */
	searchFixed: {},

	/**
	 * Store the applied search for each column - see
	 * {@link DataTable.models.oSearch} for the format that is used for the
	 * filtering information for each column.
	 */
	"aoPreSearchCols": [],

	/**
	 * Sorting that is applied to the table. Note that the inner arrays are
	 * used in the following manner:
	 * <ul>
	 *   <li>Index 0 - column number</li>
	 *   <li>Index 1 - current sorting direction</li>
	 * </ul>
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"aaSorting": null,

	/**
	 * Sorting that is always applied to the table (i.e. prefixed in front of
	 * aaSorting).
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"aaSortingFixed": [],

	/**
	 * If restoring a table - we should restore its width
	 */
	"sDestroyWidth": 0,

	/**
	 * Callback functions array for every time a row is inserted (i.e. on a draw).
	 */
	"aoRowCallback": [],

	/**
	 * Callback functions for the header on each draw.
	 */
	"aoHeaderCallback": [],

	/**
	 * Callback function for the footer on each draw.
	 */
	"aoFooterCallback": [],

	/**
	 * Array of callback functions for draw callback functions
	 */
	"aoDrawCallback": [],

	/**
	 * Array of callback functions for row created function
	 */
	"aoRowCreatedCallback": [],

	/**
	 * Callback functions for just before the table is redrawn. A return of
	 * false will be used to cancel the draw.
	 */
	"aoPreDrawCallback": [],

	/**
	 * Callback functions for when the table has been initialised.
	 */
	"aoInitComplete": [],


	/**
	 * Callbacks for modifying the settings to be stored for state saving, prior to
	 * saving state.
	 */
	"aoStateSaveParams": [],

	/**
	 * Callbacks for modifying the settings that have been stored for state saving
	 * prior to using the stored values to restore the state.
	 */
	"aoStateLoadParams": [],

	/**
	 * Callbacks for operating on the settings object once the saved state has been
	 * loaded
	 */
	"aoStateLoaded": [],

	/**
	 * Cache the table ID for quick access
	 */
	"sTableId": "",

	/**
	 * The TABLE node for the main table
	 */
	"nTable": null,

	/**
	 * Permanent ref to the thead element
	 */
	"nTHead": null,

	/**
	 * Permanent ref to the tfoot element - if it exists
	 */
	"nTFoot": null,

	/**
	 * Permanent ref to the tbody element
	 */
	"nTBody": null,

	/**
	 * Cache the wrapper node (contains all DataTables controlled elements)
	 */
	"nTableWrapper": null,

	/**
	 * Indicate if all required information has been read in
	 */
	"bInitialised": false,

	/**
	 * Information about open rows. Each object in the array has the parameters
	 * 'nTr' and 'nParent'
	 */
	"aoOpenRows": [],

	/**
	 * Dictate the positioning of DataTables' control elements - see
	 * {@link DataTable.model.oInit.sDom}.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"sDom": null,

	/**
	 * Search delay (in mS)
	 */
	"searchDelay": null,

	/**
	 * Which type of pagination should be used.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"sPaginationType": "two_button",

	/**
	 * Number of paging controls on the page. Only used for backwards compatibility
	 */
	pagingControls: 0,

	/**
	 * The state duration (for `stateSave`) in seconds.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"iStateDuration": 0,

	/**
	 * Array of callback functions for state saving. Each array element is an
	 * object with the following parameters:
	 *   <ul>
	 *     <li>function:fn - function to call. Takes two parameters, oSettings
	 *       and the JSON string to save that has been thus far created. Returns
	 *       a JSON string to be inserted into a json object
	 *       (i.e. '"param": [ 0, 1, 2]')</li>
	 *     <li>string:sName - name of callback</li>
	 *   </ul>
	 */
	"aoStateSave": [],

	/**
	 * Array of callback functions for state loading. Each array element is an
	 * object with the following parameters:
	 *   <ul>
	 *     <li>function:fn - function to call. Takes two parameters, oSettings
	 *       and the object stored. May return false to cancel state loading</li>
	 *     <li>string:sName - name of callback</li>
	 *   </ul>
	 */
	"aoStateLoad": [],

	/**
	 * State that was saved. Useful for back reference
	 */
	"oSavedState": null,

	/**
	 * State that was loaded. Useful for back reference
	 */
	"oLoadedState": null,

	/**
	 * Note if draw should be blocked while getting data
	 */
	"bAjaxDataGet": true,

	/**
	 * The last jQuery XHR object that was used for server-side data gathering.
	 * This can be used for working with the XHR information in one of the
	 * callbacks
	 */
	"jqXHR": null,

	/**
	 * JSON returned from the server in the last Ajax request
	 */
	"json": undefined,

	/**
	 * Data submitted as part of the last Ajax request
	 */
	"oAjaxData": undefined,

	/**
	 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
	 * required).
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"sServerMethod": null,

	/**
	 * Format numbers for display.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"fnFormatNumber": null,

	/**
	 * List of options that can be used for the user selectable length menu.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"aLengthMenu": null,

	/**
	 * Counter for the draws that the table does. Also used as a tracker for
	 * server-side processing
	 */
	"iDraw": 0,

	/**
	 * Indicate if a redraw is being done - useful for Ajax
	 */
	"bDrawing": false,

	/**
	 * Draw index (iDraw) of the last error when parsing the returned data
	 */
	"iDrawError": -1,

	/**
	 * Paging display length
	 */
	"_iDisplayLength": 10,

	/**
	 * Paging start point - aiDisplay index
	 */
	"_iDisplayStart": 0,

	/**
	 * Server-side processing - number of records in the result set
	 * (i.e. before filtering), Use fnRecordsTotal rather than
	 * this property to get the value of the number of records, regardless of
	 * the server-side processing setting.
	 */
	"_iRecordsTotal": 0,

	/**
	 * Server-side processing - number of records in the current display set
	 * (i.e. after filtering). Use fnRecordsDisplay rather than
	 * this property to get the value of the number of records, regardless of
	 * the server-side processing setting.
	 */
	"_iRecordsDisplay": 0,

	/**
	 * The classes to use for the table
	 */
	"oClasses": {},

	/**
	 * Flag attached to the settings object so you can check in the draw
	 * callback if filtering has been done in the draw. Deprecated in favour of
	 * events.
	 *  @deprecated
	 */
	"bFiltered": false,

	/**
	 * Flag attached to the settings object so you can check in the draw
	 * callback if sorting has been done in the draw. Deprecated in favour of
	 * events.
	 *  @deprecated
	 */
	"bSorted": false,

	/**
	 * Indicate that if multiple rows are in the header and there is more than
	 * one unique cell per column, if the top one (true) or bottom one (false)
	 * should be used for sorting / title by DataTables.
	 * Note that this parameter will be set by the initialisation routine. To
	 * set a default use {@link DataTable.defaults}.
	 */
	"bSortCellsTop": null,

	/**
	 * Initialisation object that is used for the table
	 */
	"oInit": null,

	/**
	 * Destroy callback functions - for plug-ins to attach themselves to the
	 * destroy so they can clean up markup and events.
	 */
	"aoDestroyCallback": [],


	/**
	 * Get the number of records in the current record set, before filtering
	 */
	"fnRecordsTotal": function ()
	{
		return _fnDataSource( this ) == 'ssp' ?
			this._iRecordsTotal * 1 :
			this.aiDisplayMaster.length;
	},

	/**
	 * Get the number of records in the current record set, after filtering
	 */
	"fnRecordsDisplay": function ()
	{
		return _fnDataSource( this ) == 'ssp' ?
			this._iRecordsDisplay * 1 :
			this.aiDisplay.length;
	},

	/**
	 * Get the display end point - aiDisplay index
	 */
	"fnDisplayEnd": function ()
	{
		var
			len      = this._iDisplayLength,
			start    = this._iDisplayStart,
			calc     = start + len,
			records  = this.aiDisplay.length,
			features = this.oFeatures,
			paginate = features.bPaginate;

		if ( features.bServerSide ) {
			return paginate === false || len === -1 ?
				start + records :
				Math.min( start+len, this._iRecordsDisplay );
		}
		else {
			return ! paginate || calc>records || len===-1 ?
				records :
				calc;
		}
	},

	/**
	 * The DataTables object for this table
	 */
	"oInstance": null,

	/**
	 * Unique identifier for each instance of the DataTables object. If there
	 * is an ID on the table node, then it takes that value, otherwise an
	 * incrementing internal counter is used.
	 */
	"sInstance": null,

	/**
	 * tabindex attribute value that is added to DataTables control elements, allowing
	 * keyboard navigation of the table and its controls.
	 */
	"iTabIndex": 0,

	/**
	 * DIV container for the footer scrolling table if scrolling
	 */
	"nScrollHead": null,

	/**
	 * DIV container for the footer scrolling table if scrolling
	 */
	"nScrollFoot": null,

	/**
	 * Last applied sort
	 */
	"aLastSort": [],

	/**
	 * Stored plug-in instances
	 */
	"oPlugins": {},

	/**
	 * Function used to get a row's id from the row's data
	 */
	"rowIdFn": null,

	/**
	 * Data location where to store a row's id
	 */
	"rowId": null,

	caption: '',

	captionNode: null,

	colgroup: null
};

/**
 * Extension object for DataTables that is used to provide all extension
 * options.
 *
 * Note that the `DataTable.ext` object is available through
 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
 *  @namespace
 *  @extends DataTable.models.ext
 */


var extPagination = DataTable.ext.pager;

// Paging buttons configuration
dataTables_$.extend( extPagination, {
	simple: function () {
		return [ 'previous', 'next' ];
	},

	full: function () {
		return [  'first', 'previous', 'next', 'last' ];
	},

	numbers: function () {
		return [ 'numbers' ];
	},

	simple_numbers: function () {
		return [ 'previous', 'numbers', 'next' ];
	},

	full_numbers: function () {
		return [ 'first', 'previous', 'numbers', 'next', 'last' ];
	},
	
	first_last: function () {
		return ['first', 'last'];
	},
	
	first_last_numbers: function () {
		return ['first', 'numbers', 'last'];
	},

	// For testing and plug-ins to use
	_numbers: _pagingNumbers,

	// Number of number buttons - legacy, use `numbers` option for paging feature
	numbers_length: 7
} );


dataTables_$.extend( true, DataTable.ext.renderer, {
	pagingButton: {
		_: function (settings, buttonType, content, active, disabled) {
			var classes = settings.oClasses.paging;
			var btnClasses = [classes.button];
			var btn;

			if (active) {
				btnClasses.push(classes.active);
			}

			if (disabled) {
				btnClasses.push(classes.disabled)
			}

			if (buttonType === 'ellipsis') {
				btn = dataTables_$('<span class="ellipsis"></span>').html(content)[0];
			}
			else {
				btn = dataTables_$('<button>', {
					class: btnClasses.join(' '),
					role: 'link',
					type: 'button'
				}).html(content);
			}

			return {
				display: btn,
				clicker: btn
			}
		}
	},

	pagingContainer: {
		_: function (settings, buttons) {
			// No wrapping element - just append directly to the host
			return buttons;
		}
	}
} );

// Common function to remove new lines, strip HTML and diacritic control
var _filterString = function (stripHtml, normalize) {
	return function (str) {
		if (_empty(str) || typeof str !== 'string') {
			return str;
		}

		str = str.replace( _re_new_lines, " " );

		if (stripHtml) {
			str = _stripHtml(str);
		}

		if (normalize) {
			str = _normalize(str, false);
		}

		return str;
	};
}

/*
 * Public helper functions. These aren't used internally by DataTables, or
 * called by any of the options passed into DataTables, but they can be used
 * externally by developers working with DataTables. They are helper functions
 * to make working with DataTables a little bit easier.
 */

function __mldFnName(name) {
	return name.replace(/[\W]/g, '_')
}

// Common logic for moment, luxon or a date action
function __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {
	if (window.moment) {
		return dt[momentFn]( arg1 );
	}
	else if (window.luxon) {
		return dt[luxonFn]( arg1 );
	}
	
	return dateFn ? dt[dateFn]( arg1 ) : dt;
}


var __mlWarning = false;
function __mldObj (d, format, locale) {
	var dt;

	if (window.moment) {
		dt = window.moment.utc( d, format, locale, true );

		if (! dt.isValid()) {
			return null;
		}
	}
	else if (window.luxon) {
		dt = format && typeof d === 'string'
			? window.luxon.DateTime.fromFormat( d, format )
			: window.luxon.DateTime.fromISO( d );

		if (! dt.isValid) {
			return null;
		}

		dt.setLocale(locale);
	}
	else if (! format) {
		// No format given, must be ISO
		dt = new Date(d);
	}
	else {
		if (! __mlWarning) {
			alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');
		}

		__mlWarning = true;
	}

	return dt;
}

// Wrapper for date, datetime and time which all operate the same way with the exception of
// the output string for auto locale support
function __mlHelper (localeString) {
	return function ( from, to, locale, def ) {
		// Luxon and Moment support
		// Argument shifting
		if ( arguments.length === 0 ) {
			locale = 'en';
			to = null; // means toLocaleString
			from = null; // means iso8601
		}
		else if ( arguments.length === 1 ) {
			locale = 'en';
			to = from;
			from = null;
		}
		else if ( arguments.length === 2 ) {
			locale = to;
			to = from;
			from = null;
		}

		var typeName = 'datetime' + (to ? '-' + __mldFnName(to) : '');

		// Add type detection and sorting specific to this date format - we need to be able to identify
		// date type columns as such, rather than as numbers in extensions. Hence the need for this.
		if (! DataTable.ext.type.order[typeName]) {
			DataTable.type(typeName, {
				detect: function (d) {
					// The renderer will give the value to type detect as the type!
					return d === typeName ? typeName : false;
				},
				order: {
					pre: function (d) {
						// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a
						// `valueOf` which gives milliseconds epoch
						return d.valueOf();
					}
				},
				className: 'dt-right'
			});
		}
	
		return function ( d, type ) {
			// Allow for a default value
			if (d === null || d === undefined) {
				if (def === '--now') {
					// We treat everything as UTC further down, so no changes are
					// made, as such need to get the local date / time as if it were
					// UTC
					var local = new Date();
					d = new Date( Date.UTC(
						local.getFullYear(), local.getMonth(), local.getDate(),
						local.getHours(), local.getMinutes(), local.getSeconds()
					) );
				}
				else {
					d = '';
				}
			}

			if (type === 'type') {
				// Typing uses the type name for fast matching
				return typeName;
			}

			if (d === '') {
				return type !== 'sort'
					? ''
					: __mldObj('0000-01-01 00:00:00', null, locale);
			}

			// Shortcut. If `from` and `to` are the same, we are using the renderer to
			// format for ordering, not display - its already in the display format.
			if ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {
				return d;
			}

			var dt = __mldObj(d, from, locale);

			if (dt === null) {
				return d;
			}

			if (type === 'sort') {
				return dt;
			}
			
			var formatted = to === null
				? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()
				: __mld(dt, 'format', 'toFormat', 'toISOString', to);

			// XSS protection
			return type === 'display' ?
				_escapeHtml( formatted ) :
				formatted;
		};
	}
}

// Based on locale, determine standard number formatting
// Fallback for legacy browsers is US English
var __thousands = ',';
var __decimal = '.';

if (window.Intl !== undefined) {
	try {
		var num = new Intl.NumberFormat().formatToParts(100000.1);
	
		for (var i=0 ; i<num.length ; i++) {
			if (num[i].type === 'group') {
				__thousands = num[i].value;
			}
			else if (num[i].type === 'decimal') {
				__decimal = num[i].value;
			}
		}
	}
	catch (e) {
		// noop
	}
}

// Formatted date time detection - use by declaring the formats you are going to use
DataTable.datetime = function ( format, locale ) {
	var typeName = 'datetime-detect-' + __mldFnName(format);

	if (! locale) {
		locale = 'en';
	}

	if (! DataTable.ext.type.order[typeName]) {
		DataTable.type(typeName, {
			detect: function (d) {
				var dt = __mldObj(d, format, locale);
				return d === '' || dt ? typeName : false;
			},
			order: {
				pre: function (d) {
					return __mldObj(d, format, locale) || 0;
				}
			},
			className: 'dt-right'
		});
	}
}

/**
 * Helpers for `columns.render`.
 *
 * The options defined here can be used with the `columns.render` initialisation
 * option to provide a display renderer. The following functions are defined:
 *
 * * `moment` - Uses the MomentJS library to convert from a given format into another.
 * This renderer has three overloads:
 *   * 1 parameter:
 *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)
 *   * 2 parameters:
 *     * `string` - Format to convert from
 *     * `string` - Format to convert to. Assumes `en` locale
 *   * 3 parameters:
 *     * `string` - Format to convert from
 *     * `string` - Format to convert to
 *     * `string` - Locale
 * * `number` - Will format numeric data (defined by `columns.data`) for
 *   display, retaining the original unformatted data for sorting and filtering.
 *   It takes 5 parameters:
 *   * `string` - Thousands grouping separator
 *   * `string` - Decimal point indicator
 *   * `integer` - Number of decimal points to show
 *   * `string` (optional) - Prefix.
 *   * `string` (optional) - Postfix (/suffix).
 * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
 *   parameters.
 *
 * @example
 *   // Column definition using the number renderer
 *   {
 *     data: "salary",
 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
 *   }
 *
 * @namespace
 */
DataTable.render = {
	date: __mlHelper('toLocaleDateString'),
	datetime: __mlHelper('toLocaleString'),
	time: __mlHelper('toLocaleTimeString'),
	number: function ( thousands, decimal, precision, prefix, postfix ) {
		// Auto locale detection
		if (thousands === null || thousands === undefined) {
			thousands = __thousands;
		}

		if (decimal === null || decimal === undefined) {
			decimal = __decimal;
		}

		return {
			display: function ( d ) {
				if ( typeof d !== 'number' && typeof d !== 'string' ) {
					return d;
				}

				if (d === '' || d === null) {
					return d;
				}

				var negative = d < 0 ? '-' : '';
				var flo = parseFloat( d );
				var abs = Math.abs(flo);

				// Scientific notation for large and small numbers
				if (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {
					var exp = flo.toExponential(precision).split(/e\+?/);
					return exp[0] + ' x 10<sup>' + exp[1] + '</sup>';
				}

				// If NaN then there isn't much formatting that we can do - just
				// return immediately, escaping any HTML (this was supposed to
				// be a number after all)
				if ( isNaN( flo ) ) {
					return _escapeHtml( d );
				}

				flo = flo.toFixed( precision );
				d = Math.abs( flo );

				var intPart = parseInt( d, 10 );
				var floatPart = precision ?
					decimal+(d - intPart).toFixed( precision ).substring( 2 ):
					'';

				// If zero, then can't have a negative prefix
				if (intPart === 0 && parseFloat(floatPart) === 0) {
					negative = '';
				}

				return negative + (prefix||'') +
					intPart.toString().replace(
						/\B(?=(\d{3})+(?!\d))/g, thousands
					) +
					floatPart +
					(postfix||'');
			}
		};
	},

	text: function () {
		return {
			display: _escapeHtml,
			filter: _escapeHtml
		};
	}
};


var _extTypes = DataTable.ext.type;

// Get / set type
DataTable.type = function (name, prop, val) {
	if (! prop) {
		return {
			className: _extTypes.className[name],
			detect: _extTypes.detect.find(function (fn) {
				return fn.name === name;
			}),
			order: {
				pre: _extTypes.order[name + '-pre'],
				asc: _extTypes.order[name + '-asc'],
				desc: _extTypes.order[name + '-desc']
			},
			render: _extTypes.render[name],
			search: _extTypes.search[name]
		};
	}

	var setProp = function(prop, propVal) {
		_extTypes[prop][name] = propVal;
	};
	var setDetect = function (fn) {
		// Wrap to allow the function to return `true` rather than
		// specifying the type name.
		var cb = function (d, s) {
			var ret = fn(d, s);

			return ret === true
				? name
				: ret;
		};
		Object.defineProperty(cb, "name", {value: name});

		var idx = _extTypes.detect.findIndex(function (fn) {
			return fn.name === name;
		});

		if (idx === -1) {
			_extTypes.detect.unshift(cb);
		}
		else {
			_extTypes.detect.splice(idx, 1, cb);
		}
	};
	var setOrder = function (obj) {
		_extTypes.order[name + '-pre'] = obj.pre; // can be undefined
		_extTypes.order[name + '-asc'] = obj.asc; // can be undefined
		_extTypes.order[name + '-desc'] = obj.desc; // can be undefined
	};

	// prop is optional
	if (val === undefined) {
		val = prop;
		prop = null;
	}

	if (prop === 'className') {
		setProp('className', val);
	}
	else if (prop === 'detect') {
		setDetect(val);
	}
	else if (prop === 'order') {
		setOrder(val);
	}
	else if (prop === 'render') {
		setProp('render', val);
	}
	else if (prop === 'search') {
		setProp('search', val);
	}
	else if (! prop) {
		if (val.className) {
			setProp('className', val.className);
		}

		if (val.detect !== undefined) {
			setDetect(val.detect);
		}

		if (val.order) {
			setOrder(val.order);
		}

		if (val.render !== undefined) {
			setProp('render', val.render);
		}

		if (val.search !== undefined) {
			setProp('search', val.search);
		}
	}
}

// Get a list of types
DataTable.types = function () {
	return _extTypes.detect.map(function (fn) {
		return fn.name;
	});
};

//
// Built in data types
//

DataTable.type('string', {
	detect: function () {
		return 'string';
	},
	order: {
		pre: function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		}
	},
	search: _filterString(false, true)
});


DataTable.type('html', {
	detect: function ( d ) {
		return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
			'html' : null;
	},
	order: {
		pre: function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					_stripHtml(a).trim().toLowerCase() :
					a+'';
		}
	},
	search: _filterString(true, true)
});


DataTable.type('date', {
	className: 'dt-type-date',
	detect: function ( d )
	{
		// V8 tries _very_ hard to make a string passed into `Date.parse()`
		// valid, so we need to use a regex to restrict date formats. Use a
		// plug-in for anything other than ISO8601 style strings
		if ( d && !(d instanceof Date) && ! _re_date.test(d) ) {
			return null;
		}
		var parsed = Date.parse(d);
		return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
	},
	order: {
		pre: function ( d ) {
			var ts = Date.parse( d );
			return isNaN(ts) ? -Infinity : ts;
		}
	}
});


DataTable.type('html-num-fmt', {
	className: 'dt-type-numeric',
	detect: function ( d, settings )
	{
		var decimal = settings.oLanguage.sDecimal;
		return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt' : null;
	},
	order: {
		pre: function ( d, s ) {
			var dp = s.oLanguage.sDecimal;
			return __numericReplace( d, dp, _re_html, _re_formatted_numeric );
		}
	},
	search: _filterString(true, true)
});


DataTable.type('html-num', {
	className: 'dt-type-numeric',
	detect: function ( d, settings )
	{
		var decimal = settings.oLanguage.sDecimal;
		return _htmlNumeric( d, decimal ) ? 'html-num' : null;
	},
	order: {
		pre: function ( d, s ) {
			var dp = s.oLanguage.sDecimal;
			return __numericReplace( d, dp, _re_html );
		}
	},
	search: _filterString(true, true)
});


DataTable.type('num-fmt', {
	className: 'dt-type-numeric',
	detect: function ( d, settings )
	{
		var decimal = settings.oLanguage.sDecimal;
		return _isNumber( d, decimal, true ) ? 'num-fmt' : null;
	},
	order: {
		pre: function ( d, s ) {
			var dp = s.oLanguage.sDecimal;
			return __numericReplace( d, dp, _re_formatted_numeric );
		}
	}
});


DataTable.type('num', {
	className: 'dt-type-numeric',
	detect: function ( d, settings )
	{
		var decimal = settings.oLanguage.sDecimal;
		return _isNumber( d, decimal ) ? 'num' : null;
	},
	order: {
		pre: function (d, s) {
			var dp = s.oLanguage.sDecimal;
			return __numericReplace( d, dp );
		}
	}
});




var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
	if ( d !== 0 && (!d || d === '-') ) {
		return -Infinity;
	}
	
	var type = typeof d;

	if (type === 'number' || type === 'bigint') {
		return d;
	}

	// If a decimal place other than `.` is used, it needs to be given to the
	// function so we can detect it and replace with a `.` which is the only
	// decimal place Javascript recognises - it is not locale aware.
	if ( decimalPlace ) {
		d = _numToDecimal( d, decimalPlace );
	}

	if ( d.replace ) {
		if ( re1 ) {
			d = d.replace( re1, '' );
		}

		if ( re2 ) {
			d = d.replace( re2, '' );
		}
	}

	return d * 1;
};


dataTables_$.extend( true, DataTable.ext.renderer, {
	footer: {
		_: function ( settings, cell, classes ) {
			cell.addClass(classes.tfoot.cell);
		}
	},

	header: {
		_: function ( settings, cell, classes ) {
			cell.addClass(classes.thead.cell);

			if (! settings.oFeatures.bSort) {
				cell.addClass(classes.order.none);
			}

			var legacyTop = settings.bSortCellsTop;
			var headerRows = cell.closest('thead').find('tr');
			var rowIdx = cell.parent().index();

			// Conditions to not apply the ordering icons
			if (
				// Cells and rows which have the attribute to disable the icons
				cell.attr('data-dt-order') === 'disable' ||
				cell.parent().attr('data-dt-order') === 'disable' ||

				// Legacy support for `orderCellsTop`. If it is set, then cells
				// which are not in the top or bottom row of the header (depending
				// on the value) do not get the sorting classes applied to them
				(legacyTop === true && rowIdx !== 0) ||
				(legacyTop === false && rowIdx !== headerRows.length - 1)
			) {
				return;
			}

			// No additional mark-up required
			// Attach a sort listener to update on sort - note that using the
			// `DT` namespace will allow the event to be removed automatically
			// on destroy, while the `dt` namespaced event is the one we are
			// listening for
			dataTables_$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting ) {
				if ( settings !== ctx ) { // need to check this this is the host
					return;               // table, not a nested one
				}

				var orderClasses = classes.order;
				var columns = ctx.api.columns( cell );
				var col = settings.aoColumns[columns.flatten()[0]];
				var orderable = columns.orderable().includes(true);
				var ariaType = '';
				var indexes = columns.indexes();
				var sortDirs = columns.orderable(true).flatten();
				var orderedColumns = ',' + sorting.map( function (val) {
					return val.col;
				} ).join(',') + ',';

				cell
					.removeClass(
						orderClasses.isAsc +' '+
						orderClasses.isDesc
					)
					.toggleClass( orderClasses.none, ! orderable )
					.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )
					.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );
				
				var sortIdx = orderedColumns.indexOf( ',' + indexes.toArray().join(',') + ',' );

				if ( sortIdx !== -1 ) {
					// Get the ordering direction for the columns under this cell
					// Note that it is possible for a cell to be asc and desc sorting
					// (column spanning cells)
					var orderDirs = columns.order();

					cell.addClass(
						orderDirs.includes('asc') ? orderClasses.isAsc : '' +
						orderDirs.includes('desc') ? orderClasses.isDesc : ''
					);
				}

				// The ARIA spec says that only one column should be marked with aria-sort
				if ( sortIdx === 0 ) {
					var firstSort = sorting[0];
					var sortOrder = col.asSorting;

					cell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');

					// Determine if the next click will remove sorting or change the sort
					ariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';
				}
				else {
					cell.removeAttr('aria-sort');
				}

				cell.attr('aria-label', orderable
					? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)
					: col.ariaTitle
				);

				if (orderable) {
					cell.find('.dt-column-title').attr('role', 'button');
					cell.attr('tabindex', 0)
				}
			} );
		}
	},

	layout: {
		_: function ( settings, container, items ) {
			var row = dataTables_$('<div/>')
				.addClass('dt-layout-row')
				.appendTo( container );

			dataTables_$.each( items, function (key, val) {
				var klass = ! val.table ?
					'dt-'+key+' ' :
					'';

				if (val.table) {
					row.addClass('dt-layout-table');
				}

				dataTables_$('<div/>')
					.attr({
						id: val.id || null,
						"class": 'dt-layout-cell '+klass+(val.className || '')
					})
					.append( val.contents )
					.appendTo( row );
			} );
		}
	}
} );


DataTable.feature = {};

// Third parameter is internal only!
DataTable.feature.register = function ( name, cb, legacy ) {
	DataTable.ext.features[ name ] = cb;

	if (legacy) {
		_ext.feature.push({
			cFeature: legacy,
			fnInit: cb
		});
	}
};

DataTable.feature.register( 'info', function ( settings, opts ) {
	// For compatibility with the legacy `info` top level option
	if (! settings.oFeatures.bInfo) {
		return null;
	}

	var
		lang  = settings.oLanguage,
		tid = settings.sTableId,
		n = dataTables_$('<div/>', {
			'class': settings.oClasses.info.container,
		} );

	opts = dataTables_$.extend({
		callback: lang.fnInfoCallback,
		empty: lang.sInfoEmpty,
		postfix: lang.sInfoPostFix,
		search: lang.sInfoFiltered,
		text: lang.sInfo,
	}, opts);


	// Update display on each draw
	settings.aoDrawCallback.push(function (s) {
		_fnUpdateInfo(s, opts, n);
	});

	// For the first info display in the table, we add a callback and aria information.
	if (! settings._infoEl) {
		n.attr({
			'aria-live': 'polite',
			id: tid+'_info',
			role: 'status'
		});

		// Table is described by our info div
		dataTables_$(settings.nTable).attr( 'aria-describedby', tid+'_info' );

		settings._infoEl = n;
	}

	return n;
}, 'i' );

/**
 * Update the information elements in the display
 *  @param {object} settings dataTables settings object
 *  @memberof DataTable#oApi
 */
function _fnUpdateInfo ( settings, opts, node )
{
	var
		start = settings._iDisplayStart+1,
		end   = settings.fnDisplayEnd(),
		max   = settings.fnRecordsTotal(),
		total = settings.fnRecordsDisplay(),
		out   = total
			? opts.text
			: opts.empty;

	if ( total !== max ) {
		// Record set after filtering
		out += ' ' + opts.search;
	}

	// Convert the macros
	out += opts.postfix;
	out = _fnMacros( settings, out );

	if ( opts.callback ) {
		out = opts.callback.call( settings.oInstance,
			settings, start, end, max, total, out
		);
	}

	node.html( out );

	_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);
}

var __searchCounter = 0;

// opts
// - text
// - placeholder
DataTable.feature.register( 'search', function ( settings, opts ) {
	// Don't show the input if filtering isn't available on the table
	if (! settings.oFeatures.bFilter) {
		return null;
	}

	var classes = settings.oClasses.search;
	var tableId = settings.sTableId;
	var language = settings.oLanguage;
	var previousSearch = settings.oPreviousSearch;
	var input = '<input type="search" class="'+classes.input+'"/>';

	opts = dataTables_$.extend({
		placeholder: language.sSearchPlaceholder,
		text: language.sSearch
	}, opts);

	// The _INPUT_ is optional - is appended if not present
	if (opts.text.indexOf('_INPUT_') === -1) {
		opts.text += '_INPUT_';
	}

	opts.text = _fnMacros(settings, opts.text);

	// We can put the <input> outside of the label if it is at the start or end
	// which helps improve accessability (not all screen readers like implicit
	// for elements).
	var end = opts.text.match(/_INPUT_$/);
	var start = opts.text.match(/^_INPUT_/);
	var removed = opts.text.replace(/_INPUT_/, '');
	var str = '<label>' + opts.text + '</label>';

	if (start) {
		str = '_INPUT_<label>' + removed + '</label>';
	}
	else if (end) {
		str = '<label>' + removed + '</label>_INPUT_';
	}

	var filter = dataTables_$('<div>')
		.addClass(classes.container)
		.append(str.replace(/_INPUT_/, input));

	// add for and id to label and input
	filter.find('label').attr('for', 'dt-search-' + __searchCounter);
	filter.find('input').attr('id', 'dt-search-' + __searchCounter);
	__searchCounter++;

	var searchFn = function(event) {
		var val = this.value;

		if(previousSearch.return && event.key !== "Enter") {
			return;
		}

		/* Now do the filter */
		if ( val != previousSearch.search ) {
			previousSearch.search = val;

			_fnFilterComplete( settings, previousSearch );

			// Need to redraw, without resorting
			settings._iDisplayStart = 0;
			_fnDraw( settings );
		}
	};

	var searchDelay = settings.searchDelay !== null ?
		settings.searchDelay :
		0;

	var jqFilter = dataTables_$('input', filter)
		.val( previousSearch.search )
		.attr( 'placeholder', opts.placeholder )
		.on(
			'keyup.DT search.DT input.DT paste.DT cut.DT',
			searchDelay ?
				DataTable.util.debounce( searchFn, searchDelay ) :
				searchFn
		)
		.on( 'mouseup.DT', function(e) {
			// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking
			// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`
			// checks the value to see if it has changed. In other browsers it won't have.
			setTimeout( function () {
				searchFn.call(jqFilter[0], e);
			}, 10);
		} )
		.on( 'keypress.DT', function(e) {
			/* Prevent form submission */
			if ( e.keyCode == 13 ) {
				return false;
			}
		} )
		.attr('aria-controls', tableId);

	// Update the input elements whenever the table is filtered
	dataTables_$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
		if ( settings === s && jqFilter[0] !== document.activeElement ) {
			jqFilter.val( typeof previousSearch.search !== 'function'
				? previousSearch.search
				: ''
			);
		}
	} );

	return filter;
}, 'f' );

// opts
// - type - button configuration
// - buttons - number of buttons to show - must be odd
DataTable.feature.register( 'paging', function ( settings, opts ) {
	// Don't show the paging input if the table doesn't have paging enabled
	if (! settings.oFeatures.bPaginate) {
		return null;
	}

	opts = dataTables_$.extend({
		buttons: DataTable.ext.pager.numbers_length,
		type: settings.sPaginationType,
		boundaryNumbers: true
	}, opts);

	// To be removed in 2.1
	if (opts.numbers) {
		opts.buttons = opts.numbers;
	}

	var host = dataTables_$('<div/>').addClass( settings.oClasses.paging.container + ' paging_' + opts.type );
	var draw = function () {
		_pagingDraw(settings, host, opts);
	};

	settings.aoDrawCallback.push(draw);

	// Responsive redraw of paging control
	dataTables_$(settings.nTable).on('column-sizing.dt.DT', draw);

	return host;
}, 'p' );

function _pagingDraw(settings, host, opts) {
	if (! settings._bInitComplete) {
		return;
	}

	var
		plugin = DataTable.ext.pager[ opts.type ],
		aria = settings.oLanguage.oAria.paginate || {},
		start      = settings._iDisplayStart,
		len        = settings._iDisplayLength,
		visRecords = settings.fnRecordsDisplay(),
		all        = len === -1,
		page = all ? 0 : Math.ceil( start / len ),
		pages = all ? 1 : Math.ceil( visRecords / len ),
		buttons = plugin()
			.map(function (val) {
				return val === 'numbers'
					? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)
					: val;
			})
			.flat();

	var buttonEls = [];

	for (var i=0 ; i<buttons.length ; i++) {
		var button = buttons[i];

		var btnInfo = _pagingButtonInfo(settings, button, page, pages);
		var btn = _fnRenderer( settings, 'pagingButton' )(
			settings,
			button,
			btnInfo.display,
			btnInfo.active,
			btnInfo.disabled
		);

		// Common attributes
		dataTables_$(btn.clicker).attr({
			'aria-controls': settings.sTableId,
			'aria-disabled': btnInfo.disabled ? 'true' : null,
			'aria-current': btnInfo.active ? 'page' : null,
			'aria-label': aria[ button ],
			'data-dt-idx': button,
			'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex,
		});

		if (typeof button !== 'number') {
			dataTables_$(btn.clicker).addClass(button);
		}

		_fnBindAction(
			btn.clicker, {action: button}, function(e) {
				e.preventDefault();

				_fnPageChange( settings, e.data.action, true );
			}
		);

		buttonEls.push(btn.display);
	}

	var wrapped = _fnRenderer(settings, 'pagingContainer')(
		settings, buttonEls
	);

	var activeEl = host.find(document.activeElement).data('dt-idx');

	host.empty().append(wrapped);

	if ( activeEl !== undefined ) {
		host.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');
	}

	// Responsive - check if the buttons are over two lines based on the
	// height of the buttons and the container.
	if (
		buttonEls.length && // any buttons
		opts.numbers > 1 && // prevent infinite
		dataTables_$(host).height() >= (dataTables_$(buttonEls[0]).outerHeight() * 2) - 10
	) {
		_pagingDraw(settings, host, dataTables_$.extend({}, opts, { numbers: opts.numbers - 2 }));
	}
}

/**
 * Get properties for a button based on the current paging state of the table
 *
 * @param {*} settings DT settings object
 * @param {*} button The button type in question
 * @param {*} page Table's current page
 * @param {*} pages Number of pages
 * @returns Info object
 */
function _pagingButtonInfo(settings, button, page, pages) {
	var lang = settings.oLanguage.oPaginate;
	var o = {
		display: '',
		active: false,
		disabled: false
	};

	switch ( button ) {
		case 'ellipsis':
			o.display = '&#x2026;';
			o.disabled = true;
			break;

		case 'first':
			o.display = lang.sFirst;

			if (page === 0) {
				o.disabled = true;
			}
			break;

		case 'previous':
			o.display = lang.sPrevious;

			if ( page === 0 ) {
				o.disabled = true;
			}
			break;

		case 'next':
			o.display = lang.sNext;

			if ( pages === 0 || page === pages-1 ) {
				o.disabled = true;
			}
			break;

		case 'last':
			o.display = lang.sLast;

			if ( pages === 0 || page === pages-1 ) {
				o.disabled = true;
			}
			break;

		default:
			if ( typeof button === 'number' ) {
				o.display = settings.fnFormatNumber( button + 1 );
				
				if (page === button) {
					o.active = true;
				}
			}
			break;
	}

	return o;
}

/**
 * Compute what number buttons to show in the paging control
 *
 * @param {*} page Current page
 * @param {*} pages Total number of pages
 * @param {*} buttons Target number of number buttons
 * @param {boolean} addFirstLast Indicate if page 1 and end should be included
 * @returns Buttons to show
 */
function _pagingNumbers ( page, pages, buttons, addFirstLast ) {
	var
		numbers = [],
		half = Math.floor(buttons / 2),
		before = addFirstLast ? 2 : 1,
		after = addFirstLast ? 1 : 0;

	if ( pages <= buttons ) {
		numbers = _range(0, pages);
	}
	else if (buttons === 1) {
		// Single button - current page only
		numbers = [page];
	}
	else if (buttons === 3) {
		// Special logic for just three buttons
		if (page <= 1) {
			numbers = [0, 1, 'ellipsis'];
		}
		else if (page >= pages - 2) {
			numbers = _range(pages-2, pages);
			numbers.unshift('ellipsis');
		}
		else {
			numbers = ['ellipsis', page, 'ellipsis'];
		}
	}
	else if ( page <= half ) {
		numbers = _range(0, buttons-before);
		numbers.push('ellipsis');

		if (addFirstLast) {
			numbers.push(pages-1);
		}
	}
	else if ( page >= pages - 1 - half ) {
		numbers = _range(pages-(buttons-before), pages);
		numbers.unshift('ellipsis');

		if (addFirstLast) {
			numbers.unshift(0);
		}
	}
	else {
		numbers = _range(page-half+before, page+half-after);
		numbers.push('ellipsis');
		numbers.unshift('ellipsis');

		if (addFirstLast) {
			numbers.push(pages-1);
			numbers.unshift(0);
		}
	}

	return numbers;
}

var __lengthCounter = 0;

// opts
// - menu
// - text
DataTable.feature.register( 'pageLength', function ( settings, opts ) {
	var features = settings.oFeatures;

	// For compatibility with the legacy `pageLength` top level option
	if (! features.bPaginate || ! features.bLengthChange) {
		return null;
	}

	opts = dataTables_$.extend({
		menu: settings.aLengthMenu,
		text: settings.oLanguage.sLengthMenu
	}, opts);

	var
		classes  = settings.oClasses.length,
		tableId  = settings.sTableId,
		menu     = opts.menu,
		lengths  = [],
		language = [],
		i;

	// Options can be given in a number of ways
	if (Array.isArray( menu[0] )) {
		// Old 1.x style - 2D array
		lengths = menu[0];
		language = menu[1];
	}
	else {
		for ( i=0 ; i<menu.length ; i++ ) {
			// An object with different label and value
			if (dataTables_$.isPlainObject(menu[i])) {
				lengths.push(menu[i].value);
				language.push(menu[i].label);
			}
			else {
				// Or just a number to display and use
				lengths.push(menu[i]);
				language.push(menu[i]);
			}
		}
	}

	// We can put the <select> outside of the label if it is at the start or
	// end which helps improve accessability (not all screen readers like
	// implicit for elements).
	var end = opts.text.match(/_MENU_$/);
	var start = opts.text.match(/^_MENU_/);
	var removed = opts.text.replace(/_MENU_/, '');
	var str = '<label>' + opts.text + '</label>';

	if (start) {
		str = '_MENU_<label>' + removed + '</label>';
	}
	else if (end) {
		str = '<label>' + removed + '</label>_MENU_';
	}

	// Wrapper element - use a span as a holder for where the select will go
	var div = dataTables_$('<div/>')
		.addClass( classes.container )
		.append(
			str.replace( '_MENU_', '<span></span>' )
		);

	// Save text node content for macro updating
	var textNodes = [];
	div.find('label')[0].childNodes.forEach(function (el) {
		if (el.nodeType === Node.TEXT_NODE) {
			textNodes.push({
				el: el,
				text: el.textContent
			});
		}
	})

	// Update the label text in case it has an entries value
	var updateEntries = function (len) {
		textNodes.forEach(function (node) {
			node.el.textContent = _fnMacros(settings, node.text, len);
		});
	}

	// Next, the select itself, along with the options
	var select = dataTables_$('<select/>', {
		'name':          tableId+'_length',
		'aria-controls': tableId,
		'class':         classes.select
	} );

	for ( i=0 ; i<lengths.length ; i++ ) {
		select[0][ i ] = new Option(
			typeof language[i] === 'number' ?
				settings.fnFormatNumber( language[i] ) :
				language[i],
			lengths[i]
		);
	}

	// add for and id to label and input
	div.find('label').attr('for', 'dt-length-' + __lengthCounter);
	select.attr('id', 'dt-length-' + __lengthCounter);
	__lengthCounter++;

	// Swap in the select list
	div.find('span').replaceWith(select);

	// Can't use `select` variable as user might provide their own and the
	// reference is broken by the use of outerHTML
	dataTables_$('select', div)
		.val( settings._iDisplayLength )
		.on( 'change.DT', function() {
			_fnLengthChange( settings, dataTables_$(this).val() );
			_fnDraw( settings );
		} );

	// Update node value whenever anything changes the table's length
	dataTables_$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {
		if ( settings === s ) {
			dataTables_$('select', div).val( len );

			// Resolve plurals in the text for the new length
			updateEntries(len);
		}
	} );

	updateEntries(settings._iDisplayLength);

	return div;
}, 'l' );

// jQuery access
dataTables_$.fn.dataTable = DataTable;

// Provide access to the host jQuery object (circular reference)
DataTable.$ = dataTables_$;

// Legacy aliases
dataTables_$.fn.dataTableSettings = DataTable.settings;
dataTables_$.fn.dataTableExt = DataTable.ext;

// With a capital `D` we return a DataTables API instance rather than a
// jQuery object
dataTables_$.fn.DataTable = function ( opts ) {
	return dataTables_$(this).dataTable( opts ).api();
};

// All properties that are available to $.fn.dataTable should also be
// available on $.fn.DataTable
dataTables_$.each( DataTable, function ( prop, val ) {
	dataTables_$.fn.DataTable[ prop ] = val;
} );

/* harmony default export */ const dataTables = (DataTable);

;// CONCATENATED MODULE: ./src/js/objects/client.js
/* provided dependency */ var client_$ = __webpack_require__(4692);



class Client {

  /**
   * 
   * @param myresp instantiate client object
   */
  constructor(myresp) {
    this.id = myresp.id;
    this.entreprise = ((myresp.entreprise.length === 0) ? '-' : myresp.entreprise);
    this.prenom = ((myresp.prenom.length === 0) ? '-' : myresp.prenom);
    this.nom = ((myresp.nom.length === 0) ? '-' : myresp.nom);
    this.legal_one = ((myresp.legal_one.length === 0) ? '-' : myresp.legal_one);
    this.telephone = ((myresp.telephone.length === 0) ? '-' : myresp.telephone);
    this.mail = ((myresp.mail.length === 0) ? '-' : myresp.mail);
    this.adresse = ((myresp.adresse.length === 0) ? '-' : myresp.adresse);
  }

  /**
   * Get datatable row for a client
   */
  getDTRow() {
    let myrow = [
      '<div>' + this.id + '</div>',
      '<div class="editable" data-table="client" data-column="entreprise" data-id="' + this.id + '">' + this.entreprise + '</div>',
      '<div class="editable" data-table="client" data-column="prenom" data-id="' + this.id + '">' + this.prenom + '</div>',
      '<div class="editable" data-table="client" data-column="nom" data-id="' + this.id + '">' + this.nom + '</div>',
      '<div class="editable" data-table="client" data-column="legal_one" data-id="' + this.id + '">' + this.legal_one + '</div>',
      '<div class="editable" data-table="client" data-column="telephone" data-id="' + this.id + '">' + this.telephone + '</div>',
      '<div class="editable" data-table="client" data-column="mail" data-id="' + this.id + '">' + this.mail + '</div>',
      '<div class="editable" data-table="client" data-column="adresse" data-id="' + this.id + '">' + this.adresse + '</div>',
      '<center><div data-modifier="client" data-id=' + this.id + ' data-table="client" style="display:inline-block;margin-right:0px;" class="deleteItem icon-delete"></div></center>'
    ];
    return myrow;
  }

  /**
   * 
   * @param {*} dt 
   */
  static newClient(dt) {
    var oReq = new XMLHttpRequest();
    oReq.open('POST', mainFunction_baseUrl + '/client/insert', true);
    oReq.onload = function(e){
      if (this.status == 200) {
        showDone()
        Client.loadClientDT(dt);
      }else{
        showError(this.response);
      }
    };
    oReq.send();
  }

  /**
   * 
   * @param {*} clientDT 
   */
  static loadClientDT(clientDT) {
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', mainFunction_baseUrl + '/getClients', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.onload = function(e){
      if (this.status == 200) {
        LoadDT(clientDT, JSON.parse(this.response), Client);
      }else{
        showError(this.response);
      }
    };
    oReq.send();
  }

  /**
   * 
   * @param {*} callback 
   */
  static getClients(callback) {
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', mainFunction_baseUrl + '/getClients', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.onload = function(e){
      if (this.status == 200) {
        callback(JSON.parse(this.response));
      }else{
        showError(this.response);
      }
    };
    oReq.send();
    }

  /**
   * 
   * @param {*} id 
   */
  static getClientByIdDevis(id) {
    var myData = { id: id, };
    client_$.ajax({
        url: mainFunction_baseUrl + '/clientbyiddevis',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(myData)
    }).done(function (response, code) {
        client_$.each(JSON.parse(response), function (arrayID, myresp) {
            client_$("#nomprenom").html(myresp.prenom + ' ' + myresp.nom);
            client_$("#nomprenom").attr('data-id', id);
            client_$("#entreprise").html(myresp.entreprise);
            client_$("#adresse").html(myresp.adresse);
            client_$("#mail").html(myresp.mail);
            client_$("#telephone").html(myresp.telephone);
            client_$("#legal_one").html(myresp.legal_one);
            client_$("#pdf").attr("data-folder", myresp.num);
            if (client_$("#factureid").length) {
                client_$("#pdf").data('name', myresp.entreprise + "_" + client_$("#factureid").text() + "_v" + client_$('#factureversion').text());
            } else {
                client_$("#pdf").data('name', myresp.entreprise + "_" + myresp.num + "_v" + client_$('#devisversion').text());
            }

        });
    }).fail(function (response, code) {
        showError(response);
    });
  }

  /**
   * 
   */
  // static loadClientList() {
  //   Client.getClients(function (response) {
  //     var listClients = document.querySelectorAll(".listClient");

  //     listClients.forEach(selectElement => {
  //       removeOptions(selectElement);
  //       var option = document.createElement("option");
  //       option.value = 0;
  //       option.text = t('gestion', 'Choose customer');
  //       selectElement.appendChild(option);

  //       JSON.parse(response).forEach(myresp => {
  //         var option = document.createElement("option");
  //         option.value = myresp.id;
  //         option.text = myresp.prenom + ' ' + myresp.nom;
  //         selectElement.appendChild(option);
  //       });
  
  //       checkSelectPurJs(selectElement);
  //     });
  //   });
  // }

  /**
   * 
   * @param {*} cid 
   */
  static loadClientList_cid(e){
    Client.getClients(response => {

      var selectElement = document.createElement("select");
      selectElement.dataset.current = e.target.dataset.current;
      selectElement.dataset.id = e.target.dataset.id;
      selectElement.dataset.old = e.target.innerHTML;

      selectElement.addEventListener("change", el=>{
        if(el.target.value != 0){
          updateDB(el.target.parentElement.dataset.table,
            el.target.parentElement.dataset.column,
            el.target.value,
            el.target.parentElement.dataset.id
          );

          var parentElement = el.target.parentElement
          parentElement.innerHTML = el.target.value + " " + el.target.options[el.target.selectedIndex].text;
          parentElement.dataset.current = el.target.value;
        }else{
          var parentElement = el.target.parentElement
          parentElement.innerHTML = el.target.dataset.old
        }
      });

      var option = document.createElement("option");
        option.value = 0;
        option.text = t('gestion', 'Cancel');
        selectElement.appendChild(option);

      JSON.parse(response).forEach(myresp => {
        var option = document.createElement("option");
        option.value = myresp.id;
        option.text = myresp.prenom + ' ' + myresp.nom;
        selectElement.appendChild(option);
      });
      
      checkSelectPurJs(selectElement);

      e.target.innerHTML = ''
      e.target.appendChild(selectElement);
    });
  }
}

;// CONCATENATED MODULE: ./src/js/objects/devis.js




class Devis {

  /**
   * Devis object
   * @param myresp instantiate devis object
   */
  constructor(myresp) {
    this.id = myresp.id;
    this.user_id = myresp.user_id;
    this.date = ((myresp.date == null || myresp.date.length === 0) ? '-' : myresp.date);
    this.num = ((myresp.num == null || myresp.num.length === 0) ? '-' : myresp.num);
    this.cid = ((myresp.cid == null || myresp.cid.length === 0) ? '-' : myresp.cid);
    this.nom = ((myresp.nom == null || myresp.nom.length === 0) ? '-' : myresp.nom);
    this.prenom = ((myresp.prenom == null || myresp.prenom.length === 0) ? '-' : myresp.prenom);
    this.version = ((myresp.version == null || myresp.version.length === 0) ? '-' : myresp.version);
    this.mentions = ((myresp.mentions == null || myresp.mentions.length === 0) ? '-' : myresp.mentions);
    this.baseUrl = (0,router_dist/* generateUrl */.Jv)(`/apps/gestion/devis/${this.id}/show`);
  }

  /**undefined
   * Get datatable row for a devis
   */
  getDTRow() {
    let myrow = [
      '<div>' + this.user_id + '</div>',
      '<input style="margin:0;padding:0;" class="inputDate" type="date" value=' + this.date + ' data-table="devis" data-column="date" data-id="' + this.id + '"/>',
      '<div class="editable" data-table="devis" data-column="num" data-id="' + this.id + '" style="display:inline">' + this.num + '</div>',
      '<div class="loadSelect_listclient" data-table="devis" data-column="id_client" data-id="' + this.id + '" data-current="' + this.cid + '">'+ this.cid + ' ' + this.prenom + ' ' + this.nom + '</div>',
      '<div class="editable" data-table="devis" data-column="version" data-id="' + this.id + '" style="display:inline">' + this.version + '</div>',
      '<div class="editable" data-table="devis" data-column="mentions" data-id="' + this.id + '" style="display:inline">' + this.mentions + '</div>',
      '<div style="display:inline-block;margin-right:0px;width:80%;"><a href="' + this.baseUrl + '"><button>' + t('gestion', 'Open') + '</button></a></div><div data-modifier="devis" data-id=' + this.id + ' data-table="devis" style="display:inline-block;margin-right:0px;" class="deleteItem icon-delete"></div>'
    ];
    return myrow;
  }

  /**
   * 
   * @param {*} dt 
   */
  static newDevis(dt) {
    var oReq = new XMLHttpRequest();
    oReq.open('POST', mainFunction_baseUrl + '/devis/insert', true);
    oReq.onload = function(e){
      if (this.status == 200) {
        showDone()
        Devis.loadDevisDT(dt);
      }else{
        showError(this.response);
      }
    };
    oReq.send();
  }

  /**
   * Load devis ajax
   * @param devisDT devis datatable
   */
  static loadDevisDT(devisDT) {
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', mainFunction_baseUrl + '/getDevis', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.onload = function(e){
      if (this.status == 200) {
        LoadDT(devisDT, JSON.parse(this.response), Devis);
      }else{
        showError(this.response);
      }
    };
    oReq.send();
  }

  static getDevis(callback){
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', mainFunction_baseUrl + '/getDevis', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.onload = function(e){
      if (this.status == 200) {
        callback(JSON.parse(this.response));
      }else{
        showError(this.response);
      }
    };
    oReq.send();
  }

  static loadDevisList_dnum(e){
    Devis.getDevis( response => {
      var selectElement = document.createElement("select");
      selectElement.dataset.current = e.target.dataset.current;
      selectElement.dataset.id = e.target.dataset.id;
      selectElement.dataset.old = e.target.innerHTML;

      selectElement.addEventListener("change", el=>{
        if(el.target.value != 0){
          updateDB(el.target.parentElement.dataset.table,
            el.target.parentElement.dataset.column,
            el.target.value,
            el.target.parentElement.dataset.id
          );

          var parentElement = el.target.parentElement;
          parentElement.innerHTML = el.target.options[el.target.selectedIndex].text;
          parentElement.dataset.current = el.target.value;
        }else{
          var parentElement = el.target.parentElement
          parentElement.innerHTML = el.target.dataset.old
        }
      });

      var option = document.createElement("option");
        option.value = 0;
        option.text = t('gestion', 'Cancel');
        selectElement.appendChild(option);

      JSON.parse(response).forEach(myresp => {
        var option = document.createElement("option");
        option.value = myresp.id;
        option.text = myresp.num + ' ' + myresp.prenom + ' ' + myresp.nom;
        selectElement.appendChild(option);
      });
      
      checkSelectPurJs(selectElement);

      e.target.innerHTML = ''
      e.target.appendChild(selectElement);
    });
  }
}

;// CONCATENATED MODULE: ./src/js/objects/facture.js




class Facture {

  /**
   * Facture object
   * @param myresp instantiate Facture object
   */
  constructor(myresp) {
    this.id = myresp.id;
    this.user_id = myresp.user_id;
    this.date = ((myresp.date == null || myresp.date.length === 0) ? '-' : myresp.date);
    this.num = ((myresp.num == null || myresp.num.length === 0) ? '-' : myresp.num);
    this.version = ((myresp.version == null || myresp.version.length === 0) ? '-' : myresp.version);
    this.date_paiement = ((myresp.date_paiement == null || myresp.date_paiement.length === 0) ? '-' : myresp.date_paiement);
    this.type_paiement = ((myresp.type_paiement == null || myresp.type_paiement.length === 0) ? '-' : myresp.type_paiement);
    this.dnum = ((myresp.dnum == null || myresp.dnum.length === 0) ? '-' : myresp.dnum);
    this.nom = ((myresp.nom == null || myresp.nom.length === 0) ? '-' : myresp.nom);
    this.prenom = ((myresp.prenom == null || myresp.prenom.length === 0) ? '-' : myresp.prenom);
    this.status_paiement = ((myresp.status_paiement == null || myresp.status_paiement.length === 0) ? '-' : myresp.status_paiement);
    this.id_devis = ((myresp.id_devis == null || myresp.id_devis.length === 0) ? '-' : myresp.id_devis);
    this.baseUrl = (0,router_dist/* generateUrl */.Jv)(`/apps/gestion/facture/${this.id}/show`);
  }

  /**
   * Get datatable row for a devis
   */
  getDTRow() {
    let myrow = [
      '<div>' + this.user_id + '</div>',
      '<div class="factureNum" data-table="facture" data-column="num" data-id="' + this.id + '">' + this.num + '</div>',
      '<div class="editable" data-table="facture" data-column="date" data-id="' + this.id + '">' + this.date + '</div>',
      '<input style="margin:0;padding:0;" class="inputDate" type="date" value=' + this.date_paiement + ' data-table="facture" data-column="date_paiement" data-id="' + this.id + '"/>',
      '<div class="editable" data-table="facture" data-column="type_paiement" data-id="' + this.id + '">' + this.type_paiement + '</div>',
      '<div class="loadSelect_listdevis" data-table="facture" data-column="id_devis" data-id="' + this.id + '" data-current="' + this.id_devis + '">' + this.dnum + " " + this.prenom + " " + this.nom + '</div>',
      '<div class="editable" data-table="facture" data-column="version" data-id="' + this.id + '" style="display:inline">' + this.version + '</div>',
      '<div class="editable" data-table="facture" data-column="status_paiement" data-id="' + this.id + '" style="display:inline">' + this.status_paiement + '</div>',
      '<div style="display:inline-block;margin-right:0px;width:80%;"><a href="' + this.baseUrl +'"><button>' + t('gestion', 'Open') + '</button></a></div><div data-modifier="facture" data-id=' + this.id + ' data-table="facture" style="display:inline-block;margin-right:0px;" class="deleteItem icon-delete"></div>',
    ];
    return myrow;
  }

  static loadFactureDT(factureDT) {
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', mainFunction_baseUrl + '/getFactures', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.onload = function(e){
      if (this.status == 200) {
        LoadDT(factureDT, JSON.parse(this.response), Facture);
        // Devis.loadDevisList();
        // configuration(checkAutoIncrement);
      }else{
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(this.response);
      }
    };
    oReq.send();
  }


  /**
   * 
   * @param {*} dt 
   */
   static newFacture(dt) {
    var oReq = new XMLHttpRequest();
    oReq.open('POST', mainFunction_baseUrl + '/facture/insert', true);
    oReq.onload = function(e){
      if (this.status == 200) {
        showDone()
        Facture.loadFactureDT(dt);
      }else{
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(this.response);
      }
    };
    oReq.send();
  }

}

;// CONCATENATED MODULE: ./src/js/objects/produit.js



class Produit {

  /**
   * 
   * @param myresp instantiate product object
   */
  constructor(myresp) {
    this.id = myresp.id;
    this.reference = ((myresp.reference.length === 0) ? '-' : myresp.reference);
    this.description = ((myresp.description.length === 0) ? '-' : myresp.description);
    this.prix_unitaire = ((myresp.prix_unitaire.length === 0) ? '-' : myresp.prix_unitaire);
  }

  /**
   * Get datatable row for a product
   */
  getDTRow() {
    let myrow = [
      '<div>' + this.id + '</div>',
      '<div class="editable" data-table="produit" data-column="reference" data-id="' + this.id + '">' + this.reference + '</div>',
      '<div class="editable" data-table="produit" data-column="description" data-id="' + this.id + '">' + this.description + '</div>',
      '<div class="editableNumeric" data-table="produit" data-column="prix_unitaire" data-id="' + this.id + '">' + cur.format(this.prix_unitaire) + '</div>',
      '<div data-modifier="produit" data-id=' + this.id + ' data-table="produit" style="display:inline-block;margin-right:0px;" class="deleteItem icon-delete"></div>'
    ];
    return myrow;
  }

  /**
   * 
   * @param {*} productDT 
   */
  static loadProduitDT(productDT) {
    var oReq = new XMLHttpRequest();
    oReq.open('PROPFIND', mainFunction_baseUrl + '/getProduits', true);
    oReq.setRequestHeader("Content-Type", "application/json");
    oReq.onload = function(e){
      if (this.status == 200) {
        LoadDT(productDT, JSON.parse(this.response), Produit);
      }else{
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(this.response);
      }
    };
    oReq.send();
  }

  /**
   * 
   * @param {*} dt 
   */
   static newProduct(dt) {
    var oReq = new XMLHttpRequest();
    oReq.open('POST', mainFunction_baseUrl + '/produit/insert', true);
    oReq.onload = function(e){
      if (this.status == 200) {
        showDone()
        Produit.loadProduitDT(dt);
      }else{
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(this.response);
      }
    };
    oReq.send();
  }
}

;// CONCATENATED MODULE: ./src/js/listener/main_listener.js
/* provided dependency */ var main_listener_$ = __webpack_require__(4692);









var choose_folder = t('gestion', 'Choose work folder');

document.body.addEventListener('click', function (event) {
    // Check if the clicked element is the one with id 'theFolder'
    if (event.target && event.target.id === 'theFolder') {
        R(choose_folder)
            .allowDirectories(true)
            .setMultiSelect(false)
            .addButton({
                label: t('gestion', 'Choose'),
                callback: (nodes) => {
                    // Get the values of the picked nodes
                    const values = nodes.map(node => node.path);
                    var theFolder = document.getElementById('theFolder');
                    var table = theFolder.getAttribute('data-table');
                    var column = theFolder.getAttribute('data-column');
                    var id = theFolder.getAttribute('data-id');
                    
                    updateDBConfiguration(table, column, values[0], id);
                    configuration(mainFunction_path);
                    document.getElementById('theFolder').value = values[0];
                },
            })
            .build()
            .pick()
    }
});

main_listener_$('body').on('click', '.menu', function () { main_listener_$('#menu-' + this.dataset.menu).toggleClass('open'); });
main_listener_$('body').on('click', '.modalClose', function () { var modal = main_listener_$(this)[0].parentElement.parentElement; modal.style.display = "none"; });


main_listener_$('body').on('dblclick', '.selectableDevis', function () {
    var id = main_listener_$(this).data('id');
    var table = main_listener_$(this).data('table');
    var column = main_listener_$(this).data('column');
    main_listener_$(this).text("");
    main_listener_$(this).html('<select id="listDevis">');
    listDevis(main_listener_$('#listDevis'), id, table, column);
});

main_listener_$('body').on('dblclick', '.selectable', function () {
    var id = main_listener_$(this).data('id');
    var produitid = main_listener_$(this).data('val');
    main_listener_$(this).text("");
    main_listener_$(this).html('<select id="listProduit">');
    listProduit(main_listener_$('#listProduit'), id, produitid);
});

main_listener_$('body').on('click', '.deleteItem', function () {
    var id = main_listener_$(this).data('id');
    var table = main_listener_$(this).data('table');
    var modifier = main_listener_$(this).data('modifier');
    deleteDB(table, id);
    var dt = new dataTables('.tabledt');
    if (modifier === "getProduitsById") { getProduitsById(); }
    if (modifier === "client") { Client.loadClientDT(dt); }
    if (modifier === "devis") { Devis.loadDevisDT(dt); }
    if (modifier === "facture") { Facture.loadFactureDT(dt); }
    if (modifier === "produit") { Produit.loadProduitDT(dt); }
});

main_listener_$('body').on('change', '.listClient,.listDevis', function () {
    var myDiv = main_listener_$(this).parents("div");
    var id = main_listener_$(myDiv).data('id');
    var val = this.value;
    var column = main_listener_$(myDiv).data('column');
    var table = main_listener_$(myDiv).data('table');
    this.setAttribute('data-current', this.value)
    updateDB(table, column, val, id);
})

main_listener_$('body').on('change', '.inputDate', function () {
    var id = main_listener_$(this).data('id');
    var val = this.value;
    var column = main_listener_$(this).data('column');
    var table = main_listener_$(this).data('table');
    updateDB(table, column, val, id);
})

main_listener_$('body').on('change', '#listProduit,#listDevis', function () {
    var id = main_listener_$(this).find(':selected').data('id')
    var val = main_listener_$(this).find(':selected').data('val')
    var column = main_listener_$(this).find(':selected').data('column')
    var table = main_listener_$(this).find(':selected').data('table')
    var el = main_listener_$(this).parent();

    updateDB(table, column, val, id);

    if (el.get(0).className === "selectableClient_devis") {
        getClientByIdDevis(id);
    }
    if (main_listener_$(this).attr('id') === "listProduit") {
        getProduitsById();
    }

    el.text(main_listener_$(this).val());
    el.attr('data-val', id);

});

main_listener_$('body').on('click', '#devisAdd', function () {
    var devis_id = main_listener_$('#devisid').data('id');
    var produit_devis = {
        id: devis_id
    };

    main_listener_$.ajax({
        url: mainFunction_baseUrl + '/insertProduitDevis',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(produit_devis)
    }).done(function (response) {
        getProduitsById();
    }).fail(function (response, code) {
        (0,_plugin_vue2_normalizer_VrK6B12S.l)(t('gestion', "Please create a new product"));
    });
});

document.addEventListener('DOMContentLoaded', function() {

    var aboutButton = document.getElementById('about');
    if (aboutButton) {
        aboutButton.addEventListener('click', function() {
            var modal = document.getElementById("modalConfig");
            if (modal) {
                modal.style.display = "block";
            }
        });
    }
});
document.body.addEventListener('click', function(e) {
    var targetClass = e.target.className;
    var targetId = e.target.id;
    
    if(     targetClass.includes("editableSelect") 
    ||      targetClass.includes("editableConfiguration")
    ||      targetClass.includes("editableConfigurationSelect")){
// Prevent default behavior
    } else if(targetClass.includes("editableNumber") 
        || targetClass.includes("editableNumeric")
        || targetClass.includes("editable")){
        e.target.setAttribute('contenteditable', 'true');
        e.target.focus();
    } else if(targetClass.includes("loadSelect_listclient")){
        Client.loadClientList_cid(e);
    } else if(targetClass.includes("loadSelect_listdevis")){
        Devis.loadDevisList_dnum(e);
    } else if(targetId === "newClient"){
        Client.newClient(new dataTables('.tabledt'));
    } else if(targetId === "newDevis"){
        Devis.newDevis(new dataTables('.tabledt'));
    } else if(targetId === "newInvoice"){
        Facture.newFacture(new dataTables('.tabledt'));
    } else if(targetId === "newProduit"){
        Produit.newProduct(new dataTables('.tabledt'));
    }
});

document.body.addEventListener('keydown', function(e) {
    if(e.key === "Enter"){
        var targetClass = e.target.className;
        if(targetClass.includes("editableNumber") || targetClass.includes("editableNumeric")){
            updateNumerical(e.target);
        } else if(  targetClass.includes("editableSelect") 
        ||  targetClass.includes("editableConfiguration")
        ||  targetClass.includes("editableConfigurationSelect")){
    // Prevent default behavior
        } else if(targetClass.includes("editable")){
            updateEditable(e.target);
        }
    }
});

document.body.addEventListener('focusout', function(e) {
    var targetClass = e.target.className;
    if(targetClass.includes("editableNumber") || targetClass.includes("editableNumeric")){
        updateNumerical(e.target);
    } else if(  targetClass.includes("editableSelect") 
            ||  targetClass.includes("editableConfiguration")
            ||  targetClass.includes("editableConfigurationSelect")){
        // Prevent default behavior
    } else if(targetClass.includes("editable")){
        updateEditable(e.target);
    }
});

document.body.addEventListener('mouseover', function(e) {
    var targetClass = e.target.className;
    if(targetClass.includes("editable") || targetClass.includes("loadSelect") || targetClass.includes("selectable")){
        applyMouseOverStyles(e.target);
    }
});

document.body.addEventListener('change', function(event) {
    if (event.target.classList.contains('editableSelect')) {
        var table = event.target.getAttribute('data-table');
        var column = event.target.getAttribute('data-column');
        var value = event.target.value;
        var id = event.target.getAttribute('data-id');
        
        updateDB(table, column, value, id);
    }

    if(event.target.id === "CurrentCompany-select"){
        var value = event.target.value;
        updateCurrentCompany(value);
    }
});

function applyMouseOverStyles(element) {
    element.style.border = "1px solid " + getComputedStyle(document.documentElement).getPropertyValue('--color-primary-element-light');
    element.style.borderRadius = "5px";
    element.style.padding = "5px";
    element.style.fontWeight = "bold";
    element.addEventListener('mouseout', function(e) {
        e.target.style.border = null;
        e.target.style.padding = null;
        e.target.style.fontWeight = null;
        e.target.style.borderRadius = null;
    });
}

;// CONCATENATED MODULE: ./src/js/client.js
// import "@nextcloud/dialogs/dist/index.css";








document.addEventListener("DOMContentLoaded", function () {
    globalConfiguration();
    Client.loadClientDT(new dataTables(".tabledt",optionDatatable));
});
})();

/******/ })()
;